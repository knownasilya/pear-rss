"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeClient = exports.make = void 0;
var Body = _interopRequireWildcard(require("@effect/platform/HttpBody"));
var Client = _interopRequireWildcard(require("@effect/platform/HttpClient"));
var ClientRequest = _interopRequireWildcard(require("@effect/platform/HttpClientRequest"));
var Resolver = _interopRequireWildcard(require("@effect/rpc/Resolver"));
var ResolverNoStream = _interopRequireWildcard(require("@effect/rpc/ResolverNoStream"));
var Effect = _interopRequireWildcard(require("effect/Effect"));
var Schedule = _interopRequireWildcard(require("effect/Schedule"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @since 1.0.0
 */

/**
 * @category constructors
 * @since 1.0.0
 */
const make = client => ResolverNoStream.make(requests => client(ClientRequest.post("", {
  body: Body.unsafeJson(requests)
})).pipe(Effect.flatMap(_ => _.json), Effect.scoped))();
/**
 * @category constructors
 * @since 1.0.0
 */
exports.make = make;
const makeClient = baseUrl => Resolver.toClient(make(Client.fetchOk.pipe(Client.mapRequest(ClientRequest.prependUrl(baseUrl)), Client.retry(Schedule.exponential(50).pipe(Schedule.intersect(Schedule.recurs(5)))))));
exports.makeClient = makeClient;
//# sourceMappingURL=HttpResolverNoStream.js.map