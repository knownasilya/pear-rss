"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkprss"] = self["webpackChunkprss"] || []).push([["vendors-assets_prss_js"],{

/***/ "./templates/application.hbs":
/*!***********************************!*\
  !*** ./templates/application.hbs ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _embroider_compat_ambiguous_page_title__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! #embroider_compat/ambiguous/page-title */ \"../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_app_/helpers/page-title.js\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/template-factory */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/template-factory/index.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_1__.createTemplateFactory)(\n/*\n  {{page-title \"Prss\"}}\n\n<h2 id=\"title\">Welcome to Ember</h2>\n\n{{outlet}}\n*/\n{\n  \"id\": \"QWKmIH0/\",\n  \"block\": \"[[[1,[28,[32,0],[\\\"Prss\\\"],null]],[1,\\\"\\\\n\\\\n\\\"],[10,\\\"h2\\\"],[14,1,\\\"title\\\"],[12],[1,\\\"Welcome to Ember\\\"],[13],[1,\\\"\\\\n\\\\n\\\"],[46,[28,[37,2],null,null],null,null,null]],[],false,[\\\"h2\\\",\\\"component\\\",\\\"-outlet\\\"]]\",\n  \"moduleName\": \"prss/templates/application.hbs\",\n  \"scope\": () => [_embroider_compat_ambiguous_page_title__WEBPACK_IMPORTED_MODULE_0__[\"default\"]],\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://prss/./templates/application.hbs?");

/***/ }),

/***/ "./app.ts":
/*!****************!*\
  !*** ./app.ts ***!
  \****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/application */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js\");\n/* harmony import */ var ember_resolver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ember-resolver */ \"../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/index.js\");\n/* harmony import */ var ember_load_initializers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ember-load-initializers */ \"../rewritten-packages/ember-load-initializers.ed9ed7e6/node_modules/ember-load-initializers/index.js\");\n/* harmony import */ var prss_config_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prss/config/environment */ \"./config/environment.js\");\n\n\n\n\n\nclass App extends _ember_application__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"modulePrefix\", prss_config_environment__WEBPACK_IMPORTED_MODULE_4__[\"default\"].modulePrefix);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"podModulePrefix\", prss_config_environment__WEBPACK_IMPORTED_MODULE_4__[\"default\"].podModulePrefix);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"Resolver\", ember_resolver__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n  }\n}\n(0,ember_load_initializers__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(App, prss_config_environment__WEBPACK_IMPORTED_MODULE_4__[\"default\"].modulePrefix);\n\n//# sourceURL=webpack://prss/./app.ts?");

/***/ }),

/***/ "./assets/prss.js":
/*!************************!*\
  !*** ./assets/prss.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2 */ \"../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2.js\");\n/* harmony import */ var _pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/runtime */ \"../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/runtime.js\");\n\n\nlet w = window;\nlet d = w.define;\n(0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! ./-embroider-implicit-modules.js */ \"../../.pnpm/@embroider+babel-loader-9@3.1.1_@embroider+core@3.4.14_@glint+template@1.4.0__supports-color@8.1.1_webpack@5.93.0/node_modules/@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/ilya/maintained/prss/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/kw/7vmtd5m91sn1kwsvblc7z1080000gn/T/embroider/webpack-babel-loader\\\"}!../../.pnpm/@embroider+webpack@3.2.3_@embroider+core@3.4.14_@glint+template@1.4.0__webpack@5.93.0/node_modules/@embroider/webpack/src/virtual-loader.js?f=%2FUsers%2Filya%2Fmaintained%2Fprss%2Fnode_modules%2F.embroider%2Frewritten-app%2F-embroider-implicit-modules.js&a=%2FUsers%2Filya%2Fmaintained%2Fprss!\"));\nd(\"prss/app\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/app.ts */ \"./app.ts\"));\n});\nd(\"prss/config/environment\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/config/environment.js */ \"./config/environment.js\"));\n});\nd(\"prss/router\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/router.ts */ \"./router.ts\"));\n});\nd(\"prss/data-adapter\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/data-adapter.js */ \"../../.pnpm/@ember-data+debug@5.3.8_@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3_ndrsfgrwpwdvnnc23ghg45qeuu/node_modules/@ember-data/debug/dist/data-adapter.js\"));\n});\nd(\"prss/initializers/ember-data\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/initializers/ember-data.js */ \"../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/initializers/ember-data.js\"));\n});\nd(\"prss/services/store\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/services/store.js */ \"../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/services/store.js\"));\n});\nd(\"prss/transforms/date\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/transforms/date.js */ \"../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/date.js\"));\n});\nd(\"prss/transforms/number\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/transforms/number.js */ \"../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/number.js\"));\n});\nd(\"prss/transforms/string\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/transforms/string.js */ \"../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/string.js\"));\n});\nd(\"prss/transforms/boolean\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/transforms/boolean.js */ \"../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/boolean.js\"));\n});\nd(\"prss/services/page-title\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/services/page-title.js */ \"../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_app_/services/page-title.js\"));\n});\nd(\"prss/component-managers/glimmer\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/component-managers/glimmer.js */ \"../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/_app_/component-managers/glimmer.js\"));\n});\nd(\"prss/initializers/app-version\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/initializers/app-version.js */ \"../rewritten-packages/ember-cli-app-version.ad2eee48/node_modules/ember-cli-app-version/_app_/initializers/app-version.js\"));\n});\nd(\"prss/container-debug-adapter\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/container-debug-adapter.js */ \"../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/_app_/container-debug-adapter.js\"));\n});\nd(\"prss/templates/application\", function () {\n  return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/templates/application.hbs */ \"./templates/application.hbs\"));\n});\nif ((0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_runtime__WEBPACK_IMPORTED_MODULE_1__.macroCondition)((0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_runtime__WEBPACK_IMPORTED_MODULE_1__.getGlobalConfig)().fastboot?.isRunning)) {\n  d(\"prss/instance-initializers/setup-fetch\", function () {\n    return (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! prss/instance-initializers/setup-fetch.js */ \"../rewritten-packages/ember-fetch.2f1d8c33/node_modules/ember-fetch/_fastboot_/instance-initializers/setup-fetch.js\"));\n  });\n}\nif (!runningTests) {\n  (0,_pnpm_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! ../app */ \"./app.ts\")).default.create({\n    \"name\": \"prss\",\n    \"version\": \"0.0.0+167dc59c\"\n  });\n}\n\n//# sourceURL=webpack://prss/./assets/prss.js?");

/***/ }),

/***/ "./config/environment.js":
/*!*******************************!*\
  !*** ./config/environment.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function () {\n  var prefix = 'prss';\n  try {\n    var metaName = prefix + '/config/environment';\n    var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n    var config = JSON.parse(decodeURIComponent(rawConfig));\n    var exports = {\n      'default': config\n    };\n    Object.defineProperty(exports, '__esModule', {\n      value: true\n    });\n    return exports;\n  } catch (err) {\n    throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n  }\n})().default);\n\n//# sourceURL=webpack://prss/./config/environment.js?");

/***/ }),

/***/ "./router.ts":
/*!*******************!*\
  !*** ./router.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Router)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_routing_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/routing/router */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/router.js\");\n/* harmony import */ var prss_config_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prss/config/environment */ \"./config/environment.js\");\n\n\n\nclass Router extends _ember_routing_router__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"location\", prss_config_environment__WEBPACK_IMPORTED_MODULE_2__[\"default\"].locationType);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"rootURL\", prss_config_environment__WEBPACK_IMPORTED_MODULE_2__[\"default\"].rootURL);\n  }\n}\nRouter.map(function () {\n  // Add route declarations here\n});\n\n//# sourceURL=webpack://prss/./router.ts?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/build-waiter.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/build-waiter.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _resetWaiterNames: () => (/* binding */ _resetWaiterNames),\n/* harmony export */   \"default\": () => (/* binding */ buildWaiter)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _token__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/token.js\");\n/* harmony import */ var _waiter_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./waiter-manager */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/waiter-manager.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\n\n\nconst WAITER_NAME_PATTERN = /^[^:]*:?.*/;\nlet WAITER_NAMES =  true /* DEBUG */ ? new Set() : 0;\nfunction _resetWaiterNames() {\n  WAITER_NAMES = new Set();\n}\nfunction getNextToken() {\n  return new _token__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n}\nclass TestWaiterImpl {\n  constructor(name, nextToken) {\n    _defineProperty(this, \"isRegistered\", false);\n    _defineProperty(this, \"items\", new Map());\n    _defineProperty(this, \"completedOperationsForTokens\", new WeakMap());\n    _defineProperty(this, \"completedOperationsForPrimitives\", new Map());\n    this.name = name; // @ts-ignore\n\n    this.nextToken = nextToken || getNextToken;\n  }\n  beginAsync(token = this.nextToken(), label) {\n    this._register();\n    if (this.items.has(token)) {\n      throw new Error(`beginAsync called for ${token} but it is already pending.`);\n    }\n    let error = new Error();\n    this.items.set(token, {\n      get stack() {\n        return error.stack;\n      },\n      label\n    });\n    return token;\n  }\n  endAsync(token) {\n    if (!this.items.has(token) && !this._getCompletedOperations(token).has(token)) {\n      throw new Error(`testWaiter.endAsync called with no preceding testWaiter.beginAsync call.\n        Test waiter calls should always be paired. This can occur when a test waiter's paired calls are invoked in a non-deterministic order.\n\n        See https://github.com/emberjs/ember-test-waiters#keep-beginasyncendasync-in-same-block-scope for more information.`);\n    }\n    this.items.delete(token); // Mark when a waiter operation has completed so we can distinguish\n    // whether endAsync is being called before a prior beginAsync call above.\n\n    this._getCompletedOperations(token).set(token, true);\n  }\n  waitUntil() {\n    return this.items.size === 0;\n  }\n  debugInfo() {\n    let result = [];\n    this.items.forEach(value => {\n      result.push(value);\n    });\n    return result;\n  }\n  reset() {\n    this.items.clear();\n  }\n  _register() {\n    if (!this.isRegistered) {\n      (0,_waiter_manager__WEBPACK_IMPORTED_MODULE_2__.register)(this);\n      this.isRegistered = true;\n    }\n  }\n  _getCompletedOperations(token) {\n    let type = typeof token;\n    let isFunction = type === 'function';\n    let isObject = token !== null && type === 'object';\n    let isPrimitive = !isFunction && !isObject;\n    return isPrimitive ? this.completedOperationsForPrimitives : this.completedOperationsForTokens;\n  }\n}\nclass NoopTestWaiter {\n  constructor(name) {\n    this.name = name;\n  }\n  beginAsync() {\n    return this;\n  }\n  endAsync() {}\n  waitUntil() {\n    return true;\n  }\n  debugInfo() {\n    return [];\n  }\n  reset() {}\n}\n/**\n * Builds and returns a test waiter. The type of the\n * returned waiter is dependent on whether the app or\n * addon is in `DEBUG` mode or not.\n *\n * @public\n *\n * @param name {string} The name of the test waiter\n * @returns {TestWaiter}\n *\n * @example\n *\n * import Component from '@ember/component';\n * import { buildWaiter } from '@ember/test-waiters';\n *\n * if (DEBUG) {\n *   let waiter = buildWaiter('friend-waiter');\n * }\n *\n * export default class Friendz extends Component {\n *   didInsertElement() {\n *     let token = waiter.beginAsync(this);\n *\n *     someAsyncWork().then(() => {\n *       waiter.endAsync(token);\n *     });\n *   }\n * }\n */\n\nfunction buildWaiter(name) {\n  if (true /* DEBUG */) {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`The waiter name '${name}' is already in use`, !WAITER_NAMES.has(name), {\n      id: '@ember/test-waiters.duplicate-waiter-name'\n    }));\n    WAITER_NAMES.add(name);\n  }\n  if (false /* DEBUG */) {} else {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`You must provide a name that contains a descriptive prefix separated by a colon.\n\n        Example: ember-fictitious-addon:some-file\n\n        You passed: ${name}`, WAITER_NAME_PATTERN.test(name), {\n      id: '@ember/test-waiters.invalid-waiter-name'\n    }));\n    return new TestWaiterImpl(name);\n  }\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/build-waiter.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/index.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _reset: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__._reset),\n/* harmony export */   _resetWaiterNames: () => (/* reexport safe */ _build_waiter__WEBPACK_IMPORTED_MODULE_1__._resetWaiterNames),\n/* harmony export */   buildWaiter: () => (/* reexport safe */ _build_waiter__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   getPendingWaiterState: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__.getPendingWaiterState),\n/* harmony export */   getWaiters: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__.getWaiters),\n/* harmony export */   hasPendingWaiters: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__.hasPendingWaiters),\n/* harmony export */   register: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__.register),\n/* harmony export */   unregister: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__.unregister),\n/* harmony export */   waitFor: () => (/* reexport safe */ _wait_for__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   waitForPromise: () => (/* reexport safe */ _wait_for_promise__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _waiter_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./waiter-manager */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/waiter-manager.js\");\n/* harmony import */ var _build_waiter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./build-waiter */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/build-waiter.js\");\n/* harmony import */ var _wait_for_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wait-for-promise */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/wait-for-promise.js\");\n/* harmony import */ var _wait_for__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./wait-for */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/wait-for.js\");\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/token.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/token.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Token)\n/* harmony export */ });\n/**\n * A class representing a test waiter token.\n *\n * @public\n * @class\n */\nclass Token {}\n\n//# sourceURL=webpack://prss/../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/token.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/wait-for-promise.js":
/*!***************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/wait-for-promise.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ waitForPromise)\n/* harmony export */ });\n/* harmony import */ var _build_waiter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./build-waiter */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/build-waiter.js\");\n\nconst PROMISE_WAITER = (0,_build_waiter__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('@ember/test-waiters:promise-waiter');\n/**\n * A convenient utility function to simplify waiting for a promise.\n *\n * @public\n * @param promise {Promise<T> | RSVP.Promise<T>} The promise to track async operations for\n * @param label {string} An optional string to identify the promise\n *\n * @example\n *\n * import Component from '@ember/component';\n * import { waitForPromise } from '@ember/test-waiters';\n *\n * export default class Friendz extends Component {\n *   didInsertElement() {\n *     waitForPromise(new Promise(resolve => {\n *       doSomeWork();\n *       resolve();\n *     }));\n *   }\n * }\n */\n\nfunction waitForPromise(promise, label) {\n  let result = promise;\n  if (true /* DEBUG */) {\n    PROMISE_WAITER.beginAsync(promise, label);\n    result = promise.then(value => {\n      PROMISE_WAITER.endAsync(promise);\n      return value;\n    }, error => {\n      PROMISE_WAITER.endAsync(promise);\n      throw error;\n    });\n  }\n  return result;\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/wait-for-promise.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/wait-for.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/wait-for.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ waitFor)\n/* harmony export */ });\n/* harmony import */ var _wait_for_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wait-for-promise */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/wait-for-promise.js\");\n/* harmony import */ var _build_waiter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./build-waiter */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/build-waiter.js\");\n\n\nfunction waitFor(...args) {\n  let isFunction = args.length < 3;\n  if (isFunction) {\n    let [fn, label] = args;\n    return wrapFunction(fn, label);\n  } else {\n    let [,, descriptor, label] = args;\n    if (false /* DEBUG */) {}\n    let fn = descriptor.value;\n    descriptor.value = wrapFunction(fn, label);\n    return descriptor;\n  }\n}\nfunction wrapFunction(fn, label) {\n  if (false /* DEBUG */) {}\n  return function (...args) {\n    let result = fn.call(this, ...args);\n    if (isThenable(result)) {\n      return (0,_wait_for_promise__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(result, label);\n    } else if (isGenerator(result)) {\n      return waitForGenerator(result, label);\n    } else {\n      return result;\n    }\n  };\n}\nfunction isThenable(maybePromise) {\n  let type = typeof maybePromise;\n  return (maybePromise !== null && type === 'object' || type === 'function') && typeof maybePromise.then === 'function';\n}\nfunction isGenerator(maybeGenerator) {\n  // Because we don't have Symbol.iterator in IE11\n  return typeof maybeGenerator.next === 'function' && typeof maybeGenerator.return === 'function' && typeof maybeGenerator.throw === 'function';\n}\nconst GENERATOR_WAITER = (0,_build_waiter__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('@ember/test-waiters:generator-waiter');\nfunction waitForGenerator(generator, label) {\n  GENERATOR_WAITER.beginAsync(generator, label);\n  let isWaiting = true;\n  function stopWaiting() {\n    if (isWaiting) {\n      GENERATOR_WAITER.endAsync(generator);\n      isWaiting = false;\n    }\n  }\n  return {\n    next(...args) {\n      let hasErrored = true;\n      try {\n        let val = generator.next(...args);\n        hasErrored = false;\n        if (val.done) {\n          stopWaiting();\n        }\n        return val;\n      } finally {\n        // If generator.next() throws, we need to stop waiting. But if we catch\n        // and re-throw exceptions, it could move the location from which the\n        // uncaught exception is thrown, interfering with the developer\n        // debugging experience if they have break-on-exceptions enabled. So we\n        // use a boolean flag and a finally block to emulate a catch block.\n        if (hasErrored) {\n          stopWaiting();\n        }\n      }\n    },\n    return(...args) {\n      stopWaiting();\n      return generator.return(...args);\n    },\n    throw(...args) {\n      stopWaiting();\n      return generator.throw(...args);\n    }\n  };\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/wait-for.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/waiter-manager.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/waiter-manager.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _reset: () => (/* binding */ _reset),\n/* harmony export */   getPendingWaiterState: () => (/* binding */ getPendingWaiterState),\n/* harmony export */   getWaiters: () => (/* binding */ getWaiters),\n/* harmony export */   hasPendingWaiters: () => (/* binding */ hasPendingWaiters),\n/* harmony export */   register: () => (/* binding */ register),\n/* harmony export */   unregister: () => (/* binding */ unregister)\n/* harmony export */ });\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/index.js\");\n/* harmony import */ var _ember_test__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/test */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/test/index.js\");\n\n\n\n// this ensures that if @ember/test-waiters exists in multiple places in the\n// build output we will still use a single map of waiters (there really should\n// only be one of them, or else `settled` will not work at all)\nconst WAITERS = function () {\n  const HAS_SYMBOL = typeof Symbol !== 'undefined';\n  let symbolName = 'TEST_WAITERS';\n  let symbol = HAS_SYMBOL ? Symbol.for(symbolName) : symbolName;\n  let global = getGlobal();\n  let waiters = global[symbol];\n  if (waiters === undefined) {\n    waiters = global[symbol] = new Map();\n  }\n  return waiters;\n}();\nfunction indexable(input) {\n  return input;\n}\nfunction getGlobal() {\n  // eslint-disable-next-line node/no-unsupported-features/es-builtins\n  if (typeof globalThis !== 'undefined') return indexable(globalThis);\n  if (typeof self !== 'undefined') return indexable(self);\n  if (typeof window !== 'undefined') return indexable(window);\n  if (typeof global !== 'undefined') return indexable(global);\n  throw new Error('unable to locate global object');\n}\n/**\n * Backwards compatibility with legacy waiters system.\n *\n * We want to always register a waiter using the legacy waiter system, as right\n * now if consumers are not on the right version of @ember/test-helpers, using\n * this addon will result in none of these waiters waiting.\n */\n// eslint-disable-next-line ember/new-module-imports\n\nif (ember__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Test) {\n  (0,_ember_test__WEBPACK_IMPORTED_MODULE_1__.registerWaiter)(() => !hasPendingWaiters());\n}\n/**\n * Registers a waiter.\n *\n * @public\n * @param waiter {Waiter} A test waiter instance\n */\n\nfunction register(waiter) {\n  WAITERS.set(waiter.name, waiter);\n}\n/**\n * Un-registers a waiter.\n *\n * @public\n * @param waiter {Waiter} A test waiter instance\n */\n\nfunction unregister(waiter) {\n  WAITERS.delete(waiter.name);\n}\n/**\n * Gets an array of all waiters current registered.\n *\n * @public\n * @returns {Waiter[]}\n */\n\nfunction getWaiters() {\n  let result = [];\n  WAITERS.forEach(value => {\n    result.push(value);\n  });\n  return result;\n}\n/**\n * Clears all waiters.\n *\n * @private\n */\n\nfunction _reset() {\n  for (let waiter of getWaiters()) {\n    waiter.isRegistered = false;\n  }\n  WAITERS.clear();\n}\n/**\n * Gets the current state of all waiters. Any waiters whose\n * `waitUntil` method returns false will be considered `pending`.\n *\n * @returns {PendingWaiterState} An object containing a count of all waiters\n * pending and a `waiters` object containing the name of all pending waiters\n * and their debug info.\n */\n\nfunction getPendingWaiterState() {\n  let result = {\n    pending: 0,\n    waiters: {}\n  };\n  WAITERS.forEach(waiter => {\n    if (!waiter.waitUntil()) {\n      result.pending++;\n      let debugInfo = waiter.debugInfo();\n      result.waiters[waiter.name] = debugInfo || true;\n    }\n  });\n  return result;\n}\n/**\n * Determines if there are any pending waiters.\n *\n * @returns {boolean} `true` if there are pending waiters, otherwise `false`.\n */\n\nfunction hasPendingWaiters() {\n  let state = getPendingWaiterState();\n  return state.pending > 0;\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/waiter-manager.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/base-component-manager.js":
/*!****************************************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/base-component-manager.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BaseComponentManager)\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/component.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\n/**\n * This factory function returns a component manager class with common behavior\n * that can be extend to add Glimmer.js- or Ember.js-specific functionality. As\n * these environments converge, the need for two component manager\n * implementations (and thus this factory) should go away.\n */\nfunction BaseComponentManager(setOwner, getOwner, capabilities) {\n  return class {\n    static create(attrs) {\n      let owner = getOwner(attrs);\n      return new this(owner);\n    }\n    constructor(owner) {\n      _defineProperty(this, \"capabilities\", capabilities);\n      setOwner(this, owner);\n    }\n    createComponent(ComponentClass, args) {\n      if (true /* DEBUG */) {\n        _component__WEBPACK_IMPORTED_MODULE_0__.ARGS_SET.set(args.named, true);\n      }\n      return new ComponentClass(getOwner(this), args.named);\n    }\n    getContext(component) {\n      return component;\n    }\n  };\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/base-component-manager.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/component.js":
/*!***************************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/component.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ARGS_SET: () => (/* binding */ ARGS_SET),\n/* harmony export */   \"default\": () => (/* binding */ BaseComponent)\n/* harmony export */ });\n/* harmony import */ var _owner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./owner */ \"../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/owner.js\");\n/* harmony import */ var _destroyables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./destroyables */ \"../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/destroyables.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n// This provides a type-safe `WeakMap`: the getter and setter link the key to a\n// specific value. This is how `WeakMap`s actually behave, but the TS type\n// system does not (yet!) have a good way to capture that for types like\n// `WeakMap` where the type is generic over another generic type (here, `Args`).\n\n// SAFETY: this only holds because we *only* acces this when `DEBUG` is `true`.\n// There is not a great way to connect that data in TS at present.\nlet ARGS_SET;\nif (true /* DEBUG */) {\n  ARGS_SET = new WeakMap();\n}\n\n// --- Type utilities for component signatures --- //\n// Type-only \"symbol\" to use with `EmptyObject` below, so that it is *not*\n// equivalent to an empty interface.\n\n/**\n * This provides us a way to have a \"fallback\" which represents an empty object,\n * without the downsides of how TS treats `{}`. Specifically: this will\n * correctly leverage \"excess property checking\" so that, given a component\n * which has no named args, if someone invokes it with any named args, they will\n * get a type error.\n *\n * @internal This is exported so declaration emit works (if it were not emitted,\n *   declarations which fall back to it would not work). It is *not* intended for\n *   public usage, and the specific mechanics it uses may change at any time.\n *   The location of this export *is* part of the public API, because moving it\n *   will break existing declarations, but is not legal for end users to import\n *   themselves, so ***DO NOT RELY ON IT***.\n */\n\n/** Given a signature `S`, get back the `Args` type. */\n\n/**\n * Given any allowed shorthand form of a signature, desugars it to its full\n * expanded type.\n *\n * @internal This is only exported so we can avoid duplicating it in\n *   [Glint](https://github.com/typed-ember/glint) or other such tooling. It is\n *   *not* intended for public usage, and the specific mechanics it uses may\n *   change at any time. Although the signature produced by is part of Glimmer's\n *   public API the existence and mechanics of this specific symbol are *not*,\n *   so ***DO NOT RELY ON IT***.\n */\n// The conditional type here is because TS applies conditional types\n// distributively. This means that for union types, checks like `keyof T` get\n// all the keys from all elements of the union, instead of ending up as `never`\n// and then always falling into the `Signature` path instead of falling back to\n// the legacy args handling path.\n\n/**\n * @internal we use this type for convenience internally; inference means users\n *   should not normally need to name it\n */\n\n/**\n * The `Component` class defines an encapsulated UI element that is rendered to\n * the DOM. A component is made up of a template and, optionally, this component\n * object.\n *\n * ## Defining a Component\n *\n * To define a component, subclass `Component` and add your own properties,\n * methods and lifecycle hooks:\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n * }\n * ```\n *\n * ## Lifecycle Hooks\n *\n * Lifecycle hooks allow you to respond to changes to a component, such as when\n * it gets created, rendered, updated or destroyed. To add a lifecycle hook to a\n * component, implement the hook as a method on your component subclass.\n *\n * For example, to be notified when Glimmer has rendered your component so you\n * can attach a legacy jQuery plugin, implement the `didInsertElement()` method:\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n *   didInsertElement() {\n *     $(this.element).pickadate();\n *   }\n * }\n * ```\n *\n * ## Data for Templates\n *\n * `Component`s have two different kinds of data, or state, that can be\n * displayed in templates:\n *\n * 1. Arguments\n * 2. Properties\n *\n * Arguments are data that is passed in to a component from its parent\n * component. For example, if I have a `UserGreeting` component, I can pass it\n * a name and greeting to use:\n *\n * ```hbs\n * <UserGreeting @name=\"Ricardo\" @greeting=\"Olá\" />\n * ```\n *\n * Inside my `UserGreeting` template, I can access the `@name` and `@greeting`\n * arguments that I've been given:\n *\n * ```hbs\n * {{@greeting}}, {{@name}}!\n * ```\n *\n * Arguments are also available inside my component:\n *\n * ```ts\n * console.log(this.args.greeting); // prints \"Olá\"\n * ```\n *\n * Properties, on the other hand, are internal to the component and declared in\n * the class. You can use properties to store data that you want to show in the\n * template, or pass to another component as an argument.\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n *   user = {\n *     name: 'Robbie'\n *   }\n * }\n * ```\n *\n * In the above example, we've defined a component with a `user` property that\n * contains an object with its own `name` property.\n *\n * We can render that property in our template:\n *\n * ```hbs\n * Hello, {{user.name}}!\n * ```\n *\n * We can also take that property and pass it as an argument to the\n * `UserGreeting` component we defined above:\n *\n * ```hbs\n * <UserGreeting @greeting=\"Hello\" @name={{user.name}} />\n * ```\n *\n * ## Arguments vs. Properties\n *\n * Remember, arguments are data that was given to your component by its parent\n * component, and properties are data your component has defined for itself.\n *\n * You can tell the difference between arguments and properties in templates\n * because arguments always start with an `@` sign (think \"A is for arguments\"):\n *\n * ```hbs\n * {{@firstName}}\n * ```\n *\n * We know that `@firstName` came from the parent component, not the current\n * component, because it starts with `@` and is therefore an argument.\n *\n * On the other hand, if we see:\n *\n * ```hbs\n * {{name}}\n * ```\n *\n * We know that `name` is a property on the component. If we want to know where\n * the data is coming from, we can go look at our component class to find out.\n *\n * Inside the component itself, arguments always show up inside the component's\n * `args` property. For example, if `{{@firstName}}` is `Tom` in the template,\n * inside the component `this.args.firstName` would also be `Tom`.\n */\nclass BaseComponent {\n  /**\n   * Constructs a new component and assigns itself the passed properties. You\n   * should not construct new components yourself. Instead, Glimmer will\n   * instantiate new components automatically as it renders.\n   *\n   * @param owner\n   * @param args\n   */\n  constructor(owner, args) {\n    /**\n     * Named arguments passed to the component from its parent component.\n     * They can be accessed in JavaScript via `this.args.argumentName` and in the template via `@argumentName`.\n     *\n     * Say you have the following component, which will have two `args`, `firstName` and `lastName`:\n     *\n     * ```hbs\n     * <my-component @firstName=\"Arthur\" @lastName=\"Dent\" />\n     * ```\n     *\n     * If you needed to calculate `fullName` by combining both of them, you would do:\n     *\n     * ```ts\n     * didInsertElement() {\n     *   console.log(`Hi, my full name is ${this.args.firstName} ${this.args.lastName}`);\n     * }\n     * ```\n     *\n     * While in the template you could do:\n     *\n     * ```hbs\n     * <p>Welcome, {{@firstName}} {{@lastName}}!</p>\n     * ```\n     */\n    _defineProperty(this, \"args\", void 0);\n    if ( true /* DEBUG */ && !(owner !== null && typeof owner === 'object' && ARGS_SET.has(args))) {\n      throw new Error(`You must pass both the owner and args to super() in your component: ${this.constructor.name}. You can pass them directly, or use ...arguments to pass all arguments through.`);\n    }\n    this.args = args;\n    (0,_owner__WEBPACK_IMPORTED_MODULE_0__.setOwner)(this, owner);\n  }\n  get isDestroying() {\n    return (0,_destroyables__WEBPACK_IMPORTED_MODULE_1__.isDestroying)(this);\n  }\n  get isDestroyed() {\n    return (0,_destroyables__WEBPACK_IMPORTED_MODULE_1__.isDestroyed)(this);\n  }\n\n  /**\n   * Called before the component has been removed from the DOM.\n   */\n  willDestroy() {}\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/component.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/destroyables.js":
/*!******************************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/destroyables.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDestroyed: () => (/* binding */ isDestroyed),\n/* harmony export */   isDestroying: () => (/* binding */ isDestroying)\n/* harmony export */ });\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/index.js\");\n\nconst isDestroying = ember__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._isDestroying;\nconst isDestroyed = ember__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._isDestroyed;\n\n//# sourceURL=webpack://prss/../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/destroyables.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/ember-component-manager.js":
/*!*****************************************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/ember-component-manager.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/index.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/object */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/index.js\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/application */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js\");\n/* harmony import */ var _ember_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/component */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/component/index.js\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember/runloop */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/runloop/index.js\");\n/* harmony import */ var _base_component_manager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./base-component-manager */ \"../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/base-component-manager.js\");\n/* harmony import */ var _destroyables__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./destroyables */ \"../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/destroyables.js\");\n\n\n\n\n\n\n\nconst {\n  setDestroyed,\n  setDestroying\n} = _destroyables__WEBPACK_IMPORTED_MODULE_6__;\nconst CAPABILITIES =  true // @ts-ignore\n// @ts-ignore\n? (0,_ember_component__WEBPACK_IMPORTED_MODULE_3__.capabilities)('3.13', {\n  destructor: true,\n  asyncLifecycleCallbacks: false,\n  updateHook: false\n}) : 0;\nconst scheduledDestroyComponent =  true ? undefined : 0;\nconst destroy =  true ? ember__WEBPACK_IMPORTED_MODULE_0__[\"default\"].destroy : 0;\nconst registerDestructor =  true ? ember__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._registerDestructor : 0;\n\n/**\n * This component manager runs in Ember.js environments and extends the base component manager to:\n *\n * 1. Properly destroy the component's associated `meta` data structure\n * 2. Schedule destruction using Ember's runloop\n */\nclass EmberGlimmerComponentManager extends (0,_base_component_manager__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(_ember_application__WEBPACK_IMPORTED_MODULE_2__.setOwner, _ember_application__WEBPACK_IMPORTED_MODULE_2__.getOwner, CAPABILITIES) {\n  createComponent(ComponentClass, args) {\n    const component = super.createComponent(ComponentClass, args);\n    if (true) {\n      registerDestructor(component, () => {\n        component.willDestroy();\n      });\n    }\n    return component;\n  }\n  destroyComponent(component) {\n    destroy(component);\n  }\n}\n// In Ember 3.12 and earlier, the updateComponent hook was mandatory.\n// As of Ember 3.13, the `args` object is stable and each property of the\n// object participates in the autotrack stack on its own. This means we do not\n// need to set the `args` property on the component instance to invalidate\n// tracked getters that rely on `args`, and therefore don't require the `updateComponent`\n// hook at all.\nif (false) {}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EmberGlimmerComponentManager);\n\n//# sourceURL=webpack://prss/../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/ember-component-manager.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/owner.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/owner.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setOwner: () => (/* reexport safe */ _ember_application__WEBPACK_IMPORTED_MODULE_0__.setOwner)\n/* harmony export */ });\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/application */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js\");\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/owner.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/_app_/component-managers/glimmer.js":
/*!*****************************************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/_app_/component-managers/glimmer.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _glimmer_component_private_ember_component_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _glimmer_component_private_ember_component_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @glimmer/component/-private/ember-component-manager */ \"../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/-private/ember-component-manager.js\");\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/@glimmer/component.25125b7d/node_modules/@glimmer/component/_app_/component-managers/glimmer.js?");

/***/ }),

/***/ "../rewritten-packages/ember-cli-app-version.ad2eee48/node_modules/ember-cli-app-version/_app_/initializers/app-version.js":
/*!*********************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-cli-app-version.ad2eee48/node_modules/ember-cli-app-version/_app_/initializers/app-version.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ember_cli_app_version_initializer_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-cli-app-version/initializer-factory */ \"../rewritten-packages/ember-cli-app-version.ad2eee48/node_modules/ember-cli-app-version/initializer-factory.js\");\n/* harmony import */ var _config_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/environment */ \"./config/environment.js\");\n\n\nlet name, version;\nif (_config_environment__WEBPACK_IMPORTED_MODULE_1__[\"default\"].APP) {\n  name = _config_environment__WEBPACK_IMPORTED_MODULE_1__[\"default\"].APP.name;\n  version = _config_environment__WEBPACK_IMPORTED_MODULE_1__[\"default\"].APP.version;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'App Version',\n  initialize: (0,ember_cli_app_version_initializer_factory__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(name, version)\n});\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-cli-app-version.ad2eee48/node_modules/ember-cli-app-version/_app_/initializers/app-version.js?");

/***/ }),

/***/ "../rewritten-packages/ember-cli-app-version.ad2eee48/node_modules/ember-cli-app-version/initializer-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-cli-app-version.ad2eee48/node_modules/ember-cli-app-version/initializer-factory.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ initializerFactory)\n/* harmony export */ });\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/index.js\");\n\nconst {\n  libraries\n} = ember__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nfunction initializerFactory(name, version) {\n  let registered = false;\n  return function () {\n    if (!registered && name && version) {\n      libraries.register(name, version);\n      registered = true;\n    }\n  };\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-cli-app-version.ad2eee48/node_modules/ember-cli-app-version/initializer-factory.js?");

/***/ }),

/***/ "../rewritten-packages/ember-fetch.2f1d8c33/node_modules/ember-fetch/_fastboot_/instance-initializers/setup-fetch.js":
/*!***************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-fetch.2f1d8c33/node_modules/ember-fetch/_fastboot_/instance-initializers/setup-fetch.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fetch */ \"../../.pnpm/@embroider+babel-loader-9@3.1.1_@embroider+core@3.4.14_@glint+template@1.4.0__supports-color@8.1.1_webpack@5.93.0/node_modules/@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/ilya/maintained/prss/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/kw/7vmtd5m91sn1kwsvblc7z1080000gn/T/embroider/webpack-babel-loader\\\"}!../../.pnpm/@embroider+webpack@3.2.3_@embroider+core@3.4.14_@glint+template@1.4.0__webpack@5.93.0/node_modules/@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Ffetch&a=%2FUsers%2Filya%2Fmaintained%2Fprss!\");\n/* harmony import */ var fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fetch__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n * To allow relative URLs for Fastboot mode, we need the per request information\n * from the fastboot service. Then we save the request from fastboot info.\n * On each fetch with relative url we get host and protocol from it.\n */\nfunction patchFetchForRelativeURLs(instance) {\n  const fastboot = instance.lookup('service:fastboot');\n  (0,fetch__WEBPACK_IMPORTED_MODULE_0__.setupFastboot)(fastboot.get('request'));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'fetch',\n  initialize: patchFetchForRelativeURLs\n});\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-fetch.2f1d8c33/node_modules/ember-fetch/_fastboot_/instance-initializers/setup-fetch.js?");

/***/ }),

/***/ "../rewritten-packages/ember-load-initializers.ed9ed7e6/node_modules/ember-load-initializers/index.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-load-initializers.ed9ed7e6/node_modules/ember-load-initializers/index.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ loadInitializers)\n/* harmony export */ });\n/* harmony import */ var require__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! require */ \"../../.pnpm/@embroider+babel-loader-9@3.1.1_@embroider+core@3.4.14_@glint+template@1.4.0__supports-color@8.1.1_webpack@5.93.0/node_modules/@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/ilya/maintained/prss/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/kw/7vmtd5m91sn1kwsvblc7z1080000gn/T/embroider/webpack-babel-loader\\\"}!../../.pnpm/@embroider+webpack@3.2.3_@embroider+core@3.4.14_@glint+template@1.4.0__webpack@5.93.0/node_modules/@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Frequire&a=%2FUsers%2Filya%2Fmaintained%2Fprss!\");\n/* harmony import */ var require__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(require__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction resolveInitializer(moduleName) {\n  var module = require__WEBPACK_IMPORTED_MODULE_0___default()(moduleName, null, null, true);\n  if (!module) {\n    throw new Error(moduleName + ' must export an initializer.');\n  }\n  var initializer = module['default'];\n  if (!initializer) {\n    throw new Error(moduleName + ' must have a default export');\n  }\n  if (!initializer.name) {\n    initializer.name = moduleName.slice(moduleName.lastIndexOf('/') + 1);\n  }\n  return initializer;\n}\nfunction registerInitializers(app, moduleNames) {\n  for (var i = 0; i < moduleNames.length; i++) {\n    app.initializer(resolveInitializer(moduleNames[i]));\n  }\n}\nfunction registerInstanceInitializers(app, moduleNames) {\n  for (var i = 0; i < moduleNames.length; i++) {\n    app.instanceInitializer(resolveInitializer(moduleNames[i]));\n  }\n}\nfunction _endsWith(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\n/**\n * Configure your application as it boots\n */\nfunction loadInitializers(app, prefix) {\n  var initializerPrefix = prefix + '/initializers/';\n  var instanceInitializerPrefix = prefix + '/instance-initializers/';\n  var initializers = [];\n  var instanceInitializers = [];\n  // this is 2 pass because generally the first pass is the problem\n  // and is reduced, and resolveInitializer has potential to deopt\n  var moduleNames = Object.keys(requirejs._eak_seen);\n  for (var i = 0; i < moduleNames.length; i++) {\n    var moduleName = moduleNames[i];\n    if (moduleName.lastIndexOf(initializerPrefix, 0) === 0) {\n      if (!_endsWith(moduleName, '-test')) {\n        initializers.push(moduleName);\n      }\n    } else if (moduleName.lastIndexOf(instanceInitializerPrefix, 0) === 0) {\n      if (!_endsWith(moduleName, '-test')) {\n        instanceInitializers.push(moduleName);\n      }\n    }\n  }\n  registerInitializers(app, initializers);\n  registerInstanceInitializers(app, instanceInitializers);\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-load-initializers.ed9ed7e6/node_modules/ember-load-initializers/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/_app_/container-debug-adapter.js":
/*!******************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/_app_/container-debug-adapter.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ ember_resolver_container_debug_adapter__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var ember_resolver_container_debug_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-resolver/container-debug-adapter */ \"../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/container-debug-adapter.js\");\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/_app_/container-debug-adapter.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/container-debug-adapter.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/container-debug-adapter.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/array */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/index.js\");\n/* harmony import */ var _ember_debug_container_debug_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug/container-debug-adapter */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/container-debug-adapter.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ \"../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/index.js\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/application */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js\");\n\n\n\n\nfunction getPod(type, key, prefix) {\n  let match = key.match(new RegExp('^/?' + prefix + '/(.+)/' + type + '$'));\n  if (match !== null) {\n    return match[1];\n  }\n}\n\n/*\n * This module defines a subclass of Ember.ContainerDebugAdapter that adds\n * support for resolving from modules.\n *\n */\n\n/* eslint-disable ember/no-classic-classes */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_ember_debug_container_debug_adapter__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend({\n  _moduleRegistry: null,\n  init() {\n    this._super(...arguments);\n    this.namespace = (0,_ember_application__WEBPACK_IMPORTED_MODULE_3__.getOwner)(this).lookup('application:main');\n    if (!this._moduleRegistry) {\n      this._moduleRegistry = new _index__WEBPACK_IMPORTED_MODULE_2__.ModuleRegistry();\n    }\n  },\n  /**\n      The container of the application being debugged.\n      This property will be injected\n      on creation.\n       @property container\n      @default null\n      */\n\n  /**\n      The resolver instance of the application\n      being debugged. This property will be injected\n      on creation.\n       @property resolver\n      @default null\n      */\n\n  /**\n      Returns true if it is possible to catalog a list of available\n      classes in the resolver for a given type.\n       @method canCatalogEntriesByType\n      @param {string} type The type. e.g. \"model\", \"controller\", \"route\"\n      @return {boolean} whether a list is available for this type.\n      */\n  canCatalogEntriesByType(type) {\n    if (type === 'model') {\n      return true;\n    }\n    return this._super(...arguments);\n  },\n  /**\n      Returns the available classes a given type.\n       @method catalogEntriesByType\n      @param {string} type The type. e.g. \"model\", \"controller\", \"route\"\n      @return {Array} An array of classes.\n      */\n  catalogEntriesByType(type) {\n    let moduleNames = this._moduleRegistry.moduleNames();\n    let types = (0,_ember_array__WEBPACK_IMPORTED_MODULE_0__.A)();\n    let prefix = this.namespace.modulePrefix;\n    for (let i = 0, l = moduleNames.length; i < l; i++) {\n      let key = moduleNames[i];\n      if (key.indexOf(type) !== -1) {\n        // Check if it's a pod module\n        let name = getPod(type, key, this.namespace.podModulePrefix || prefix);\n        if (!name) {\n          // Not pod\n          name = key.split(type + 's/').pop();\n\n          // Support for different prefix (such as ember-cli addons).\n          // Uncomment the code below when\n          // https://github.com/ember-cli/ember-resolver/pull/80 is merged.\n\n          //let match = key.match('^/?(.+)/' + type);\n          //if (match && match[1] !== prefix) {\n          // Different prefix such as an addon\n          //name = match[1] + '@' + name;\n          //}\n        }\n        types.addObject(name);\n      }\n    }\n    return types;\n  }\n}));\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/container-debug-adapter.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/index.js":
/*!******************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModuleRegistry: () => (/* binding */ ModuleRegistry),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ember */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/index.js\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/object */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/index.js\");\n/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string */ \"../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/string/index.js\");\n/* harmony import */ var _utils_class_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/class-factory */ \"../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/utils/class-factory.js\");\n\n/* globals requirejs, require */\n\n\n\n\n\n\nif (typeof requirejs.entries === 'undefined') {\n  requirejs.entries = requirejs._eak_seen;\n}\nclass ModuleRegistry {\n  constructor(entries) {\n    this._entries = entries || requirejs.entries;\n  }\n  moduleNames() {\n    return Object.keys(this._entries);\n  }\n  has(moduleName) {\n    return moduleName in this._entries;\n  }\n  get(...args) {\n    return window.require(...args);\n  }\n}\n\n/**\n * This module defines a subclass of Ember.DefaultResolver that adds two\n * important features:\n *\n *  1) The resolver makes the container aware of es6 modules via the AMD\n *     output. The loader's _moduleEntries is consulted so that classes can be\n *     resolved directly via the module loader, without needing a manual\n *     `import`.\n *  2) is able to provide injections to classes that implement `extend`\n *     (as is typical with Ember).\n */\nclass Resolver extends _ember_object__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  constructor() {\n    super(...arguments);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"moduleBasedResolver\", true);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_deprecatedPodModulePrefix\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_normalizeCache\", Object.create(null));\n    /**\n     A listing of functions to test for moduleName's based on the provided\n     `parsedName`. This allows easy customization of additional module based\n     lookup patterns.\n      @property moduleNameLookupPatterns\n     @returns {Ember.Array}\n     */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"moduleNameLookupPatterns\", [this.podBasedModuleName, this.podBasedComponentsInSubdir, this.mainModuleName, this.defaultModuleName, this.nestedColocationComponentModuleName]);\n    if (!this._moduleRegistry) {\n      this._moduleRegistry = new ModuleRegistry();\n    }\n    this.pluralizedTypes = this.pluralizedTypes || Object.create(null);\n    if (!this.pluralizedTypes.config) {\n      this.pluralizedTypes.config = 'config';\n    }\n  }\n  makeToString(factory, fullName) {\n    return '' + this.namespace.modulePrefix + '@' + fullName + ':';\n  }\n  shouldWrapInClassFactory( /* module, parsedName */\n  ) {\n    return false;\n  }\n  parseName(fullName) {\n    if (fullName.parsedName === true) {\n      return fullName;\n    }\n    let prefix, type, name;\n    let fullNameParts = fullName.split('@');\n    if (fullNameParts.length === 3) {\n      if (fullNameParts[0].length === 0) {\n        // leading scoped namespace: `@scope/pkg@type:name`\n        prefix = `@${fullNameParts[1]}`;\n        let prefixParts = fullNameParts[2].split(':');\n        type = prefixParts[0];\n        name = prefixParts[1];\n      } else {\n        // interweaved scoped namespace: `type:@scope/pkg@name`\n        prefix = `@${fullNameParts[1]}`;\n        type = fullNameParts[0].slice(0, -1);\n        name = fullNameParts[2];\n      }\n      if (type === 'template:components') {\n        name = `components/${name}`;\n        type = 'template';\n      }\n    } else if (fullNameParts.length === 2) {\n      let prefixParts = fullNameParts[0].split(':');\n      if (prefixParts.length === 2) {\n        if (prefixParts[1].length === 0) {\n          type = prefixParts[0];\n          name = `@${fullNameParts[1]}`;\n        } else {\n          prefix = prefixParts[1];\n          type = prefixParts[0];\n          name = fullNameParts[1];\n        }\n      } else {\n        let nameParts = fullNameParts[1].split(':');\n        prefix = fullNameParts[0];\n        type = nameParts[0];\n        name = nameParts[1];\n      }\n      if (type === 'template' && prefix.lastIndexOf('components/', 0) === 0) {\n        name = `components/${name}`;\n        prefix = prefix.slice(11);\n      }\n    } else {\n      fullNameParts = fullName.split(':');\n      type = fullNameParts[0];\n      name = fullNameParts[1];\n    }\n    let fullNameWithoutType = name;\n    let namespace = this.namespace;\n    let root = namespace;\n    return {\n      parsedName: true,\n      fullName: fullName,\n      prefix: prefix || this.prefix({\n        type: type\n      }),\n      type: type,\n      fullNameWithoutType: fullNameWithoutType,\n      name: name,\n      root: root,\n      resolveMethodName: 'resolve' + (0,_string__WEBPACK_IMPORTED_MODULE_4__.classify)(type)\n    };\n  }\n  resolveOther(parsedName) {\n    ( true && !(this.namespace.modulePrefix) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)('`modulePrefix` must be defined', this.namespace.modulePrefix));\n    let normalizedModuleName = this.findModuleName(parsedName);\n    if (normalizedModuleName) {\n      let defaultExport = this._extractDefaultExport(normalizedModuleName, parsedName);\n      if (defaultExport === undefined) {\n        throw new Error(` Expected to find: '${parsedName.fullName}' within '${normalizedModuleName}' but got 'undefined'. Did you forget to 'export default' within '${normalizedModuleName}'?`);\n      }\n      if (this.shouldWrapInClassFactory(defaultExport, parsedName)) {\n        defaultExport = (0,_utils_class_factory__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(defaultExport);\n      }\n      return defaultExport;\n    }\n  }\n  normalize(fullName) {\n    return this._normalizeCache[fullName] || (this._normalizeCache[fullName] = this._normalize(fullName));\n  }\n  resolve(fullName) {\n    let parsedName = this.parseName(fullName);\n    let resolveMethodName = parsedName.resolveMethodName;\n    let resolved;\n    if (typeof this[resolveMethodName] === 'function') {\n      resolved = this[resolveMethodName](parsedName);\n    }\n    if (resolved == null) {\n      resolved = this.resolveOther(parsedName);\n    }\n    return resolved;\n  }\n  _normalize(fullName) {\n    // A) Convert underscores to dashes\n    // B) Convert camelCase to dash-case, except for components (their\n    //    templates) and helpers where we want to avoid shadowing camelCase\n    //    expressions\n    // C) replace `.` with `/` in order to make nested controllers work in the following cases\n    //      1. `needs: ['posts/post']`\n    //      2. `{{render \"posts/post\"}}`\n    //      3. `this.render('posts/post')` from Route\n\n    let split = fullName.split(':');\n    if (split.length > 1) {\n      let type = split[0];\n      if (type === 'component' || type === 'helper' || type === 'modifier' || type === 'template' && split[1].indexOf('components/') === 0) {\n        return type + ':' + split[1].replace(/_/g, '-');\n      } else {\n        return type + ':' + (0,_string__WEBPACK_IMPORTED_MODULE_4__.dasherize)(split[1].replace(/\\./g, '/'));\n      }\n    } else {\n      return fullName;\n    }\n  }\n  pluralize(type) {\n    return this.pluralizedTypes[type] || (this.pluralizedTypes[type] = type + 's');\n  }\n  podBasedLookupWithPrefix(podPrefix, parsedName) {\n    let fullNameWithoutType = parsedName.fullNameWithoutType;\n    if (parsedName.type === 'template') {\n      fullNameWithoutType = fullNameWithoutType.replace(/^components\\//, '');\n    }\n    return podPrefix + '/' + fullNameWithoutType + '/' + parsedName.type;\n  }\n  podBasedModuleName(parsedName) {\n    let podPrefix = this.namespace.podModulePrefix || this.namespace.modulePrefix;\n    return this.podBasedLookupWithPrefix(podPrefix, parsedName);\n  }\n  podBasedComponentsInSubdir(parsedName) {\n    let podPrefix = this.namespace.podModulePrefix || this.namespace.modulePrefix;\n    podPrefix = podPrefix + '/components';\n    if (parsedName.type === 'component' || /^components/.test(parsedName.fullNameWithoutType)) {\n      return this.podBasedLookupWithPrefix(podPrefix, parsedName);\n    }\n  }\n  resolveEngine(parsedName) {\n    let engineName = parsedName.fullNameWithoutType;\n    let engineModule = engineName + '/engine';\n    if (this._moduleRegistry.has(engineModule)) {\n      return this._extractDefaultExport(engineModule);\n    }\n  }\n  resolveRouteMap(parsedName) {\n    let engineName = parsedName.fullNameWithoutType;\n    let engineRoutesModule = engineName + '/routes';\n    if (this._moduleRegistry.has(engineRoutesModule)) {\n      let routeMap = this._extractDefaultExport(engineRoutesModule);\n      ( true && !(routeMap.isRouteMap) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`The route map for ${engineName} should be wrapped by 'buildRoutes' before exporting.`, routeMap.isRouteMap));\n      return routeMap;\n    }\n  }\n  resolveTemplate(parsedName) {\n    let resolved = this.resolveOther(parsedName);\n    if (resolved == null) {\n      resolved = ember__WEBPACK_IMPORTED_MODULE_1__[\"default\"].TEMPLATES[parsedName.fullNameWithoutType];\n    }\n    return resolved;\n  }\n  mainModuleName(parsedName) {\n    if (parsedName.fullNameWithoutType === 'main') {\n      // if router:main or adapter:main look for a module with just the type first\n      return parsedName.prefix + '/' + parsedName.type;\n    }\n  }\n  defaultModuleName(parsedName) {\n    return parsedName.prefix + '/' + this.pluralize(parsedName.type) + '/' + parsedName.fullNameWithoutType;\n  }\n  nestedColocationComponentModuleName(parsedName) {\n    if (parsedName.type === 'component') {\n      return parsedName.prefix + '/' + this.pluralize(parsedName.type) + '/' + parsedName.fullNameWithoutType + '/index';\n    }\n  }\n  prefix(parsedName) {\n    let tmpPrefix = this.namespace.modulePrefix;\n    if (this.namespace[parsedName.type + 'Prefix']) {\n      tmpPrefix = this.namespace[parsedName.type + 'Prefix'];\n    }\n    return tmpPrefix;\n  }\n  findModuleName(parsedName, loggingDisabled) {\n    let moduleNameLookupPatterns = this.moduleNameLookupPatterns;\n    let moduleName;\n    for (let index = 0, length = moduleNameLookupPatterns.length; index < length; index++) {\n      let item = moduleNameLookupPatterns[index];\n      let tmpModuleName = item.call(this, parsedName);\n\n      // allow treat all dashed and all underscored as the same thing\n      // supports components with dashes and other stuff with underscores.\n      if (tmpModuleName) {\n        tmpModuleName = this.chooseModuleName(tmpModuleName, parsedName);\n      }\n      if (tmpModuleName && this._moduleRegistry.has(tmpModuleName)) {\n        moduleName = tmpModuleName;\n      }\n      if (!loggingDisabled) {\n        this._logLookup(moduleName, parsedName, tmpModuleName);\n      }\n      if (moduleName) {\n        return moduleName;\n      }\n    }\n  }\n  chooseModuleName(moduleName, parsedName) {\n    let underscoredModuleName = (0,_string__WEBPACK_IMPORTED_MODULE_4__.underscore)(moduleName);\n    if (moduleName !== underscoredModuleName && this._moduleRegistry.has(moduleName) && this._moduleRegistry.has(underscoredModuleName)) {\n      throw new TypeError(`Ambiguous module names: '${moduleName}' and '${underscoredModuleName}'`);\n    }\n    if (this._moduleRegistry.has(moduleName)) {\n      return moduleName;\n    } else if (this._moduleRegistry.has(underscoredModuleName)) {\n      return underscoredModuleName;\n    }\n    // workaround for dasherized partials:\n    // something/something/-something => something/something/_something\n    let partializedModuleName = moduleName.replace(/\\/-([^/]*)$/, '/_$1');\n    if (this._moduleRegistry.has(partializedModuleName)) {\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.deprecate)('Modules should not contain underscores. ' + 'Attempted to lookup \"' + moduleName + '\" which ' + 'was not found. Please rename \"' + partializedModuleName + '\" ' + 'to \"' + moduleName + '\" instead.', false, {\n        id: 'ember-resolver.underscored-modules',\n        until: '3.0.0',\n        for: 'ember-resolver',\n        since: '0.1.0'\n      }));\n      return partializedModuleName;\n    }\n    if (true /* DEBUG */) {\n      let isCamelCaseHelper = parsedName.type === 'helper' && /[a-z]+[A-Z]+/.test(moduleName);\n      if (isCamelCaseHelper) {\n        this._camelCaseHelperWarnedNames = this._camelCaseHelperWarnedNames || [];\n        let alreadyWarned = this._camelCaseHelperWarnedNames.indexOf(parsedName.fullName) > -1;\n        if (!alreadyWarned && this._moduleRegistry.has((0,_string__WEBPACK_IMPORTED_MODULE_4__.dasherize)(moduleName))) {\n          this._camelCaseHelperWarnedNames.push(parsedName.fullName);\n          ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.warn)('Attempted to lookup \"' + parsedName.fullName + '\" which ' + 'was not found. In previous versions of ember-resolver, a bug would have ' + 'caused the module at \"' + (0,_string__WEBPACK_IMPORTED_MODULE_4__.dasherize)(moduleName) + '\" to be ' + 'returned for this camel case helper name. This has been fixed. ' + 'Use the dasherized name to resolve the module that would have been ' + 'returned in previous versions.', false, {\n            id: 'ember-resolver.camelcase-helper-names',\n            until: '3.0.0'\n          }));\n        }\n      }\n    }\n  }\n\n  // used by Ember.DefaultResolver.prototype._logLookup\n  lookupDescription(fullName) {\n    let parsedName = this.parseName(fullName);\n    let moduleName = this.findModuleName(parsedName, true);\n    return moduleName;\n  }\n\n  // only needed until 1.6.0-beta.2 can be required\n  _logLookup(found, parsedName, description) {\n    if (!ember__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ENV.LOG_MODULE_RESOLVER && !parsedName.root.LOG_RESOLVER) {\n      return;\n    }\n    let padding;\n    let symbol = found ? '[✓]' : '[ ]';\n    if (parsedName.fullName.length > 60) {\n      padding = '.';\n    } else {\n      padding = new Array(60 - parsedName.fullName.length).join('.');\n    }\n    if (!description) {\n      description = this.lookupDescription(parsedName);\n    }\n\n    /* eslint-disable no-console */\n    if (console && console.info) {\n      console.info(symbol, parsedName.fullName, padding, description);\n    }\n  }\n  knownForType(type) {\n    let moduleKeys = this._moduleRegistry.moduleNames();\n    let items = Object.create(null);\n    for (let index = 0, length = moduleKeys.length; index < length; index++) {\n      let moduleName = moduleKeys[index];\n      let fullname = this.translateToContainerFullname(type, moduleName);\n      if (fullname) {\n        items[fullname] = true;\n      }\n    }\n    return items;\n  }\n  translateToContainerFullname(type, moduleName) {\n    let prefix = this.prefix({\n      type\n    });\n\n    // Note: using string manipulation here rather than regexes for better performance.\n    // pod modules\n    // '^' + prefix + '/(.+)/' + type + '$'\n    let podPrefix = prefix + '/';\n    let podSuffix = '/' + type;\n    let start = moduleName.indexOf(podPrefix);\n    let end = moduleName.indexOf(podSuffix);\n    if (start === 0 && end === moduleName.length - podSuffix.length && moduleName.length > podPrefix.length + podSuffix.length) {\n      return type + ':' + moduleName.slice(start + podPrefix.length, end);\n    }\n\n    // non-pod modules\n    // '^' + prefix + '/' + pluralizedType + '/(.+)$'\n    let pluralizedType = this.pluralize(type);\n    let nonPodPrefix = prefix + '/' + pluralizedType + '/';\n    if (moduleName.indexOf(nonPodPrefix) === 0 && moduleName.length > nonPodPrefix.length) {\n      return type + ':' + moduleName.slice(nonPodPrefix.length);\n    }\n  }\n  _extractDefaultExport(normalizedModuleName) {\n    let module = this._moduleRegistry.get(normalizedModuleName, null, null, true /* force sync */);\n    if (module && module['default']) {\n      module = module['default'];\n    }\n    return module;\n  }\n}\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Resolver, \"moduleBasedResolver\", true);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Resolver);\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/string/cache.js":
/*!*************************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/string/cache.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Cache)\n/* harmony export */ });\nclass Cache {\n  constructor(limit, func, store) {\n    this.limit = limit;\n    this.func = func;\n    this.store = store;\n    this.size = 0;\n    this.misses = 0;\n    this.hits = 0;\n    this.store = store || new Map();\n  }\n  get(key) {\n    let value = this.store.get(key);\n    if (this.store.has(key)) {\n      this.hits++;\n      return this.store.get(key);\n    } else {\n      this.misses++;\n      value = this.set(key, this.func(key));\n    }\n    return value;\n  }\n  set(key, value) {\n    if (this.limit > this.size) {\n      this.size++;\n      this.store.set(key, value);\n    }\n    return value;\n  }\n  purge() {\n    this.store.clear();\n    this.size = 0;\n    this.hits = 0;\n    this.misses = 0;\n  }\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/string/cache.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/string/index.js":
/*!*************************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/string/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   classify: () => (/* binding */ classify),\n/* harmony export */   dasherize: () => (/* binding */ dasherize),\n/* harmony export */   decamelize: () => (/* binding */ decamelize),\n/* harmony export */   getString: () => (/* binding */ getString),\n/* harmony export */   getStrings: () => (/* binding */ getStrings),\n/* harmony export */   setStrings: () => (/* binding */ setStrings),\n/* harmony export */   underscore: () => (/* binding */ underscore)\n/* harmony export */ });\n/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache */ \"../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/string/cache.js\");\n/* eslint-disable no-useless-escape */\n\nlet STRINGS = {};\nfunction setStrings(strings) {\n  STRINGS = strings;\n}\nfunction getStrings() {\n  return STRINGS;\n}\nfunction getString(name) {\n  return STRINGS[name];\n}\nconst STRING_DASHERIZE_REGEXP = /[ _]/g;\nconst STRING_DASHERIZE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, key => decamelize(key).replace(STRING_DASHERIZE_REGEXP, '-'));\nconst STRING_CLASSIFY_REGEXP_1 = /^(\\-|_)+(.)?/;\nconst STRING_CLASSIFY_REGEXP_2 = /(.)(\\-|\\_|\\.|\\s)+(.)?/g;\nconst STRING_CLASSIFY_REGEXP_3 = /(^|\\/|\\.)([a-z])/g;\nconst CLASSIFY_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, str => {\n  const replace1 = (_match, _separator, chr) => chr ? `_${chr.toUpperCase()}` : '';\n  const replace2 = (_match, initialChar, _separator, chr) => initialChar + (chr ? chr.toUpperCase() : '');\n  const parts = str.split('/');\n  for (let i = 0; i < parts.length; i++) {\n    parts[i] = parts[i].replace(STRING_CLASSIFY_REGEXP_1, replace1).replace(STRING_CLASSIFY_REGEXP_2, replace2);\n  }\n  return parts.join('/').replace(STRING_CLASSIFY_REGEXP_3, (match /*, separator, chr */) => match.toUpperCase());\n});\nconst STRING_UNDERSCORE_REGEXP_1 = /([a-z\\d])([A-Z]+)/g;\nconst STRING_UNDERSCORE_REGEXP_2 = /\\-|\\s+/g;\nconst UNDERSCORE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, str => str.replace(STRING_UNDERSCORE_REGEXP_1, '$1_$2').replace(STRING_UNDERSCORE_REGEXP_2, '_').toLowerCase());\nconst STRING_DECAMELIZE_REGEXP = /([a-z\\d])([A-Z])/g;\nconst DECAMELIZE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, str => str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase());\n/**\n  Converts a camelized string into all lower case separated by underscores.\n\n  ```javascript\n  import { decamelize } from '@ember/string';\n\n  decamelize('innerHTML');          // 'inner_html'\n  decamelize('action_name');        // 'action_name'\n  decamelize('css-class-name');     // 'css-class-name'\n  decamelize('my favorite items');  // 'my favorite items'\n  ```\n\n  @method decamelize\n  @param {String} str The string to decamelize.\n  @return {String} the decamelized string.\n  @public\n*/\nfunction decamelize(str) {\n  return DECAMELIZE_CACHE.get(str);\n}\n/**\n  Replaces underscores, spaces, or camelCase with dashes.\n\n  ```javascript\n  import { dasherize } from '@ember/string';\n\n  dasherize('innerHTML');                // 'inner-html'\n  dasherize('action_name');              // 'action-name'\n  dasherize('css-class-name');           // 'css-class-name'\n  dasherize('my favorite items');        // 'my-favorite-items'\n  dasherize('privateDocs/ownerInvoice';  // 'private-docs/owner-invoice'\n  ```\n\n  @method dasherize\n  @param {String} str The string to dasherize.\n  @return {String} the dasherized string.\n  @public\n*/\nfunction dasherize(str) {\n  return STRING_DASHERIZE_CACHE.get(str);\n}\n/**\n  Returns the UpperCamelCase form of a string.\n\n  ```javascript\n  import { classify } from '@ember/string';\n\n  classify('innerHTML');                   // 'InnerHTML'\n  classify('action_name');                 // 'ActionName'\n  classify('css-class-name');              // 'CssClassName'\n  classify('my favorite items');           // 'MyFavoriteItems'\n  classify('private-docs/owner-invoice');  // 'PrivateDocs/OwnerInvoice'\n  ```\n\n  @method classify\n  @param {String} str the string to classify\n  @return {String} the classified string\n  @public\n*/\nfunction classify(str) {\n  return CLASSIFY_CACHE.get(str);\n}\n/**\n  More general than decamelize. Returns the lower\\_case\\_and\\_underscored\n  form of a string.\n\n  ```javascript\n  import { underscore } from '@ember/string';\n\n  underscore('innerHTML');                 // 'inner_html'\n  underscore('action_name');               // 'action_name'\n  underscore('css-class-name');            // 'css_class_name'\n  underscore('my favorite items');         // 'my_favorite_items'\n  underscore('privateDocs/ownerInvoice');  // 'private_docs/owner_invoice'\n  ```\n\n  @method underscore\n  @param {String} str The string to underscore.\n  @return {String} the underscored string.\n  @public\n*/\nfunction underscore(str) {\n  return UNDERSCORE_CACHE.get(str);\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/string/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/utils/class-factory.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/utils/class-factory.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ classFactory)\n/* harmony export */ });\nfunction classFactory(klass) {\n  return {\n    create(injections) {\n      if (typeof klass.extend === 'function') {\n        return klass.extend(injections);\n      } else {\n        return klass;\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-resolver.3423ab34/node_modules/ember-resolver/utils/class-factory.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/deprecations/index.js":
/*!*********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/deprecations/index.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEPRECATIONS: () => (/* binding */ DEPRECATIONS),\n/* harmony export */   deprecateUntil: () => (/* binding */ deprecateUntil),\n/* harmony export */   emberVersionGte: () => (/* binding */ emberVersionGte),\n/* harmony export */   isRemoved: () => (/* binding */ isRemoved)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _ember_version_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../ember/version.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/version.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _string_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../string/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/string/index.js\");\n\n\n\n\nfunction isEnabled(options) {\n  return Object.hasOwnProperty.call(options.since, 'enabled') || _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.E._ALL_DEPRECATIONS_ENABLED;\n}\nlet numEmberVersion = parseFloat(_shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.E._OVERRIDE_DEPRECATION_VERSION ?? _ember_version_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n/* until must only be a minor version or major version */\nfunction emberVersionGte(until, emberVersion = numEmberVersion) {\n  let significantUntil = until.replace(/(\\.0+)/g, '');\n  return emberVersion >= parseFloat(significantUntil);\n}\nfunction isRemoved(options) {\n  return emberVersionGte(options.until);\n}\nfunction deprecation(options) {\n  return {\n    options,\n    test: !isEnabled(options),\n    isEnabled: isEnabled(options) || isRemoved(options),\n    isRemoved: isRemoved(options)\n  };\n}\n\n/*\n  To add a deprecation, you must add a new entry to the `DEPRECATIONS` object.\n  The entry should be an object with the following properties:\n\n  * `id` (required): A string that uniquely identifies the deprecation. This\n    should be a short, descriptive name, typically dasherized.\n  * `for` (required): The string `ember-source` -- every deprecation from this\n    package is for `ember-source`.\n  * `since` (required): An object with `available` and `enabled`. `available` is\n    the first version of Ember that the deprecation is available in. `enabled` is\n    the version of Ember that the deprecation was first enabled. This is used as\n    a feature flag deprecations. For public APIs, the `enabled` value is added\n    only once the deprecation RFC is [Ready for Release](https://github.com/emberjs/rfcs#ready-for-release).\n  * `until` (required): The version of Ember that the deprecation will be removed\n  * `url` (required): A URL to the deprecation guide for the deprecation. This\n    URL can be constructed in advance of the deprecation being added to the\n    [deprecation app](https://github.com/ember-learn/deprecation-app) by\n    following this format: `https://deprecations.emberjs.com/deprecations/{{id}}`.\n\n  For example:\n  `deprecate` should then be called using the entry from the `DEPRECATIONS` object.\n\n  ```ts\n  import { DEPRECATIONS } from '@ember/-internals/deprecations';\n  //...\n\n  deprecateUntil(message, DEPRECATIONS.MY_DEPRECATION);\n  ```\n\n  `expectDeprecation` should also use the DEPRECATIONS object, but it should be noted\n  that it uses `isEnabled` instead of `test` because the expectations of `expectDeprecation`\n  are the opposite of `test`.\n\n  ```ts\n  expectDeprecation(\n    () => {\n        assert.equal(foo, bar(), 'foo is equal to bar'); // something that triggers the deprecation\n    },\n    /matchesMessage/,\n    DEPRECATIONS.MY_DEPRECATION.isEnabled\n  );\n  ```\n\n  Tests can be conditionally run based on whether a deprecation is enabled or not:\n\n  ```ts\n    [`${testUnless(DEPRECATIONS.MY_DEPRECATION.isRemoved)} specific deprecated feature tested only in this test`]\n  ```\n\n  This test will be skipped when the MY_DEPRECATION is removed.\n  When adding a deprecation, we need to guard all the code that will eventually be removed, including tests.\n  For tests that are not specifically testing the deprecated feature, we need to figure out how to\n  test the behavior without encountering the deprecated feature, just as users would.\n */\nconst DEPRECATIONS = {\n  DEPRECATE_IMPORT_EMBER(importName) {\n    return deprecation({\n      id: `deprecate-import-${(0,_string_index_js__WEBPACK_IMPORTED_MODULE_3__.dasherize)(importName).toLowerCase()}-from-ember`,\n      for: 'ember-source',\n      since: {\n        available: '5.10.0'\n      },\n      until: '6.0.0',\n      url: `https://deprecations.emberjs.com/id/import-${(0,_string_index_js__WEBPACK_IMPORTED_MODULE_3__.dasherize)(importName).toLowerCase()}-from-ember`\n    });\n  },\n  DEPRECATE_IMPLICIT_ROUTE_MODEL: deprecation({\n    id: 'deprecate-implicit-route-model',\n    for: 'ember-source',\n    since: {\n      available: '5.3.0',\n      enabled: '5.3.0'\n    },\n    until: '6.0.0',\n    url: 'https://deprecations.emberjs.com/v5.x/#toc_deprecate-implicit-route-model'\n  }),\n  DEPRECATE_TEMPLATE_ACTION: deprecation({\n    id: 'template-action',\n    url: 'https://deprecations.emberjs.com/id/template-action',\n    until: '6.0.0',\n    for: 'ember-source',\n    since: {\n      available: '5.9.0',\n      enabled: '5.9.0'\n    }\n  }),\n  DEPRECATE_COMPONENT_TEMPLATE_RESOLVING: deprecation({\n    id: 'component-template-resolving',\n    url: 'https://deprecations.emberjs.com/id/component-template-resolving',\n    until: '6.0.0',\n    for: 'ember-source',\n    since: {\n      available: '5.10.0',\n      enabled: '5.10.0'\n    }\n  }),\n  DEPRECATE_ARRAY_PROTOTYPE_EXTENSIONS: deprecation({\n    id: 'deprecate-array-prototype-extensions',\n    url: 'https://deprecations.emberjs.com/id/deprecate-deprecate-array-prototype-extensions',\n    until: '6.0.0',\n    for: 'ember-source',\n    since: {\n      available: '5.10.0',\n      enabled: '5.10.0'\n    }\n  })\n};\nfunction deprecateUntil(message, deprecation) {\n  const {\n    options\n  } = deprecation;\n   true && !Boolean(options.for === 'ember-source') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('deprecateUntil must only be called for ember-source', Boolean(options.for === 'ember-source'));\n  if (deprecation.isRemoved) {\n    throw new Error(`The API deprecated by ${options.id} was removed in ember-source ${options.until}. The message was: ${message}. Please see ${options.url} for more details.`);\n  }\n   true && !deprecation.test && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.d)(message, deprecation.test, options);\n}\nconst {\n  EXTEND_PROTOTYPES\n} = _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.E;\nif (EXTEND_PROTOTYPES.Array !== false) {\n  deprecateUntil('Array prototype extensions are deprecated. Follow the deprecation guide for migration instructions, and set EmberENV.EXTEND_PROTOTYPES to false in your config/environment.js', DEPRECATIONS.DEPRECATE_ARRAY_PROTOTYPE_EXTENSIONS);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/deprecations/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/error-handling/index.js":
/*!***********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/error-handling/index.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDispatchOverride: () => (/* binding */ getDispatchOverride),\n/* harmony export */   getOnerror: () => (/* binding */ getOnerror),\n/* harmony export */   onErrorTarget: () => (/* binding */ onErrorTarget),\n/* harmony export */   setDispatchOverride: () => (/* binding */ setDispatchOverride),\n/* harmony export */   setOnerror: () => (/* binding */ setOnerror)\n/* harmony export */ });\nlet onerror;\nconst onErrorTarget = {\n  get onerror() {\n    return onerror;\n  }\n};\n\n// Ember.onerror getter\nfunction getOnerror() {\n  return onerror;\n}\n// Ember.onerror setter\nfunction setOnerror(handler) {\n  onerror = handler;\n}\nlet dispatchOverride = null;\n\n// allows testing adapter to override dispatch\nfunction getDispatchOverride() {\n  return dispatchOverride;\n}\nfunction setDispatchOverride(handler) {\n  dispatchOverride = handler;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/error-handling/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js":
/*!****************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Meta: () => (/* binding */ Meta),\n/* harmony export */   UNDEFINED: () => (/* binding */ UNDEFINED),\n/* harmony export */   counters: () => (/* binding */ counters),\n/* harmony export */   meta: () => (/* binding */ meta),\n/* harmony export */   peekMeta: () => (/* binding */ peekMeta),\n/* harmony export */   setMeta: () => (/* binding */ setMeta)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _shared_chunks_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared-chunks/to-string-D8i3mjEU.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/to-string-D8i3mjEU.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n\n\n\n\n\nconst objectPrototype = Object.prototype;\nlet counters;\nif (true) {\n  counters = {\n    peekCalls: 0,\n    peekPrototypeWalks: 0,\n    setCalls: 0,\n    deleteCalls: 0,\n    metaCalls: 0,\n    metaInstantiated: 0,\n    matchingListenersCalls: 0,\n    observerEventsCalls: 0,\n    addToListenersCalls: 0,\n    removeFromListenersCalls: 0,\n    removeAllListenersCalls: 0,\n    listenersInherited: 0,\n    listenersFlattened: 0,\n    parentListenersUsed: 0,\n    flattenedListenersCalls: 0,\n    reopensAfterFlatten: 0,\n    readableLazyChainsCalls: 0,\n    writableLazyChainsCalls: 0\n  };\n}\n\n/**\n@module ember\n*/\n\nconst UNDEFINED = (0,_shared_chunks_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_1__.s)('undefined');\nvar ListenerKind = /*#__PURE__*/function (ListenerKind) {\n  ListenerKind[ListenerKind[\"ADD\"] = 0] = \"ADD\";\n  ListenerKind[ListenerKind[\"ONCE\"] = 1] = \"ONCE\";\n  ListenerKind[ListenerKind[\"REMOVE\"] = 2] = \"REMOVE\";\n  return ListenerKind;\n}(ListenerKind || {});\nlet currentListenerVersion = 1;\nclass Meta {\n  // DEBUG\n  /** @internal */\n  constructor(obj) {\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_descriptors\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_mixins\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_isInit\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_lazyChains\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_values\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_revisions\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"source\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"proto\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_parent\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_listeners\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_listenersVersion\", 1);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_inheritedEnd\", -1);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_flattenedVersion\", 0);\n    if (true) {\n      counters.metaInstantiated++;\n    }\n    this._parent = undefined;\n    this._descriptors = undefined;\n    this._mixins = undefined;\n    this._lazyChains = undefined;\n    this._values = undefined;\n    this._revisions = undefined;\n\n    // initial value for all flags right now is false\n    // see FLAGS const for detailed list of flags used\n    this._isInit = false;\n\n    // used only internally\n    this.source = obj;\n    this.proto = obj.constructor === undefined ? undefined : obj.constructor.prototype;\n    this._listeners = undefined;\n  }\n\n  /** @internal */\n  get parent() {\n    let parent = this._parent;\n    if (parent === undefined) {\n      let proto = getPrototypeOf(this.source);\n      this._parent = parent = proto === null || proto === objectPrototype ? null : meta(proto);\n    }\n    return parent;\n  }\n  setInitializing() {\n    this._isInit = true;\n  }\n\n  /** @internal */\n  unsetInitializing() {\n    this._isInit = false;\n  }\n\n  /** @internal */\n  isInitializing() {\n    return this._isInit;\n  }\n\n  /** @internal */\n  isPrototypeMeta(obj) {\n    return this.proto === this.source && this.source === obj;\n  }\n\n  /** @internal */\n  _getOrCreateOwnMap(key) {\n    return this[key] || (this[key] = Object.create(null));\n  }\n\n  /** @internal */\n  _getOrCreateOwnSet(key) {\n    return this[key] || (this[key] = new Set());\n  }\n\n  /** @internal */\n  _findInheritedMap(key, subkey) {\n    let pointer = this;\n    while (pointer !== null) {\n      let map = pointer[key];\n      if (map !== undefined) {\n        let value = map.get(subkey);\n        if (value !== undefined) {\n          return value;\n        }\n      }\n      pointer = pointer.parent;\n    }\n  }\n\n  /** @internal */\n  _hasInInheritedSet(key, value) {\n    let pointer = this;\n    while (pointer !== null) {\n      let set = pointer[key];\n      if (set !== undefined && set.has(value)) {\n        return true;\n      }\n      pointer = pointer.parent;\n    }\n    return false;\n  }\n\n  /** @internal */\n  valueFor(key) {\n    let values = this._values;\n    return values !== undefined ? values[key] : undefined;\n  }\n\n  /** @internal */\n  setValueFor(key, value) {\n    let values = this._getOrCreateOwnMap('_values');\n    values[key] = value;\n  }\n\n  /** @internal */\n  revisionFor(key) {\n    let revisions = this._revisions;\n    return revisions !== undefined ? revisions[key] : undefined;\n  }\n\n  /** @internal */\n  setRevisionFor(key, revision) {\n    let revisions = this._getOrCreateOwnMap('_revisions');\n    revisions[key] = revision;\n  }\n\n  /** @internal */\n  writableLazyChainsFor(key) {\n    if (true) {\n      counters.writableLazyChainsCalls++;\n    }\n    let lazyChains = this._getOrCreateOwnMap('_lazyChains');\n    let chains = lazyChains[key];\n    if (chains === undefined) {\n      chains = lazyChains[key] = [];\n    }\n    return chains;\n  }\n\n  /** @internal */\n  readableLazyChainsFor(key) {\n    if (true) {\n      counters.readableLazyChainsCalls++;\n    }\n    let lazyChains = this._lazyChains;\n    if (lazyChains !== undefined) {\n      return lazyChains[key];\n    }\n    return undefined;\n  }\n\n  /** @internal */\n  addMixin(mixin) {\n     true && !!(0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(this.source) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)((0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(this.source) ? `Cannot add mixins of \\`${(0,_shared_chunks_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_1__.t)(mixin)}\\` on \\`${(0,_shared_chunks_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.source)}\\` call addMixin after it has been destroyed.` : '', !(0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(this.source));\n    let set = this._getOrCreateOwnSet('_mixins');\n    set.add(mixin);\n  }\n\n  /** @internal */\n  hasMixin(mixin) {\n    return this._hasInInheritedSet('_mixins', mixin);\n  }\n\n  /** @internal */\n  forEachMixins(fn) {\n    let pointer = this;\n    let seen;\n    while (pointer !== null) {\n      let set = pointer._mixins;\n      if (set !== undefined) {\n        seen = seen === undefined ? new Set() : seen;\n        // TODO cleanup typing here\n        set.forEach(mixin => {\n          if (!seen.has(mixin)) {\n            seen.add(mixin);\n            fn(mixin);\n          }\n        });\n      }\n      pointer = pointer.parent;\n    }\n  }\n\n  /** @internal */\n  writeDescriptors(subkey, value) {\n     true && !!(0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(this.source) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)((0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(this.source) ? `Cannot update descriptors for \\`${subkey}\\` on \\`${(0,_shared_chunks_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.source)}\\` after it has been destroyed.` : '', !(0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(this.source));\n    let map = this._descriptors || (this._descriptors = new Map());\n    map.set(subkey, value);\n  }\n\n  /** @internal */\n  peekDescriptors(subkey) {\n    let possibleDesc = this._findInheritedMap('_descriptors', subkey);\n    return possibleDesc === UNDEFINED ? undefined : possibleDesc;\n  }\n\n  /** @internal */\n  removeDescriptors(subkey) {\n    this.writeDescriptors(subkey, UNDEFINED);\n  }\n\n  /** @internal */\n  forEachDescriptors(fn) {\n    let pointer = this;\n    let seen;\n    while (pointer !== null) {\n      let map = pointer._descriptors;\n      if (map !== undefined) {\n        seen = seen === undefined ? new Set() : seen;\n        map.forEach((value, key) => {\n          if (!seen.has(key)) {\n            seen.add(key);\n            if (value !== UNDEFINED) {\n              fn(key, value);\n            }\n          }\n        });\n      }\n      pointer = pointer.parent;\n    }\n  }\n\n  /** @internal */\n  addToListeners(eventName, target, method, once, sync) {\n    if (true) {\n      counters.addToListenersCalls++;\n    }\n    this.pushListener(eventName, target, method, once ? ListenerKind.ONCE : ListenerKind.ADD, sync);\n  }\n\n  /** @internal */\n  removeFromListeners(eventName, target, method) {\n    if (true) {\n      counters.removeFromListenersCalls++;\n    }\n    this.pushListener(eventName, target, method, ListenerKind.REMOVE);\n  }\n  pushListener(event, target, method, kind, sync = false) {\n    let listeners = this.writableListeners();\n    let i = indexOfListener(listeners, event, target, method);\n\n    // remove if found listener was inherited\n    if (i !== -1 && i < this._inheritedEnd) {\n      listeners.splice(i, 1);\n      this._inheritedEnd--;\n      i = -1;\n    }\n\n    // if not found, push. Note that we must always push if a listener is not\n    // found, even in the case of a function listener remove, because we may be\n    // attempting to add or remove listeners _before_ flattening has occurred.\n    if (i === -1) {\n       true && !!(this.isPrototypeMeta(this.source) && typeof method === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You cannot add function listeners to prototypes. Convert the listener to a string listener, or add it to the instance instead.', !(this.isPrototypeMeta(this.source) && typeof method === 'function'));\n       true && !!(!this.isPrototypeMeta(this.source) && typeof method === 'function' && kind === ListenerKind.REMOVE) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to remove a function listener which did not exist on the instance, which means you may have attempted to remove it before it was added.', !(!this.isPrototypeMeta(this.source) && typeof method === 'function' && kind === ListenerKind.REMOVE));\n      listeners.push({\n        event,\n        target,\n        method,\n        kind,\n        sync\n      });\n    } else {\n      let listener = listeners[i];\n       true && !listener && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has listener', listener); // If the listener is our own listener and we are trying to remove it, we\n      // want to splice it out entirely so we don't hold onto a reference.\n      if (kind === ListenerKind.REMOVE && listener.kind !== ListenerKind.REMOVE) {\n        listeners.splice(i, 1);\n      } else {\n         true && !!(listener.kind === ListenerKind.ADD && kind === ListenerKind.ADD && listener.sync !== sync) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You attempted to add an observer for the same method on '${event.split(':')[0]}' twice to ${target} as both sync and async. Observers must be either sync or async, they cannot be both. This is likely a mistake, you should either remove the code that added the observer a second time, or update it to always be sync or async. The method was ${String(method)}.`, !(listener.kind === ListenerKind.ADD && kind === ListenerKind.ADD && listener.sync !== sync)); // update own listener\n        listener.kind = kind;\n        listener.sync = sync;\n      }\n    }\n  }\n  writableListeners() {\n    // Check if we need to invalidate and reflatten. We need to do this if we\n    // have already flattened (flattened version is the current version) and\n    // we are either writing to a prototype meta OR we have never inherited, and\n    // may have cached the parent's listeners.\n    if (this._flattenedVersion === currentListenerVersion && (this.source === this.proto || this._inheritedEnd === -1)) {\n      if (true) {\n        counters.reopensAfterFlatten++;\n      }\n      currentListenerVersion++;\n    }\n\n    // Inherited end has not been set, then we have never created our own\n    // listeners, but may have cached the parent's\n    if (this._inheritedEnd === -1) {\n      this._inheritedEnd = 0;\n      this._listeners = [];\n    }\n    return this._listeners;\n  }\n\n  /**\n    Flattening is based on a global revision counter. If the revision has\n    bumped it means that somewhere in a class inheritance chain something has\n    changed, so we need to reflatten everything. This can only happen if:\n     1. A meta has been flattened (listener has been called)\n    2. The meta is a prototype meta with children who have inherited its\n       listeners\n    3. A new listener is subsequently added to the meta (e.g. via `.reopen()`)\n     This is a very rare occurrence, so while the counter is global it shouldn't\n    be updated very often in practice.\n  */\n  flattenedListeners() {\n    if (true) {\n      counters.flattenedListenersCalls++;\n    }\n    if (this._flattenedVersion < currentListenerVersion) {\n      if (true) {\n        counters.listenersFlattened++;\n      }\n      let parent = this.parent;\n      if (parent !== null) {\n        // compute\n        let parentListeners = parent.flattenedListeners();\n        if (parentListeners !== undefined) {\n          if (this._listeners === undefined) {\n            // If this instance doesn't have any of its own listeners (writableListeners\n            // has never been called) then we don't need to do any flattening, return\n            // the parent's listeners instead.\n            if (true) {\n              counters.parentListenersUsed++;\n            }\n            this._listeners = parentListeners;\n          } else {\n            let listeners = this._listeners;\n            if (this._inheritedEnd > 0) {\n              listeners.splice(0, this._inheritedEnd);\n              this._inheritedEnd = 0;\n            }\n            for (let listener of parentListeners) {\n              let index = indexOfListener(listeners, listener.event, listener.target, listener.method);\n              if (index === -1) {\n                if (true) {\n                  counters.listenersInherited++;\n                }\n                listeners.unshift(listener);\n                this._inheritedEnd++;\n              }\n            }\n          }\n        }\n      }\n      this._flattenedVersion = currentListenerVersion;\n    }\n    return this._listeners;\n  }\n\n  /** @internal */\n  matchingListeners(eventName) {\n    let listeners = this.flattenedListeners();\n    let result;\n    if (true) {\n      counters.matchingListenersCalls++;\n    }\n    if (listeners !== undefined) {\n      for (let listener of listeners) {\n        // REMOVE listeners are placeholders that tell us not to\n        // inherit, so they never match. Only ADD and ONCE can match.\n        if (listener.event === eventName && (listener.kind === ListenerKind.ADD || listener.kind === ListenerKind.ONCE)) {\n          if (result === undefined) {\n            // we create this array only after we've found a listener that\n            // matches to avoid allocations when no matches are found.\n            result = [];\n          }\n          result.push(listener.target, listener.method, listener.kind === ListenerKind.ONCE);\n        }\n      }\n    }\n    return result;\n  }\n\n  /** @internal */\n  observerEvents() {\n    let listeners = this.flattenedListeners();\n    let result;\n    if (true) {\n      counters.observerEventsCalls++;\n    }\n    if (listeners !== undefined) {\n      for (let listener of listeners) {\n        // REMOVE listeners are placeholders that tell us not to\n        // inherit, so they never match. Only ADD and ONCE can match.\n        if ((listener.kind === ListenerKind.ADD || listener.kind === ListenerKind.ONCE) && listener.event.indexOf(':change') !== -1) {\n          if (result === undefined) {\n            // we create this array only after we've found a listener that\n            // matches to avoid allocations when no matches are found.\n            result = [];\n          }\n          result.push(listener);\n        }\n      }\n    }\n    return result;\n  }\n}\nconst getPrototypeOf = Object.getPrototypeOf;\nconst metaStore = new WeakMap();\nfunction setMeta(obj, meta) {\n   true && !(obj !== null) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Cannot call `setMeta` on null', obj !== null);\n   true && !(obj !== undefined) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Cannot call `setMeta` on undefined', obj !== undefined);\n   true && !(typeof obj === 'object' || typeof obj === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Cannot call \\`setMeta\\` on ${typeof obj}`, typeof obj === 'object' || typeof obj === 'function');\n  if (true) {\n    counters.setCalls++;\n  }\n  metaStore.set(obj, meta);\n}\nfunction peekMeta(obj) {\n   true && !(obj !== null) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Cannot call `peekMeta` on null', obj !== null);\n   true && !(obj !== undefined) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Cannot call `peekMeta` on undefined', obj !== undefined);\n   true && !(typeof obj === 'object' || typeof obj === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Cannot call \\`peekMeta\\` on ${typeof obj}`, typeof obj === 'object' || typeof obj === 'function');\n  if (true) {\n    counters.peekCalls++;\n  }\n  let meta = metaStore.get(obj);\n  if (meta !== undefined) {\n    return meta;\n  }\n  let pointer = getPrototypeOf(obj);\n  while (pointer !== null) {\n    if (true) {\n      counters.peekPrototypeWalks++;\n    }\n    meta = metaStore.get(pointer);\n    if (meta !== undefined) {\n      if (meta.proto !== pointer) {\n        // The meta was a prototype meta which was not marked as initializing.\n        // This can happen when a prototype chain was created manually via\n        // Object.create() and the source object does not have a constructor.\n        meta.proto = pointer;\n      }\n      return meta;\n    }\n    pointer = getPrototypeOf(pointer);\n  }\n  return null;\n}\n\n/**\n  Retrieves the meta hash for an object. If `writable` is true ensures the\n  hash is writable for this object as well.\n\n  The meta object contains information about computed property descriptors as\n  well as any watched properties and other information. You generally will\n  not access this information directly but instead work with higher level\n  methods that manipulate this hash indirectly.\n\n  @method meta\n  @for Ember\n  @private\n\n  @param {Object} obj The object to retrieve meta for\n  @param {Boolean} [writable=true] Pass `false` if you do not intend to modify\n    the meta hash, allowing the method to avoid making an unnecessary copy.\n  @return {Object} the meta hash for an object\n*/\nconst meta = function meta(obj) {\n   true && !(obj !== null) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Cannot call `meta` on null', obj !== null);\n   true && !(obj !== undefined) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Cannot call `meta` on undefined', obj !== undefined);\n   true && !(typeof obj === 'object' || typeof obj === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Cannot call \\`meta\\` on ${typeof obj}`, typeof obj === 'object' || typeof obj === 'function');\n  if (true) {\n    counters.metaCalls++;\n  }\n  let maybeMeta = peekMeta(obj);\n\n  // remove this code, in-favor of explicit parent\n  if (maybeMeta !== null && maybeMeta.source === obj) {\n    return maybeMeta;\n  }\n  let newMeta = new Meta(obj);\n  setMeta(obj, newMeta);\n  return newMeta;\n};\nif (true) {\n  meta._counters = counters;\n}\nfunction indexOfListener(listeners, event, target, method) {\n  for (let i = listeners.length - 1; i >= 0; i--) {\n    let listener = listeners[i];\n     true && !listener && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has listener', listener);\n    if (listener.event === event && listener.target === target && listener.method === method) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/metal/index.js":
/*!**************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/metal/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASYNC_OBSERVERS: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a9),\n/* harmony export */   ComputedDescriptor: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.D),\n/* harmony export */   ComputedProperty: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.C),\n/* harmony export */   DEBUG_INJECTION_FUNCTIONS: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.ad),\n/* harmony export */   Libraries: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a8),\n/* harmony export */   NAMESPACES: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.N),\n/* harmony export */   NAMESPACES_BY_ID: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.a),\n/* harmony export */   PROPERTY_DID_CHANGE: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.Q),\n/* harmony export */   PROXY_CONTENT: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a5),\n/* harmony export */   SYNC_OBSERVERS: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.aa),\n/* harmony export */   TrackedDescriptor: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.af),\n/* harmony export */   _getPath: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.m),\n/* harmony export */   _getProp: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a6),\n/* harmony export */   _setProp: () => (/* reexport safe */ _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_4__._),\n/* harmony export */   activateObserver: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.ab),\n/* harmony export */   addArrayObserver: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.V),\n/* harmony export */   addListener: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.z),\n/* harmony export */   addNamespace: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.b),\n/* harmony export */   addObserver: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.x),\n/* harmony export */   alias: () => (/* reexport safe */ _shared_chunks_alias_By_2yu5c_js__WEBPACK_IMPORTED_MODULE_2__.a),\n/* harmony export */   arrayContentDidChange: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.U),\n/* harmony export */   arrayContentWillChange: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.T),\n/* harmony export */   autoComputed: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.Y),\n/* harmony export */   beginPropertyChanges: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a1),\n/* harmony export */   cached: () => (/* reexport safe */ _glimmer_tracking_index_js__WEBPACK_IMPORTED_MODULE_6__.cached),\n/* harmony export */   changeProperties: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a2),\n/* harmony export */   computed: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   createCache: () => (/* reexport safe */ _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.createCache),\n/* harmony export */   defineDecorator: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   defineProperty: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   defineValue: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.o),\n/* harmony export */   deprecateProperty: () => (/* binding */ deprecateProperty),\n/* harmony export */   descriptorForDecorator: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.v),\n/* harmony export */   descriptorForProperty: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.B),\n/* harmony export */   eachProxyArrayDidChange: () => (/* binding */ eachProxyArrayDidChange),\n/* harmony export */   eachProxyArrayWillChange: () => (/* binding */ eachProxyArrayWillChange),\n/* harmony export */   endPropertyChanges: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a3),\n/* harmony export */   expandProperties: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   findNamespace: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.f),\n/* harmony export */   findNamespaces: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.c),\n/* harmony export */   flushAsyncObservers: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.ac),\n/* harmony export */   get: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   getCachedValueFor: () => (/* reexport safe */ _shared_chunks_computed_cache_DmYKevAP_js__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   getProperties: () => (/* reexport safe */ _shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_5__.g),\n/* harmony export */   getValue: () => (/* reexport safe */ _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.getValue),\n/* harmony export */   hasListeners: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.J),\n/* harmony export */   hasUnknownProperty: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.H),\n/* harmony export */   inject: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.f),\n/* harmony export */   isClassicDecorator: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.u),\n/* harmony export */   isComputed: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a4),\n/* harmony export */   isConst: () => (/* reexport safe */ _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.isConst),\n/* harmony export */   isElementDescriptor: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   isNamespaceSearchDisabled: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.i),\n/* harmony export */   libraries: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.M),\n/* harmony export */   makeComputedDecorator: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.w),\n/* harmony export */   markObjectAsDirty: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.ae),\n/* harmony export */   nativeDescDecorator: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.q),\n/* harmony export */   notifyPropertyChange: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.n),\n/* harmony export */   objectAt: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.R),\n/* harmony export */   on: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.K),\n/* harmony export */   processAllNamespaces: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.p),\n/* harmony export */   processNamespace: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.d),\n/* harmony export */   removeArrayObserver: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.W),\n/* harmony export */   removeListener: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.A),\n/* harmony export */   removeNamespace: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.r),\n/* harmony export */   removeObserver: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.y),\n/* harmony export */   replace: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.S),\n/* harmony export */   replaceInNativeArray: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a7),\n/* harmony export */   revalidateObservers: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.r),\n/* harmony export */   sendEvent: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.I),\n/* harmony export */   set: () => (/* reexport safe */ _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_4__.s),\n/* harmony export */   setClassicDecorator: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.L),\n/* harmony export */   setNamespaceSearchDisabled: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.e),\n/* harmony export */   setProperties: () => (/* reexport safe */ _shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_5__.s),\n/* harmony export */   setUnprocessedMixins: () => (/* reexport safe */ _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__.s),\n/* harmony export */   tagForObject: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.t),\n/* harmony export */   tagForProperty: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   tracked: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a0),\n/* harmony export */   trySet: () => (/* reexport safe */ _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_4__.t)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _shared_chunks_computed_cache_DmYKevAP_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared-chunks/computed_cache-DmYKevAP.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/computed_cache-DmYKevAP.js\");\n/* harmony import */ var _shared_chunks_alias_By_2yu5c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared-chunks/alias-By_2yu5c.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/alias-By_2yu5c.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shared-chunks/property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared-chunks/set_properties-DvalyQdu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/set_properties-DvalyQdu.js\");\n/* harmony import */ var _glimmer_tracking_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../@glimmer/tracking/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/tracking/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared-chunks/namespace_search-CBgHTkDh.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/namespace_search-CBgHTkDh.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module ember\n*/\n\nfunction deprecateProperty(object, deprecatedKey, newKey, options) {\n  function _deprecate() {\n     true && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.d)(`Usage of \\`${deprecatedKey}\\` is deprecated, use \\`${newKey}\\` instead.`, false, options);\n  }\n  Object.defineProperty(object, deprecatedKey, {\n    configurable: true,\n    enumerable: false,\n    set(value) {\n      _deprecate();\n      (0,_shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_4__.s)(this, newKey, value);\n    },\n    get() {\n      _deprecate();\n      return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, newKey);\n    }\n  });\n}\nconst EACH_PROXIES = new WeakMap();\nfunction eachProxyArrayWillChange(array, idx, removedCnt, addedCnt) {\n  let eachProxy = EACH_PROXIES.get(array);\n  if (eachProxy !== undefined) {\n    eachProxy.arrayWillChange(array, idx, removedCnt, addedCnt);\n  }\n}\nfunction eachProxyArrayDidChange(array, idx, removedCnt, addedCnt) {\n  let eachProxy = EACH_PROXIES.get(array);\n  if (eachProxy !== undefined) {\n    eachProxy.arrayDidChange(array, idx, removedCnt, addedCnt);\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/metal/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js":
/*!**************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOwner: () => (/* binding */ getOwner),\n/* harmony export */   isFactory: () => (/* binding */ isFactory),\n/* harmony export */   setOwner: () => (/* binding */ setOwner)\n/* harmony export */ });\n/* harmony import */ var _glimmer_owner_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../@glimmer/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/owner/index.js\");\n\n\n/**\n  @module @ember/owner\n */\n\n/**\n  The name for a factory consists of a namespace and the name of a specific type\n  within that namespace, like `'service:session'`.\n\n  **Note:** `FullName` is *not* a class, just a contract for strings used in the\n  DI system. It is currently documented as a class only due to limits in our\n  documentation infrastructure.\n\n  @for @ember/owner\n  @class FullName\n  @public\n */\n\n/**\n  A type registry for the DI system, which other participants in the DI system\n  can register themselves into with declaration merging. The contract for this\n  type is that its keys are the `Type` from a `FullName`, and each value for a\n  `Type` is another registry whose keys are the `Name` from a `FullName`. The\n  mechanic for providing a registry is [declaration merging][handbook].\n\n  [handbook]: https://www.typescriptlang.org/docs/handbook/declaration-merging.html\n\n  For example, Ember's `@ember/service` module includes this set of definitions:\n\n  ```ts\n  export default class Service extends EmberObject {}\n\n  // For concrete singleton classes to be merged into.\n  interface Registry extends Record<string, Service> {}\n\n  declare module '@ember/owner' {\n    service: Registry;\n  }\n  ```\n\n  Declarations of services can then include the registry:\n\n  ```ts\n  import Service from '@ember/service';\n\n  export default class Session extends Service {\n    login(username: string, password: string) {\n      // ...\n    }\n  }\n\n  declare module '@ember/service' {\n    interface Registry {\n      session: Session;\n    }\n  }\n  ```\n\n  Then users of the `Owner` API will be able to do things like this with strong\n  type safety guarantees:\n\n  ```ts\n  getOwner(this)?.lookup('service:session').login(\"hello\", \"1234abcd\");\n  ```\n\n  @for @ember/owner\n  @private\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\n// Convenience utility for pulling a specific factory manager off `DIRegistry`\n// if one exists, or falling back to the default definition otherwise.\n/**\n  @private\n */\n\n/**\n  The common interface for the ability to `register()` an item, shared by the\n  `Owner` and `RegistryProxy` interfaces.\n\n  @for @ember/owner\n  @class BasicRegistry\n  @private\n */\n\n/**\n  The common interface for the ability to `lookup()` or get the `factoryFor` an\n  item, shared by the `Owner` and `ContainerProxy` interfaces.\n\n  @for @ember/owner\n  @class BasicContainer\n  @private\n */\n\n/**\n  Framework objects in an Ember application (components, services, routes,\n  etc.) are created via a factory and dependency injection system. Each of\n  these objects is the responsibility of an \"owner\", which handles its\n  instantiation and manages its lifetime.\n\n  An `Owner` is not a class you construct; it is one the framework constructs\n  for you. The normal way to get access to the relevant `Owner` is using the\n  `getOwner` function.\n\n  @for @ember/owner\n  @uses BasicRegistry\n  @uses BasicContainer\n  @class Owner\n  @since 4.10.0\n  @public\n */\n\n/**\n * Interface representing the options for registering an item as a factory.\n *\n * @for @ember/owner\n * @class RegisterOptions\n * @public\n */\n\n/**\n  Registered factories are instantiated by having create called on them.\n  Additionally they are singletons by default, so each time they are looked up\n  they return the same instance.\n\n  However, that behavior can be modified with the `instantiate` and `singleton`\n  options to the `Owner.register()` method.\n\n  @for @ember/owner\n  @class Factory\n  @since 4.10.0\n  @public\n */\n\n/**\n  The interface representing a manager which can be used for introspection of\n  the factory's class or for the creation of factory instances with initial\n  properties. The manager is an object with the following properties:\n\n  - `class` - The registered or resolved class.\n  - `create` - A function that will create an instance of the class with any\n  dependencies injected.\n\n  **Note:** `FactoryManager` is *not* user-constructible; the only legal way\n  to get a `FactoryManager` is via `Owner.factoryFor`.\n\n  @for @ember/owner\n  @class FactoryManager\n  @extends Factory\n  @public\n */\n\n/**\n * A record mapping all known items of a given type: if the item is known it\n * will be `true`; otherwise it will be `false` or `undefined`.\n */\n\n/**\n  A `Resolver` is the mechanism responsible for looking up code in your\n  application and converting its naming conventions into the actual classes,\n  functions, and templates that Ember needs to resolve its dependencies, for\n  example, what template to render for a given route. It is a system that helps\n  the app resolve the lookup of JavaScript modules agnostic of what kind of\n  module system is used, which can be AMD, CommonJS or just plain globals. It\n  is used to lookup routes, models, components, templates, or anything that is\n  used in your Ember app.\n\n  This interface is not a concrete class; instead, it represents the contract a\n  custom resolver must implement. Most apps never need to think about this: in\n  the default blueprint, this is supplied by the `ember-resolver` package.\n\n  @for @ember/owner\n  @class Resolver\n  @since 4.10.0\n  @public\n */\n\n/**\n  The internal representation of a `Factory`, for the extra detail available for\n  private use internally than we expose to consumers.\n\n  @for @ember/owner\n  @class InternalFactory\n  @private\n */\n\n/**\n  @private\n  @method isFactory\n  @param {Object} obj\n  @return {Boolean}\n  @static\n */\nfunction isFactory(obj) {\n  return obj != null && typeof obj.create === 'function';\n}\n\n// NOTE: For docs, see the definition at the public API site in `@ember/owner`;\n// we document it there for the sake of public API docs and for TS consumption,\n// while having the richer `InternalOwner` representation for Ember itself.\nfunction getOwner(object) {\n  return (0,_glimmer_owner_index_js__WEBPACK_IMPORTED_MODULE_0__.getOwner)(object);\n}\n\n/**\n  `setOwner` forces a new owner on a given object instance. This is primarily\n  useful in some testing cases.\n\n  @method setOwner\n  @static\n  @for @ember/owner\n  @param {Object} object An object instance.\n  @param {Owner} object The new owner object of the object instance.\n  @since 2.3.0\n  @public\n*/\nfunction setOwner(object, owner) {\n  (0,_glimmer_owner_index_js__WEBPACK_IMPORTED_MODULE_0__.setOwner)(object, owner);\n}\n\n// Defines the type for the ContainerProxyMixin. When we rationalize our Owner\n// *not* to work via mixins, we will be able to delete this entirely, in favor\n// of just using the Owner class itself.\n/**\n * The interface for a container proxy, which is itself a private API used\n * by the private `ContainerProxyMixin` as part of the base definition of\n * `EngineInstance`.\n *\n * @class ContainerProxy\n * @for @ember/owner\n * @private\n * @extends BasicContainer\n */\n\n/**\n * @class RegistryProxy\n * @extends BasicRegistry\n * @private\n * @for @ember/owner\n */\n\n/**\n * @internal This is the same basic interface which is implemented (via the\n *   mixins) by `EngineInstance` and therefore `ApplicationInstance`, which are\n *   the normal interfaces to an `Owner` for end user applications now. However,\n *   going forward, we expect to progressively deprecate and remove the \"extra\"\n *   APIs which are not exposed on `Owner` itself.\n */\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js":
/*!***********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _shared_chunks_rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_0__.R),\n/* harmony export */   onerrorDefault: () => (/* binding */ onerrorDefault)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../shared-chunks/rsvp-DaQAFb0W.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/rsvp-DaQAFb0W.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _error_handling_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../error-handling/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/error-handling/index.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n\n\n\n\n(0,_shared_chunks_rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_0__.c)('async', (callback, promise) => {\n  _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__._.schedule('actions', null, callback, promise);\n});\n(0,_shared_chunks_rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_0__.c)('after', cb => {\n  _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__._.schedule(_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.b, null, cb);\n});\n(0,_shared_chunks_rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_0__.o)('error', onerrorDefault);\nfunction onerrorDefault(reason) {\n  let error = errorFor(reason);\n  if (error) {\n    let overrideDispatch = (0,_error_handling_index_js__WEBPACK_IMPORTED_MODULE_2__.getDispatchOverride)();\n    if (overrideDispatch) {\n      overrideDispatch(error);\n    } else {\n      throw error;\n    }\n  }\n}\nfunction errorFor(reason) {\n  if (!reason) return;\n  let withErrorThrown = reason;\n  if (withErrorThrown.errorThrown) {\n    return unwrapErrorThrown(withErrorThrown);\n  }\n  let withName = reason;\n  if (withName.name === 'UnrecognizedURLError') {\n     true && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The URL '${withName.message}' did not match any routes in your application`, false); // @ts-expect-error We'll hit this if the assert is stripped\n    return;\n  }\n  if (reason.name === 'TransitionAborted') {\n    return;\n  }\n  return reason;\n}\nfunction unwrapErrorThrown(reason) {\n  let error = reason.errorThrown;\n  if (typeof error === 'string') {\n    error = new Error(error);\n  }\n  Object.defineProperty(error, '__reason_with_error_thrown__', {\n    value: reason,\n    enumerable: false\n  });\n  return error;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js":
/*!****************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentFor: () => (/* binding */ contentFor),\n/* harmony export */   \"default\": () => (/* binding */ ProxyMixin)\n/* harmony export */ });\n/* harmony import */ var _meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_is_proxy_Dmis_70B_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../shared-chunks/is_proxy-Dmis-70B.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/is_proxy-Dmis-70B.js\");\n/* harmony import */ var _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared-chunks/property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module ember\n*/\n\nfunction contentFor(proxy) {\n  let content = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.g)(proxy, 'content');\n  // SAFETY: Ideally we'd assert instead of casting, but @glimmer/validator doesn't give us\n  // sufficient public types for this. Previously this code was .js and worked correctly so\n  // hopefully this is sufficiently reliable.\n  (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.updateTag)((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.t)(proxy), (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.t)(content));\n  return content;\n}\nfunction customTagForProxy(proxy, key, addMandatorySetter) {\n   true && !(0,_shared_chunks_is_proxy_Dmis_70B_js__WEBPACK_IMPORTED_MODULE_6__.i)(proxy) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected a proxy', (0,_shared_chunks_is_proxy_Dmis_70B_js__WEBPACK_IMPORTED_MODULE_6__.i)(proxy));\n  let meta = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.tagMetaFor)(proxy);\n  let tag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.tagFor)(proxy, key, meta);\n  if (true) {\n    // TODO: Replace this with something more first class for tracking tags in DEBUG\n    // SAFETY: This is not an officially supported property but setting shouldn't cause issues.\n    tag._propertyKey = key;\n  }\n  if (key in proxy) {\n    if ( true && addMandatorySetter) {\n       true && !_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_5__.f && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] setupMandatorySetter should be set when debugging', _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_5__.f);\n      (0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_5__.f)(tag, proxy, key);\n    }\n    return tag;\n  } else {\n    let tags = [tag, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.tagFor)(proxy, 'content', meta)];\n    let content = contentFor(proxy);\n    if ((0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_5__.e)(content)) {\n      tags.push((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.a)(content, key, addMandatorySetter));\n    }\n    return (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.combine)(tags);\n  }\n}\n\n/**\n  `Ember.ProxyMixin` forwards all properties not defined by the proxy itself\n  to a proxied `content` object.  See ObjectProxy for more details.\n\n  @class ProxyMixin\n  @namespace Ember\n  @private\n*/\n\nconst ProxyMixin = _object_mixin_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n  /**\n    The object whose properties will be forwarded.\n     @property content\n    @type {unknown}\n    @default null\n    @public\n  */\n  content: null,\n  init() {\n    this._super(...arguments);\n    (0,_shared_chunks_is_proxy_Dmis_70B_js__WEBPACK_IMPORTED_MODULE_6__.s)(this);\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.t)(this);\n    (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_9__.setCustomTagFor)(this, customTagForProxy);\n  },\n  willDestroy() {\n    this.set('content', null);\n    this._super(...arguments);\n  },\n  isTruthy: (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.c)('content', function () {\n    return Boolean((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.g)(this, 'content'));\n  }),\n  unknownProperty(key) {\n    let content = contentFor(this);\n    return content ? (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.g)(content, key) : undefined;\n  },\n  setUnknownProperty(key, value) {\n    let m = (0,_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__.meta)(this);\n    if (m.isInitializing() || m.isPrototypeMeta(this)) {\n      // if marked as prototype or object is initializing then just\n      // defineProperty rather than delegate\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.d)(this, key, null, value);\n      return value;\n    }\n    let content = contentFor(this);\n     true && !content && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Cannot delegate set('${key}', ${value}) to the 'content' property of object proxy ${this}: its 'content' is undefined.`, content); // SAFETY: We don't actually guarantee that this is an object, so this isn't necessarily safe :(\n    return (0,_shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_7__.s)(content, key, value);\n  }\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js":
/*!************************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ActionHandler)\n/* harmony export */ });\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n/* harmony import */ var _meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n@module ember\n*/\n\nconst ActionHandler = _object_mixin_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n  mergedProperties: ['actions'],\n  /**\n    The collection of functions, keyed by name, available on this\n    `ActionHandler` as action targets.\n     These functions will be invoked when a matching `{{action}}` is triggered\n    from within a template and the application's current route is this route.\n     Actions can also be invoked from other parts of your application\n    via `ActionHandler#send`.\n     The `actions` hash will inherit action handlers from\n    the `actions` hash defined on extended parent classes\n    or mixins rather than just replace the entire hash, e.g.:\n     ```app/mixins/can-display-banner.js\n    import Mixin from '@ember/object/mixin';\n     export default Mixin.create({\n      actions: {\n        displayBanner(msg) {\n          // ...\n        }\n      }\n    });\n    ```\n     ```app/routes/welcome.js\n    import Route from '@ember/routing/route';\n    import CanDisplayBanner from '../mixins/can-display-banner';\n     export default Route.extend(CanDisplayBanner, {\n      actions: {\n        playMusic() {\n          // ...\n        }\n      }\n    });\n     // `WelcomeRoute`, when active, will be able to respond\n    // to both actions, since the actions hash is merged rather\n    // then replaced when extending mixins / parent classes.\n    this.send('displayBanner');\n    this.send('playMusic');\n    ```\n     Within a Controller, Route or Component's action handler,\n    the value of the `this` context is the Controller, Route or\n    Component object:\n     ```app/routes/song.js\n    import Route from '@ember/routing/route';\n     export default Route.extend({\n      actions: {\n        myAction() {\n          this.controllerFor(\"song\");\n          this.transitionTo(\"other.route\");\n          ...\n        }\n      }\n    });\n    ```\n     It is also possible to call `this._super(...arguments)` from within an\n    action handler if it overrides a handler defined on a parent\n    class or mixin:\n     Take for example the following routes:\n     ```app/mixins/debug-route.js\n    import Mixin from '@ember/object/mixin';\n     export default Mixin.create({\n      actions: {\n        debugRouteInformation() {\n          console.debug(\"It's a-me, console.debug!\");\n        }\n      }\n    });\n    ```\n     ```app/routes/annoying-debug.js\n    import Route from '@ember/routing/route';\n    import DebugRoute from '../mixins/debug-route';\n     export default Route.extend(DebugRoute, {\n      actions: {\n        debugRouteInformation() {\n          // also call the debugRouteInformation of mixed in DebugRoute\n          this._super(...arguments);\n           // show additional annoyance\n          window.alert(...);\n        }\n      }\n    });\n    ```\n     ## Bubbling\n     By default, an action will stop bubbling once a handler defined\n    on the `actions` hash handles it. To continue bubbling the action,\n    you must return `true` from the handler:\n     ```app/router.js\n    Router.map(function() {\n      this.route(\"album\", function() {\n        this.route(\"song\");\n      });\n    });\n    ```\n     ```app/routes/album.js\n    import Route from '@ember/routing/route';\n     export default Route.extend({\n      actions: {\n        startPlaying: function() {\n        }\n      }\n    });\n    ```\n     ```app/routes/album-song.js\n    import Route from '@ember/routing/route';\n     export default Route.extend({\n      actions: {\n        startPlaying() {\n          // ...\n           if (actionShouldAlsoBeTriggeredOnParentRoute) {\n            return true;\n          }\n        }\n      }\n    });\n    ```\n     @property actions\n    @type Object\n    @default null\n    @public\n  */\n\n  /**\n    Triggers a named action on the `ActionHandler`. Any parameters\n    supplied after the `actionName` string will be passed as arguments\n    to the action target function.\n     If the `ActionHandler` has its `target` property set, actions may\n    bubble to the `target`. Bubbling happens when an `actionName` can\n    not be found in the `ActionHandler`'s `actions` hash or if the\n    action target function returns `true`.\n     Example\n     ```app/routes/welcome.js\n    import Route from '@ember/routing/route';\n     export default Route.extend({\n      actions: {\n        playTheme() {\n          this.send('playMusic', 'theme.mp3');\n        },\n        playMusic(track) {\n          // ...\n        }\n      }\n    });\n    ```\n     @method send\n    @param {String} actionName The action to trigger\n    @param {*} context a context to send with the action\n    @public\n  */\n  send(actionName, ...args) {\n     true && !(!this.isDestroying && !this.isDestroyed) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Attempted to call .send() with the action '${actionName}' on the destroyed object '${this}'.`, !this.isDestroying && !this.isDestroyed);\n    if (this.actions && this.actions[actionName]) {\n      let shouldBubble = this.actions[actionName].apply(this, args) === true;\n      if (!shouldBubble) {\n        return;\n      }\n    }\n    let target = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this, 'target');\n    if (target) {\n       true && !(typeof target.send === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The \\`target\\` for ${this} (${target}) does not have a \\`send\\` method`, typeof target.send === 'function');\n      target.send(...arguments);\n    }\n  }\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js":
/*!********************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Comparable)\n/* harmony export */ });\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n\n\n/**\n@module ember\n*/\n\n/**\n  Implements some standard methods for comparing objects. Add this mixin to\n  any class you create that can compare its instances.\n\n  You should implement the `compare()` method.\n\n  @class Comparable\n  @namespace Ember\n  @since Ember 0.9\n  @private\n*/\n\nconst Comparable = _object_mixin_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n  /**\n    __Required.__ You must implement this method to apply this mixin.\n     Override to return the result of the comparison of the two parameters. The\n    compare method should return:\n     - `-1` if `a < b`\n    - `0` if `a == b`\n    - `1` if `a > b`\n     Default implementation raises an exception.\n     @method compare\n    @param a {Object} the first object to compare\n    @param b {Object} the second object to compare\n    @return {Number} the result of the comparison\n    @private\n  */\n  compare: null\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js":
/*!*************************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ContainerProxyMixin)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n\n\n\n// This is defined as a separate interface so that it can be used in the definition of\n// `Owner` without also including the `__container__` property.\n\n/**\n  ContainerProxyMixin is used to provide public access to specific\n  container functionality.\n\n  @class ContainerProxyMixin\n  @extends ContainerProxy\n  @private\n*/\n\nconst ContainerProxyMixin = _object_mixin_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n  /**\n   The container stores state.\n    @private\n   @property {Ember.Container} __container__\n   */\n  __container__: null,\n  ownerInjection() {\n    return this.__container__.ownerInjection();\n  },\n  lookup(fullName, options) {\n    return this.__container__.lookup(fullName, options);\n  },\n  destroy() {\n    let container = this.__container__;\n    if (container) {\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.j)(() => {\n        container.destroy();\n        (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.s)('destroy', container, 'finalizeDestroy');\n      });\n    }\n    this._super();\n  },\n  factoryFor(fullName) {\n    return this.__container__.factoryFor(fullName);\n  }\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js":
/*!************************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RegistryProxyMixin)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n\n\n/**\n@module ember\n*/\n\nconst RegistryProxyMixin = _object_mixin_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n  __registry__: null,\n  resolveRegistration(fullName) {\n     true && !this.__registry__.isValidFullName(fullName) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('fullName must be a proper full name', this.__registry__.isValidFullName(fullName));\n    return this.__registry__.resolve(fullName);\n  },\n  register: registryAlias('register'),\n  unregister: registryAlias('unregister'),\n  hasRegistration: registryAlias('has'),\n  registeredOption: registryAlias('getOption'),\n  registerOptions: registryAlias('options'),\n  registeredOptions: registryAlias('getOptions'),\n  registerOptionsForType: registryAlias('optionsForType'),\n  registeredOptionsForType: registryAlias('getOptionsForType')\n});\nfunction registryAlias(name) {\n  return function (...args) {\n    // We need this cast because `Parameters` is deferred so that it is not\n    // possible for TS to see it will always produce the right type. However,\n    // since `AnyFn` has a rest type, it is allowed. See discussion on [this\n    // issue](https://github.com/microsoft/TypeScript/issues/47615).\n    return this.__registry__[name](...args);\n  };\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js":
/*!*******************************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TargetActionSupport)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n@module ember\n*/\n\nconst TargetActionSupport = _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].create({\n  target: null,\n  action: null,\n  actionContext: null,\n  actionContextObject: (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.c)('actionContext', function () {\n    let actionContext = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, 'actionContext');\n    if (typeof actionContext === 'string') {\n      let value = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, actionContext);\n      if (value === undefined) {\n        value = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(_shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.c.lookup, actionContext);\n      }\n      return value;\n    } else {\n      return actionContext;\n    }\n  }),\n  /**\n  Send an `action` with an `actionContext` to a `target`. The action, actionContext\n  and target will be retrieved from properties of the object. For example:\n   ```javascript\n  import { alias } from '@ember/object/computed';\n   App.SaveButtonView = Ember.View.extend(Ember.TargetActionSupport, {\n    target: alias('controller'),\n    action: 'save',\n    actionContext: alias('context'),\n    click() {\n      this.triggerAction(); // Sends the `save` action, along with the current context\n                            // to the current controller\n    }\n  });\n  ```\n   The `target`, `action`, and `actionContext` can be provided as properties of\n  an optional object argument to `triggerAction` as well.\n   ```javascript\n  App.SaveButtonView = Ember.View.extend(Ember.TargetActionSupport, {\n    click() {\n      this.triggerAction({\n        action: 'save',\n        target: this.get('controller'),\n        actionContext: this.get('context')\n      }); // Sends the `save` action, along with the current context\n          // to the current controller\n    }\n  });\n  ```\n   The `actionContext` defaults to the object you are mixing `TargetActionSupport` into.\n  But `target` and `action` must be specified either as properties or with the argument\n  to `triggerAction`, or a combination:\n   ```javascript\n  import { alias } from '@ember/object/computed';\n   App.SaveButtonView = Ember.View.extend(Ember.TargetActionSupport, {\n    target: alias('controller'),\n    click() {\n      this.triggerAction({\n        action: 'save'\n      }); // Sends the `save` action, along with a reference to `this`,\n          // to the current controller\n    }\n  });\n  ```\n   @method triggerAction\n  @param opts {Object} (optional, with the optional keys action, target and/or actionContext)\n  @return {Boolean} true if the action was sent successfully and did not return false\n  @private\n  */\n  triggerAction(opts = {}) {\n    let {\n      action,\n      target,\n      actionContext\n    } = opts;\n    action = action || (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, 'action');\n    target = target || getTarget(this);\n    if (actionContext === undefined) {\n      actionContext = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, 'actionContextObject') || this;\n    }\n    let context = Array.isArray(actionContext) ? actionContext : [actionContext];\n    if (target && action) {\n      let ret;\n      if (isSendable(target)) {\n        ret = target.send(action, ...context);\n      } else {\n         true && !(typeof target[action] === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The action '${action}' did not exist on ${target}`, typeof target[action] === 'function');\n        ret = target[action](...context);\n      }\n      if (ret !== false) {\n        return true;\n      }\n    }\n    return false;\n  }\n});\nfunction isSendable(obj) {\n  return obj != null && typeof obj === 'object' && typeof obj.send === 'function';\n}\nfunction getTarget(instance) {\n  let target = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(instance, 'target');\n  if (target) {\n    if (typeof target === 'string') {\n      let value = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(instance, target);\n      if (value === undefined) {\n        value = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(_shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.c.lookup, target);\n      }\n      return value;\n    } else {\n      return target;\n    }\n  }\n  if (instance._target) {\n    return instance._target;\n  }\n  return null;\n}\nif (true) {\n  Object.seal(TargetActionSupport);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/string/index.js":
/*!***************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/string/index.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   classify: () => (/* binding */ classify),\n/* harmony export */   dasherize: () => (/* binding */ dasherize)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_cache_qDyqAcpg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared-chunks/cache-qDyqAcpg.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-qDyqAcpg.js\");\n\n\n\n/*\n  This module exists to separate the @ember/string methods used\n  internally in ember-source, from those public methods that are\n  now deprecated and to be removed.\n*/\n\nconst STRING_DASHERIZE_REGEXP = /[ _]/g;\nconst STRING_DASHERIZE_CACHE = new _shared_chunks_cache_qDyqAcpg_js__WEBPACK_IMPORTED_MODULE_1__.C(1000, key => decamelize(key).replace(STRING_DASHERIZE_REGEXP, '-'));\nconst STRING_CLASSIFY_REGEXP_1 = /^(-|_)+(.)?/;\nconst STRING_CLASSIFY_REGEXP_2 = /(.)(-|_|\\.|\\s)+(.)?/g;\nconst STRING_CLASSIFY_REGEXP_3 = /(^|\\/|\\.)([a-z])/g;\nconst CLASSIFY_CACHE = new _shared_chunks_cache_qDyqAcpg_js__WEBPACK_IMPORTED_MODULE_1__.C(1000, str => {\n  let replace1 = (_match, _separator, chr) => chr ? `_${chr.toUpperCase()}` : '';\n  let replace2 = (_match, initialChar, _separator, chr) => initialChar + (chr ? chr.toUpperCase() : '');\n  let parts = str.split('/');\n  for (let i = 0; i < parts.length; i++) {\n    parts[i] = parts[i].replace(STRING_CLASSIFY_REGEXP_1, replace1).replace(STRING_CLASSIFY_REGEXP_2, replace2);\n  }\n  return parts.join('/').replace(STRING_CLASSIFY_REGEXP_3, (match /*, separator, chr */) => match.toUpperCase());\n});\nconst STRING_DECAMELIZE_REGEXP = /([a-z\\d])([A-Z])/g;\nconst DECAMELIZE_CACHE = new _shared_chunks_cache_qDyqAcpg_js__WEBPACK_IMPORTED_MODULE_1__.C(1000, str => str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase());\n\n/**\n Defines string helper methods used internally in ember-source.\n\n @class String\n @private\n */\n\n/**\n Replaces underscores, spaces, or camelCase with dashes.\n\n ```javascript\n import { dasherize } from '@ember/-internals/string';\n\n dasherize('innerHTML');                // 'inner-html'\n dasherize('action_name');              // 'action-name'\n dasherize('css-class-name');           // 'css-class-name'\n dasherize('my favorite items');        // 'my-favorite-items'\n dasherize('privateDocs/ownerInvoice';  // 'private-docs/owner-invoice'\n ```\n\n @method dasherize\n @param {String} str The string to dasherize.\n @return {String} the dasherized string.\n @private\n */\nfunction dasherize(str) {\n  return STRING_DASHERIZE_CACHE.get(str);\n}\n\n/**\n Returns the UpperCamelCase form of a string.\n\n ```javascript\n import { classify } from '@ember/string';\n\n classify('innerHTML');                   // 'InnerHTML'\n classify('action_name');                 // 'ActionName'\n classify('css-class-name');              // 'CssClassName'\n classify('my favorite items');           // 'MyFavoriteItems'\n classify('private-docs/owner-invoice');  // 'PrivateDocs/OwnerInvoice'\n ```\n\n @method classify\n @param {String} str the string to classify\n @return {String} the classified string\n @private\n */\nfunction classify(str) {\n  return CLASSIFY_CACHE.get(str);\n}\n\n/**\n Converts a camelized string into all lower case separated by underscores.\n\n ```javascript\n decamelize('innerHTML');          // 'inner_html'\n decamelize('action_name');        // 'action_name'\n decamelize('css-class-name');     // 'css-class-name'\n decamelize('my favorite items');  // 'my favorite items'\n ```\n */\nfunction decamelize(str) {\n  return DECAMELIZE_CACHE.get(str);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/string/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/compat/attrs.js":
/*!*************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/compat/attrs.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MUTABLE_CELL: () => (/* binding */ MUTABLE_CELL)\n/* harmony export */ });\nconst MUTABLE_CELL = Symbol('MUTABLE_CELL');\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/compat/attrs.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/component_lookup.js":
/*!*****************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/component_lookup.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ComponentLookup)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n\nconst ComponentLookup = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_0__.E.extend({\n  componentFor(name, owner) {\n    let fullName = `component:${name}`;\n    return owner.factoryFor(fullName);\n  },\n  layoutFor(name, owner, options) {\n    let templateFullName = `template:components/${name}`;\n    return owner.lookup(templateFullName, options);\n  }\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/component_lookup.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/action_support.js":
/*!**********************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/action_support.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ActionSupport)\n/* harmony export */ });\n/* harmony import */ var _meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n @module ember\n*/\nconst ActionSupport = _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].create({\n  send(actionName, ...args) {\n     true && !(!this.isDestroying && !this.isDestroyed) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`Attempted to call .send() with the action '${actionName}' on the destroyed object '${this}'.`, !this.isDestroying && !this.isDestroyed);\n    let action = this.actions && this.actions[actionName];\n    if (action) {\n      let shouldBubble = action.apply(this, args) === true;\n      if (!shouldBubble) {\n        return;\n      }\n    }\n    let target = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, 'target');\n    if (target) {\n       true && !(typeof target.send === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`The \\`target\\` for ${this} (${target}) does not have a \\`send\\` method`, typeof target.send === 'function');\n      target.send(...arguments);\n    } else {\n       true && !action && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`${(0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.b)(this)} had no action handler for: ${actionName}`, action);\n    }\n  }\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/action_support.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/child_views_support.js":
/*!***************************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/child_views_support.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChildViewsSupport)\n/* harmony export */ });\n/* harmony import */ var _meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n/* harmony import */ var _system_utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../system/utils.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module ember\n*/\n\nconst ChildViewsSupport = _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].create({\n  /**\n    Array of child views. You should never edit this array directly.\n     @property childViews\n    @type Array\n    @default []\n    @private\n  */\n  childViews: (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.q)({\n    configurable: false,\n    enumerable: false,\n    get() {\n      return (0,_system_utils_js__WEBPACK_IMPORTED_MODULE_9__.getChildViews)(this);\n    }\n  }),\n  appendChild(view) {\n    (0,_system_utils_js__WEBPACK_IMPORTED_MODULE_9__.addChildView)(this, view);\n  }\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/child_views_support.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/class_names_support.js":
/*!***************************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/class_names_support.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ClassNamesSupport)\n/* harmony export */ });\n/* harmony import */ var _meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n@module ember\n*/\nconst EMPTY_ARRAY = Object.freeze([]);\n\n/**\n  @class ClassNamesSupport\n  @namespace Ember\n  @private\n*/\n\nconst ClassNamesSupport = _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].create({\n  concatenatedProperties: ['classNames', 'classNameBindings'],\n  init() {\n    this._super(...arguments);\n     true && !((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(this, 'classNameBindings') === undefined && Array.isArray(this.classNameBindings)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`Only arrays are allowed for 'classNameBindings'`, (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(this, 'classNameBindings') === undefined && Array.isArray(this.classNameBindings));\n     true && !((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(this, 'classNames') === undefined && Array.isArray(this.classNames)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`Only arrays of static class strings are allowed for 'classNames'. For dynamic classes, use 'classNameBindings'.`, (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(this, 'classNames') === undefined && Array.isArray(this.classNames));\n  },\n  /**\n    Standard CSS class names to apply to the view's outer element. This\n    property automatically inherits any class names defined by the view's\n    superclasses as well.\n     @property classNames\n    @type Array\n    @default ['ember-view']\n    @public\n  */\n  classNames: EMPTY_ARRAY,\n  /**\n    A list of properties of the view to apply as class names. If the property\n    is a string value, the value of that string will be applied as a class\n    name.\n     ```javascript\n    // Applies the 'high' class to the view element\n    import Component from '@ember/component';\n    Component.extend({\n      classNameBindings: ['priority'],\n      priority: 'high'\n    });\n    ```\n     If the value of the property is a Boolean, the name of that property is\n    added as a dasherized class name.\n     ```javascript\n    // Applies the 'is-urgent' class to the view element\n    import Component from '@ember/component';\n    Component.extend({\n      classNameBindings: ['isUrgent'],\n      isUrgent: true\n    });\n    ```\n     If you would prefer to use a custom value instead of the dasherized\n    property name, you can pass a binding like this:\n     ```javascript\n    // Applies the 'urgent' class to the view element\n    import Component from '@ember/component';\n    Component.extend({\n      classNameBindings: ['isUrgent:urgent'],\n      isUrgent: true\n    });\n    ```\n     If you would like to specify a class that should only be added when the\n    property is false, you can declare a binding like this:\n     ```javascript\n    // Applies the 'disabled' class to the view element\n    import Component from '@ember/component';\n    Component.extend({\n      classNameBindings: ['isEnabled::disabled'],\n      isEnabled: false\n    });\n    ```\n     This list of properties is inherited from the component's superclasses as well.\n     @property classNameBindings\n    @type Array\n    @default []\n    @public\n  */\n  classNameBindings: EMPTY_ARRAY\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/class_names_support.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_state_support.js":
/*!**************************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_state_support.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ViewStateSupport)\n/* harmony export */ });\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n\n\n/**\n@module ember\n*/\nconst ViewStateSupport = _object_mixin_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n  _transitionTo(state) {\n    let priorState = this._currentState;\n    let currentState = this._currentState = this._states[state];\n    this._state = state;\n    if (priorState && priorState.exit) {\n      priorState.exit(this);\n    }\n    if (currentState.enter) {\n      currentState.enter(this);\n    }\n  }\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_state_support.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_support.js":
/*!********************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_support.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ViewMixin)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n/* harmony import */ var _shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../shared-chunks/index-BGP1rw3B.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BGP1rw3B.js\");\n/* harmony import */ var _system_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../system/utils.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\nfunction K() {\n  return this;\n}\n\n/**\n @class ViewMixin\n @namespace Ember\n @private\n*/\n\nconst ViewMixin = _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].create({\n  /**\n   A list of properties of the view to apply as attributes. If the property\n   is a string value, the value of that string will be applied as the value\n   for an attribute of the property's name.\n    The following example creates a tag like `<div priority=\"high\" />`.\n    ```app/components/my-component.js\n   import Component from '@ember/component';\n    export default Component.extend({\n      attributeBindings: ['priority'],\n      priority: 'high'\n    });\n   ```\n    If the value of the property is a Boolean, the attribute is treated as\n   an HTML Boolean attribute. It will be present if the property is `true`\n   and omitted if the property is `false`.\n    The following example creates markup like `<div visible />`.\n    ```app/components/my-component.js\n   import Component from '@ember/component';\n    export default Component.extend({\n      attributeBindings: ['visible'],\n      visible: true\n    });\n   ```\n    If you would prefer to use a custom value instead of the property name,\n   you can create the same markup as the last example with a binding like\n   this:\n    ```app/components/my-component.js\n   import Component from '@ember/component';\n    export default Component.extend({\n      attributeBindings: ['isVisible:visible'],\n      isVisible: true\n    });\n   ```\n    This list of attributes is inherited from the component's superclasses,\n   as well.\n    @property attributeBindings\n   @type Array\n   @default []\n   @public\n   */\n  concatenatedProperties: ['attributeBindings'],\n  // ..........................................................\n  // TEMPLATE SUPPORT\n  //\n\n  /**\n   Return the nearest ancestor that is an instance of the provided\n   class or mixin.\n    @method nearestOfType\n   @param {Class,Mixin} klass Subclass of Ember.View (or Ember.View itself),\n   or an instance of Mixin.\n   @return Ember.View\n   @deprecated use `yield` and contextual components for composition instead.\n   @private\n   */\n  nearestOfType(klass) {\n    let view = this.parentView;\n    let isOfType = klass instanceof _object_mixin_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"] ? view => klass.detect(view) : view => klass.detect(view.constructor);\n    while (view) {\n      if (isOfType(view)) {\n        return view;\n      }\n      view = view.parentView;\n    }\n    return;\n  },\n  /**\n   Return the nearest ancestor that has a given property.\n    @method nearestWithProperty\n   @param {String} property A property name\n   @return Ember.View\n   @deprecated use `yield` and contextual components for composition instead.\n   @private\n   */\n  nearestWithProperty(property) {\n    let view = this.parentView;\n    while (view) {\n      if (property in view) {\n        return view;\n      }\n      view = view.parentView;\n    }\n  },\n  /**\n   Renders the view again. This will work regardless of whether the\n   view is already in the DOM or not. If the view is in the DOM, the\n   rendering process will be deferred to give bindings a chance\n   to synchronize.\n    If children were added during the rendering process using `appendChild`,\n   `rerender` will remove them, because they will be added again\n   if needed by the next `render`.\n    In general, if the display of your view changes, you should modify\n   the DOM element directly instead of manually calling `rerender`, which can\n   be slow.\n    @method rerender\n   @public\n   */\n  rerender() {\n    return this._currentState.rerender(this);\n  },\n  // ..........................................................\n  // ELEMENT SUPPORT\n  //\n\n  /**\n   Returns the current DOM element for the view.\n     @property element\n    @type DOMElement\n    @public\n  */\n  element: (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.q)({\n    configurable: false,\n    enumerable: false,\n    get() {\n      return this.renderer.getElement(this);\n    }\n  }),\n  /**\n   Appends the view's element to the specified parent element.\n    Note that this method just schedules the view to be appended; the DOM\n   element will not be appended to the given element until all bindings have\n   finished synchronizing.\n    This is not typically a function that you will need to call directly when\n   building your application. If you do need to use `appendTo`, be sure that\n   the target element you are providing is associated with an `Application`\n   and does not have an ancestor element that is associated with an Ember view.\n    @method appendTo\n   @param {String|DOMElement} A selector, element, HTML string\n   @return {Ember.View} receiver\n   @private\n   */\n  appendTo(selector) {\n    let target;\n    if (_shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_9__.h) {\n       true && !(typeof selector === 'string' || selector instanceof Element) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`Expected a selector or instance of Element`, typeof selector === 'string' || selector instanceof Element);\n      target = typeof selector === 'string' ? document.querySelector(selector) : selector;\n       true && !target && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`You tried to append to (${selector}) but that isn't in the DOM`, target);\n       true && !!(0,_system_utils_js__WEBPACK_IMPORTED_MODULE_10__.matches)(target, '.ember-view') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('You cannot append to an existing Ember.View.', !(0,_system_utils_js__WEBPACK_IMPORTED_MODULE_10__.matches)(target, '.ember-view'));\n       true && !(() => {\n        let node = target.parentNode;\n        while (node instanceof Element) {\n          if ((0,_system_utils_js__WEBPACK_IMPORTED_MODULE_10__.matches)(node, '.ember-view')) {\n            return false;\n          }\n          node = node.parentNode;\n        }\n        return true;\n      })() && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('You cannot append to an existing Ember.View.', (() => {\n        let node = target.parentNode;\n        while (node instanceof Element) {\n          if ((0,_system_utils_js__WEBPACK_IMPORTED_MODULE_10__.matches)(node, '.ember-view')) {\n            return false;\n          }\n          node = node.parentNode;\n        }\n        return true;\n      })());\n    } else {\n      target = selector;\n       true && !(typeof target !== 'string') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`You tried to append to a selector string (${selector}) in an environment without a DOM`, typeof target !== 'string');\n       true && !(typeof target.appendChild === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`You tried to append to a non-Element (${selector}) in an environment without a DOM`, typeof target.appendChild === 'function');\n    }\n\n    // SAFETY: SimpleElement is supposed to be a subset of Element so this _should_ be safe.\n    // However, the types are more specific in some places which necessitates the `as`.\n    this.renderer.appendTo(this, target);\n    return this;\n  },\n  /**\n   Appends the view's element to the document body. If the view does\n   not have an HTML representation yet\n   the element will be generated automatically.\n    If your application uses the `rootElement` property, you must append\n   the view within that element. Rendering views outside of the `rootElement`\n   is not supported.\n    Note that this method just schedules the view to be appended; the DOM\n   element will not be appended to the document body until all bindings have\n   finished synchronizing.\n    @method append\n   @return {Ember.View} receiver\n   @private\n   */\n  append() {\n    return this.appendTo(document.body);\n  },\n  /**\n   The HTML `id` of the view's element in the DOM. You can provide this\n   value yourself but it must be unique (just as in HTML):\n    ```handlebars\n   {{my-component elementId=\"a-really-cool-id\"}}\n   ```\n    If not manually set a default value will be provided by the framework.\n    Once rendered an element's `elementId` is considered immutable and you\n   should never change it. If you need to compute a dynamic value for the\n   `elementId`, you should do this when the component or element is being\n   instantiated:\n    ```app/components/my-component.js\n   import Component from '@ember/component';\n    export default Component.extend({\n      init() {\n        this._super(...arguments);\n        let index = this.get('index');\n        this.set('elementId', 'component-id' + index);\n      }\n    });\n   ```\n    @property elementId\n   @type String\n   @public\n   */\n  elementId: null,\n  /**\n   Called when a view is going to insert an element into the DOM.\n    @event willInsertElement\n   @public\n   */\n  willInsertElement: K,\n  /**\n   Called when the element of the view has been inserted into the DOM.\n   Override this function to do any set up that requires an element\n   in the document body.\n    When a view has children, didInsertElement will be called on the\n   child view(s) first and on itself afterwards.\n    @event didInsertElement\n   @public\n   */\n  didInsertElement: K,\n  /**\n   Called when the view is about to rerender, but before anything has\n   been torn down. This is a good opportunity to tear down any manual\n   observers you have installed based on the DOM state\n    @event willClearRender\n   @public\n   */\n  willClearRender: K,\n  /**\n   You must call `destroy` on a view to destroy the view (and all of its\n   child views). This will remove the view from any parent node, then make\n   sure that the DOM element managed by the view can be released by the\n   memory manager.\n    @method destroy\n   @private\n   */\n  destroy() {\n    this._super(...arguments);\n    this._currentState.destroy(this);\n  },\n  /**\n   Called when the element of the view is going to be destroyed. Override\n   this function to do any teardown that requires an element, like removing\n   event listeners.\n    Please note: any property changes made during this event will have no\n   effect on object observers.\n    @event willDestroyElement\n   @public\n   */\n  willDestroyElement: K,\n  /**\n   Called after the element of the view is destroyed.\n    @event willDestroyElement\n   @public\n   */\n  didDestroyElement: K,\n  /**\n   Called when the parentView property has changed.\n    @event parentViewDidChange\n   @private\n   */\n  parentViewDidChange: K,\n  // ..........................................................\n  // STANDARD RENDER PROPERTIES\n  //\n\n  /**\n   Tag name for the view's outer element. The tag name is only used when an\n   element is first created. If you change the `tagName` for an element, you\n   must destroy and recreate the view element.\n    By default, the render buffer will use a `<div>` tag for views.\n    If the tagName is `''`, the view will be tagless, with no outer element.\n   Component properties that depend on the presence of an outer element, such\n   as `classNameBindings` and `attributeBindings`, do not work with tagless\n   components. Tagless components cannot implement methods to handle events,\n   and their `element` property has a `null` value.\n    @property tagName\n   @type String\n   @default null\n   @public\n   */\n\n  // We leave this null by default so we can tell the difference between\n  // the default case and a user-specified tag.\n  tagName: null,\n  // .......................................................\n  // CORE DISPLAY METHODS\n  //\n\n  /**\n   Setup a view, but do not finish waking it up.\n    * configure `childViews`\n   * register the view with the global views hash, which is used for event\n   dispatch\n    @method init\n   @private\n   */\n  init() {\n    this._super(...arguments);\n     true && !((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(this, 'elementId') === undefined) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`You cannot use a computed property for the component's \\`elementId\\` (${this}).`, (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(this, 'elementId') === undefined);\n     true && !((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(this, 'tagName') === undefined) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`You cannot use a computed property for the component's \\`tagName\\` (${this}).`, (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(this, 'tagName') === undefined);\n    if (!this.elementId && this.tagName !== '') {\n      this.elementId = (0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.g)(this);\n    }\n     true && !!this.render && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('Using a custom `.render` function is no longer supported.', !this.render);\n  },\n  // .......................................................\n  // EVENT HANDLING\n  //\n\n  /**\n   Handle events from `EventDispatcher`\n    @method handleEvent\n   @param eventName {String}\n   @param evt {Event}\n   @private\n   */\n  handleEvent(eventName, evt) {\n    return this._currentState.handleEvent(this, eventName, evt);\n  }\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_support.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/action_manager.js":
/*!**********************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/action_manager.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ActionManager)\n/* harmony export */ });\n/**\n@module ember\n*/\n\nfunction ActionManager() {}\n\n/**\n  Global action id hash.\n\n  @private\n  @property registeredActions\n  @type Object\n*/\nActionManager.registeredActions = {};\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/action_manager.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/event_dispatcher.js":
/*!************************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/event_dispatcher.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EventDispatcher)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _owner_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../shared-chunks/property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/utils.js\");\n/* harmony import */ var _component_lookup_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../component_lookup.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/component_lookup.js\");\n/* harmony import */ var _shared_chunks_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../shared-chunks/core_view-Cxne2_wu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/core_view-Cxne2_wu.js\");\n/* harmony import */ var _mixins_class_names_support_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../mixins/class_names_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/class_names_support.js\");\n/* harmony import */ var _mixins_child_views_support_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../mixins/child_views_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/child_views_support.js\");\n/* harmony import */ var _mixins_view_state_support_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../mixins/view_state_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_state_support.js\");\n/* harmony import */ var _mixins_view_support_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../mixins/view_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_support.js\");\n/* harmony import */ var _mixins_action_support_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../mixins/action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/action_support.js\");\n/* harmony import */ var _action_manager_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./action_manager.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/action_manager.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module ember\n*/\n\nconst ROOT_ELEMENT_CLASS = 'ember-application';\nconst ROOT_ELEMENT_SELECTOR = `.${ROOT_ELEMENT_CLASS}`;\n\n/**\n  `Ember.EventDispatcher` handles delegating browser events to their\n  corresponding `Ember.Views.` For example, when you click on a view,\n  `Ember.EventDispatcher` ensures that that view's `mouseDown` method gets\n  called.\n\n  @class EventDispatcher\n  @namespace Ember\n  @private\n  @extends EmberObject\n*/\nclass EventDispatcher extends _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_11__.E {\n  constructor(...args) {\n    super(...args);\n    /**\n      The set of events names (and associated handler function names) to be setup\n      and dispatched by the `EventDispatcher`. Modifications to this list can be done\n      at setup time, generally via the `Application.customEvents` hash.\n       To add new events to be listened to:\n       ```javascript\n      import Application from '@ember/application';\n       let App = Application.create({\n        customEvents: {\n          paste: 'paste'\n        }\n      });\n      ```\n       To prevent default events from being listened to:\n       ```javascript\n      import Application from '@ember/application';\n       let App = Application.create({\n        customEvents: {\n          mouseenter: null,\n          mouseleave: null\n        }\n      });\n      ```\n      @property events\n      @type Object\n      @private\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"events\", {\n      touchstart: 'touchStart',\n      touchmove: 'touchMove',\n      touchend: 'touchEnd',\n      touchcancel: 'touchCancel',\n      keydown: 'keyDown',\n      keyup: 'keyUp',\n      keypress: 'keyPress',\n      mousedown: 'mouseDown',\n      mouseup: 'mouseUp',\n      contextmenu: 'contextMenu',\n      click: 'click',\n      dblclick: 'doubleClick',\n      focusin: 'focusIn',\n      focusout: 'focusOut',\n      submit: 'submit',\n      input: 'input',\n      change: 'change',\n      dragstart: 'dragStart',\n      drag: 'drag',\n      dragenter: 'dragEnter',\n      dragleave: 'dragLeave',\n      dragover: 'dragOver',\n      drop: 'drop',\n      dragend: 'dragEnd'\n    });\n    /**\n      The root DOM element to which event listeners should be attached. Event\n      listeners will be attached to the document unless this is overridden.\n       Can be specified as a DOMElement or a selector string.\n       The default body is a string since this may be evaluated before document.body\n      exists in the DOM.\n       @private\n      @property rootElement\n      @type DOMElement\n      @default 'body'\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"rootElement\", 'body');\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_eventHandlers\", Object.create(null));\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_didSetup\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"finalEventNameMapping\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_sanitizedRootElement\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lazyEvents\", new Map());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_reverseEventNameMapping\", null);\n  }\n  /**\n    Sets up event listeners for standard browser events.\n     This will be called after the browser sends a `DOMContentReady` event. By\n    default, it will set up all of the listeners on the document body. If you\n    would like to register the listeners on a different element, set the event\n    dispatcher's `root` property.\n     @private\n    @method setup\n    @param addedEvents {Object}\n  */\n  setup(addedEvents, _rootElement) {\n     true && !(() => {\n      let owner = (0,_owner_index_js__WEBPACK_IMPORTED_MODULE_1__.getOwner)(this);\n       true && !owner && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('[BUG] Missing owner', owner); // SAFETY: This is not guaranteed to be safe, but this is what we expect to be returned.\n      let environment = owner.lookup('-environment:main');\n      return environment.isInteractive;\n    })() && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('EventDispatcher should never be setup in fastboot mode. Please report this as an Ember bug.', (() => {\n      let owner = (0,_owner_index_js__WEBPACK_IMPORTED_MODULE_1__.getOwner)(this);\n       true && !owner && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('[BUG] Missing owner', owner);\n      let environment = owner.lookup('-environment:main');\n      return environment.isInteractive;\n    })());\n    let events = this.finalEventNameMapping = {\n      ...(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.g)(this, 'events'),\n      ...addedEvents\n    };\n    this._reverseEventNameMapping = Object.keys(events).reduce((result, key) => {\n      let eventName = events[key];\n      return eventName ? {\n        ...result,\n        [eventName]: key\n      } : result;\n    }, {});\n    let lazyEvents = this.lazyEvents;\n    if (_rootElement !== undefined && _rootElement !== null) {\n      (0,_shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_9__.s)(this, 'rootElement', _rootElement);\n    }\n    let specifiedRootElement = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.g)(this, 'rootElement');\n    let rootElement = typeof specifiedRootElement !== 'string' ? specifiedRootElement : document.querySelector(specifiedRootElement);\n     true && !rootElement && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`Could not find rootElement (${specifiedRootElement})`, rootElement);\n     true && !!rootElement.classList.contains(ROOT_ELEMENT_CLASS) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`You cannot use the same root element (${specifiedRootElement}) multiple times in an Ember.Application`, !rootElement.classList.contains(ROOT_ELEMENT_CLASS));\n     true && !(() => {\n      let target = rootElement.parentNode;\n      while (target instanceof Element) {\n        if (target.classList.contains(ROOT_ELEMENT_CLASS)) {\n          return false;\n        }\n        target = target.parentNode;\n      }\n      return true;\n    })() && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('You cannot make a new Ember.Application using a root element that is a descendent of an existing Ember.Application', (() => {\n      let target = rootElement.parentNode;\n      while (target instanceof Element) {\n        if (target.classList.contains(ROOT_ELEMENT_CLASS)) {\n          return false;\n        }\n        target = target.parentNode;\n      }\n      return true;\n    })());\n     true && !!rootElement.querySelector(ROOT_ELEMENT_SELECTOR) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('You cannot make a new Ember.Application using a root element that is an ancestor of an existing Ember.Application', !rootElement.querySelector(ROOT_ELEMENT_SELECTOR));\n    rootElement.classList.add(ROOT_ELEMENT_CLASS);\n     true && !rootElement.classList.contains(ROOT_ELEMENT_CLASS) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`Unable to add '${ROOT_ELEMENT_CLASS}' class to root element (${(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.g)(this, 'rootElement') || rootElement.tagName}). Make sure you set rootElement to the body or an element in the body.`, rootElement.classList.contains(ROOT_ELEMENT_CLASS)); // save off the final sanitized root element (for usage in setupHandler)\n    this._sanitizedRootElement = rootElement;\n\n    // setup event listeners for the non-lazily setup events\n    for (let event in events) {\n      if (Object.prototype.hasOwnProperty.call(events, event)) {\n        lazyEvents.set(event, events[event] ?? null);\n      }\n    }\n    this._didSetup = true;\n  }\n\n  /**\n    Setup event listeners for the given browser event name\n     @private\n    @method setupHandlerForBrowserEvent\n    @param event the name of the event in the browser\n  */\n  setupHandlerForBrowserEvent(event) {\n     true && !this.finalEventNameMapping && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('[BUG] Expected finalEventNameMapping to be set', this.finalEventNameMapping);\n     true && !this._sanitizedRootElement && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('[BUG] Expected _santizedRootElement to be set', this._sanitizedRootElement);\n    this.setupHandler(this._sanitizedRootElement, event, this.finalEventNameMapping[event] ?? null);\n  }\n\n  /**\n    Setup event listeners for the given Ember event name (camel case)\n     @private\n    @method setupHandlerForEmberEvent\n    @param eventName\n  */\n  setupHandlerForEmberEvent(eventName) {\n     true && !this._sanitizedRootElement && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('[BUG] Expected _sanitizedRootElement to be set', this._sanitizedRootElement);\n    let event = this._reverseEventNameMapping?.[eventName];\n    if (event) {\n      this.setupHandler(this._sanitizedRootElement, event, eventName);\n    }\n  }\n\n  /**\n    Registers an event listener on the rootElement. If the given event is\n    triggered, the provided event handler will be triggered on the target view.\n     If the target view does not implement the event handler, or if the handler\n    returns `false`, the parent view will be called. The event will continue to\n    bubble to each successive parent view until it reaches the top.\n     @private\n    @method setupHandler\n    @param {Element} rootElement\n    @param {String} event the name of the event in the browser\n    @param {String} eventName the name of the method to call on the view\n  */\n  setupHandler(rootElement, event, eventName) {\n    if (eventName === null || !this.lazyEvents.has(event)) {\n      return; // nothing to do\n    }\n    let viewHandler = (target, event) => {\n      let view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_12__.getElementView)(target);\n      let result = true;\n      if (view) {\n        // SAFETY: As currently written, this is not safe. Though it seems to always be true.\n        result = view.handleEvent(eventName, event);\n      }\n      return result;\n    };\n    let actionHandler = (target, event) => {\n      let actionId = target.getAttribute('data-ember-action');\n      let actions;\n\n      // In Glimmer2 this attribute is set to an empty string and an additional\n      // attribute it set for each action on a given element. In this case, the\n      // attributes need to be read so that a proper set of action handlers can\n      // be coalesced.\n      if (actionId === '') {\n        actions = [];\n        for (let attr of target.attributes) {\n          let attrName = attr.name;\n          if (attrName.indexOf('data-ember-action-') === 0) {\n            let action = _action_manager_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"].registeredActions[attr.value];\n             true && !action && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('[BUG] Missing action', action);\n            actions.push(action);\n          }\n        }\n      } else if (actionId) {\n        // FIXME: This branch is never called in tests. Improve tests or remove\n        let actionState = _action_manager_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"].registeredActions[actionId];\n        if (actionState) {\n          actions = [actionState];\n        }\n      }\n\n      // We have to check for actions here since in some cases, jQuery will trigger\n      // an event on `removeChild` (i.e. focusout) after we've already torn down the\n      // action handlers for the view.\n      if (!actions) {\n        // FIXME: This branch is never called in tests. Improve tests or remove\n        return;\n      }\n      let result = true;\n      for (let index = 0; index < actions.length; index++) {\n        let action = actions[index];\n        if (action && action.eventName === eventName) {\n          // return false if any of the action handlers returns false\n          result = action.handler(event) && result;\n        }\n      }\n      return result;\n    };\n    let handleEvent = this._eventHandlers[event] = event => {\n      let target = event.target;\n       true && !(target instanceof Element) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`[BUG] Received event without an Element target: ${event.type}, ${target}`, target instanceof Element);\n      do {\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_12__.getElementView)(target)) {\n          if (viewHandler(target, event) === false) {\n            event.preventDefault();\n            event.stopPropagation();\n            break;\n          } else if (event.cancelBubble === true) {\n            break;\n          }\n        } else if (typeof target.hasAttribute === 'function' && target.hasAttribute('data-ember-action')) {\n          if (actionHandler(target, event) === false) {\n            break;\n          }\n        }\n        target = target.parentNode;\n      } while (target instanceof Element);\n    };\n    rootElement.addEventListener(event, handleEvent);\n    this.lazyEvents.delete(event);\n  }\n  destroy() {\n    if (this._didSetup === false) {\n      return;\n    }\n    let rootElement = this._sanitizedRootElement;\n    if (!rootElement) {\n      return;\n    }\n    for (let event in this._eventHandlers) {\n      rootElement.removeEventListener(event, this._eventHandlers[event]);\n    }\n    rootElement.classList.remove(ROOT_ELEMENT_CLASS);\n    return this._super(...arguments);\n  }\n  toString() {\n    return '(EventDispatcher)';\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/event_dispatcher.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/utils.js":
/*!*************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/utils.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addChildView: () => (/* binding */ addChildView),\n/* harmony export */   clearElementView: () => (/* binding */ clearElementView),\n/* harmony export */   clearViewElement: () => (/* binding */ clearViewElement),\n/* harmony export */   collectChildViews: () => (/* binding */ collectChildViews),\n/* harmony export */   constructStyleDeprecationMessage: () => (/* binding */ constructStyleDeprecationMessage),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   elMatches: () => (/* binding */ elMatches),\n/* harmony export */   getChildViews: () => (/* binding */ getChildViews),\n/* harmony export */   getElementView: () => (/* binding */ getElementView),\n/* harmony export */   getRootViews: () => (/* binding */ getRootViews),\n/* harmony export */   getViewBoundingClientRect: () => (/* binding */ getViewBoundingClientRect),\n/* harmony export */   getViewBounds: () => (/* binding */ getViewBounds),\n/* harmony export */   getViewClientRects: () => (/* binding */ getViewClientRects),\n/* harmony export */   getViewElement: () => (/* binding */ getViewElement),\n/* harmony export */   getViewId: () => (/* binding */ getViewId),\n/* harmony export */   getViewRange: () => (/* binding */ getViewRange),\n/* harmony export */   initChildViews: () => (/* binding */ initChildViews),\n/* harmony export */   isSimpleClick: () => (/* binding */ isSimpleClick),\n/* harmony export */   matches: () => (/* binding */ matches),\n/* harmony export */   setElementView: () => (/* binding */ setElementView),\n/* harmony export */   setViewElement: () => (/* binding */ setViewElement)\n/* harmony export */ });\n/* harmony import */ var _owner_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n\n\n\n\n/**\n@module ember\n*/\n\nfunction isSimpleClick(event) {\n  if (!(event instanceof MouseEvent)) {\n    return false;\n  }\n  let modifier = event.shiftKey || event.metaKey || event.altKey || event.ctrlKey;\n  let secondaryClick = event.which > 1; // IE9 may return undefined\n\n  return !modifier && !secondaryClick;\n}\nfunction constructStyleDeprecationMessage(affectedStyle) {\n  return '' + 'Binding style attributes may introduce cross-site scripting vulnerabilities; ' + 'please ensure that values being bound are properly escaped. For more information, ' + 'including how to disable this warning, see ' + 'https://deprecations.emberjs.com/v1.x/#toc_binding-style-attributes. ' + 'Style affected: \"' + affectedStyle + '\"';\n}\n\n/**\n  @private\n  @method getRootViews\n  @param {Object} owner\n*/\nfunction getRootViews(owner) {\n  let registry = owner.lookup('-view-registry:main');\n  let rootViews = [];\n  Object.keys(registry).forEach(id => {\n    let view = registry[id];\n     true && !view && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('expected view', view);\n    if (view.parentView === null) {\n      rootViews.push(view);\n    }\n  });\n  return rootViews;\n}\n\n/**\n  @private\n  @method getViewId\n  @param {Ember.View} view\n */\nfunction getViewId(view) {\n  if (view.tagName !== '' && view.elementId) {\n    return view.elementId;\n  } else {\n    return (0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__.g)(view);\n  }\n}\nconst ELEMENT_VIEW = new WeakMap();\nconst VIEW_ELEMENT = new WeakMap();\nfunction getElementView(element) {\n  return ELEMENT_VIEW.get(element) || null;\n}\n\n/**\n  @private\n  @method getViewElement\n  @param {Ember.View} view\n */\nfunction getViewElement(view) {\n  return VIEW_ELEMENT.get(view) || null;\n}\nfunction setElementView(element, view) {\n  ELEMENT_VIEW.set(element, view);\n}\nfunction setViewElement(view, element) {\n  VIEW_ELEMENT.set(view, element);\n}\n\n// These are not needed for GC, but for correctness. We want to be able to\n// null-out these links while the objects are still live. Specifically, in\n// this case, we want to prevent access to the element (and vice verse) during\n// destruction.\n\nfunction clearElementView(element) {\n  ELEMENT_VIEW.delete(element);\n}\nfunction clearViewElement(view) {\n  VIEW_ELEMENT.delete(view);\n}\nconst CHILD_VIEW_IDS = new WeakMap();\n\n/**\n  @private\n  @method getChildViews\n  @param {Ember.View} view\n*/\nfunction getChildViews(view) {\n  let owner = (0,_owner_index_js__WEBPACK_IMPORTED_MODULE_0__.getOwner)(view);\n   true && !owner && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('View is unexpectedly missing an owner', owner);\n  let registry = owner.lookup('-view-registry:main');\n  return collectChildViews(view, registry);\n}\nfunction initChildViews(view) {\n  let childViews = new Set();\n  CHILD_VIEW_IDS.set(view, childViews);\n  return childViews;\n}\nfunction addChildView(parent, child) {\n  let childViews = CHILD_VIEW_IDS.get(parent);\n  if (childViews === undefined) {\n    childViews = initChildViews(parent);\n  }\n  childViews.add(getViewId(child));\n}\nfunction collectChildViews(view, registry) {\n  let views = [];\n  let childViews = CHILD_VIEW_IDS.get(view);\n  if (childViews !== undefined) {\n    childViews.forEach(id => {\n      let view = registry[id];\n      if (view && !view.isDestroying && !view.isDestroyed) {\n        views.push(view);\n      }\n    });\n  }\n  return views;\n}\n\n/**\n  @private\n  @method getViewBounds\n  @param {Ember.View} view\n*/\nfunction getViewBounds(view) {\n  return view.renderer.getBounds(view);\n}\n\n/**\n  @private\n  @method getViewRange\n  @param {Ember.View} view\n*/\nfunction getViewRange(view) {\n  let bounds = getViewBounds(view);\n  let range = document.createRange();\n  range.setStartBefore(bounds.firstNode);\n  range.setEndAfter(bounds.lastNode);\n  return range;\n}\n\n/**\n  `getViewClientRects` provides information about the position of the border\n  box edges of a view relative to the viewport.\n\n  It is only intended to be used by development tools like the Ember Inspector\n  and may not work on older browsers.\n\n  @private\n  @method getViewClientRects\n  @param {Ember.View} view\n*/\nfunction getViewClientRects(view) {\n  let range = getViewRange(view);\n  return range.getClientRects();\n}\n\n/**\n  `getViewBoundingClientRect` provides information about the position of the\n  bounding border box edges of a view relative to the viewport.\n\n  It is only intended to be used by development tools like the Ember Inspector\n  and may not work on older browsers.\n\n  @private\n  @method getViewBoundingClientRect\n  @param {Ember.View} view\n*/\nfunction getViewBoundingClientRect(view) {\n  let range = getViewRange(view);\n  return range.getBoundingClientRect();\n}\n\n/**\n  Determines if the element matches the specified selector.\n\n  @private\n  @method matches\n  @param {DOMElement} el\n  @param {String} selector\n*/\nconst elMatches = typeof Element !== 'undefined' ? Element.prototype.matches : undefined;\nfunction matches(el, selector) {\n   true && !(elMatches !== undefined) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('cannot call `matches` in fastboot mode', elMatches !== undefined);\n  return elMatches.call(el, selector);\n}\nfunction contains(a, b) {\n  if (a.contains !== undefined) {\n    return a.contains(b);\n  }\n  let current = b.parentNode;\n  while (current && (current = current.parentNode)) {\n    if (current === a) {\n      return true;\n    }\n  }\n  return false;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/utils.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/views/states.js":
/*!*************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/views/states.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ states)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _instrumentation_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../instrumentation/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/instrumentation/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n\n\n\n\nconst DEFAULT = Object.freeze({\n  // appendChild is only legal while rendering the buffer.\n  appendChild() {\n    throw new Error(\"You can't use appendChild outside of the rendering process\");\n  },\n  // Handle events from `Ember.EventDispatcher`\n  handleEvent() {\n    return true; // continue event propagation\n  },\n  rerender() {},\n  destroy() {}\n});\nconst PRE_RENDER = Object.freeze({\n  ...DEFAULT\n});\nconst HAS_ELEMENT = Object.freeze({\n  ...DEFAULT,\n  rerender(view) {\n    view.renderer.rerender();\n  },\n  destroy(view) {\n    view.renderer.remove(view);\n  },\n  // Handle events from `Ember.EventDispatcher`\n  handleEvent(view, eventName, event) {\n    if (view.has(eventName)) {\n      // Handler should be able to re-dispatch events, so we don't\n      // preventDefault or stopPropagation.\n      return (0,_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_2__.flaggedInstrument)(`interaction.${eventName}`, {\n        event,\n        view\n      }, () => {\n        return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.j)(view, view.trigger, eventName, event);\n      });\n    } else {\n      return true; // continue event propagation\n    }\n  }\n});\nconst IN_DOM = Object.freeze({\n  ...HAS_ELEMENT,\n  enter(view) {\n    // Register the view for event handling. This hash is used by\n    // Ember.EventDispatcher to dispatch incoming events.\n    view.renderer.register(view);\n    if (true) {\n      let elementId = view.elementId;\n       true && !_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.t && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('[BUG] Expected teardownMandatorySetter to be set in DEBUG mode', _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.t);\n      (0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.t)(view, 'elementId');\n      Object.defineProperty(view, 'elementId', {\n        configurable: true,\n        enumerable: true,\n        get() {\n          return elementId;\n        },\n        set(value) {\n          if (value !== elementId) {\n            throw new Error(\"Changing a view's elementId after creation is not allowed\");\n          }\n        }\n      });\n    }\n  }\n});\nconst DESTROYING = Object.freeze({\n  ...DEFAULT,\n  appendChild() {\n    throw new Error(\"You can't call appendChild on a view being destroyed\");\n  },\n  rerender() {\n    throw new Error(\"You can't call rerender on a view being destroyed\");\n  }\n});\n\n/*\n  Describe how the specified actions should behave in the various\n  states that a view can exist in. Possible states:\n\n  * preRender: when a view is first instantiated, and after its\n    element was destroyed, it is in the preRender state\n  * hasElement: the DOM representation of the view is created,\n    and is ready to be inserted\n  * inDOM: once a view has been inserted into the DOM it is in\n    the inDOM state. A view spends the vast majority of its\n    existence in this state.\n  * destroyed: once a view has been destroyed (using the destroy\n    method), it is in this state. No further actions can be invoked\n    on a destroyed view.\n*/\nconst states = Object.freeze({\n  preRender: PRE_RENDER,\n  inDOM: IN_DOM,\n  hasElement: HAS_ELEMENT,\n  destroying: DESTROYING\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/views/states.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _loaded: () => (/* reexport safe */ _lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_12__._loaded),\n/* harmony export */   \"default\": () => (/* binding */ Application),\n/* harmony export */   getOwner: () => (/* binding */ getOwner),\n/* harmony export */   onLoad: () => (/* reexport safe */ _lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_12__.onLoad),\n/* harmony export */   runLoadHooks: () => (/* reexport safe */ _lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_12__.runLoadHooks),\n/* harmony export */   setOwner: () => (/* binding */ setOwner)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _owner_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/owner/index.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/dictionary-gc5gpyOG.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/dictionary-gc5gpyOG.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/index-BGP1rw3B.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BGP1rw3B.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./lib/lazy_load.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/lib/lazy_load.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/registry_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/container_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/comparable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/action_handler.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/-proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js\");\n/* harmony import */ var _enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/target_action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js\");\n/* harmony import */ var _internals_runtime_lib_ext_rsvp_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../-internals/runtime/lib/ext/rsvp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js\");\n/* harmony import */ var _internals_owner_index_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../-internals/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n/* harmony import */ var _internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../-internals/views/lib/system/event_dispatcher.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/event_dispatcher.js\");\n/* harmony import */ var _internals_views_lib_component_lookup_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../-internals/views/lib/component_lookup.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/component_lookup.js\");\n/* harmony import */ var _shared_chunks_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../shared-chunks/core_view-Cxne2_wu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/core_view-Cxne2_wu.js\");\n/* harmony import */ var _internals_views_lib_mixins_class_names_support_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../-internals/views/lib/mixins/class_names_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/class_names_support.js\");\n/* harmony import */ var _internals_views_lib_mixins_child_views_support_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../-internals/views/lib/mixins/child_views_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/child_views_support.js\");\n/* harmony import */ var _internals_views_lib_mixins_view_state_support_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../-internals/views/lib/mixins/view_state_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_state_support.js\");\n/* harmony import */ var _internals_views_lib_mixins_view_support_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../-internals/views/lib/mixins/view_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_support.js\");\n/* harmony import */ var _internals_views_lib_mixins_action_support_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../-internals/views/lib/mixins/action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/action_support.js\");\n/* harmony import */ var _internals_views_lib_system_action_manager_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../-internals/views/lib/system/action_manager.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/action_manager.js\");\n/* harmony import */ var _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../../shared-chunks/index-BXPoca1S.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BXPoca1S.js\");\n/* harmony import */ var _routing_hash_location_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../routing/hash-location.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/hash-location.js\");\n/* harmony import */ var _routing_history_location_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../routing/history-location.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/history-location.js\");\n/* harmony import */ var _routing_none_location_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../routing/none-location.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/none-location.js\");\n/* harmony import */ var _route_recognizer_index_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../../route-recognizer/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/route-recognizer/index.js\");\n/* harmony import */ var _shared_chunks_rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../../shared-chunks/rsvp-DaQAFb0W.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/rsvp-DaQAFb0W.js\");\n/* harmony import */ var _shared_chunks_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../../shared-chunks/router-B-Q1aYBn.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/router-B-Q1aYBn.js\");\n/* harmony import */ var _controller_index_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../controller/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/controller/index.js\");\n/* harmony import */ var _routing_lib_cache_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../routing/lib/cache.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/cache.js\");\n/* harmony import */ var _instance_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./instance.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/instance.js\");\n/* harmony import */ var _shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../../shared-chunks/registry-DzfcDwii.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js\");\n/* harmony import */ var _glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../../@glimmer/opcode-compiler/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js\");\n/* harmony import */ var _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../../@glimmer/runtime/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/runtime/index.js\");\n/* harmony import */ var _glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../../@glimmer/reference/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/application\n*/\n\n/**\n * @deprecated Use `import { getOwner } from '@ember/owner';` instead.\n */\nconst getOwner = _owner_index_js__WEBPACK_IMPORTED_MODULE_1__.getOwner;\n\n/**\n * @deprecated Use `import { setOwner } from '@ember/owner';` instead.\n */\nconst setOwner = _internals_owner_index_js__WEBPACK_IMPORTED_MODULE_21__.setOwner;\n\n/**\n  An instance of `Application` is the starting point for every Ember\n  application. It instantiates, initializes and coordinates the\n  objects that make up your app.\n\n  Each Ember app has one and only one `Application` object. Although\n  Ember CLI creates this object implicitly, the `Application` class\n  is defined in the `app/app.js`. You can define a `ready` method on the\n  `Application` class, which will be run by Ember when the application is\n  initialized.\n\n  ```app/app.js\n  export default class App extends Application {\n    ready() {\n      // your code here\n    }\n  }\n  ```\n\n  Because `Application` ultimately inherits from `Ember.Namespace`, any classes\n  you create will have useful string representations when calling `toString()`.\n  See the `Ember.Namespace` documentation for more information.\n\n  While you can think of your `Application` as a container that holds the\n  other classes in your application, there are several other responsibilities\n  going on under-the-hood that you may want to understand. It is also important\n  to understand that an `Application` is different from an `ApplicationInstance`.\n  Refer to the Guides to understand the difference between these.\n\n  ### Event Delegation\n\n  Ember uses a technique called _event delegation_. This allows the framework\n  to set up a global, shared event listener instead of requiring each view to\n  do it manually. For example, instead of each view registering its own\n  `mousedown` listener on its associated element, Ember sets up a `mousedown`\n  listener on the `body`.\n\n  If a `mousedown` event occurs, Ember will look at the target of the event and\n  start walking up the DOM node tree, finding corresponding views and invoking\n  their `mouseDown` method as it goes.\n\n  `Application` has a number of default events that it listens for, as\n  well as a mapping from lowercase events to camel-cased view method names. For\n  example, the `keypress` event causes the `keyPress` method on the view to be\n  called, the `dblclick` event causes `doubleClick` to be called, and so on.\n\n  If there is a bubbling browser event that Ember does not listen for by\n  default, you can specify custom events and their corresponding view method\n  names by setting the application's `customEvents` property:\n\n  ```app/app.js\n  import Application from '@ember/application';\n\n  export default class App extends Application {\n    customEvents = {\n      // add support for the paste event\n      paste: 'paste'\n    }\n  }\n  ```\n\n  To prevent Ember from setting up a listener for a default event,\n  specify the event name with a `null` value in the `customEvents`\n  property:\n\n  ```app/app.js\n  import Application from '@ember/application';\n\n  export default class App extends Application {\n    customEvents = {\n      // prevent listeners for mouseenter/mouseleave events\n      mouseenter: null,\n      mouseleave: null\n    }\n  }\n  ```\n\n  By default, the application sets up these event listeners on the document\n  body. However, in cases where you are embedding an Ember application inside\n  an existing page, you may want it to set up the listeners on an element\n  inside the body.\n\n  For example, if only events inside a DOM element with the ID of `ember-app`\n  should be delegated, set your application's `rootElement` property:\n\n  ```app/app.js\n  import Application from '@ember/application';\n\n  export default class App extends Application {\n    rootElement = '#ember-app'\n  }\n  ```\n\n  The `rootElement` can be either a DOM element or a CSS selector\n  string. Note that *views appended to the DOM outside the root element will\n  not receive events.* If you specify a custom root element, make sure you only\n  append views inside it!\n\n  To learn more about the events Ember components use, see\n\n  [components/handling-events](https://guides.emberjs.com/release/components/handling-events/#toc_event-names).\n\n  ### Initializers\n\n  To add behavior to the Application's boot process, you can define initializers in\n  the `app/initializers` directory, or with `ember generate initializer` using Ember CLI.\n  These files should export a named `initialize` function which will receive the created `application`\n  object as its first argument.\n\n  ```javascript\n  export function initialize(application) {\n    // application.inject('route', 'foo', 'service:foo');\n  }\n  ```\n\n  Application initializers can be used for a variety of reasons including:\n\n  - setting up external libraries\n  - injecting dependencies\n  - setting up event listeners in embedded apps\n  - deferring the boot process using the `deferReadiness` and `advanceReadiness` APIs.\n\n  ### Routing\n\n  In addition to creating your application's router, `Application` is\n  also responsible for telling the router when to start routing. Transitions\n  between routes can be logged with the `LOG_TRANSITIONS` flag, and more\n  detailed intra-transition logging can be logged with\n  the `LOG_TRANSITIONS_INTERNAL` flag:\n\n  ```javascript\n  import Application from '@ember/application';\n\n  let App = Application.create({\n    LOG_TRANSITIONS: true, // basic logging of successful transitions\n    LOG_TRANSITIONS_INTERNAL: true // detailed logging of all routing steps\n  });\n  ```\n\n  By default, the router will begin trying to translate the current URL into\n  application state once the browser emits the `DOMContentReady` event. If you\n  need to defer routing, you can call the application's `deferReadiness()`\n  method. Once routing can begin, call the `advanceReadiness()` method.\n\n  If there is any setup required before routing begins, you can implement a\n  `ready()` method on your app that will be invoked immediately before routing\n  begins.\n\n  @class Application\n  @extends Engine\n  @public\n*/\n\nclass Application extends _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_31__.E {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"Router\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"__deprecatedInstance__\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"__container__\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_bootPromise\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_bootResolver\", null);\n  }\n  /**\n    This creates a registry with the default Ember naming conventions.\n     It also configures the registry:\n     * registered views are created every time they are looked up (they are\n      not singletons)\n    * registered templates are not factories; the registered value is\n      returned directly.\n    * the router receives the application as its `namespace` property\n    * all controllers receive the router as their `target` and `controllers`\n      properties\n    * all controllers receive the application as their `namespace` property\n    * the application view receives the application controller as its\n      `controller` property\n    * the application view receives the application template as its\n      `defaultTemplate` property\n     @method buildRegistry\n    @static\n    @param {Application} namespace the application for which to\n      build the registry\n    @return {Ember.Registry} the built registry\n    @private\n  */\n  static buildRegistry(namespace) {\n    let registry = super.buildRegistry(namespace);\n    commonSetupRegistry(registry);\n    (0,_shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_31__.f)(registry);\n    return registry;\n  }\n  /**\n    The root DOM element of the Application. This can be specified as an\n    element or a [selector string](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors#reference_table_of_selectors).\n     This is the element that will be passed to the Application's,\n    `eventDispatcher`, which sets up the listeners for event delegation. Every\n    view in your application should be a child of the element you specify here.\n     @property rootElement\n    @type DOMElement\n    @default 'body'\n    @public\n  */\n\n  /**\n     @property _document\n    @type Document | null\n    @default 'window.document'\n    @private\n  */\n\n  /**\n    The `Ember.EventDispatcher` responsible for delegating events to this\n    application's views.\n     The event dispatcher is created by the application at initialization time\n    and sets up event listeners on the DOM element described by the\n    application's `rootElement` property.\n     See the documentation for `Ember.EventDispatcher` for more information.\n     @property eventDispatcher\n    @type Ember.EventDispatcher\n    @default null\n    @public\n  */\n\n  /**\n    The DOM events for which the event dispatcher should listen.\n     By default, the application's `Ember.EventDispatcher` listens\n    for a set of standard DOM events, such as `mousedown` and\n    `keyup`, and delegates them to your application's `Ember.View`\n    instances.\n     If you would like additional bubbling events to be delegated to your\n    views, set your `Application`'s `customEvents` property\n    to a hash containing the DOM event name as the key and the\n    corresponding view method name as the value. Setting an event to\n    a value of `null` will prevent a default event listener from being\n    added for that event.\n     To add new events to be listened to:\n     ```app/app.js\n    import Application from '@ember/application';\n     let App = Application.extend({\n      customEvents: {\n        // add support for the paste event\n        paste: 'paste'\n      }\n    });\n    ```\n     To prevent default events from being listened to:\n     ```app/app.js\n    import Application from '@ember/application';\n     let App = Application.extend({\n      customEvents: {\n        // remove support for mouseenter / mouseleave events\n        mouseenter: null,\n        mouseleave: null\n      }\n    });\n    ```\n    @property customEvents\n    @type Object\n    @default null\n    @public\n  */\n\n  /**\n    Whether the application should automatically start routing and render\n    templates to the `rootElement` on DOM ready. While default by true,\n    other environments such as FastBoot or a testing harness can set this\n    property to `false` and control the precise timing and behavior of the boot\n    process.\n     @property autoboot\n    @type Boolean\n    @default true\n    @private\n  */\n\n  /**\n    Whether the application should be configured for the legacy \"globals mode\".\n    Under this mode, the Application object serves as a global namespace for all\n    classes.\n     ```javascript\n    import Application from '@ember/application';\n    import Component from '@ember/component';\n     let App = Application.create({\n      ...\n    });\n     App.Router.reopen({\n      location: 'none'\n    });\n     App.Router.map({\n      ...\n    });\n     App.MyComponent = Component.extend({\n      ...\n    });\n    ```\n     This flag also exposes other internal APIs that assumes the existence of\n    a special \"default instance\", like `App.__container__.lookup(...)`.\n     This option is currently not configurable, its value is derived from\n    the `autoboot` flag – disabling `autoboot` also implies opting-out of\n    globals mode support, although they are ultimately orthogonal concerns.\n     Some of the global modes features are already deprecated in 1.x. The\n    existence of this flag is to untangle the globals mode code paths from\n    the autoboot code paths, so that these legacy features can be reviewed\n    for deprecation/removal separately.\n     Forcing the (autoboot=true, _globalsMode=false) here and running the tests\n    would reveal all the places where we are still relying on these legacy\n    behavior internally (mostly just tests).\n     @property _globalsMode\n    @type Boolean\n    @default true\n    @private\n  */\n\n  /**\n    An array of application instances created by `buildInstance()`. Used\n    internally to ensure that all instances get destroyed.\n     @property _applicationInstances\n    @type Array\n    @private\n  */\n\n  init(properties) {\n    super.init(properties);\n    this.rootElement ??= 'body';\n    this._document ??= null;\n    this.eventDispatcher ??= null;\n    this.customEvents ??= null;\n    this.autoboot ??= true;\n    this._document ??= _shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_5__.h ? window.document : null;\n    this._globalsMode ??= true;\n    if (true) {\n      if (_shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_4__.E.LOG_VERSION) {\n        // we only need to see this once per Application#init\n        _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_4__.E.LOG_VERSION = false;\n        _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.M.logVersions?.();\n      }\n    }\n\n    // Start off the number of deferrals at 1. This will be decremented by\n    // the Application's own `boot` method.\n    this._readinessDeferrals = 1;\n    this._booted = false;\n    this._applicationInstances = new Set();\n    this.autoboot = this._globalsMode = Boolean(this.autoboot);\n    if (this._globalsMode) {\n      this._prepareForGlobalsMode();\n    }\n    if (this.autoboot) {\n      this.waitForDOMReady();\n    }\n  }\n\n  /**\n    Create an ApplicationInstance for this application.\n     @public\n    @method buildInstance\n    @return {ApplicationInstance} the application instance\n  */\n  buildInstance(options = {}) {\n     true && !!this.isDestroyed && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot build new instances of this application since it has already been destroyed', !this.isDestroyed);\n     true && !!this.isDestroying && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot build new instances of this application since it is being destroyed', !this.isDestroying);\n    return _instance_js__WEBPACK_IMPORTED_MODULE_40__[\"default\"].create({\n      ...options,\n      base: this,\n      application: this\n    });\n  }\n\n  /**\n    Start tracking an ApplicationInstance for this application.\n    Used when the ApplicationInstance is created.\n     @private\n    @method _watchInstance\n  */\n  _watchInstance(instance) {\n    this._applicationInstances.add(instance);\n  }\n\n  /**\n    Stop tracking an ApplicationInstance for this application.\n    Used when the ApplicationInstance is about to be destroyed.\n     @private\n    @method _unwatchInstance\n  */\n  _unwatchInstance(instance) {\n    return this._applicationInstances.delete(instance);\n  }\n  /**\n    Enable the legacy globals mode by allowing this application to act\n    as a global namespace. See the docs on the `_globalsMode` property\n    for details.\n     Most of these features are already deprecated in 1.x, so we can\n    stop using them internally and try to remove them.\n     @private\n    @method _prepareForGlobalsMode\n  */\n  _prepareForGlobalsMode() {\n    // Create subclass of Router for this Application instance.\n    // This is to ensure that someone reopening `App.Router` does not\n    // tamper with the default `Router`.\n    this.Router = (this.Router || _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_31__.j).extend();\n    this._buildDeprecatedInstance();\n  }\n  /*\n    Build the deprecated instance for legacy globals mode support.\n    Called when creating and resetting the application.\n     This is orthogonal to autoboot: the deprecated instance needs to\n    be created at Application construction (not boot) time to expose\n    App.__container__. If autoboot sees that this instance exists,\n    it will continue booting it to avoid doing unncessary work (as\n    opposed to building a new instance at boot time), but they are\n    otherwise unrelated.\n     @private\n    @method _buildDeprecatedInstance\n  */\n  _buildDeprecatedInstance() {\n    // Build a default instance\n    let instance = this.buildInstance();\n\n    // Legacy support for App.__container__ and other global methods\n    // on App that rely on a single, default instance.\n    this.__deprecatedInstance__ = instance;\n    this.__container__ = instance.__container__;\n  }\n\n  /**\n    Automatically kick-off the boot process for the application once the\n    DOM has become ready.\n     The initialization itself is scheduled on the actions queue which\n    ensures that code-loading finishes before booting.\n     If you are asynchronously loading code, you should call `deferReadiness()`\n    to defer booting, and then call `advanceReadiness()` once all of your code\n    has finished loading.\n     @private\n    @method waitForDOMReady\n  */\n  waitForDOMReady() {\n    const document = this._document;\n\n    // SAFETY: Casting as Document should be safe since we're just reading a property.\n    // If it's not actually a Document then it will evaluate false which is fine for our\n    // purposes.\n    if (document === null || document.readyState !== 'loading') {\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.s)('actions', this, this.domReady);\n    } else {\n      // Ideally we'd just check `document instanceof Document` but currently some tests pass a fake document.\n       true && !function (d) {\n        return typeof d.removeEventListener === 'function';\n      }(document) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('[BUG] Called waitForDOMReady with an invalid document', function (d) {\n        return typeof d.removeEventListener === 'function';\n      }(document));\n      let callback = () => {\n        document.removeEventListener('DOMContentLoaded', callback);\n        (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.O)(this, this.domReady);\n      };\n      document.addEventListener('DOMContentLoaded', callback);\n    }\n  }\n\n  /**\n    This is the autoboot flow:\n     1. Boot the app by calling `this.boot()`\n    2. Create an instance (or use the `__deprecatedInstance__` in globals mode)\n    3. Boot the instance by calling `instance.boot()`\n    4. Invoke the `App.ready()` callback\n    5. Kick-off routing on the instance\n     Ideally, this is all we would need to do:\n     ```javascript\n    _autoBoot() {\n      this.boot().then(() => {\n        let instance = (this._globalsMode) ? this.__deprecatedInstance__ : this.buildInstance();\n        return instance.boot();\n      }).then((instance) => {\n        App.ready();\n        instance.startRouting();\n      });\n    }\n    ```\n     Unfortunately, we cannot actually write this because we need to participate\n    in the \"synchronous\" boot process. While the code above would work fine on\n    the initial boot (i.e. DOM ready), when `App.reset()` is called, we need to\n    boot a new instance synchronously (see the documentation on `_bootSync()`\n    for details).\n     Because of this restriction, the actual logic of this method is located\n    inside `didBecomeReady()`.\n     @private\n    @method domReady\n  */\n  domReady() {\n    if (this.isDestroying || this.isDestroyed) {\n      return;\n    }\n    this._bootSync();\n\n    // Continues to `didBecomeReady`\n  }\n\n  /**\n    Use this to defer readiness until some condition is true.\n     Example:\n     ```javascript\n    import Application from '@ember/application';\n     let App = Application.create();\n     App.deferReadiness();\n     fetch('/auth-token')\n    .then(response => response.json())\n    .then(data => {\n      App.token = data.token;\n      App.advanceReadiness();\n    });\n    ```\n     This allows you to perform asynchronous setup logic and defer\n    booting your application until the setup has finished.\n     However, if the setup requires a loading UI, it might be better\n    to use the router for this purpose.\n     @method deferReadiness\n    @public\n  */\n  deferReadiness() {\n     true && !(this instanceof Application) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You must call deferReadiness on an instance of Application', this instanceof Application);\n     true && !!this.isDestroyed && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot defer readiness since application has already destroyed', !this.isDestroyed);\n     true && !!this.isDestroying && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot defer readiness since the application is being destroyed', !this.isDestroying);\n     true && !(this._readinessDeferrals > 0) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot defer readiness since the `ready()` hook has already been called', this._readinessDeferrals > 0);\n    this._readinessDeferrals++;\n  }\n\n  /**\n    Call `advanceReadiness` after any asynchronous setup logic has completed.\n    Each call to `deferReadiness` must be matched by a call to `advanceReadiness`\n    or the application will never become ready and routing will not begin.\n     @method advanceReadiness\n    @see {Application#deferReadiness}\n    @public\n  */\n  advanceReadiness() {\n     true && !(this instanceof Application) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You must call advanceReadiness on an instance of Application', this instanceof Application);\n     true && !!this.isDestroyed && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot advance readiness since application has already destroyed', !this.isDestroyed);\n     true && !!this.isDestroying && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot advance readiness since the application is being destroyed', !this.isDestroying);\n     true && !(this._readinessDeferrals > 0) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot advance readiness since the `ready()` hook has already been called', this._readinessDeferrals > 0);\n    this._readinessDeferrals--;\n    if (this._readinessDeferrals === 0) {\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.N)(this, this.didBecomeReady);\n    }\n  }\n  /**\n    Initialize the application and return a promise that resolves with the `Application`\n    object when the boot process is complete.\n     Run any application initializers and run the application load hook. These hooks may\n    choose to defer readiness. For example, an authentication hook might want to defer\n    readiness until the auth token has been retrieved.\n     By default, this method is called automatically on \"DOM ready\"; however, if autoboot\n    is disabled, this is automatically called when the first application instance is\n    created via `visit`.\n     @public\n    @method boot\n    @return {Promise<Application,Error>}\n  */\n  boot() {\n     true && !!this.isDestroyed && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot boot this application since it has already been destroyed', !this.isDestroyed);\n     true && !!this.isDestroying && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot boot this application since it is being destroyed', !this.isDestroying);\n    if (this._bootPromise) {\n      return this._bootPromise;\n    }\n    try {\n      this._bootSync();\n    } catch (_) {\n      // Ignore the error: in the asynchronous boot path, the error is already reflected\n      // in the promise rejection\n    }\n     true && !this._bootPromise && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('has boot promise', this._bootPromise);\n    return this._bootPromise;\n  }\n  /**\n    Unfortunately, a lot of existing code assumes the booting process is\n    \"synchronous\". Specifically, a lot of tests assumes the last call to\n    `app.advanceReadiness()` or `app.reset()` will result in the app being\n    fully-booted when the current runloop completes.\n     We would like new code (like the `visit` API) to stop making this assumption,\n    so we created the asynchronous version above that returns a promise. But until\n    we have migrated all the code, we would have to expose this method for use\n    *internally* in places where we need to boot an app \"synchronously\".\n     @private\n  */\n  _bootSync() {\n    if (this._booted || this.isDestroying || this.isDestroyed) {\n      return;\n    }\n\n    // Even though this returns synchronously, we still need to make sure the\n    // boot promise exists for book-keeping purposes: if anything went wrong in\n    // the boot process, we need to store the error as a rejection on the boot\n    // promise so that a future caller of `boot()` can tell what failed.\n    let defer = this._bootResolver = _shared_chunks_rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_36__.R.defer();\n    this._bootPromise = defer.promise;\n    try {\n      this.runInitializers();\n      (0,_lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_12__.runLoadHooks)('application', this);\n      this.advanceReadiness();\n      // Continues to `didBecomeReady`\n    } catch (error) {\n      // For the asynchronous boot path\n      defer.reject(error);\n\n      // For the synchronous boot path\n      throw error;\n    }\n  }\n\n  /**\n    Reset the application. This is typically used only in tests. It cleans up\n    the application in the following order:\n     1. Deactivate existing routes\n    2. Destroy all objects in the container\n    3. Create a new application container\n    4. Re-route to the existing url\n     Typical Example:\n     ```javascript\n    import Application from '@ember/application';\n    let App;\n     run(function() {\n      App = Application.create();\n    });\n     module('acceptance test', {\n      setup: function() {\n        App.reset();\n      }\n    });\n     test('first test', function() {\n      // App is freshly reset\n    });\n     test('second test', function() {\n      // App is again freshly reset\n    });\n    ```\n     Advanced Example:\n     Occasionally you may want to prevent the app from initializing during\n    setup. This could enable extra configuration, or enable asserting prior\n    to the app becoming ready.\n     ```javascript\n    import Application from '@ember/application';\n    let App;\n     run(function() {\n      App = Application.create();\n    });\n     module('acceptance test', {\n      setup: function() {\n        run(function() {\n          App.reset();\n          App.deferReadiness();\n        });\n      }\n    });\n     test('first test', function() {\n      ok(true, 'something before app is initialized');\n       run(function() {\n        App.advanceReadiness();\n      });\n       ok(true, 'something after app is initialized');\n    });\n    ```\n     @method reset\n    @public\n  */\n  reset() {\n     true && !!this.isDestroyed && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot reset this application since it has already been destroyed', !this.isDestroyed);\n     true && !!this.isDestroying && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot reset this application since it is being destroyed', !this.isDestroying);\n     true && !(this._globalsMode && this.autoboot) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)(`Calling reset() on instances of \\`Application\\` is not\n            supported when globals mode is disabled; call \\`visit()\\` to\n            create new \\`ApplicationInstance\\`s and dispose them\n            via their \\`destroy()\\` method instead.`, this._globalsMode && this.autoboot);\n    let instance = this.__deprecatedInstance__;\n    this._readinessDeferrals = 1;\n    this._bootPromise = null;\n    this._bootResolver = null;\n    this._booted = false;\n    function handleReset() {\n       true && !instance && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('expected instance', instance);\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.O)(instance, 'destroy');\n      this._buildDeprecatedInstance();\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.s)('actions', this, '_bootSync');\n    }\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.j)(this, handleReset);\n  }\n\n  /**\n    @private\n    @method didBecomeReady\n  */\n  didBecomeReady() {\n    if (this.isDestroying || this.isDestroyed) {\n      return;\n    }\n     true && !this._bootResolver && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('expected _bootResolver', this._bootResolver);\n    try {\n      // TODO: Is this still needed for _globalsMode = false?\n\n      // See documentation on `_autoboot()` for details\n      if (this.autoboot) {\n        let instance;\n        if (this._globalsMode) {\n          // If we already have the __deprecatedInstance__ lying around, boot it to\n          // avoid unnecessary work\n          instance = this.__deprecatedInstance__;\n           true && !instance && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('expected instance', instance);\n        } else {\n          // Otherwise, build an instance and boot it. This is currently unreachable,\n          // because we forced _globalsMode to === autoboot; but having this branch\n          // allows us to locally toggle that flag for weeding out legacy globals mode\n          // dependencies independently\n          instance = this.buildInstance();\n        }\n        instance._bootSync();\n\n        // TODO: App.ready() is not called when autoboot is disabled, is this correct?\n        this.ready();\n        instance.startRouting();\n      }\n\n      // For the asynchronous boot path\n      this._bootResolver.resolve(this);\n\n      // For the synchronous boot path\n      this._booted = true;\n    } catch (error) {\n      // For the asynchronous boot path\n      this._bootResolver.reject(error);\n\n      // For the synchronous boot path\n      throw error;\n    }\n  }\n\n  /**\n    Called when the Application has become ready, immediately before routing\n    begins. The call will be delayed until the DOM has become ready.\n     @event ready\n    @public\n  */\n  ready() {\n    return this;\n  }\n\n  // This method must be moved to the application instance object\n  willDestroy() {\n    super.willDestroy();\n    if (_lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_12__._loaded['application'] === this) {\n      _lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_12__._loaded['application'] = undefined;\n    }\n    if (this._applicationInstances.size) {\n      this._applicationInstances.forEach(i => i.destroy());\n      this._applicationInstances.clear();\n    }\n  }\n\n  /**\n    Boot a new instance of `ApplicationInstance` for the current\n    application and navigate it to the given `url`. Returns a `Promise` that\n    resolves with the instance when the initial routing and rendering is\n    complete, or rejects with any error that occurred during the boot process.\n     When `autoboot` is disabled, calling `visit` would first cause the\n    application to boot, which runs the application initializers.\n     This method also takes a hash of boot-time configuration options for\n    customizing the instance's behavior. See the documentation on\n    `ApplicationInstance.BootOptions` for details.\n     `ApplicationInstance.BootOptions` is an interface class that exists\n    purely to document the available options; you do not need to construct it\n    manually. Simply pass a regular JavaScript object containing of the\n    desired options:\n     ```javascript\n    MyApp.visit(\"/\", { location: \"none\", rootElement: \"#container\" });\n    ```\n     ### Supported Scenarios\n     While the `BootOptions` class exposes a large number of knobs, not all\n    combinations of them are valid; certain incompatible combinations might\n    result in unexpected behavior.\n     For example, booting the instance in the full browser environment\n    while specifying a foreign `document` object (e.g. `{ isBrowser: true,\n    document: iframe.contentDocument }`) does not work correctly today,\n    largely due to Ember's jQuery dependency.\n     Currently, there are three officially supported scenarios/configurations.\n    Usages outside of these scenarios are not guaranteed to work, but please\n    feel free to file bug reports documenting your experience and any issues\n    you encountered to help expand support.\n     #### Browser Applications (Manual Boot)\n     The setup is largely similar to how Ember works out-of-the-box. Normally,\n    Ember will boot a default instance for your Application on \"DOM ready\".\n    However, you can customize this behavior by disabling `autoboot`.\n     For example, this allows you to render a miniture demo of your application\n    into a specific area on your marketing website:\n     ```javascript\n    import MyApp from 'my-app';\n     $(function() {\n      let App = MyApp.create({ autoboot: false });\n       let options = {\n        // Override the router's location adapter to prevent it from updating\n        // the URL in the address bar\n        location: 'none',\n         // Override the default `rootElement` on the app to render into a\n        // specific `div` on the page\n        rootElement: '#demo'\n      };\n       // Start the app at the special demo URL\n      App.visit('/demo', options);\n    });\n    ```\n     Or perhaps you might want to boot two instances of your app on the same\n    page for a split-screen multiplayer experience:\n     ```javascript\n    import MyApp from 'my-app';\n     $(function() {\n      let App = MyApp.create({ autoboot: false });\n       let sessionId = MyApp.generateSessionID();\n       let player1 = App.visit(`/matches/join?name=Player+1&session=${sessionId}`, { rootElement: '#left', location: 'none' });\n      let player2 = App.visit(`/matches/join?name=Player+2&session=${sessionId}`, { rootElement: '#right', location: 'none' });\n       Promise.all([player1, player2]).then(() => {\n        // Both apps have completed the initial render\n        $('#loading').fadeOut();\n      });\n    });\n    ```\n     Do note that each app instance maintains their own registry/container, so\n    they will run in complete isolation by default.\n     #### Server-Side Rendering (also known as FastBoot)\n     This setup allows you to run your Ember app in a server environment using\n    Node.js and render its content into static HTML for SEO purposes.\n     ```javascript\n    const HTMLSerializer = new SimpleDOM.HTMLSerializer(SimpleDOM.voidMap);\n     function renderURL(url) {\n      let dom = new SimpleDOM.Document();\n      let rootElement = dom.body;\n      let options = { isBrowser: false, document: dom, rootElement: rootElement };\n       return MyApp.visit(options).then(instance => {\n        try {\n          return HTMLSerializer.serialize(rootElement.firstChild);\n        } finally {\n          instance.destroy();\n        }\n      });\n    }\n    ```\n     In this scenario, because Ember does not have access to a global `document`\n    object in the Node.js environment, you must provide one explicitly. In practice,\n    in the non-browser environment, the stand-in `document` object only needs to\n    implement a limited subset of the full DOM API. The `SimpleDOM` library is known\n    to work.\n     Since there is no DOM access in the non-browser environment, you must also\n    specify a DOM `Element` object in the same `document` for the `rootElement` option\n    (as opposed to a selector string like `\"body\"`).\n     See the documentation on the `isBrowser`, `document` and `rootElement` properties\n    on `ApplicationInstance.BootOptions` for details.\n     #### Server-Side Resource Discovery\n     This setup allows you to run the routing layer of your Ember app in a server\n    environment using Node.js and completely disable rendering. This allows you\n    to simulate and discover the resources (i.e. AJAX requests) needed to fulfill\n    a given request and eagerly \"push\" these resources to the client.\n     ```app/initializers/network-service.js\n    import BrowserNetworkService from 'app/services/network/browser';\n    import NodeNetworkService from 'app/services/network/node';\n     // Inject a (hypothetical) service for abstracting all AJAX calls and use\n    // the appropriate implementation on the client/server. This also allows the\n    // server to log all the AJAX calls made during a particular request and use\n    // that for resource-discovery purpose.\n     export function initialize(application) {\n      if (window) { // browser\n        application.register('service:network', BrowserNetworkService);\n      } else { // node\n        application.register('service:network', NodeNetworkService);\n      }\n    };\n     export default {\n      name: 'network-service',\n      initialize: initialize\n    };\n    ```\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n    import { service } from '@ember/service';\n     // An example of how the (hypothetical) service is used in routes.\n     export default class IndexRoute extends Route {\n      @service network;\n       model(params) {\n        return this.network.fetch(`/api/posts/${params.post_id}.json`);\n      }\n       afterModel(post) {\n        if (post.isExternalContent) {\n          return this.network.fetch(`/api/external/?url=${post.externalURL}`);\n        } else {\n          return post;\n        }\n      }\n    }\n    ```\n     ```javascript\n    // Finally, put all the pieces together\n     function discoverResourcesFor(url) {\n      return MyApp.visit(url, { isBrowser: false, shouldRender: false }).then(instance => {\n        let networkService = instance.lookup('service:network');\n        return networkService.requests; // => { \"/api/posts/123.json\": \"...\" }\n      });\n    }\n    ```\n     @public\n    @method visit\n    @param url {String} The initial URL to navigate to\n    @param options {ApplicationInstance.BootOptions}\n    @return {Promise<ApplicationInstance, Error>}\n  */\n  visit(url, options) {\n     true && !!this.isDestroyed && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot visit this application since it has already been destroyed', !this.isDestroyed);\n     true && !!this.isDestroying && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('You cannot visit this application since it is being destroyed', !this.isDestroying);\n    return this.boot().then(() => {\n      let instance = this.buildInstance();\n      return instance.boot(options).then(() => instance.visit(url)).catch(error => {\n        (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.O)(instance, 'destroy');\n        throw error;\n      });\n    });\n  }\n}\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Application, \"initializer\", (0,_shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_31__.g)('initializers', 'initializer'));\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Application, \"instanceInitializer\", (0,_shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_31__.g)('instanceInitializers', 'instance initializer'));\nfunction commonSetupRegistry(registry) {\n  registry.register('router:main', _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_31__.j);\n  registry.register('-view-registry:main', {\n    create() {\n      return (0,_shared_chunks_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_3__.m)(null);\n    }\n  });\n  registry.register('route:basic', _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_31__.k);\n  registry.register('event_dispatcher:main', _internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_22__[\"default\"]);\n  registry.register('location:hash', _routing_hash_location_js__WEBPACK_IMPORTED_MODULE_32__[\"default\"]);\n  registry.register('location:history', _routing_history_location_js__WEBPACK_IMPORTED_MODULE_33__[\"default\"]);\n  registry.register('location:none', _routing_none_location_js__WEBPACK_IMPORTED_MODULE_34__[\"default\"]);\n  registry.register((0,_shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_41__.p)`-bucket-cache:main`, {\n    create() {\n      return new _routing_lib_cache_js__WEBPACK_IMPORTED_MODULE_39__[\"default\"]();\n    }\n  });\n  registry.register('service:router', _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_31__.l);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/instance.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/instance.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ApplicationInstance)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/index-BGP1rw3B.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BGP1rw3B.js\");\n/* harmony import */ var _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/index-BXPoca1S.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BXPoca1S.js\");\n/* harmony import */ var _glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../@glimmer/opcode-compiler/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js\");\n/* harmony import */ var _shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/registry-DzfcDwii.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../@glimmer/runtime/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/runtime/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../@glimmer/reference/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../-internals/views/lib/system/event_dispatcher.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/event_dispatcher.js\");\n/* harmony import */ var _internals_views_lib_component_lookup_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../-internals/views/lib/component_lookup.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/component_lookup.js\");\n/* harmony import */ var _shared_chunks_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../shared-chunks/core_view-Cxne2_wu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/core_view-Cxne2_wu.js\");\n/* harmony import */ var _internals_views_lib_mixins_class_names_support_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../-internals/views/lib/mixins/class_names_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/class_names_support.js\");\n/* harmony import */ var _internals_views_lib_mixins_child_views_support_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../-internals/views/lib/mixins/child_views_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/child_views_support.js\");\n/* harmony import */ var _internals_views_lib_mixins_view_state_support_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../-internals/views/lib/mixins/view_state_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_state_support.js\");\n/* harmony import */ var _internals_views_lib_mixins_view_support_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../-internals/views/lib/mixins/view_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_support.js\");\n/* harmony import */ var _internals_views_lib_mixins_action_support_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../-internals/views/lib/mixins/action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/action_support.js\");\n/* harmony import */ var _internals_views_lib_system_action_manager_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../-internals/views/lib/system/action_manager.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/action_manager.js\");\n/* harmony import */ var _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../shared-chunks/property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/application\n*/\n\n/**\n  The `ApplicationInstance` encapsulates all of the stateful aspects of a\n  running `Application`.\n\n  At a high-level, we break application boot into two distinct phases:\n\n  * Definition time, where all of the classes, templates, and other\n    dependencies are loaded (typically in the browser).\n  * Run time, where we begin executing the application once everything\n    has loaded.\n\n  Definition time can be expensive and only needs to happen once since it is\n  an idempotent operation. For example, between test runs and FastBoot\n  requests, the application stays the same. It is only the state that we want\n  to reset.\n\n  That state is what the `ApplicationInstance` manages: it is responsible for\n  creating the container that contains all application state, and disposing of\n  it once the particular test run or FastBoot request has finished.\n\n  @public\n  @class ApplicationInstance\n  @extends EngineInstance\n*/\n\nclass ApplicationInstance extends _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_3__.m {\n  constructor(...args) {\n    super(...args);\n    /**\n      The `Application` for which this is an instance.\n       @property {Application} application\n      @private\n    */\n    /**\n      The root DOM element of the Application as an element or a\n      CSS selector.\n       @private\n      @property {String|DOMElement} rootElement\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"rootElement\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_router\", void 0);\n  }\n  init(properties) {\n    super.init(properties);\n    this.application._watchInstance(this);\n\n    // Register this instance in the per-instance registry.\n    //\n    // Why do we need to register the instance in the first place?\n    // Because we need a good way for the root route (a.k.a ApplicationRoute)\n    // to notify us when it has created the root-most view. That view is then\n    // appended to the rootElement, in the case of apps, to the fixture harness\n    // in tests, or rendered to a string in the case of FastBoot.\n    this.register('-application-instance:main', this, {\n      instantiate: false\n    });\n  }\n\n  /**\n    Overrides the base `EngineInstance._bootSync` method with concerns relevant\n    to booting application (instead of engine) instances.\n     This method should only contain synchronous boot concerns. Asynchronous\n    boot concerns should eventually be moved to the `boot` method, which\n    returns a promise.\n     Until all boot code has been made asynchronous, we need to continue to\n    expose this method for use *internally* in places where we need to boot an\n    instance synchronously.\n     @private\n  */\n  _bootSync(options) {\n    if (this._booted) {\n      return this;\n    }\n    options = new _BootOptions(options);\n    this.setupRegistry(options);\n    if (options.rootElement) {\n      this.rootElement = options.rootElement;\n    } else {\n      this.rootElement = this.application.rootElement;\n    }\n    if (options.location) {\n      (0,_shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_22__.s)(this.router, 'location', options.location);\n    }\n    this.application.runInstanceInitializers(this);\n    if (options.isInteractive) {\n      this.setupEventDispatcher();\n    }\n    this._booted = true;\n    return this;\n  }\n  setupRegistry(options) {\n    this.constructor.setupRegistry(this.__registry__, options);\n  }\n  get router() {\n    if (!this._router) {\n      let router = this.lookup('router:main');\n       true && !(router instanceof _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_3__.j) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('expected an instance of Router', router instanceof _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_3__.j);\n      this._router = router;\n    }\n    return this._router;\n  }\n\n  /**\n    This hook is called by the root-most Route (a.k.a. the ApplicationRoute)\n    when it has finished creating the root View. By default, we simply take the\n    view and append it to the `rootElement` specified on the Application.\n     In cases like FastBoot and testing, we can override this hook and implement\n    custom behavior, such as serializing to a string and sending over an HTTP\n    socket rather than appending to DOM.\n     @param view {Ember.View} the root-most view\n    @deprecated\n    @private\n  */\n  didCreateRootView(view) {\n    view.appendTo(this.rootElement);\n  }\n\n  /**\n    Tells the router to start routing. The router will ask the location for the\n    current URL of the page to determine the initial URL to start routing to.\n    To start the app at a specific URL, call `handleURL` instead.\n     @private\n  */\n  startRouting() {\n    this.router.startRouting();\n  }\n\n  /**\n    Sets up the router, initializing the child router and configuring the\n    location before routing begins.\n     Because setup should only occur once, multiple calls to `setupRouter`\n    beyond the first call have no effect.\n     This is commonly used in order to confirm things that rely on the router\n    are functioning properly from tests that are primarily rendering related.\n     For example, from within [ember-qunit](https://github.com/emberjs/ember-qunit)'s\n    `setupRenderingTest` calling `this.owner.setupRouter()` would allow that\n    rendering test to confirm that any `<LinkTo></LinkTo>`'s that are rendered\n    have the correct URL.\n     @public\n  */\n  setupRouter() {\n    this.router.setupRouter();\n  }\n\n  /**\n    Directs the router to route to a particular URL. This is useful in tests,\n    for example, to tell the app to start at a particular URL.\n     @param url {String} the URL the router should route to\n    @private\n  */\n  handleURL(url) {\n    this.setupRouter();\n    return this.router.handleURL(url);\n  }\n\n  /**\n    @private\n  */\n  setupEventDispatcher() {\n    let dispatcher = this.lookup('event_dispatcher:main');\n     true && !(dispatcher instanceof _internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('expected EventDispatcher', dispatcher instanceof _internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]);\n    let applicationCustomEvents = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_8__.g)(this.application, 'customEvents');\n    let instanceCustomEvents = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_8__.g)(this, 'customEvents');\n    let customEvents = Object.assign({}, applicationCustomEvents, instanceCustomEvents);\n     true && !(this.rootElement === null || typeof this.rootElement === 'string' || this.rootElement instanceof Element) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('[BUG] Tried to set up dispatcher with an invalid root element', this.rootElement === null || typeof this.rootElement === 'string' || this.rootElement instanceof Element);\n    dispatcher.setup(customEvents, this.rootElement);\n    return dispatcher;\n  }\n\n  /**\n    Returns the current URL of the app instance. This is useful when your\n    app does not update the browsers URL bar (i.e. it uses the `'none'`\n    location adapter).\n     @public\n    @return {String} the current URL\n  */\n  getURL() {\n    return this.router.url;\n  }\n\n  // `instance.visit(url)` should eventually replace `instance.handleURL()`;\n  // the test helpers can probably be switched to use this implementation too\n\n  /**\n    Navigate the instance to a particular URL. This is useful in tests, for\n    example, or to tell the app to start at a particular URL. This method\n    returns a promise that resolves with the app instance when the transition\n    is complete, or rejects if the transition was aborted due to an error.\n     @public\n    @param url {String} the destination URL\n    @return {Promise<ApplicationInstance>}\n  */\n  visit(url) {\n    this.setupRouter();\n    let bootOptions = this.__container__.lookup('-environment:main');\n    let router = this.router;\n    let handleTransitionResolve = () => {\n      if (!bootOptions.options.shouldRender) {\n        // No rendering is needed, and routing has completed, simply return.\n        return this;\n      } else {\n        // Ensure that the visit promise resolves when all rendering has completed\n        return (0,_shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_3__.r)().then(() => this);\n      }\n    };\n    let handleTransitionReject = error => {\n      if (error.error && error.error instanceof Error) {\n        throw error.error;\n      } else if (error.name === 'TransitionAborted' && router._routerMicrolib.activeTransition) {\n        return router._routerMicrolib.activeTransition.then(handleTransitionResolve, handleTransitionReject);\n      } else if (error.name === 'TransitionAborted') {\n        throw new Error(error.message);\n      } else {\n        throw error;\n      }\n    };\n    let location = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_8__.g)(router, 'location');\n     true && !(typeof location !== 'string') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__.a)('location has been initialized', typeof location !== 'string'); // Keeps the location adapter's internal URL in-sync\n    location.setURL(url);\n\n    // getURL returns the set url with the rootURL stripped off\n    return router.handleURL(location.getURL()).then(handleTransitionResolve, handleTransitionReject);\n  }\n  willDestroy() {\n    super.willDestroy();\n    this.application._unwatchInstance(this);\n  }\n\n  /**\n   @private\n   @method setupRegistry\n   @param {Registry} registry\n   @param {BootOptions} options\n  */\n  static setupRegistry(registry, options = {}) {\n    let coptions = options instanceof _BootOptions ? options : new _BootOptions(options);\n    registry.register('-environment:main', coptions.toEnvironment(), {\n      instantiate: false\n    });\n    registry.register('service:-document', coptions.document, {\n      instantiate: false\n    });\n    super.setupRegistry(registry, coptions);\n  }\n}\n\n/**\n  A list of boot-time configuration options for customizing the behavior of\n  an `ApplicationInstance`.\n\n  This is an interface class that exists purely to document the available\n  options; you do not need to construct it manually. Simply pass a regular\n  JavaScript object containing the desired options into methods that require\n  one of these options object:\n\n  ```javascript\n  MyApp.visit(\"/\", { location: \"none\", rootElement: \"#container\" });\n  ```\n\n  Not all combinations of the supported options are valid. See the documentation\n  on `Application#visit` for the supported configurations.\n\n  Internal, experimental or otherwise unstable flags are marked as private.\n\n  @class BootOptions\n  @namespace ApplicationInstance\n  @public\n*/\nclass _BootOptions {\n  constructor(options = {}) {\n    /**\n      Interactive mode: whether we need to set up event delegation and invoke\n      lifecycle callbacks on Components.\n       @property isInteractive\n      @type boolean\n      @default auto-detected\n      @private\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isInteractive\", void 0);\n    /**\n      @property _renderMode\n      @type string\n      @default undefined\n      @private\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_renderMode\", void 0);\n    /**\n      Run in a full browser environment.\n       When this flag is set to `false`, it will disable most browser-specific\n      and interactive features. Specifically:\n       * It does not use `jQuery` to append the root view; the `rootElement`\n        (either specified as a subsequent option or on the application itself)\n        must already be an `Element` in the given `document` (as opposed to a\n        string selector).\n       * It does not set up an `EventDispatcher`.\n       * It does not run any `Component` lifecycle hooks (such as `didInsertElement`).\n       * It sets the `location` option to `\"none\"`. (If you would like to use\n        the location adapter specified in the app's router instead, you can also\n        specify `{ location: null }` to specifically opt-out.)\n       @property isBrowser\n      @type boolean\n      @default auto-detected\n      @public\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isBrowser\", void 0);\n    /**\n      If present, overrides the router's `location` property with this\n      value. This is useful for environments where trying to modify the\n      URL would be inappropriate.\n       @property location\n      @type string\n      @default null\n      @public\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"location\", null);\n    /**\n      Disable rendering completely.\n       When this flag is set to `false`, it will disable the entire rendering\n      pipeline. Essentially, this puts the app into \"routing-only\" mode. No\n      templates will be rendered, and no Components will be created.\n       @property shouldRender\n      @type boolean\n      @default true\n      @public\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"shouldRender\", void 0);\n    /**\n      If present, render into the given `Document` object instead of the\n      global `window.document` object.\n       In practice, this is only useful in non-browser environment or in\n      non-interactive mode, because Ember's `jQuery` dependency is\n      implicitly bound to the current document, causing event delegation\n      to not work properly when the app is rendered into a foreign\n      document object (such as an iframe's `contentDocument`).\n       In non-browser mode, this could be a \"`Document`-like\" object as\n      Ember only interact with a small subset of the DOM API in non-\n      interactive mode. While the exact requirements have not yet been\n      formalized, the `SimpleDOM` library's implementation is known to\n      work.\n       @property document\n      @type Document\n      @default the global `document` object\n      @public\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"document\", void 0);\n    /**\n      If present, overrides the application's `rootElement` property on\n      the instance. This is useful for testing environment, where you\n      might want to append the root view to a fixture area.\n       In non-browser mode, because Ember does not have access to jQuery,\n      this options must be specified as a DOM `Element` object instead of\n      a selector string.\n       See the documentation on `Application`'s `rootElement` for\n      details.\n       @property rootElement\n      @type String|Element\n      @default null\n      @public\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"rootElement\", void 0);\n    this.isInteractive = Boolean(_shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_2__.h); // This default is overridable below\n    this._renderMode = options._renderMode;\n    if (options.isBrowser !== undefined) {\n      this.isBrowser = Boolean(options.isBrowser);\n    } else {\n      this.isBrowser = Boolean(_shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_2__.h);\n    }\n    if (!this.isBrowser) {\n      this.isInteractive = false;\n      this.location = 'none';\n    }\n    if (options.shouldRender !== undefined) {\n      this.shouldRender = Boolean(options.shouldRender);\n    } else {\n      this.shouldRender = true;\n    }\n    if (!this.shouldRender) {\n      this.isInteractive = false;\n    }\n    if (options.document) {\n      this.document = options.document;\n    } else {\n      this.document = typeof document !== 'undefined' ? document : null;\n    }\n    if (options.rootElement) {\n      this.rootElement = options.rootElement;\n    }\n\n    // Set these options last to give the user a chance to override the\n    // defaults from the \"combo\" options like `isBrowser` (although in\n    // practice, the resulting combination is probably invalid)\n\n    if (options.location !== undefined) {\n      this.location = options.location;\n    }\n    if (options.isInteractive !== undefined) {\n      this.isInteractive = Boolean(options.isInteractive);\n    }\n  }\n  toEnvironment() {\n    // Do we really want to assign all of this!?\n    return {\n      ..._shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_2__.e,\n      // For compatibility with existing code\n      hasDOM: this.isBrowser,\n      isInteractive: this.isInteractive,\n      _renderMode: this._renderMode,\n      options: this\n    };\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/instance.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/lib/lazy_load.js":
/*!*****************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/lib/lazy_load.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _loaded: () => (/* binding */ _loaded),\n/* harmony export */   onLoad: () => (/* binding */ onLoad),\n/* harmony export */   runLoadHooks: () => (/* binding */ runLoadHooks)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared-chunks/index-BGP1rw3B.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BGP1rw3B.js\");\n\n\n\n/*globals CustomEvent */\n\n/**\n  @module @ember/application\n*/\n\nconst loadHooks = _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.E.EMBER_LOAD_HOOKS || {};\nconst loaded = {};\nlet _loaded = loaded;\n\n/**\n  Detects when a specific package of Ember (e.g. 'Application')\n  has fully loaded and is available for extension.\n\n  The provided `callback` will be called with the `name` passed\n  resolved from a string into the object:\n\n  ``` javascript\n  import { onLoad } from '@ember/application';\n\n  onLoad('Ember.Application' function(hbars) {\n    hbars.registerHelper(...);\n  });\n  ```\n\n  @method onLoad\n  @static\n  @for @ember/application\n  @param name {String} name of hook\n  @param callback {Function} callback to be called\n  @private\n*/\nfunction onLoad(name, callback) {\n  let object = loaded[name];\n  let hooks = loadHooks[name] ??= [];\n  hooks.push(callback);\n  if (object) {\n    callback(object);\n  }\n}\n\n/**\n  Called when an Ember.js package (e.g Application) has finished\n  loading. Triggers any callbacks registered for this event.\n\n  @method runLoadHooks\n  @static\n  @for @ember/application\n  @param name {String} name of hook\n  @param object {Object} object to pass to callbacks\n  @private\n*/\nfunction runLoadHooks(name, object) {\n  loaded[name] = object;\n  if (_shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_1__.w && typeof CustomEvent === 'function') {\n    let event = new CustomEvent(name, {\n      detail: object\n    });\n    _shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_1__.w.dispatchEvent(event);\n  }\n  loadHooks[name]?.forEach(callback => callback(object));\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/lib/lazy_load.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/namespace.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/namespace.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Namespace)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_name_z9D9Yibn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/name-z9D9Yibn.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/name-z9D9Yibn.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../shared-chunks/namespace_search-CBgHTkDh.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/namespace_search-CBgHTkDh.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/application/namespace\n*/\n\nclass Namespace extends _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.E {\n  init(properties) {\n    super.init(properties);\n    (0,_shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__.b)(this);\n  }\n  toString() {\n    let existing_name = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.g)(this, 'name') || (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.g)(this, 'modulePrefix');\n    if (existing_name) {\n       true && !(typeof existing_name === 'string') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__.a)(\"name wasn't a string\", typeof existing_name === 'string');\n      return existing_name;\n    }\n    (0,_shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__.c)();\n    let name = (0,_shared_chunks_name_z9D9Yibn_js__WEBPACK_IMPORTED_MODULE_3__.g)(this);\n    if (name === undefined) {\n      name = (0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__.g)(this);\n      (0,_shared_chunks_name_z9D9Yibn_js__WEBPACK_IMPORTED_MODULE_3__.s)(this, name);\n    }\n    return name;\n  }\n  nameClasses() {\n    (0,_shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__.d)(this);\n  }\n  destroy() {\n    (0,_shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__.r)(this);\n    return super.destroy();\n  }\n}\n\n// Declare on the prototype to have a single shared value.\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Namespace, \"NAMESPACES\", _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__.N);\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Namespace, \"NAMESPACES_BY_ID\", _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__.a);\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Namespace, \"processAll\", _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__.p);\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Namespace, \"byName\", _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__.f);\nNamespace.prototype.isNamespace = true;\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/namespace.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/-internals.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/-internals.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isEmberArray: () => (/* binding */ isEmberArray),\n/* harmony export */   setEmberArray: () => (/* binding */ setEmberArray)\n/* harmony export */ });\nconst EMBER_ARRAYS = new WeakSet();\nfunction setEmberArray(obj) {\n  EMBER_ARRAYS.add(obj);\n}\nfunction isEmberArray(obj) {\n  return EMBER_ARRAYS.has(obj);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/-internals.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/index.js":
/*!***************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.A),\n/* harmony export */   MutableArray: () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.M),\n/* harmony export */   NativeArray: () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.N),\n/* harmony export */   \"default\": () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.a),\n/* harmony export */   isArray: () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.i),\n/* harmony export */   makeArray: () => (/* reexport safe */ _lib_make_array_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]),\n/* harmony export */   removeAt: () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.r),\n/* harmony export */   uniqBy: () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.u)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n/* harmony import */ var _enumerable_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../enumerable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/index.js\");\n/* harmony import */ var _enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _internals_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/-internals.js\");\n/* harmony import */ var _lib_make_array_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./lib/make-array.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/lib/make-array.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/lib/make-array.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/lib/make-array.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ makeArray)\n/* harmony export */ });\nconst {\n  isArray\n} = Array;\n/**\n @module @ember/array\n*/\n/**\n Forces the passed object to be part of an array. If the object is already\n an array, it will return the object. Otherwise, it will add the object to\n an array. If object is `null` or `undefined`, it will return an empty array.\n\n ```javascript\n import { makeArray } from '@ember/array';\n import ArrayProxy from '@ember/array/proxy';\n\n makeArray();            // []\n makeArray(null);        // []\n makeArray(undefined);   // []\n makeArray('lindsay');   // ['lindsay']\n makeArray([1, 2, 42]);  // [1, 2, 42]\n\n let proxy = ArrayProxy.create({ content: [] });\n\n makeArray(proxy) === proxy;  // false\n ```\n\n @method makeArray\n @static\n @for @ember/array\n @param {Object} obj the object\n @return {Array}\n @private\n */\n\nfunction makeArray(obj) {\n  if (obj === null || obj === undefined) {\n    return [];\n  }\n  return isArray(obj) ? obj : [obj];\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/lib/make-array.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/proxy.js":
/*!***************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/proxy.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ArrayProxy)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _shared_chunks_alias_By_2yu5c_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/alias-By_2yu5c.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/alias-By_2yu5c.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/array/proxy\n*/\n\nfunction isMutable(obj) {\n  return Array.isArray(obj) || typeof obj.replace === 'function';\n}\nconst ARRAY_OBSERVER_MAPPING = {\n  willChange: '_arrangedContentArrayWillChange',\n  didChange: '_arrangedContentArrayDidChange'\n};\nfunction customTagForArrayProxy(proxy, key) {\n   true && !(proxy instanceof ArrayProxy) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] Expected a proxy', proxy instanceof ArrayProxy);\n  if (key === '[]') {\n    proxy._revalidate();\n    return proxy._arrTag;\n  } else if (key === 'length') {\n    proxy._revalidate();\n    return proxy._lengthTag;\n  }\n  return (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(proxy, key);\n}\n\n/**\n  An ArrayProxy wraps any other object that implements `Array` and/or\n  `MutableArray,` forwarding all requests. This makes it very useful for\n  a number of binding use cases or other cases where being able to swap\n  out the underlying array is useful.\n\n  A simple example of usage:\n\n  ```javascript\n  import { A } from '@ember/array';\n  import ArrayProxy from '@ember/array/proxy';\n\n  let pets = ['dog', 'cat', 'fish'];\n  let ap = ArrayProxy.create({ content: A(pets) });\n\n  ap.get('firstObject');                        // 'dog'\n  ap.set('content', ['amoeba', 'paramecium']);\n  ap.get('firstObject');                        // 'amoeba'\n  ```\n\n  This class can also be useful as a layer to transform the contents of\n  an array, as they are accessed. This can be done by overriding\n  `objectAtContent`:\n\n  ```javascript\n  import { A } from '@ember/array';\n  import ArrayProxy from '@ember/array/proxy';\n\n  let pets = ['dog', 'cat', 'fish'];\n  let ap = ArrayProxy.create({\n      content: A(pets),\n      objectAtContent: function(idx) {\n          return this.get('content').objectAt(idx).toUpperCase();\n      }\n  });\n\n  ap.get('firstObject'); // . 'DOG'\n  ```\n\n  When overriding this class, it is important to place the call to\n  `_super` *after* setting `content` so the internal observers have\n  a chance to fire properly:\n\n  ```javascript\n  import { A } from '@ember/array';\n  import ArrayProxy from '@ember/array/proxy';\n\n  export default ArrayProxy.extend({\n    init() {\n      this.set('content', A(['dog', 'cat', 'fish']));\n      this._super(...arguments);\n    }\n  });\n  ```\n\n  @class ArrayProxy\n  @extends EmberObject\n  @uses MutableArray\n  @public\n*/\n\nclass ArrayProxy extends _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.E {\n  constructor(...args) {\n    super(...args);\n    /*\n      `this._objectsDirtyIndex` determines which indexes in the `this._objects`\n      cache are dirty.\n       If `this._objectsDirtyIndex === -1` then no indexes are dirty.\n      Otherwise, an index `i` is dirty if `i >= this._objectsDirtyIndex`.\n       Calling `objectAt` with a dirty index will cause the `this._objects`\n      cache to be recomputed.\n    */\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_objectsDirtyIndex\", 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_objects\", null);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_lengthDirty\", true);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_length\", 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_arrangedContent\", null);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_arrangedContentIsUpdating\", false);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_arrangedContentTag\", null);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_arrangedContentRevision\", null);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_lengthTag\", null);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_arrTag\", null);\n  }\n  init(props) {\n    super.init(props);\n    (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_10__.setCustomTagFor)(this, customTagForArrayProxy);\n  }\n  [_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.Q]() {\n    this._revalidate();\n  }\n  willDestroy() {\n    this._removeArrangedContentArrayObserver();\n  }\n  objectAtContent(idx) {\n    let arrangedContent = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this, 'arrangedContent');\n     true && !arrangedContent && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] Called objectAtContent without content', arrangedContent);\n    return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.R)(arrangedContent, idx);\n  }\n\n  // See additional docs for `replace` from `MutableArray`:\n  // https://api.emberjs.com/ember/release/classes/MutableArray/methods/replace?anchor=replace\n  replace(idx, amt, objects) {\n     true && !((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this, 'arrangedContent') === (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this, 'content')) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Mutating an arranged ArrayProxy is not allowed', (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this, 'arrangedContent') === (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this, 'content'));\n    this.replaceContent(idx, amt, objects);\n  }\n  replaceContent(idx, amt, objects) {\n    let content = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this, 'content');\n     true && !content && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] Called replaceContent without content', content);\n     true && !isMutable(content) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Mutating a non-mutable array is not allowed', isMutable(content));\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.S)(content, idx, amt, objects);\n  }\n\n  // Overriding objectAt is not supported.\n  objectAt(idx) {\n    this._revalidate();\n    if (this._objects === null) {\n      this._objects = [];\n    }\n    if (this._objectsDirtyIndex !== -1 && idx >= this._objectsDirtyIndex) {\n      let arrangedContent = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this, 'arrangedContent');\n      if (arrangedContent) {\n        let length = this._objects.length = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(arrangedContent, 'length');\n        for (let i = this._objectsDirtyIndex; i < length; i++) {\n          // SAFETY: This is expected to only ever return an instance of T. In other words, there should\n          // be no gaps in the array. Unfortunately, we can't actually assert for it since T could include\n          // any types, including null or undefined.\n          this._objects[i] = this.objectAtContent(i);\n        }\n      } else {\n        this._objects.length = 0;\n      }\n      this._objectsDirtyIndex = -1;\n    }\n    return this._objects[idx];\n  }\n\n  // Overriding length is not supported.\n  get length() {\n    this._revalidate();\n    if (this._lengthDirty) {\n      let arrangedContent = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this, 'arrangedContent');\n      this._length = arrangedContent ? (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(arrangedContent, 'length') : 0;\n      this._lengthDirty = false;\n    }\n     true && !this._lengthTag && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] _lengthTag is not set', this._lengthTag);\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.consumeTag)(this._lengthTag);\n    return this._length;\n  }\n  set length(value) {\n    let length = this.length;\n    let removedCount = length - value;\n    let added;\n    if (removedCount === 0) {\n      return;\n    } else if (removedCount < 0) {\n      added = new Array(-removedCount);\n      removedCount = 0;\n    }\n    let content = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this, 'content');\n    if (content) {\n       true && !isMutable(content) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Mutating a non-mutable array is not allowed', isMutable(content));\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.S)(content, value, removedCount, added);\n      this._invalidate();\n    }\n  }\n  _updateArrangedContentArray(arrangedContent) {\n    let oldLength = this._objects === null ? 0 : this._objects.length;\n    let newLength = arrangedContent ? (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(arrangedContent, 'length') : 0;\n    this._removeArrangedContentArrayObserver();\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.T)(this, 0, oldLength, newLength);\n    this._invalidate();\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.U)(this, 0, oldLength, newLength, false);\n    this._addArrangedContentArrayObserver(arrangedContent);\n  }\n  _addArrangedContentArrayObserver(arrangedContent) {\n    if (arrangedContent && !arrangedContent.isDestroyed) {\n       true && !(arrangedContent !== this) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(\"Can't set ArrayProxy's content to itself\", arrangedContent !== this);\n       true && !function (arr) {\n        return Array.isArray(arr) || _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.a.detect(arr);\n      }(arrangedContent) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`ArrayProxy expects a native Array, EmberArray, or ArrayProxy, but you passed ${typeof arrangedContent}`, function (arr) {\n        return Array.isArray(arr) || _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.a.detect(arr);\n      }(arrangedContent));\n       true && !!arrangedContent.isDestroyed && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('ArrayProxy expected its contents to not be destroyed', !arrangedContent.isDestroyed);\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.V)(arrangedContent, this, ARRAY_OBSERVER_MAPPING);\n      this._arrangedContent = arrangedContent;\n    }\n  }\n  _removeArrangedContentArrayObserver() {\n    if (this._arrangedContent) {\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.W)(this._arrangedContent, this, ARRAY_OBSERVER_MAPPING);\n    }\n  }\n  _arrangedContentArrayWillChange() {}\n  _arrangedContentArrayDidChange(_proxy, idx, removedCnt, addedCnt) {\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.T)(this, idx, removedCnt, addedCnt);\n    let dirtyIndex = idx;\n    if (dirtyIndex < 0) {\n      let length = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(this._arrangedContent, 'length');\n      dirtyIndex += length + removedCnt - addedCnt;\n    }\n    if (this._objectsDirtyIndex === -1 || this._objectsDirtyIndex > dirtyIndex) {\n      this._objectsDirtyIndex = dirtyIndex;\n    }\n    this._lengthDirty = true;\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.U)(this, idx, removedCnt, addedCnt, false);\n  }\n  _invalidate() {\n    this._objectsDirtyIndex = 0;\n    this._lengthDirty = true;\n  }\n  _revalidate() {\n    if (this._arrangedContentIsUpdating === true) return;\n    if (this._arrangedContentTag === null || !(0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.validateTag)(this._arrangedContentTag, this._arrangedContentRevision)) {\n      let arrangedContent = this.get('arrangedContent');\n      if (this._arrangedContentTag === null) {\n        // This is the first time the proxy has been setup, only add the observer\n        // don't trigger any events\n        this._addArrangedContentArrayObserver(arrangedContent);\n      } else {\n        this._arrangedContentIsUpdating = true;\n        this._updateArrangedContentArray(arrangedContent);\n        this._arrangedContentIsUpdating = false;\n      }\n      let arrangedContentTag = this._arrangedContentTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(this, 'arrangedContent');\n      this._arrangedContentRevision = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.valueForTag)(this._arrangedContentTag);\n      if ((0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__.e)(arrangedContent)) {\n        this._lengthTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.combine)([arrangedContentTag, (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.a)(arrangedContent, 'length')]);\n        this._arrTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.combine)([arrangedContentTag, (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.a)(arrangedContent, '[]')]);\n      } else {\n        this._lengthTag = this._arrTag = arrangedContentTag;\n      }\n    }\n  }\n}\nArrayProxy.reopen(_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_9__.M, {\n  arrangedContent: (0,_shared_chunks_alias_By_2yu5c_js__WEBPACK_IMPORTED_MODULE_7__.a)('content')\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/proxy.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/canary-features/index.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/canary-features/index.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_FEATURES: () => (/* binding */ DEFAULT_FEATURES),\n/* harmony export */   FEATURES: () => (/* binding */ FEATURES),\n/* harmony export */   isEnabled: () => (/* binding */ isEnabled)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n/**\n  Set `EmberENV.FEATURES` in your application's `config/environment.js` file\n  to enable canary features in your application.\n\n  See the [feature flag guide](https://guides.emberjs.com/release/configuring-ember/feature-flags/)\n  for more details.\n\n  @module @ember/canary-features\n  @public\n*/\n\nconst DEFAULT_FEATURES = {\n  // FLAG_NAME: true/false\n};\n\n/**\n  The hash of enabled Canary features. Add to this, any canary features\n  before creating your application.\n\n  @class FEATURES\n  @static\n  @since 1.1.0\n  @public\n*/\nconst FEATURES = Object.assign(DEFAULT_FEATURES, _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.E.FEATURES);\n\n/**\n  Determine whether the specified `feature` is enabled. Used by Ember's\n  build tools to exclude experimental features from beta/stable builds.\n\n  You can define the following configuration options:\n\n  * `EmberENV.ENABLE_OPTIONAL_FEATURES` - enable any features that have not been explicitly\n    enabled/disabled.\n\n  @method isEnabled\n  @param {String} feature The feature to check\n  @return {Boolean}\n  @since 1.1.0\n  @public\n*/\nfunction isEnabled(feature) {\n  let value = FEATURES[feature];\n  if (value === true || value === false) {\n    return value;\n  } else if (_shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.E.ENABLE_OPTIONAL_FEATURES) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Uncomment the below when features are present:\n\n// function featureValue(value: null | boolean) {\n//   if (ENV.ENABLE_OPTIONAL_FEATURES && value === null) {\n//     return true;\n//   }\n\n//   return value;\n// }\n//\n// export const FLAG_NAME = featureValue(FEATURES.FLAG_NAME);\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/canary-features/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/component/helper.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/component/helper.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_1__.H),\n/* harmony export */   helper: () => (/* reexport safe */ _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_1__.h)\n/* harmony export */ });\n/* harmony import */ var _glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@glimmer/opcode-compiler/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js\");\n/* harmony import */ var _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/index-BXPoca1S.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BXPoca1S.js\");\n/* harmony import */ var _shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/registry-DzfcDwii.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../@glimmer/runtime/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/runtime/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/reference/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/component/helper.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/component/index.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/component/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Input: () => (/* reexport safe */ _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_2__.I),\n/* harmony export */   Textarea: () => (/* reexport safe */ _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_2__.T),\n/* harmony export */   capabilities: () => (/* reexport safe */ _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_0__.componentCapabilities),\n/* harmony export */   \"default\": () => (/* reexport safe */ _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_2__.C),\n/* harmony export */   getComponentTemplate: () => (/* reexport safe */ _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_0__.getComponentTemplate),\n/* harmony export */   setComponentManager: () => (/* reexport safe */ _shared_chunks_managers_CbMgnSoo_js__WEBPACK_IMPORTED_MODULE_9__.s),\n/* harmony export */   setComponentTemplate: () => (/* reexport safe */ _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_0__.setComponentTemplate)\n/* harmony export */ });\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@glimmer/opcode-compiler/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js\");\n/* harmony import */ var _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/index-BXPoca1S.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BXPoca1S.js\");\n/* harmony import */ var _shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/registry-DzfcDwii.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../@glimmer/runtime/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/runtime/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../@glimmer/reference/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_managers_CbMgnSoo_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../shared-chunks/managers-CbMgnSoo.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/managers-CbMgnSoo.js\");\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/component/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/controller/index.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/controller/index.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ControllerMixin: () => (/* binding */ ControllerMixin),\n/* harmony export */   \"default\": () => (/* binding */ Controller),\n/* harmony export */   inject: () => (/* binding */ inject)\n/* harmony export */ });\n/* harmony import */ var _internals_owner_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../-internals/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _object_internals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../object/-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/-internals.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/to-string-D8i3mjEU.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/to-string-D8i3mjEU.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/registry_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/container_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/comparable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/action_handler.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/-proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js\");\n/* harmony import */ var _enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/target_action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js\");\n/* harmony import */ var _internals_runtime_lib_ext_rsvp_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../-internals/runtime/lib/ext/rsvp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst MODEL = (0,_shared_chunks_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_7__.s)('MODEL');\n\n/**\n@module @ember/controller\n*/\n\n/**\n  @class ControllerMixin\n  @namespace Ember\n  @uses Ember.ActionHandler\n  @private\n*/\n\nconst ControllerMixin = _object_mixin_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].create(_internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n  /* ducktype as a controller */\n  isController: true,\n  concatenatedProperties: ['queryParams'],\n  target: null,\n  store: null,\n  init() {\n    this._super(...arguments);\n    let owner = (0,_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_0__.getOwner)(this);\n    if (owner) {\n      this.namespace = owner.lookup('application:main');\n      this.target = owner.lookup('router:main');\n    }\n  },\n  model: (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.c)({\n    get() {\n      return this[MODEL];\n    },\n    set(_key, value) {\n      return this[MODEL] = value;\n    }\n  }),\n  queryParams: null,\n  /**\n   This property is updated to various different callback functions depending on\n   the current \"state\" of the backing route. It is used by\n   `Controller.prototype._qpChanged`.\n    The methods backing each state can be found in the `Route.prototype._qp` computed\n   property return value (the `.states` property). The current values are listed here for\n   the sanity of future travelers:\n    * `inactive` - This state is used when this controller instance is not part of the active\n     route hierarchy. Set in `Route.prototype._reset` (a `router.js` microlib hook) and\n     `Route.prototype.actions.finalizeQueryParamChange`.\n   * `active` - This state is used when this controller instance is part of the active\n     route hierarchy. Set in `Route.prototype.actions.finalizeQueryParamChange`.\n   * `allowOverrides` - This state is used in `Route.prototype.setup` (`route.js` microlib hook).\n     @method _qpDelegate\n    @private\n  */\n  _qpDelegate: null,\n  // set by route\n\n  /**\n   During `Route#setup` observers are created to invoke this method\n   when any of the query params declared in `Controller#queryParams` property\n   are changed.\n    When invoked this method uses the currently active query param update delegate\n   (see `Controller.prototype._qpDelegate` for details) and invokes it with\n   the QP key/value being changed.\n     @method _qpChanged\n    @private\n  */\n  _qpChanged(controller, _prop) {\n    let dotIndex = _prop.indexOf('.[]');\n    let prop = dotIndex === -1 ? _prop : _prop.slice(0, dotIndex);\n    let delegate = controller._qpDelegate;\n    let value = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(controller, prop);\n    delegate(prop, value);\n  }\n});\n\n// NOTE: This doesn't actually extend EmberObject.\n/**\n  @class Controller\n  @extends EmberObject\n  @uses Ember.ControllerMixin\n  @public\n*/\n\nclass Controller extends _object_internals_js__WEBPACK_IMPORTED_MODULE_2__.FrameworkObject.extend(ControllerMixin) {}\n\n/**\n  Creates a property that lazily looks up another controller in the container.\n  Can only be used when defining another controller.\n\n  Example:\n\n  ```app/controllers/post.js\n  import Controller, {\n    inject as controller\n  } from '@ember/controller';\n\n  export default class PostController extends Controller {\n    @controller posts;\n  }\n  ```\n\n  Classic Class Example:\n\n  ```app/controllers/post.js\n  import Controller, {\n    inject as controller\n  } from '@ember/controller';\n\n  export default Controller.extend({\n    posts: controller()\n  });\n  ```\n\n  This example will create a `posts` property on the `post` controller that\n  looks up the `posts` controller in the container, making it easy to reference\n  other controllers.\n\n  @method inject\n  @static\n  @for @ember/controller\n  @since 1.10.0\n  @param {String} name (optional) name of the controller to inject, defaults to\n         the property's name\n  @return {ComputedDecorator} injection decorator instance\n  @public\n*/\n\nfunction inject(...args) {\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.f)('controller', ...args);\n}\n\n/**\n  A type registry for Ember `Controller`s. Meant to be declaration-merged so string\n  lookups resolve to the correct type.\n\n  Blueprints should include such a declaration merge for TypeScript:\n\n  ```ts\n  import Controller from '@ember/controller';\n\n  export default class ExampleController extends Controller {\n  // ...\n  }\n\n  declare module '@ember/controller' {\n    export interface Registry {\n      example: ExampleController;\n    }\n  }\n  ```\n\n  Then `@inject` can check that the service is registered correctly, and APIs\n  like `owner.lookup('controller:example')` can return `ExampleController`.\n*/\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/controller/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/container-debug-adapter.js":
/*!*********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/container-debug-adapter.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ContainerDebugAdapter)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _internals_string_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../-internals/string/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/string/index.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/registry_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/container_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/comparable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/action_handler.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/-proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js\");\n/* harmony import */ var _enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/target_action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js\");\n/* harmony import */ var _internals_runtime_lib_ext_rsvp_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../-internals/runtime/lib/ext/rsvp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js\");\n/* harmony import */ var _internals_owner_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../-internals/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n/* harmony import */ var _application_namespace_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../application/namespace.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/namespace.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/debug/container-debug-adapter\n*/\n\n/**\n  The `ContainerDebugAdapter` helps the container and resolver interface\n  with tools that debug Ember such as the\n  [Ember Inspector](https://github.com/emberjs/ember-inspector)\n  for Chrome and Firefox.\n\n  This class can be extended by a custom resolver implementer\n  to override some of the methods with library-specific code.\n\n  The methods likely to be overridden are:\n\n  * `canCatalogEntriesByType`\n  * `catalogEntriesByType`\n\n  The adapter will need to be registered\n  in the application's container as `container-debug-adapter:main`.\n\n  Example:\n\n  ```javascript\n  Application.initializer({\n    name: \"containerDebugAdapter\",\n\n    initialize(application) {\n      application.register('container-debug-adapter:main', require('app/container-debug-adapter'));\n    }\n  });\n  ```\n\n  @class ContainerDebugAdapter\n  @extends EmberObject\n  @since 1.5.0\n  @public\n*/\nclass ContainerDebugAdapter extends _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_2__.E {\n  constructor(owner) {\n    super(owner);\n    /**\n      The resolver instance of the application\n      being debugged. This property will be injected\n      on creation.\n       @property resolver\n      @public\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"resolver\", void 0);\n    this.resolver = (0,_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_19__.getOwner)(this).lookup('resolver-for-debugging:main');\n  }\n  /**\n    Returns true if it is possible to catalog a list of available\n    classes in the resolver for a given type.\n     @method canCatalogEntriesByType\n    @param {String} type The type. e.g. \"model\", \"controller\", \"route\".\n    @return {boolean} whether a list is available for this type.\n    @public\n  */\n  canCatalogEntriesByType(type) {\n    if (type === 'model' || type === 'template') {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n    Returns the available classes a given type.\n     @method catalogEntriesByType\n    @param {String} type The type. e.g. \"model\", \"controller\", \"route\".\n    @return {Array} An array of strings.\n    @public\n  */\n  catalogEntriesByType(type) {\n    let namespaces = _application_namespace_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"].NAMESPACES;\n    let types = [];\n    let typeSuffixRegex = new RegExp(`${(0,_internals_string_index_js__WEBPACK_IMPORTED_MODULE_1__.classify)(type)}$`);\n    namespaces.forEach(namespace => {\n      for (let key in namespace) {\n        if (!Object.prototype.hasOwnProperty.call(namespace, key)) {\n          continue;\n        }\n        if (typeSuffixRegex.test(key)) {\n          let klass = namespace[key];\n          if ((0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_2__.t)(klass) === 'class') {\n            types.push((0,_internals_string_index_js__WEBPACK_IMPORTED_MODULE_1__.dasherize)(key.replace(typeSuffixRegex, '')));\n          }\n        }\n      }\n    });\n    return types;\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/container-debug-adapter.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/data-adapter.js":
/*!**********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/data-adapter.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DataAdapter)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _internals_owner_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../-internals/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _internals_string_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../-internals/string/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/string/index.js\");\n/* harmony import */ var _application_namespace_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../application/namespace.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/namespace.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/debug/data-adapter\n*/\n\n// Represents the base contract for iterables as understood in the GLimmer VM\n// historically. This is *not* the public API for it, because there *is* no\n// public API for it. Recent versions of Glimmer simply use `Symbol.iterator`,\n// but some older consumers still use this basic shape.\n\nfunction iterate(arr, fn) {\n  if (Symbol.iterator in arr) {\n    for (let item of arr) {\n      fn(item);\n    }\n  } else {\n    // SAFETY: this cast required to work this way to interop between TS 4.8\n    // and 4.9. When we drop support for 4.8, it will narrow correctly via the\n    // use of the `in` operator above. (Preferably we will solve this by just\n    // switching to require `Symbol.iterator` instead.)\n    (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_7__.a)('', typeof arr.forEach === 'function');\n    arr.forEach(fn);\n  }\n}\nclass RecordsWatcher {\n  getCacheForItem(record) {\n    let recordCache = this.recordCaches.get(record);\n    if (!recordCache) {\n      let hasBeenAdded = false;\n      recordCache = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.createCache)(() => {\n        if (!hasBeenAdded) {\n          this.added.push(this.wrapRecord(record));\n          hasBeenAdded = true;\n        } else {\n          this.updated.push(this.wrapRecord(record));\n        }\n      });\n      this.recordCaches.set(record, recordCache);\n    }\n    return recordCache;\n  }\n  constructor(records, recordsAdded, recordsUpdated, recordsRemoved, wrapRecord, release) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"recordCaches\", new Map());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"added\", []);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"updated\", []);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"removed\", []);\n    this.wrapRecord = wrapRecord;\n    this.release = release;\n    this.recordArrayCache = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.createCache)(() => {\n      let seen = new Set();\n\n      // Track `[]` for legacy support\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.tagFor)(records, '[]'));\n      iterate(records, record => {\n        (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.getValue)(this.getCacheForItem(record));\n        seen.add(record);\n      });\n\n      // Untrack this operation because these records are being removed, they\n      // should not be polled again in the future\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.untrack)(() => {\n        this.recordCaches.forEach((_cache, record) => {\n          if (!seen.has(record)) {\n            this.removed.push(wrapRecord(record));\n            this.recordCaches.delete(record);\n          }\n        });\n      });\n      if (this.added.length > 0) {\n        recordsAdded(this.added);\n        this.added = [];\n      }\n      if (this.updated.length > 0) {\n        recordsUpdated(this.updated);\n        this.updated = [];\n      }\n      if (this.removed.length > 0) {\n        recordsRemoved(this.removed);\n        this.removed = [];\n      }\n    });\n  }\n  revalidate() {\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.getValue)(this.recordArrayCache);\n  }\n}\nclass TypeWatcher {\n  constructor(records, onChange, release) {\n    this.release = release;\n    let hasBeenAccessed = false;\n    this.cache = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.createCache)(() => {\n      // Empty iteration, we're doing this just\n      // to track changes to the records array\n      iterate(records, () => {});\n\n      // Also track `[]` for legacy support\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.tagFor)(records, '[]'));\n      if (hasBeenAccessed === true) {\n        (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.X)(onChange);\n      } else {\n        hasBeenAccessed = true;\n      }\n    });\n    this.release = release;\n  }\n  revalidate() {\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__.getValue)(this.cache);\n  }\n}\n\n/**\n  The `DataAdapter` helps a data persistence library\n  interface with tools that debug Ember such\n  as the [Ember Inspector](https://github.com/emberjs/ember-inspector)\n  for Chrome and Firefox.\n\n  This class will be extended by a persistence library\n  which will override some of the methods with\n  library-specific code.\n\n  The methods likely to be overridden are:\n\n  * `getFilters`\n  * `detect`\n  * `columnsForType`\n  * `getRecords`\n  * `getRecordColumnValues`\n  * `getRecordKeywords`\n  * `getRecordFilterValues`\n  * `getRecordColor`\n\n  The adapter will need to be registered\n  in the application's container as `dataAdapter:main`.\n\n  Example:\n\n  ```javascript\n  Application.initializer({\n    name: \"data-adapter\",\n\n    initialize: function(application) {\n      application.register('data-adapter:main', DS.DataAdapter);\n    }\n  });\n  ```\n\n  @class DataAdapter\n  @extends EmberObject\n  @public\n*/\nclass DataAdapter extends _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_3__.E {\n  // TODO: Revisit this\n\n  constructor(owner) {\n    super(owner);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"releaseMethods\", (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_3__.A)());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"recordsWatchers\", new Map());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"typeWatchers\", new Map());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"flushWatchers\", null);\n    /**\n      The container-debug-adapter which is used\n      to list all models.\n       @property containerDebugAdapter\n      @default undefined\n      @since 1.5.0\n      @public\n    **/\n    /**\n      The number of attributes to send\n      as columns. (Enough to make the record\n      identifiable).\n       @private\n      @property attributeLimit\n      @default 3\n      @since 1.3.0\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attributeLimit\", 3);\n    /**\n       Ember Data > v1.0.0-beta.18\n       requires string model names to be passed\n       around instead of the actual factories.\n        This is a stamp for the Ember Inspector\n       to differentiate between the versions\n       to be able to support older versions too.\n        @public\n       @property acceptsModelName\n     */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"acceptsModelName\", true);\n    this.containerDebugAdapter = (0,_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_1__.getOwner)(this).lookup('container-debug-adapter:main');\n  }\n  /**\n     Map from records arrays to RecordsWatcher instances\n      @private\n     @property recordsWatchers\n     @since 3.26.0\n   */\n\n  /**\n    Map from records arrays to TypeWatcher instances\n     @private\n    @property typeWatchers\n    @since 3.26.0\n   */\n\n  /**\n    Callback that is currently scheduled on backburner end to flush and check\n    all active watchers.\n     @private\n    @property flushWatchers\n    @since 3.26.0\n    */\n\n  /**\n    Stores all methods that clear observers.\n    These methods will be called on destruction.\n     @private\n    @property releaseMethods\n    @since 1.3.0\n  */\n\n  /**\n    Specifies how records can be filtered.\n    Records returned will need to have a `filterValues`\n    property with a key for every name in the returned array.\n     @public\n    @method getFilters\n    @return {Array} List of objects defining filters.\n     The object should have a `name` and `desc` property.\n  */\n  getFilters() {\n    return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_3__.A)();\n  }\n\n  /**\n    Fetch the model types and observe them for changes.\n     @public\n    @method watchModelTypes\n     @param {Function} typesAdded Callback to call to add types.\n    Takes an array of objects containing wrapped types (returned from `wrapModelType`).\n     @param {Function} typesUpdated Callback to call when a type has changed.\n    Takes an array of objects containing wrapped types.\n     @return {Function} Method to call to remove all observers\n  */\n  watchModelTypes(typesAdded, typesUpdated) {\n    let modelTypes = this.getModelTypes();\n    let releaseMethods = (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_3__.A)();\n    let typesToSend;\n    typesToSend = modelTypes.map(type => {\n      let klass = type.klass;\n      let wrapped = this.wrapModelType(klass, type.name);\n      releaseMethods.push(this.observeModelType(type.name, typesUpdated));\n      return wrapped;\n    });\n    typesAdded(typesToSend);\n    let release = () => {\n      releaseMethods.forEach(fn => fn());\n      this.releaseMethods.removeObject(release);\n    };\n    this.releaseMethods.pushObject(release);\n    return release;\n  }\n  _nameToClass(type) {\n    if (typeof type === 'string') {\n      let owner = (0,_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_1__.getOwner)(this);\n      let Factory = owner.factoryFor(`model:${type}`);\n      type = Factory && Factory.class;\n    }\n    return type;\n  }\n\n  /**\n    Fetch the records of a given type and observe them for changes.\n     @public\n    @method watchRecords\n     @param {String} modelName The model name.\n     @param {Function} recordsAdded Callback to call to add records.\n    Takes an array of objects containing wrapped records.\n    The object should have the following properties:\n      columnValues: {Object} The key and value of a table cell.\n      object: {Object} The actual record object.\n     @param {Function} recordsUpdated Callback to call when a record has changed.\n    Takes an array of objects containing wrapped records.\n     @param {Function} recordsRemoved Callback to call when a record has removed.\n    Takes an array of objects containing wrapped records.\n     @return {Function} Method to call to remove all observers.\n  */\n  watchRecords(modelName, recordsAdded, recordsUpdated, recordsRemoved) {\n    let klass = this._nameToClass(modelName);\n    let records = this.getRecords(klass, modelName);\n    let {\n      recordsWatchers\n    } = this;\n    let recordsWatcher = recordsWatchers.get(records);\n    if (!recordsWatcher) {\n      recordsWatcher = new RecordsWatcher(records, recordsAdded, recordsUpdated, recordsRemoved, record => this.wrapRecord(record), () => {\n        recordsWatchers.delete(records);\n        this.updateFlushWatchers();\n      });\n      recordsWatchers.set(records, recordsWatcher);\n      this.updateFlushWatchers();\n      recordsWatcher.revalidate();\n    }\n    return recordsWatcher.release;\n  }\n  updateFlushWatchers() {\n    if (this.flushWatchers === null) {\n      if (this.typeWatchers.size > 0 || this.recordsWatchers.size > 0) {\n        this.flushWatchers = () => {\n          this.typeWatchers.forEach(watcher => watcher.revalidate());\n          this.recordsWatchers.forEach(watcher => watcher.revalidate());\n        };\n        _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__._.on('end', this.flushWatchers);\n      }\n    } else if (this.typeWatchers.size === 0 && this.recordsWatchers.size === 0) {\n      _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__._.off('end', this.flushWatchers);\n      this.flushWatchers = null;\n    }\n  }\n\n  /**\n    Clear all observers before destruction\n    @private\n    @method willDestroy\n  */\n  willDestroy() {\n    this._super(...arguments);\n    this.typeWatchers.forEach(watcher => watcher.release());\n    this.recordsWatchers.forEach(watcher => watcher.release());\n    this.releaseMethods.forEach(fn => fn());\n    if (this.flushWatchers) {\n      _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__._.off('end', this.flushWatchers);\n    }\n  }\n\n  /**\n    Detect whether a class is a model.\n     Test that against the model class\n    of your persistence library.\n     @public\n    @method detect\n    @return boolean Whether the class is a model class or not.\n  */\n  detect(_klass) {\n    return false;\n  }\n\n  /**\n    Get the columns for a given model type.\n     @public\n    @method columnsForType\n    @return {Array} An array of columns of the following format:\n     name: {String} The name of the column.\n     desc: {String} Humanized description (what would show in a table column name).\n  */\n  columnsForType(_klass) {\n    return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_3__.A)();\n  }\n\n  /**\n    Adds observers to a model type class.\n     @private\n    @method observeModelType\n    @param {String} modelName The model type name.\n    @param {Function} typesUpdated Called when a type is modified.\n    @return {Function} The function to call to remove observers.\n  */\n\n  observeModelType(modelName, typesUpdated) {\n    let klass = this._nameToClass(modelName);\n    let records = this.getRecords(klass, modelName);\n    let onChange = () => {\n      typesUpdated([this.wrapModelType(klass, modelName)]);\n    };\n    let {\n      typeWatchers\n    } = this;\n    let typeWatcher = typeWatchers.get(records);\n    if (!typeWatcher) {\n      typeWatcher = new TypeWatcher(records, onChange, () => {\n        typeWatchers.delete(records);\n        this.updateFlushWatchers();\n      });\n      typeWatchers.set(records, typeWatcher);\n      this.updateFlushWatchers();\n      typeWatcher.revalidate();\n    }\n    return typeWatcher.release;\n  }\n\n  /**\n    Wraps a given model type and observes changes to it.\n     @private\n    @method wrapModelType\n    @param {Class} klass A model class.\n    @param {String} modelName Name of the class.\n    @return {Object} The wrapped type has the following format:\n      name: {String} The name of the type.\n      count: {Integer} The number of records available.\n      columns: {Columns} An array of columns to describe the record.\n      object: {Class} The actual Model type class.\n  */\n  wrapModelType(klass, name) {\n    let records = this.getRecords(klass, name);\n    return {\n      name,\n      count: (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.g)(records, 'length'),\n      columns: this.columnsForType(klass),\n      object: klass\n    };\n  }\n\n  /**\n    Fetches all models defined in the application.\n     @private\n    @method getModelTypes\n    @return {Array} Array of model types.\n  */\n  getModelTypes() {\n    let containerDebugAdapter = this.containerDebugAdapter;\n    let stringTypes = containerDebugAdapter.canCatalogEntriesByType('model') ? containerDebugAdapter.catalogEntriesByType('model') : this._getObjectsOnNamespaces();\n\n    // New adapters return strings instead of classes.\n    let klassTypes = stringTypes.map(name => {\n      return {\n        klass: this._nameToClass(name),\n        name\n      };\n    });\n    return klassTypes.filter(type => this.detect(type.klass));\n  }\n\n  /**\n    Loops over all namespaces and all objects\n    attached to them.\n     @private\n    @method _getObjectsOnNamespaces\n    @return {Array} Array of model type strings.\n  */\n  _getObjectsOnNamespaces() {\n    let namespaces = _application_namespace_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].NAMESPACES;\n    let types = [];\n    namespaces.forEach(namespace => {\n      for (let key in namespace) {\n        if (!Object.prototype.hasOwnProperty.call(namespace, key)) {\n          continue;\n        }\n        // Even though we will filter again in `getModelTypes`,\n        // we should not call `lookupFactory` on non-models\n        if (!this.detect(namespace[key])) {\n          continue;\n        }\n        let name = (0,_internals_string_index_js__WEBPACK_IMPORTED_MODULE_4__.dasherize)(key);\n        types.push(name);\n      }\n    });\n    return types;\n  }\n\n  /**\n    Fetches all loaded records for a given type.\n     @public\n    @method getRecords\n    @return {Array} An array of records.\n     This array will be observed for changes,\n     so it should update when new records are added/removed.\n  */\n  getRecords(_klass, _name) {\n    return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_3__.A)();\n  }\n\n  /**\n    Wraps a record and observers changes to it.\n     @private\n    @method wrapRecord\n    @param {Object} record The record instance.\n    @return {Object} The wrapped record. Format:\n    columnValues: {Array}\n    searchKeywords: {Array}\n  */\n  wrapRecord(record) {\n    return {\n      object: record,\n      columnValues: this.getRecordColumnValues(record),\n      searchKeywords: this.getRecordKeywords(record),\n      filterValues: this.getRecordFilterValues(record),\n      color: this.getRecordColor(record)\n    };\n  }\n\n  /**\n    Gets the values for each column.\n     @public\n    @method getRecordColumnValues\n    @return {Object} Keys should match column names defined\n    by the model type.\n  */\n  getRecordColumnValues(_record) {\n    return {};\n  }\n\n  /**\n    Returns keywords to match when searching records.\n     @public\n    @method getRecordKeywords\n    @return {Array} Relevant keywords for search.\n  */\n  getRecordKeywords(_record) {\n    return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_3__.A)();\n  }\n\n  /**\n    Returns the values of filters defined by `getFilters`.\n     @public\n    @method getRecordFilterValues\n    @param {Object} record The record instance.\n    @return {Object} The filter values.\n  */\n  getRecordFilterValues(_record) {\n    return {};\n  }\n\n  /**\n    Each record can have a color that represents its state.\n     @public\n    @method getRecordColor\n    @param {Object} record The record instance\n    @return {String} The records color.\n      Possible options: black, red, blue, green.\n  */\n  getRecordColor(_record) {\n    return null;\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/data-adapter.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js":
/*!***************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _warnIfUsingStrippedFeatureFlags: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.t),\n/* harmony export */   assert: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a),\n/* harmony export */   captureRenderTree: () => (/* reexport safe */ _lib_capture_render_tree_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   debug: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.c),\n/* harmony export */   debugFreeze: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.h),\n/* harmony export */   debugSeal: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.p),\n/* harmony export */   deprecate: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.d),\n/* harmony export */   deprecateFunc: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.e),\n/* harmony export */   getDebugFunction: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.q),\n/* harmony export */   info: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.i),\n/* harmony export */   inspect: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.b),\n/* harmony export */   isTesting: () => (/* reexport safe */ _lib_testing_js__WEBPACK_IMPORTED_MODULE_2__.isTesting),\n/* harmony export */   registerDeprecationHandler: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.f),\n/* harmony export */   registerWarnHandler: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   runInDebug: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.r),\n/* harmony export */   setDebugFunction: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.s),\n/* harmony export */   setTesting: () => (/* reexport safe */ _lib_testing_js__WEBPACK_IMPORTED_MODULE_2__.setTesting),\n/* harmony export */   warn: () => (/* reexport safe */ _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.w)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared-chunks/index-BGP1rw3B.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BGP1rw3B.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _lib_testing_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/testing.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/testing.js\");\n/* harmony import */ var _lib_capture_render_tree_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/capture-render-tree.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/capture-render-tree.js\");\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/capture-render-tree.js":
/*!*********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/capture-render-tree.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ captureRenderTree)\n/* harmony export */ });\n/* harmony import */ var _glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../@glimmer/util/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js\");\n\n\n/**\n  @module @ember/debug\n*/\n/**\n  Ember Inspector calls this function to capture the current render tree.\n\n  In production mode, this requires turning on `ENV._DEBUG_RENDER_TREE`\n  before loading Ember.\n\n  @private\n  @static\n  @method captureRenderTree\n  @for @ember/debug\n  @param app {ApplicationInstance} An `ApplicationInstance`.\n  @since 3.14.0\n*/\nfunction captureRenderTree(app) {\n  // SAFETY: Ideally we'd assert here but that causes awkward circular requires since this is also in @ember/debug.\n  // This is only for debug stuff so not very risky.\n  let renderer = (0,_glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_0__.expect)(app.lookup('renderer:-dom'), `BUG: owner is missing renderer`);\n  return renderer.debugRenderTree.capture();\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/capture-render-tree.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/handlers.js":
/*!**********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/handlers.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HANDLERS: () => (/* binding */ HANDLERS),\n/* harmony export */   invoke: () => (/* binding */ invoke),\n/* harmony export */   registerHandler: () => (/* binding */ registerHandler)\n/* harmony export */ });\nlet HANDLERS = {};\nlet registerHandler = function registerHandler(_type, _callback) {};\nlet invoke = () => {};\nif (true) {\n  registerHandler = function registerHandler(type, callback) {\n    let nextHandler = HANDLERS[type] || (() => {});\n    HANDLERS[type] = (message, options) => {\n      callback(message, options, nextHandler);\n    };\n  };\n  invoke = function invoke(type, message, test, options) {\n    if (test) {\n      return;\n    }\n    let handlerForType = HANDLERS[type];\n    if (handlerForType) {\n      handlerForType(message, options);\n    }\n  };\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/handlers.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/testing.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/testing.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isTesting: () => (/* binding */ isTesting),\n/* harmony export */   setTesting: () => (/* binding */ setTesting)\n/* harmony export */ });\nlet testing = false;\nfunction isTesting() {\n  return testing;\n}\nfunction setTesting(value) {\n  testing = Boolean(value);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/testing.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/destroyable/index.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/destroyable/index.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertDestroyablesDestroyed: () => (/* reexport safe */ _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_0__.assertDestroyablesDestroyed),\n/* harmony export */   associateDestroyableChild: () => (/* reexport safe */ _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_0__.associateDestroyableChild),\n/* harmony export */   destroy: () => (/* reexport safe */ _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_0__.destroy),\n/* harmony export */   enableDestroyableTracking: () => (/* reexport safe */ _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_0__.enableDestroyableTracking),\n/* harmony export */   isDestroyed: () => (/* reexport safe */ _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_0__.isDestroyed),\n/* harmony export */   isDestroying: () => (/* reexport safe */ _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_0__.isDestroying),\n/* harmony export */   registerDestructor: () => (/* binding */ registerDestructor),\n/* harmony export */   unregisterDestructor: () => (/* binding */ unregisterDestructor)\n/* harmony export */ });\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n\n\n\n/**\n  Ember manages the lifecycles and lifetimes of many built in constructs, such\n  as components, and does so in a hierarchical way - when a parent component is\n  destroyed, all of its children are destroyed as well.\n\n  This destroyables API exposes the basic building blocks for destruction:\n\n  * registering a function to be ran when an object is destroyed\n  * checking if an object is in a destroying state\n  * associate an object as a child of another so that the child object will be destroyed\n    when the associated parent object is destroyed.\n\n  @module @ember/destroyable\n  @public\n*/\n\n/**\n  This function is used to associate a destroyable object with a parent. When the parent\n  is destroyed, all registered children will also be destroyed.\n\n  ```js\n  class CustomSelect extends Component {\n    constructor(...args) {\n      super(...args);\n\n      // obj is now a child of the component. When the component is destroyed,\n      // obj will also be destroyed, and have all of its destructors triggered.\n      this.obj = associateDestroyableChild(this, {});\n    }\n  }\n  ```\n\n  Returns the associated child for convenience.\n\n  @method associateDestroyableChild\n  @for @ember/destroyable\n  @param {Object|Function} parent the destroyable to entangle the child destroyables lifetime with\n  @param {Object|Function} child the destroyable to be entangled with the parents lifetime\n  @returns {Object|Function} the child argument\n  @static\n  @public\n*/\n\n/**\n Receives a destroyable, and returns true if the destroyable has begun destroying. Otherwise returns\n false.\n\n  ```js\n  let obj = {};\n  isDestroying(obj); // false\n  destroy(obj);\n  isDestroying(obj); // true\n  // ...sometime later, after scheduled destruction\n  isDestroyed(obj); // true\n  isDestroying(obj); // true\n  ```\n\n  @method isDestroying\n  @for @ember/destroyable\n  @param {Object|Function} destroyable the object to check\n  @returns {Boolean}\n  @static\n  @public\n*/\n\n/**\n  Receives a destroyable, and returns true if the destroyable has finished destroying. Otherwise\n  returns false.\n\n  ```js\n  let obj = {};\n\n  isDestroyed(obj); // false\n  destroy(obj);\n\n  // ...sometime later, after scheduled destruction\n\n  isDestroyed(obj); // true\n  ```\n\n  @method isDestroyed\n  @for @ember/destroyable\n  @param {Object|Function} destroyable the object to check\n  @returns {Boolean}\n  @static\n  @public\n*/\n\n/**\n  Initiates the destruction of a destroyable object. It runs all associated destructors, and then\n  destroys all children recursively.\n\n  ```js\n  let obj = {};\n\n  registerDestructor(obj, () => console.log('destroyed!'));\n\n  destroy(obj); // this will schedule the destructor to be called\n\n  // ...some time later, during scheduled destruction\n\n  // destroyed!\n  ```\n\n  Destruction via `destroy()` follows these steps:\n\n  1, Mark the destroyable such that `isDestroying(destroyable)` returns `true`\n  2, Call `destroy()` on each of the destroyable's associated children\n  3, Schedule calling the destroyable's destructors\n  4, Schedule setting destroyable such that `isDestroyed(destroyable)` returns `true`\n\n  This results in the entire tree of destroyables being first marked as destroying,\n  then having all of their destructors called, and finally all being marked as isDestroyed.\n  There won't be any in between states where some items are marked as `isDestroying` while\n  destroying, while others are not.\n\n  @method destroy\n  @for @ember/destroyable\n  @param {Object|Function} destroyable the object to destroy\n  @static\n  @public\n*/\n\n/**\n  This function asserts that all objects which have associated destructors or associated children\n  have been destroyed at the time it is called. It is meant to be a low level hook that testing\n  frameworks can use to hook into and validate that all destroyables have in fact been destroyed.\n\n  This function requires that `enableDestroyableTracking` was called previously, and is only\n  available in non-production builds.\n\n  @method assertDestroyablesDestroyed\n  @for @ember/destroyable\n  @static\n  @public\n*/\n\n/**\n  This function instructs the destroyable system to keep track of all destroyables (their\n  children, destructors, etc). This enables a future usage of `assertDestroyablesDestroyed`\n  to be used to ensure that all destroyable tasks (registered destructors and associated children)\n  have completed when `assertDestroyablesDestroyed` is called.\n\n  @method enableDestroyableTracking\n  @for @ember/destroyable\n  @static\n  @public\n*/\n\n/**\n  Receives a destroyable object and a destructor function, and associates the\n  function with it. When the destroyable is destroyed with destroy, or when its\n  parent is destroyed, the destructor function will be called.\n\n  ```js\n  import Component from '@glimmer/component';\n  import { registerDestructor } from '@ember/destroyable';\n\n  class Modal extends Component {\n    @service resize;\n\n    constructor(...args) {\n      super(...args);\n\n      this.resize.register(this, this.layout);\n\n      registerDestructor(this, () => this.resize.unregister(this));\n    }\n  }\n  ```\n\n  Multiple destructors can be associated with a given destroyable, and they can be\n  associated over time, allowing libraries to dynamically add destructors as needed.\n  `registerDestructor` also returns the associated destructor function, for convenience.\n\n  The destructor function is passed a single argument, which is the destroyable itself.\n  This allows the function to be reused multiple times for many destroyables, rather\n  than creating a closure function per destroyable.\n\n  ```js\n  import Component from '@glimmer/component';\n  import { registerDestructor } from '@ember/destroyable';\n\n  function unregisterResize(instance) {\n    instance.resize.unregister(instance);\n  }\n\n  class Modal extends Component {\n    @service resize;\n\n    constructor(...args) {\n      super(...args);\n\n      this.resize.register(this, this.layout);\n\n      registerDestructor(this, unregisterResize);\n    }\n  }\n  ```\n\n  @method registerDestructor\n  @for @ember/destroyable\n  @param {Object|Function} destroyable the destroyable to register the destructor function with\n  @param {Function} destructor the destructor to run when the destroyable object is destroyed\n  @static\n  @public\n*/\nfunction registerDestructor(destroyable, destructor) {\n  return (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_0__.registerDestructor)(destroyable, destructor);\n}\n\n/**\n  Receives a destroyable and a destructor function, and de-associates the destructor\n  from the destroyable.\n\n  ```js\n  import Component from '@glimmer/component';\n  import { registerDestructor, unregisterDestructor } from '@ember/destroyable';\n\n  class Modal extends Component {\n    @service modals;\n\n    constructor(...args) {\n      super(...args);\n\n      this.modals.add(this);\n\n      this.modalDestructor = registerDestructor(this, () => this.modals.remove(this));\n    }\n\n    @action pinModal() {\n      unregisterDestructor(this, this.modalDestructor);\n    }\n  }\n  ```\n\n  @method unregisterDestructor\n  @for @ember/destroyable\n  @param {Object|Function} destroyable the destroyable to unregister the destructor function from\n  @param {Function} destructor the destructor to remove from the destroyable\n  @static\n  @public\n*/\nfunction unregisterDestructor(destroyable, destructor) {\n  return (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_0__.unregisterDestructor)(destroyable, destructor);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/destroyable/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/engine/lib/engine-parent.js":
/*!****************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/engine/lib/engine-parent.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENGINE_PARENT: () => (/* binding */ ENGINE_PARENT),\n/* harmony export */   getEngineParent: () => (/* binding */ getEngineParent),\n/* harmony export */   setEngineParent: () => (/* binding */ setEngineParent)\n/* harmony export */ });\n/**\n@module @ember/engine\n*/\n\nconst ENGINE_PARENT = Symbol('ENGINE_PARENT');\n\n/**\n  `getEngineParent` retrieves an engine instance's parent instance.\n\n  @method getEngineParent\n  @param {EngineInstance} engine An engine instance.\n  @return {EngineInstance} The parent engine instance.\n  @for @ember/engine\n  @static\n  @private\n*/\nfunction getEngineParent(engine) {\n  return engine[ENGINE_PARENT];\n}\n\n/**\n  `setEngineParent` sets an engine instance's parent instance.\n\n  @method setEngineParent\n  @param {EngineInstance} engine An engine instance.\n  @param {EngineInstance} parent The parent engine instance.\n  @private\n*/\nfunction setEngineParent(engine, parent) {\n  engine[ENGINE_PARENT] = parent;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/engine/lib/engine-parent.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/index.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/index.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Enumerable)\n/* harmony export */ });\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n\n\n/**\n@module @ember/enumerable\n@private\n*/\n\n/**\n  The methods in this mixin have been moved to [MutableArray](/ember/release/classes/MutableArray). This mixin has\n  been intentionally preserved to avoid breaking Enumerable.detect checks\n  until the community migrates away from them.\n\n  @class Enumerable\n  @private\n*/\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\nconst Enumerable = _object_mixin_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create();\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js":
/*!**********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MutableEnumerable)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/index.js\");\n/* harmony import */ var _object_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n\n\n\n/**\n@module ember\n*/\n\n/**\n  The methods in this mixin have been moved to MutableArray. This mixin has\n  been intentionally preserved to avoid breaking MutableEnumerable.detect\n  checks until the community migrates away from them.\n\n  @class MutableEnumerable\n  @namespace Ember\n  @uses Enumerable\n  @private\n*/\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\nconst MutableEnumerable = _object_mixin_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create(_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/instrumentation/index.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/instrumentation/index.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _instrumentStart: () => (/* binding */ _instrumentStart),\n/* harmony export */   flaggedInstrument: () => (/* binding */ flaggedInstrument),\n/* harmony export */   instrument: () => (/* binding */ instrument),\n/* harmony export */   reset: () => (/* binding */ reset),\n/* harmony export */   subscribe: () => (/* binding */ subscribe),\n/* harmony export */   subscribers: () => (/* binding */ subscribers),\n/* harmony export */   unsubscribe: () => (/* binding */ unsubscribe)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n\n\n/* eslint no-console:off */\n/* global console */\n\n/**\n@module @ember/instrumentation\n@private\n*/\n\n/**\n  The purpose of the Ember Instrumentation module is\n  to provide efficient, general-purpose instrumentation\n  for Ember.\n\n  Subscribe to a listener by using `subscribe`:\n\n  ```javascript\n  import { subscribe } from '@ember/instrumentation';\n\n  subscribe(\"render\", {\n    before(name, timestamp, payload) {\n\n    },\n\n    after(name, timestamp, payload) {\n\n    }\n  });\n  ```\n\n  If you return a value from the `before` callback, that same\n  value will be passed as a fourth parameter to the `after`\n  callback.\n\n  Instrument a block of code by using `instrument`:\n\n  ```javascript\n  import { instrument } from '@ember/instrumentation';\n\n  instrument(\"render.handlebars\", payload, function() {\n    // rendering logic\n  }, binding);\n  ```\n\n  Event names passed to `instrument` are namespaced\n  by periods, from more general to more specific. Subscribers\n  can listen for events by whatever level of granularity they\n  are interested in.\n\n  In the above example, the event is `render.handlebars`,\n  and the subscriber listened for all events beginning with\n  `render`. It would receive callbacks for events named\n  `render`, `render.handlebars`, `render.container`, or\n  even `render.handlebars.layout`.\n\n  @class Instrumentation\n  @static\n  @private\n*/\nlet subscribers = [];\nlet cache = {};\nfunction populateListeners(name) {\n  let listeners = [];\n  for (let subscriber of subscribers) {\n    if (subscriber.regex.test(name)) {\n      listeners.push(subscriber.object);\n    }\n  }\n  cache[name] = listeners;\n  return listeners;\n}\nconst time = (() => {\n  let perf = 'undefined' !== typeof window ? window.performance || {} : {};\n  let fn = perf.now || perf.mozNow || perf.webkitNow || perf.msNow || perf.oNow;\n  return fn ? fn.bind(perf) : Date.now;\n})();\nfunction isCallback(value) {\n  return typeof value === 'function';\n}\n\n/**\n  Notifies event's subscribers, calls `before` and `after` hooks.\n\n  @method instrument\n  @for @ember/instrumentation\n  @static\n  @param {String} [name] Namespaced event name.\n  @param {Object} payload\n  @param {Function} callback Function that you're instrumenting.\n  @param {Object} binding Context that instrument function is called with.\n  @private\n*/\n\nfunction instrument(name, p1, p2, p3) {\n  let _payload;\n  let callback;\n  let binding;\n  if (arguments.length <= 3 && isCallback(p1)) {\n    callback = p1;\n    binding = p2;\n  } else {\n    _payload = p1;\n    callback = p2;\n    binding = p3;\n  }\n\n  // fast path\n  if (subscribers.length === 0) {\n    return callback.call(binding);\n  }\n\n  // avoid allocating the payload in fast path\n  let payload = _payload || {};\n  let finalizer = _instrumentStart(name, () => payload);\n  if (finalizer === NOOP) {\n    return callback.call(binding);\n  } else {\n    return withFinalizer(callback, finalizer, payload, binding);\n  }\n}\nfunction flaggedInstrument(_name, _payload, callback) {\n  return callback();\n}\nfunction withFinalizer(callback, finalizer, payload, binding) {\n  try {\n    return callback.call(binding);\n  } catch (e) {\n    payload.exception = e;\n    throw e;\n  } finally {\n    finalizer();\n  }\n}\nfunction NOOP() {}\n\n// private for now\n\nfunction _instrumentStart(name, payloadFunc, payloadArg) {\n  if (subscribers.length === 0) {\n    return NOOP;\n  }\n  let listeners = cache[name];\n  if (!listeners) {\n    listeners = populateListeners(name);\n  }\n  if (listeners.length === 0) {\n    return NOOP;\n  }\n  let payload = payloadFunc(payloadArg);\n  let STRUCTURED_PROFILE = _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.E.STRUCTURED_PROFILE;\n  let timeName;\n  if (STRUCTURED_PROFILE) {\n    timeName = `${name}: ${payload.object}`;\n    console.time(timeName);\n  }\n  let beforeValues = [];\n  let timestamp = time();\n  for (let listener of listeners) {\n    beforeValues.push(listener.before(name, timestamp, payload));\n  }\n  const constListeners = listeners;\n  return function _instrumentEnd() {\n    let timestamp = time();\n    for (let i = 0; i < constListeners.length; i++) {\n      let listener = constListeners[i];\n       true && !listener && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('has listener', listener); // Iterating over values\n      if (typeof listener.after === 'function') {\n        listener.after(name, timestamp, payload, beforeValues[i]);\n      }\n    }\n    if (STRUCTURED_PROFILE) {\n      console.timeEnd(timeName);\n    }\n  };\n}\n\n/**\n  Subscribes to a particular event or instrumented block of code.\n\n  @method subscribe\n  @for @ember/instrumentation\n  @static\n\n  @param {String} [pattern] Namespaced event name.\n  @param {Object} [object] Before and After hooks.\n\n  @return {Subscriber}\n  @private\n*/\nfunction subscribe(pattern, object) {\n  let paths = pattern.split('.');\n  let regexes = [];\n  for (let path of paths) {\n    if (path === '*') {\n      regexes.push('[^\\\\.]*');\n    } else {\n      regexes.push(path);\n    }\n  }\n  let regex = regexes.join('\\\\.');\n  regex = `${regex}(\\\\..*)?`;\n  let subscriber = {\n    pattern,\n    regex: new RegExp(`^${regex}$`),\n    object\n  };\n  subscribers.push(subscriber);\n  cache = {};\n  return subscriber;\n}\n\n/**\n  Unsubscribes from a particular event or instrumented block of code.\n\n  @method unsubscribe\n  @for @ember/instrumentation\n  @static\n\n  @param {Object} [subscriber]\n  @private\n*/\nfunction unsubscribe(subscriber) {\n  let index = 0;\n  for (let i = 0; i < subscribers.length; i++) {\n    if (subscribers[i] === subscriber) {\n      index = i;\n    }\n  }\n  subscribers.splice(index, 1);\n  cache = {};\n}\n\n/**\n  Resets `Instrumentation` by flushing list of subscribers.\n\n  @method reset\n  @for @ember/instrumentation\n  @static\n  @private\n*/\nfunction reset() {\n  subscribers.length = 0;\n  cache = {};\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/instrumentation/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/-internals.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/-internals.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FrameworkObject: () => (/* binding */ FrameworkObject),\n/* harmony export */   cacheFor: () => (/* reexport safe */ _shared_chunks_computed_cache_DmYKevAP_js__WEBPACK_IMPORTED_MODULE_9__.g),\n/* harmony export */   guidFor: () => (/* reexport safe */ _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__.g)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/to-string-D8i3mjEU.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/to-string-D8i3mjEU.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_computed_cache_DmYKevAP_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../shared-chunks/computed_cache-DmYKevAP.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/computed_cache-DmYKevAP.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nlet FrameworkObject = class FrameworkObject extends _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_11__.E {};\nif (true) {\n  const INIT_WAS_CALLED = Symbol('INIT_WAS_CALLED');\n  let ASSERT_INIT_WAS_CALLED = (0,_shared_chunks_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_2__.s)('ASSERT_INIT_WAS_CALLED');\n  FrameworkObject = class DebugFrameworkObject extends _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_11__.E {\n    constructor(...args) {\n      super(...args);\n      (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, INIT_WAS_CALLED, false);\n    }\n    init(properties) {\n      super.init(properties);\n      this[INIT_WAS_CALLED] = true;\n    }\n    [ASSERT_INIT_WAS_CALLED]() {\n       true && !this[INIT_WAS_CALLED] && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__.a)(`You must call \\`super.init(...arguments);\\` or \\`this._super(...arguments)\\` when overriding \\`init\\` on a framework object. Please update ${this} to call \\`super.init(...arguments);\\` from \\`init\\` when using native classes or \\`this._super(...arguments)\\` when using \\`EmberObject.extend()\\`.`, this[INIT_WAS_CALLED]);\n    }\n  };\n  (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.z)(FrameworkObject.prototype, 'init', null, ASSERT_INIT_WAS_CALLED);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/-internals.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/compat.js":
/*!*****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/compat.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dependentKeyCompat: () => (/* binding */ dependentKeyCompat)\n/* harmony export */ });\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n\n\n\n\n\n\nlet wrapGetterSetter = function (target, key, desc) {\n  let {\n    get: originalGet\n  } = desc;\n   true && !((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(target, key) === undefined) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('You attempted to use @dependentKeyCompat on a property that already has been decorated with either @computed or @tracked. @dependentKeyCompat is only necessary for native getters that are not decorated with @computed.', (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(target, key) === undefined);\n  if (originalGet !== undefined) {\n    desc.get = function () {\n      let propertyTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.tagFor)(this, key);\n      let ret;\n      let tag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.track)(() => {\n        ret = originalGet.call(this);\n      });\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.updateTag)(propertyTag, tag);\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.consumeTag)(tag);\n      return ret;\n    };\n  }\n  return desc;\n};\n\n/**\n  `@dependentKeyCompat` is decorator that can be used on _native getters_ that\n  use tracked properties. It exposes the getter to Ember's classic computed\n  property and observer systems, so they can watch it for changes. It can be\n  used in both native and classic classes.\n\n  Native Example:\n\n  ```js\n  import { tracked } from '@glimmer/tracking';\n  import { dependentKeyCompat } from '@ember/object/compat';\n  import { computed, set } from '@ember/object';\n\n  class Person {\n    @tracked firstName;\n    @tracked lastName;\n\n    @dependentKeyCompat\n    get fullName() {\n      return `${this.firstName} ${this.lastName}`;\n    }\n  }\n\n  class Profile {\n    constructor(person) {\n      set(this, 'person', person);\n    }\n\n    @computed('person.fullName')\n    get helloMessage() {\n      return `Hello, ${this.person.fullName}!`;\n    }\n  }\n  ```\n\n  Classic Example:\n\n  ```js\n  import { tracked } from '@glimmer/tracking';\n  import { dependentKeyCompat } from '@ember/object/compat';\n  import EmberObject, { computed, observer, set } from '@ember/object';\n\n  const Person = EmberObject.extend({\n    firstName: tracked(),\n    lastName: tracked(),\n\n    fullName: dependentKeyCompat(function() {\n      return `${this.firstName} ${this.lastName}`;\n    }),\n  });\n\n  const Profile = EmberObject.extend({\n    person: null,\n\n    helloMessage: computed('person.fullName', function() {\n      return `Hello, ${this.person.fullName}!`;\n    }),\n\n    onNameUpdated: observer('person.fullName', function() {\n      console.log('person name updated!');\n    }),\n  });\n  ```\n\n  `dependentKeyCompat()` can receive a getter function or an object containing\n  `get`/`set` methods when used in classic classes, like computed properties.\n\n  In general, only properties which you _expect_ to be watched by older,\n  untracked clases should be marked as dependency compatible. The decorator is\n  meant as an interop layer for parts of Ember's older classic APIs, and should\n  not be applied to every possible getter/setter in classes. The number of\n  dependency compatible getters should be _minimized_ wherever possible. New\n  application code should not need to use `@dependentKeyCompat`, since it is\n  only for interoperation with older code.\n\n  @public\n  @method dependentKeyCompat\n  @for @ember/object/compat\n  @static\n  @param {PropertyDescriptor|undefined} desc A property descriptor containing\n                                             the getter and setter (when used in\n                                             classic classes)\n  @return {PropertyDecorator} property decorator instance\n */\n\nfunction dependentKeyCompat(...args) {\n  if ((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.i)(args)) {\n    let [target, key, desc] = args;\n     true && !(desc != null && (typeof desc.get === 'function' || typeof desc.set === 'function')) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('The @dependentKeyCompat decorator must be applied to getters/setters when used in native classes', desc != null && (typeof desc.get === 'function' || typeof desc.set === 'function'));\n    return wrapGetterSetter(target, key, desc);\n  } else {\n    const desc = args[0];\n     true && !(value => {\n      if (value && typeof value === 'object') {\n        let cast = value;\n        return (cast.configurable === undefined || cast.configurable === false || cast.configurable === true) && (cast.enumerable === undefined || cast.enumerable === false || cast.enumerable === true) && (cast.writable === undefined || cast.writable === false || cast.writable === true) && (cast.get === undefined || typeof cast.get === 'function') && (cast.set === undefined || typeof cast.set === 'function');\n      }\n      return false;\n    })(desc) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('expected valid PropertyDescriptor', (value => {\n      if (value && typeof value === 'object') {\n        let cast = value;\n        return (cast.configurable === undefined || cast.configurable === false || cast.configurable === true) && (cast.enumerable === undefined || cast.enumerable === false || cast.enumerable === true) && (cast.writable === undefined || cast.writable === false || cast.writable === true) && (cast.get === undefined || typeof cast.get === 'function') && (cast.set === undefined || typeof cast.set === 'function');\n      }\n      return false;\n    })(desc));\n    let decorator = function (target, key, _desc, _meta, isClassicDecorator) {\n       true && !isClassicDecorator && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('The @dependentKeyCompat decorator may only be passed a method when used in classic classes. You should decorate getters/setters directly in native classes', isClassicDecorator);\n       true && !(typeof desc.get === 'function' || typeof desc.set === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('The dependentKeyCompat() decorator must be passed a getter or setter when used in classic classes', typeof desc.get === 'function' || typeof desc.set === 'function');\n      return wrapGetterSetter(target, key, desc);\n    };\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.L)(decorator);\n    return decorator;\n  }\n}\n(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.L)(dependentKeyCompat);\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/compat.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/computed.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/computed.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alias: () => (/* reexport safe */ _shared_chunks_alias_By_2yu5c_js__WEBPACK_IMPORTED_MODULE_2__.a),\n/* harmony export */   and: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.and),\n/* harmony export */   bool: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.bool),\n/* harmony export */   collect: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.collect),\n/* harmony export */   \"default\": () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.C),\n/* harmony export */   deprecatingAlias: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.deprecatingAlias),\n/* harmony export */   empty: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.empty),\n/* harmony export */   equal: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.equal),\n/* harmony export */   expandProperties: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   filter: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.filter),\n/* harmony export */   filterBy: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.filterBy),\n/* harmony export */   gt: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.gt),\n/* harmony export */   gte: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.gte),\n/* harmony export */   intersect: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.intersect),\n/* harmony export */   lt: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.lt),\n/* harmony export */   lte: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.lte),\n/* harmony export */   map: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.map),\n/* harmony export */   mapBy: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.mapBy),\n/* harmony export */   match: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.match),\n/* harmony export */   max: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.max),\n/* harmony export */   min: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.min),\n/* harmony export */   none: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.none),\n/* harmony export */   not: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.not),\n/* harmony export */   notEmpty: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.notEmpty),\n/* harmony export */   oneWay: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.oneWay),\n/* harmony export */   or: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.or),\n/* harmony export */   readOnly: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.readOnly),\n/* harmony export */   reads: () => (/* reexport safe */ _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__.oneWay),\n/* harmony export */   setDiff: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.setDiff),\n/* harmony export */   sort: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.sort),\n/* harmony export */   sum: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.sum),\n/* harmony export */   union: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.union),\n/* harmony export */   uniq: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.uniq),\n/* harmony export */   uniqBy: () => (/* reexport safe */ _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__.uniqBy)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_alias_By_2yu5c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/alias-By_2yu5c.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/alias-By_2yu5c.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/computed/computed_macros.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/lib/computed/computed_macros.js\");\n/* harmony import */ var _lib_computed_reduce_computed_macros_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lib/computed/reduce_computed_macros.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/lib/computed/reduce_computed_macros.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/computed.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/evented.js":
/*!******************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/evented.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Evented),\n/* harmony export */   on: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.K)\n/* harmony export */ });\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _mixin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/object/evented\n*/\n\n/**\n  This mixin allows for Ember objects to subscribe to and emit events.\n\n  ```app/utils/person.js\n  import EmberObject from '@ember/object';\n  import Evented from '@ember/object/evented';\n\n  export default EmberObject.extend(Evented, {\n    greet() {\n      // ...\n      this.trigger('greet');\n    }\n  });\n  ```\n\n  ```javascript\n  var person = Person.create();\n\n  person.on('greet', function() {\n    console.log('Our person has greeted');\n  });\n\n  person.greet();\n\n  // outputs: 'Our person has greeted'\n  ```\n\n  You can also chain multiple event subscriptions:\n\n  ```javascript\n  person.on('greet', function() {\n    console.log('Our person has greeted');\n  }).one('greet', function() {\n    console.log('Offer one-time special');\n  }).off('event', this, forgetThis);\n  ```\n\n  @class Evented\n  @public\n */\n\nconst Evented = _mixin_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].create({\n  on(name, target, method) {\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.z)(this, name, target, method);\n    return this;\n  },\n  one(name, target, method) {\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.z)(this, name, target, method, true);\n    return this;\n  },\n  trigger(name, ...args) {\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.I)(this, name, args);\n  },\n  off(name, target, method) {\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.A)(this, name, target, method);\n    return this;\n  },\n  has(name) {\n    return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.J)(this, name);\n  }\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/evented.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/index.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   action: () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_11__.b),\n/* harmony export */   computed: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.c),\n/* harmony export */   \"default\": () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_11__.E),\n/* harmony export */   defineProperty: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.d),\n/* harmony export */   get: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.g),\n/* harmony export */   getProperties: () => (/* reexport safe */ _shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_9__.g),\n/* harmony export */   notifyPropertyChange: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.n),\n/* harmony export */   observer: () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_11__.o),\n/* harmony export */   set: () => (/* reexport safe */ _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_8__.s),\n/* harmony export */   setProperties: () => (/* reexport safe */ _shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_9__.s),\n/* harmony export */   trySet: () => (/* reexport safe */ _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_8__.t)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared-chunks/property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../shared-chunks/set_properties-DvalyQdu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/set_properties-DvalyQdu.js\");\n/* harmony import */ var _shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../shared-chunks/registry-DzfcDwii.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/internals.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/internals.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheFor: () => (/* reexport safe */ _shared_chunks_computed_cache_DmYKevAP_js__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   guidFor: () => (/* reexport safe */ _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__.g)\n/* harmony export */ });\n/* harmony import */ var _internals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/-internals.js\");\n/* harmony import */ var _shared_chunks_computed_cache_DmYKevAP_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/computed_cache-DmYKevAP.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/computed_cache-DmYKevAP.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/internals.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/lib/computed/computed_macros.js":
/*!***************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/lib/computed/computed_macros.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   and: () => (/* binding */ and),\n/* harmony export */   bool: () => (/* binding */ bool),\n/* harmony export */   deprecatingAlias: () => (/* binding */ deprecatingAlias),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equal: () => (/* binding */ equal),\n/* harmony export */   gt: () => (/* binding */ gt),\n/* harmony export */   gte: () => (/* binding */ gte),\n/* harmony export */   lt: () => (/* binding */ lt),\n/* harmony export */   lte: () => (/* binding */ lte),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   none: () => (/* binding */ none),\n/* harmony export */   not: () => (/* binding */ not),\n/* harmony export */   notEmpty: () => (/* binding */ notEmpty),\n/* harmony export */   oneWay: () => (/* binding */ oneWay),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   readOnly: () => (/* binding */ readOnly)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_alias_By_2yu5c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared-chunks/alias-By_2yu5c.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/alias-By_2yu5c.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared-chunks/property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _utils_lib_is_none_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../utils/lib/is_none.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_none.js\");\n/* harmony import */ var _utils_lib_is_empty_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../utils/lib/is_empty.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_empty.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../-internals/runtime/lib/mixins/registry_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../-internals/runtime/lib/mixins/container_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../-internals/runtime/lib/mixins/comparable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../-internals/runtime/lib/mixins/action_handler.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../-internals/runtime/lib/mixins/-proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js\");\n/* harmony import */ var _enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../-internals/runtime/lib/mixins/target_action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js\");\n/* harmony import */ var _internals_runtime_lib_ext_rsvp_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../-internals/runtime/lib/ext/rsvp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction expandPropertiesToArray(predicateName, properties) {\n  let expandedProperties = [];\n  function extractProperty(entry) {\n    expandedProperties.push(entry);\n  }\n  for (let property of properties) {\n     true && !(property.indexOf(' ') < 0) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Dependent keys passed to \\`${predicateName}\\` computed macro can't have spaces.`, property.indexOf(' ') < 0);\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.e)(property, extractProperty);\n  }\n  return expandedProperties;\n}\nfunction generateComputedWithPredicate(name, predicate) {\n  return (dependentKey, ...additionalDependentKeys) => {\n    let properties = [dependentKey, ...additionalDependentKeys];\n     true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(properties) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You attempted to use @${name} as a decorator directly, but it requires at least one dependent key parameter`, !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(properties));\n    let dependentKeys = expandPropertiesToArray(name, properties);\n    let computedFunc = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(...dependentKeys, function () {\n      let lastIdx = dependentKeys.length - 1;\n      for (let i = 0; i < lastIdx; i++) {\n        // SAFETY: `i` is derived from the length of `dependentKeys`\n        let value = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKeys[i]);\n        if (!predicate(value)) {\n          return value;\n        }\n      }\n\n      // SAFETY: `lastIdx` is derived from the length of `dependentKeys`\n      return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKeys[lastIdx]);\n    });\n    return computedFunc;\n  };\n}\n\n/**\n  A computed property macro that returns true if the value of the dependent\n  property is null, an empty string, empty array, or empty function.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { empty } from '@ember/object/computed';\n\n  class ToDoList {\n    constructor(todos) {\n      set(this, 'todos', todos);\n    }\n\n    @empty('todos') isDone;\n  }\n\n  let todoList = new ToDoList(\n    ['Unit Test', 'Documentation', 'Release']\n  );\n\n  todoList.isDone; // false\n  set(todoList, 'todos', []);\n  todoList.isDone; // true\n  ```\n\n  @since 1.6.0\n  @method empty\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @return {ComputedProperty} computed property which returns true if the value\n  of the dependent property is null, an empty string, empty array, or empty\n  function and false if the underlying value is not empty.\n\n  @public\n*/\nfunction empty(dependentKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @empty as a decorator directly, but it requires a `dependentKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(`${dependentKey}.length`, function () {\n    return (0,_utils_lib_is_empty_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"])((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey));\n  });\n}\n\n/**\n  A computed property that returns true if the value of the dependent property\n  is NOT null, an empty string, empty array, or empty function.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { notEmpty } from '@ember/object/computed';\n\n  class Hamster {\n    constructor(backpack) {\n      set(this, 'backpack', backpack);\n    }\n\n    @notEmpty('backpack') hasStuff\n  }\n\n  let hamster = new Hamster(\n    ['Food', 'Sleeping Bag', 'Tent']\n  );\n\n  hamster.hasStuff; // true\n  set(hamster, 'backpack', []);\n  hamster.hasStuff; // false\n  ```\n\n  @method notEmpty\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @return {ComputedProperty} computed property which returns true if original\n  value for property is not empty.\n  @public\n*/\nfunction notEmpty(dependentKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @notEmpty as a decorator directly, but it requires a `dependentKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(`${dependentKey}.length`, function () {\n    return !(0,_utils_lib_is_empty_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"])((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey));\n  });\n}\n\n/**\n  A computed property that returns true if the value of the dependent property\n  is null or undefined. This avoids errors from JSLint complaining about use of\n  ==, which can be technically confusing.\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { none } from '@ember/object/computed';\n\n  class Hamster {\n    @none('food') isHungry;\n  }\n\n  let hamster = new Hamster();\n\n  hamster.isHungry; // true\n\n  set(hamster, 'food', 'Banana');\n  hamster.isHungry; // false\n\n  set(hamster, 'food', null);\n  hamster.isHungry; // true\n  ```\n\n  @method none\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @return {ComputedProperty} computed property which returns true if original\n  value for property is null or undefined.\n  @public\n*/\nfunction none(dependentKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @none as a decorator directly, but it requires a `dependentKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(dependentKey, function () {\n    return (0,_utils_lib_is_none_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"])((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey));\n  });\n}\n\n/**\n  A computed property that returns the inverse boolean value of the original\n  value for the dependent property.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { not } from '@ember/object/computed';\n\n  class User {\n    loggedIn = false;\n\n    @not('loggedIn') isAnonymous;\n  }\n\n  let user = new User();\n\n  user.isAnonymous; // true\n  set(user, 'loggedIn', true);\n  user.isAnonymous; // false\n  ```\n\n  @method not\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @return {ComputedProperty} computed property which returns inverse of the\n  original value for property\n  @public\n*/\nfunction not(dependentKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @not as a decorator directly, but it requires a `dependentKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(dependentKey, function () {\n    return !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey);\n  });\n}\n\n/**\n  A computed property that converts the provided dependent property into a\n  boolean value.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { bool } from '@ember/object/computed';\n\n\n  class Hamster {\n    @bool('numBananas') hasBananas\n  }\n\n  let hamster = new Hamster();\n\n  hamster.hasBananas; // false\n\n  set(hamster, 'numBananas', 0);\n  hamster.hasBananas; // false\n\n  set(hamster, 'numBananas', 1);\n  hamster.hasBananas; // true\n\n  set(hamster, 'numBananas', null);\n  hamster.hasBananas; // false\n  ```\n\n  @method bool\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @return {ComputedProperty} computed property which converts to boolean the\n  original value for property\n  @public\n*/\nfunction bool(dependentKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @bool as a decorator directly, but it requires a `dependentKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(dependentKey, function () {\n    return Boolean((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey));\n  });\n}\n\n/**\n  A computed property which matches the original value for the dependent\n  property against a given RegExp, returning `true` if the value matches the\n  RegExp and `false` if it does not.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { match } from '@ember/object/computed';\n\n  class User {\n    @match('email', /^.+@.+\\..+$/) hasValidEmail;\n  }\n\n  let user = new User();\n\n  user.hasValidEmail; // false\n\n  set(user, 'email', '');\n  user.hasValidEmail; // false\n\n  set(user, 'email', 'ember_hamster@example.com');\n  user.hasValidEmail; // true\n  ```\n\n  @method match\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @param {RegExp} regexp\n  @return {ComputedProperty} computed property which match the original value\n  for property against a given RegExp\n  @public\n*/\nfunction match(dependentKey, regexp) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @match as a decorator directly, but it requires `dependentKey` and `regexp` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(dependentKey, function () {\n    let value = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey);\n    return regexp.test(value);\n  });\n}\n\n/**\n  A computed property that returns true if the provided dependent property is\n  equal to the given value.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { equal } from '@ember/object/computed';\n\n  class Hamster {\n    @equal('percentCarrotsEaten', 100) satisfied;\n  }\n\n  let hamster = new Hamster();\n\n  hamster.satisfied; // false\n\n  set(hamster, 'percentCarrotsEaten', 100);\n  hamster.satisfied; // true\n\n  set(hamster, 'percentCarrotsEaten', 50);\n  hamster.satisfied; // false\n  ```\n\n  @method equal\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @param {String|Number|Object} value\n  @return {ComputedProperty} computed property which returns true if the\n  original value for property is equal to the given value.\n  @public\n*/\nfunction equal(dependentKey, value) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @equal as a decorator directly, but it requires `dependentKey` and `value` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(dependentKey, function () {\n    return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey) === value;\n  });\n}\n\n/**\n  A computed property that returns true if the provided dependent property is\n  greater than the provided value.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { gt } from '@ember/object/computed';\n\n  class Hamster {\n    @gt('numBananas', 10) hasTooManyBananas;\n  }\n\n  let hamster = new Hamster();\n\n  hamster.hasTooManyBananas; // false\n\n  set(hamster, 'numBananas', 3);\n  hamster.hasTooManyBananas; // false\n\n  set(hamster, 'numBananas', 11);\n  hamster.hasTooManyBananas; // true\n  ```\n\n  @method gt\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @param {Number} value\n  @return {ComputedProperty} computed property which returns true if the\n  original value for property is greater than given value.\n  @public\n*/\nfunction gt(dependentKey, value) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @gt as a decorator directly, but it requires `dependentKey` and `value` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(dependentKey, function () {\n    return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey) > value;\n  });\n}\n\n/**\n  A computed property that returns true if the provided dependent property is\n  greater than or equal to the provided value.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { gte } from '@ember/object/computed';\n\n  class Hamster {\n    @gte('numBananas', 10) hasTooManyBananas;\n  }\n\n  let hamster = new Hamster();\n\n  hamster.hasTooManyBananas; // false\n\n  set(hamster, 'numBananas', 3);\n  hamster.hasTooManyBananas; // false\n\n  set(hamster, 'numBananas', 10);\n  hamster.hasTooManyBananas; // true\n  ```\n\n  @method gte\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @param {Number} value\n  @return {ComputedProperty} computed property which returns true if the\n  original value for property is greater or equal then given value.\n  @public\n*/\nfunction gte(dependentKey, value) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @gte as a decorator directly, but it requires `dependentKey` and `value` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(dependentKey, function () {\n    return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey) >= value;\n  });\n}\n\n/**\n  A computed property that returns true if the provided dependent property is\n  less than the provided value.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { lt } from '@ember/object/computed';\n\n  class Hamster {\n    @lt('numBananas', 3) needsMoreBananas;\n  }\n\n  let hamster = new Hamster();\n\n  hamster.needsMoreBananas; // true\n\n  set(hamster, 'numBananas', 3);\n  hamster.needsMoreBananas; // false\n\n  set(hamster, 'numBananas', 2);\n  hamster.needsMoreBananas; // true\n  ```\n\n  @method lt\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @param {Number} value\n  @return {ComputedProperty} computed property which returns true if the\n  original value for property is less then given value.\n  @public\n*/\nfunction lt(dependentKey, value) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @lt as a decorator directly, but it requires `dependentKey` and `value` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(dependentKey, function () {\n    return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey) < value;\n  });\n}\n\n/**\n  A computed property that returns true if the provided dependent property is\n  less than or equal to the provided value.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { lte } from '@ember/object/computed';\n\n  class Hamster {\n    @lte('numBananas', 3) needsMoreBananas;\n  }\n\n  let hamster = new Hamster();\n\n  hamster.needsMoreBananas; // true\n\n  set(hamster, 'numBananas', 5);\n  hamster.needsMoreBananas; // false\n\n  set(hamster, 'numBananas', 3);\n  hamster.needsMoreBananas; // true\n  ```\n\n  @method lte\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @param {Number} value\n  @return {ComputedProperty} computed property which returns true if the\n  original value for property is less or equal than given value.\n  @public\n*/\nfunction lte(dependentKey, value) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @lte as a decorator directly, but it requires `dependentKey` and `value` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(dependentKey, function () {\n    return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey) <= value;\n  });\n}\n\n/**\n  A computed property that performs a logical `and` on the original values for\n  the provided dependent properties.\n\n  You may pass in more than two properties and even use property brace\n  expansion.  The computed property will return the first falsy value or last\n  truthy value just like JavaScript's `&&` operator.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { and } from '@ember/object/computed';\n\n  class Hamster {\n    @and('hasTent', 'hasBackpack') readyForCamp;\n    @and('hasWalkingStick', 'hasBackpack') readyForHike;\n  }\n\n  let tomster = new Hamster();\n\n  tomster.readyForCamp; // false\n\n  set(tomster, 'hasTent', true);\n  tomster.readyForCamp; // false\n\n  set(tomster, 'hasBackpack', true);\n  tomster.readyForCamp; // true\n\n  set(tomster, 'hasBackpack', 'Yes');\n  tomster.readyForCamp; // 'Yes'\n\n  set(tomster, 'hasWalkingStick', null);\n  tomster.readyForHike; // null\n  ```\n\n  @method and\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey*\n  @return {ComputedProperty} computed property which performs a logical `and` on\n  the values of all the original values for properties.\n  @public\n*/\nconst and = generateComputedWithPredicate('and', value => value);\n\n/**\n  A computed property which performs a logical `or` on the original values for\n  the provided dependent properties.\n\n  You may pass in more than two properties and even use property brace\n  expansion.  The computed property will return the first truthy value or last\n  falsy value just like JavaScript's `||` operator.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { or } from '@ember/object/computed';\n\n  class Hamster {\n    @or('hasJacket', 'hasUmbrella') readyForRain;\n    @or('hasSunscreen', 'hasUmbrella') readyForBeach;\n  }\n\n  let tomster = new Hamster();\n\n  tomster.readyForRain; // undefined\n\n  set(tomster, 'hasUmbrella', true);\n  tomster.readyForRain; // true\n\n  set(tomster, 'hasJacket', 'Yes');\n  tomster.readyForRain; // 'Yes'\n\n  set(tomster, 'hasSunscreen', 'Check');\n  tomster.readyForBeach; // 'Check'\n  ```\n\n  @method or\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey*\n  @return {ComputedProperty} computed property which performs a logical `or` on\n  the values of all the original values for properties.\n  @public\n*/\nconst or = generateComputedWithPredicate('or', value => !value);\n\n/**\n  Creates a new property that is an alias for another property on an object.\n  Calls to `get` or `set` this property behave as though they were called on the\n  original property.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { alias } from '@ember/object/computed';\n\n  class Person {\n    name = 'Alex Matchneer';\n\n    @alias('name') nomen;\n  }\n\n  let alex = new Person();\n\n  alex.nomen; // 'Alex Matchneer'\n  alex.name;  // 'Alex Matchneer'\n\n  set(alex, 'nomen', '@machty');\n  alex.name;  // '@machty'\n  ```\n\n  @method alias\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @return {ComputedProperty} computed property which creates an alias to the\n  original value for property.\n  @public\n*/\n\n/**\n  Where the `alias` computed macro aliases `get` and `set`, and allows for\n  bidirectional data flow, the `oneWay` computed macro only provides an aliased\n  `get`. The `set` will not mutate the upstream property, rather causes the\n  current property to become the value set. This causes the downstream property\n  to permanently diverge from the upstream property.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { oneWay }from '@ember/object/computed';\n\n  class User {\n    constructor(firstName, lastName) {\n      set(this, 'firstName', firstName);\n      set(this, 'lastName', lastName);\n    }\n\n    @oneWay('firstName') nickName;\n  }\n\n  let teddy = new User('Teddy', 'Zeenny');\n\n  teddy.nickName; // 'Teddy'\n\n  set(teddy, 'nickName', 'TeddyBear');\n  teddy.firstName; // 'Teddy'\n  teddy.nickName; // 'TeddyBear'\n  ```\n\n  @method oneWay\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @return {ComputedProperty} computed property which creates a one way computed\n  property to the original value for property.\n  @public\n*/\nfunction oneWay(dependentKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @oneWay as a decorator directly, but it requires a `dependentKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_alias_By_2yu5c_js__WEBPACK_IMPORTED_MODULE_2__.a)(dependentKey).oneWay();\n}\n\n/**\n  This is a more semantically meaningful alias of the `oneWay` computed macro,\n  whose name is somewhat ambiguous as to which direction the data flows.\n\n  @method reads\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @return {ComputedProperty} computed property which creates a one way computed\n    property to the original value for property.\n  @public\n */\n\n/**\n  Where `oneWay` computed macro provides oneWay bindings, the `readOnly`\n  computed macro provides a readOnly one way binding. Very often when using\n  the `oneWay` macro one does not also want changes to propagate back up, as\n  they will replace the value.\n\n  This prevents the reverse flow, and also throws an exception when it occurs.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { readOnly } from '@ember/object/computed';\n\n  class User {\n    constructor(firstName, lastName) {\n      set(this, 'firstName', firstName);\n      set(this, 'lastName', lastName);\n    }\n\n    @readOnly('firstName') nickName;\n  });\n\n  let teddy = new User('Teddy', 'Zeenny');\n\n  teddy.nickName; // 'Teddy'\n\n  set(teddy, 'nickName', 'TeddyBear'); // throws Exception\n  // throw new EmberError('Cannot Set: nickName on: <User:ember27288>' );`\n\n  teddy.firstName; // 'Teddy'\n  ```\n\n  @method readOnly\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @return {ComputedProperty} computed property which creates a one way computed\n  property to the original value for property.\n  @since 1.5.0\n  @public\n*/\nfunction readOnly(dependentKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @readOnly as a decorator directly, but it requires a `dependentKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_alias_By_2yu5c_js__WEBPACK_IMPORTED_MODULE_2__.a)(dependentKey).readOnly();\n}\n\n/**\n  Creates a new property that is an alias for another property on an object.\n  Calls to `get` or `set` this property behave as though they were called on the\n  original property, but also print a deprecation warning.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { deprecatingAlias } from '@ember/object/computed';\n\n  class Hamster {\n    @deprecatingAlias('cavendishCount', {\n      id: 'hamster.deprecate-banana',\n      until: '3.0.0'\n    })\n    bananaCount;\n  }\n\n  let hamster = new Hamster();\n\n  set(hamster, 'bananaCount', 5); // Prints a deprecation warning.\n  hamster.cavendishCount; // 5\n  ```\n\n  @method deprecatingAlias\n  @static\n  @for @ember/object/computed\n  @param {String} dependentKey\n  @param {Object} options Options for `deprecate`.\n  @return {ComputedProperty} computed property which creates an alias with a\n  deprecation to the original value for property.\n  @since 1.7.0\n  @public\n*/\nfunction deprecatingAlias(dependentKey, options) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use @deprecatingAlias as a decorator directly, but it requires `dependentKey` and `options` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.i)(Array.prototype.slice.call(arguments)));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.c)(dependentKey, {\n    get(key) {\n       true && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.d)(`Usage of \\`${key}\\` is deprecated, use \\`${dependentKey}\\` instead.`, false, options);\n      return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(this, dependentKey);\n    },\n    set(key, value) {\n       true && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.d)(`Usage of \\`${key}\\` is deprecated, use \\`${dependentKey}\\` instead.`, false, options);\n      (0,_shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_4__.s)(this, dependentKey, value);\n      return value;\n    }\n  });\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/lib/computed/computed_macros.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/lib/computed/reduce_computed_macros.js":
/*!**********************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/lib/computed/reduce_computed_macros.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collect: () => (/* binding */ collect),\n/* harmony export */   filter: () => (/* binding */ filter),\n/* harmony export */   filterBy: () => (/* binding */ filterBy),\n/* harmony export */   intersect: () => (/* binding */ intersect),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   mapBy: () => (/* binding */ mapBy),\n/* harmony export */   max: () => (/* binding */ max),\n/* harmony export */   min: () => (/* binding */ min),\n/* harmony export */   setDiff: () => (/* binding */ setDiff),\n/* harmony export */   sort: () => (/* binding */ sort),\n/* harmony export */   sum: () => (/* binding */ sum),\n/* harmony export */   union: () => (/* binding */ union),\n/* harmony export */   uniq: () => (/* binding */ uniq),\n/* harmony export */   uniqBy: () => (/* binding */ uniqBy)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/object\n*/\n\nfunction isNativeOrEmberArray(obj) {\n  return Array.isArray(obj) || _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.a.detect(obj);\n}\nfunction reduceMacro(dependentKey, callback, initialValue, name) {\n   true && !!/[[\\]{}]/g.test(dependentKey) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)(`Dependent key passed to \\`${name}\\` computed macro shouldn't contain brace expanding pattern.`, !/[[\\]{}]/g.test(dependentKey));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.c)(`${dependentKey}.[]`, function () {\n    let arr = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, dependentKey);\n    if (arr === null || typeof arr !== 'object') {\n      return initialValue;\n    }\n    return arr.reduce(callback, initialValue, this);\n  }).readOnly();\n}\nfunction arrayMacro(dependentKey, additionalDependentKeys, callback) {\n  // This is a bit ugly\n  let propertyName;\n  if (/@each/.test(dependentKey)) {\n    propertyName = dependentKey.replace(/\\.@each.*$/, '');\n  } else {\n    propertyName = dependentKey;\n    dependentKey += '.[]';\n  }\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.c)(dependentKey, ...additionalDependentKeys, function () {\n    let value = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, propertyName);\n    if (isNativeOrEmberArray(value)) {\n      return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)(callback.call(this, value));\n    } else {\n      return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)();\n    }\n  }).readOnly();\n}\nfunction multiArrayMacro(_dependentKeys, callback, name) {\n   true && !_dependentKeys.every(dependentKey => !/[[\\]{}]/g.test(dependentKey)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)(`Dependent keys passed to \\`${name}\\` computed macro shouldn't contain brace expanding pattern.`, _dependentKeys.every(dependentKey => !/[[\\]{}]/g.test(dependentKey)));\n  let dependentKeys = _dependentKeys.map(key => `${key}.[]`);\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.c)(...dependentKeys, function () {\n    return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)(callback.call(this, _dependentKeys));\n  }).readOnly();\n}\n\n/**\n  A computed property that returns the sum of the values in the dependent array.\n\n  Example:\n\n  ```javascript\n  import { sum } from '@ember/object/computed';\n\n  class Invoice {\n    lineItems = [1.00, 2.50, 9.99];\n\n    @sum('lineItems') total;\n  }\n\n  let invoice = new Invoice();\n\n  invoice.total; // 13.49\n  ```\n\n  @method sum\n  @for @ember/object/computed\n  @static\n  @param {String} dependentKey\n  @return {ComputedProperty} computes the sum of all values in the\n  dependentKey's array\n  @since 1.4.0\n  @public\n*/\nfunction sum(dependentKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @sum as a decorator directly, but it requires a `dependentKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n  return reduceMacro(dependentKey, (sum, item) => sum + item, 0, 'sum');\n}\n\n/**\n  A computed property that calculates the maximum value in the dependent array.\n  This will return `-Infinity` when the dependent array is empty.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { mapBy, max } from '@ember/object/computed';\n\n  class Person {\n    children = [];\n\n    @mapBy('children', 'age') childAges;\n    @max('childAges') maxChildAge;\n  }\n\n  let lordByron = new Person();\n\n  lordByron.maxChildAge; // -Infinity\n\n  set(lordByron, 'children', [\n    {\n      name: 'Augusta Ada Byron',\n      age: 7\n    }\n  ]);\n  lordByron.maxChildAge; // 7\n\n  set(lordByron, 'children', [\n    ...lordByron.children,\n    {\n      name: 'Allegra Byron',\n      age: 5\n    }, {\n      name: 'Elizabeth Medora Leigh',\n      age: 8\n    }\n  ]);\n  lordByron.maxChildAge; // 8\n  ```\n\n  If the types of the arguments are not numbers, they will be converted to\n  numbers and the type of the return value will always be `Number`. For example,\n  the max of a list of Date objects will be the highest timestamp as a `Number`.\n  This behavior is consistent with `Math.max`.\n\n  @method max\n  @for @ember/object/computed\n  @static\n  @param {String} dependentKey\n  @return {ComputedProperty} computes the largest value in the dependentKey's\n  array\n  @public\n*/\nfunction max(dependentKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @max as a decorator directly, but it requires a `dependentKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n  return reduceMacro(dependentKey, (max, item) => Math.max(max, item), -Infinity, 'max');\n}\n\n/**\n  A computed property that calculates the minimum value in the dependent array.\n  This will return `Infinity` when the dependent array is empty.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { mapBy, min } from '@ember/object/computed';\n\n  class Person {\n    children = [];\n\n    @mapBy('children', 'age') childAges;\n    @min('childAges') minChildAge;\n  }\n\n  let lordByron = Person.create({ children: [] });\n\n  lordByron.minChildAge; // Infinity\n\n  set(lordByron, 'children', [\n    {\n      name: 'Augusta Ada Byron',\n      age: 7\n    }\n  ]);\n  lordByron.minChildAge; // 7\n\n  set(lordByron, 'children', [\n    ...lordByron.children,\n    {\n      name: 'Allegra Byron',\n      age: 5\n    }, {\n      name: 'Elizabeth Medora Leigh',\n      age: 8\n    }\n  ]);\n  lordByron.minChildAge; // 5\n  ```\n\n  If the types of the arguments are not numbers, they will be converted to\n  numbers and the type of the return value will always be `Number`. For example,\n  the min of a list of Date objects will be the lowest timestamp as a `Number`.\n  This behavior is consistent with `Math.min`.\n\n  @method min\n  @for @ember/object/computed\n  @static\n  @param {String} dependentKey\n  @return {ComputedProperty} computes the smallest value in the dependentKey's array\n  @public\n*/\nfunction min(dependentKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @min as a decorator directly, but it requires a `dependentKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n  return reduceMacro(dependentKey, (min, item) => Math.min(min, item), Infinity, 'min');\n}\n\n/**\n  Returns an array mapped via the callback\n\n  The callback method you provide should have the following signature:\n  - `item` is the current item in the iteration.\n  - `index` is the integer index of the current item in the iteration.\n\n  ```javascript\n  function mapCallback(item, index);\n  ```\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { map } from '@ember/object/computed';\n\n  class Hamster {\n    constructor(chores) {\n      set(this, 'chores', chores);\n    }\n\n    @map('chores', function(chore, index) {\n      return `${chore.toUpperCase()}!`;\n    })\n    excitingChores;\n  });\n\n  let hamster = new Hamster(['clean', 'write more unit tests']);\n\n  hamster.excitingChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n  ```\n\n  You can optionally pass an array of additional dependent keys as the second\n  parameter to the macro, if your map function relies on any external values:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { map } from '@ember/object/computed';\n\n  class Hamster {\n    shouldUpperCase = false;\n\n    constructor(chores) {\n      set(this, 'chores', chores);\n    }\n\n    @map('chores', ['shouldUpperCase'], function(chore, index) {\n      if (this.shouldUpperCase) {\n        return `${chore.toUpperCase()}!`;\n      } else {\n        return `${chore}!`;\n      }\n    })\n    excitingChores;\n  }\n\n  let hamster = new Hamster(['clean', 'write more unit tests']);\n\n  hamster.excitingChores; // ['clean!', 'write more unit tests!']\n\n  set(hamster, 'shouldUpperCase', true);\n  hamster.excitingChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n  ```\n\n  @method map\n  @for @ember/object/computed\n  @static\n  @param {String} dependentKey\n  @param {Array} [additionalDependentKeys] optional array of additional\n  dependent keys\n  @param {Function} callback\n  @return {ComputedProperty} an array mapped via the callback\n  @public\n*/\n\nfunction map(dependentKey, additionalDependentKeysOrCallback, callback) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @map as a decorator directly, but it requires atleast `dependentKey` and `callback` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n   true && !(typeof callback === 'function' || callback === undefined && typeof additionalDependentKeysOrCallback === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('The final parameter provided to map must be a callback function', typeof callback === 'function' || callback === undefined && typeof additionalDependentKeysOrCallback === 'function');\n   true && !(Array.isArray(additionalDependentKeysOrCallback) || typeof additionalDependentKeysOrCallback === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('The second parameter provided to map must either be the callback or an array of additional dependent keys', Array.isArray(additionalDependentKeysOrCallback) || typeof additionalDependentKeysOrCallback === 'function');\n  let additionalDependentKeys;\n  if (typeof additionalDependentKeysOrCallback === 'function') {\n    callback = additionalDependentKeysOrCallback;\n    additionalDependentKeys = [];\n  } else {\n    additionalDependentKeys = additionalDependentKeysOrCallback;\n  }\n  const cCallback = callback;\n   true && !cCallback && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('[BUG] Missing callback', cCallback);\n  return arrayMacro(dependentKey, additionalDependentKeys, function (value) {\n    // This is so dumb...\n    return Array.isArray(value) ? value.map(cCallback, this) : value.map(cCallback, this);\n  });\n}\n\n/**\n  Returns an array mapped to the specified key.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { mapBy } from '@ember/object/computed';\n\n  class Person {\n    children = [];\n\n    @mapBy('children', 'age') childAges;\n  }\n\n  let lordByron = new Person();\n\n  lordByron.childAges; // []\n\n  set(lordByron, 'children', [\n    {\n      name: 'Augusta Ada Byron',\n      age: 7\n    }\n  ]);\n  lordByron.childAges; // [7]\n\n  set(lordByron, 'children', [\n    ...lordByron.children,\n    {\n      name: 'Allegra Byron',\n      age: 5\n    }, {\n      name: 'Elizabeth Medora Leigh',\n      age: 8\n    }\n  ]);\n  lordByron.childAges; // [7, 5, 8]\n  ```\n\n  @method mapBy\n  @for @ember/object/computed\n  @static\n  @param {String} dependentKey\n  @param {String} propertyKey\n  @return {ComputedProperty} an array mapped to the specified key\n  @public\n*/\nfunction mapBy(dependentKey, propertyKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @mapBy as a decorator directly, but it requires `dependentKey` and `propertyKey` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n   true && !(typeof propertyKey === 'string') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('`mapBy` computed macro expects a property string for its second argument, ' + 'perhaps you meant to use \"map\"', typeof propertyKey === 'string');\n   true && !!/[[\\]{}]/g.test(dependentKey) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)(`Dependent key passed to \\`mapBy\\` computed macro shouldn't contain brace expanding pattern.`, !/[[\\]{}]/g.test(dependentKey));\n  return map(`${dependentKey}.@each.${propertyKey}`, item => (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(item, propertyKey));\n}\n\n/**\n  Filters the array by the callback, like the `Array.prototype.filter` method.\n\n  The callback method you provide should have the following signature:\n  - `item` is the current item in the iteration.\n  - `index` is the integer index of the current item in the iteration.\n  - `array` is the dependant array itself.\n\n  ```javascript\n  function filterCallback(item, index, array);\n  ```\n\n  In the callback, return a truthy value that coerces to true to keep the\n  element, or a falsy to reject it.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { filter } from '@ember/object/computed';\n\n  class Hamster {\n    constructor(chores) {\n      set(this, 'chores', chores);\n    }\n\n    @filter('chores', function(chore, index, array) {\n      return !chore.done;\n    })\n    remainingChores;\n  }\n\n  let hamster = Hamster.create([\n    { name: 'cook', done: true },\n    { name: 'clean', done: true },\n    { name: 'write more unit tests', done: false }\n  ]);\n\n  hamster.remainingChores; // [{name: 'write more unit tests', done: false}]\n  ```\n\n  You can also use `@each.property` in your dependent key, the callback will\n  still use the underlying array:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { filter } from '@ember/object/computed';\n\n  class Hamster {\n    constructor(chores) {\n      set(this, 'chores', chores);\n    }\n\n    @filter('chores.@each.done', function(chore, index, array) {\n      return !chore.done;\n    })\n    remainingChores;\n  }\n\n  let hamster = new Hamster([\n    { name: 'cook', done: true },\n    { name: 'clean', done: true },\n    { name: 'write more unit tests', done: false }\n  ]);\n  hamster.remainingChores; // [{name: 'write more unit tests', done: false}]\n\n  set(hamster.chores[2], 'done', true);\n  hamster.remainingChores; // []\n  ```\n\n  Finally, you can optionally pass an array of additional dependent keys as the\n  second parameter to the macro, if your filter function relies on any external\n  values:\n\n  ```javascript\n  import { filter } from '@ember/object/computed';\n\n  class Hamster {\n    constructor(chores) {\n      set(this, 'chores', chores);\n    }\n\n    doneKey = 'finished';\n\n    @filter('chores', ['doneKey'], function(chore, index, array) {\n      return !chore[this.doneKey];\n    })\n    remainingChores;\n  }\n\n  let hamster = new Hamster([\n    { name: 'cook', finished: true },\n    { name: 'clean', finished: true },\n    { name: 'write more unit tests', finished: false }\n  ]);\n\n  hamster.remainingChores; // [{name: 'write more unit tests', finished: false}]\n  ```\n\n  @method filter\n  @for @ember/object/computed\n  @static\n  @param {String} dependentKey\n  @param {Array} [additionalDependentKeys] optional array of additional dependent keys\n  @param {Function} callback\n  @return {ComputedProperty} the filtered array\n  @public\n*/\n\nfunction filter(dependentKey, additionalDependentKeysOrCallback, callback) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @filter as a decorator directly, but it requires atleast `dependentKey` and `callback` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n   true && !(typeof callback === 'function' || callback === undefined && typeof additionalDependentKeysOrCallback === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('The final parameter provided to filter must be a callback function', typeof callback === 'function' || callback === undefined && typeof additionalDependentKeysOrCallback === 'function');\n   true && !(Array.isArray(additionalDependentKeysOrCallback) || typeof additionalDependentKeysOrCallback === 'function') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('The second parameter provided to filter must either be the callback or an array of additional dependent keys', Array.isArray(additionalDependentKeysOrCallback) || typeof additionalDependentKeysOrCallback === 'function');\n  let additionalDependentKeys;\n  if (typeof additionalDependentKeysOrCallback === 'function') {\n    callback = additionalDependentKeysOrCallback;\n    additionalDependentKeys = [];\n  } else {\n    additionalDependentKeys = additionalDependentKeysOrCallback;\n  }\n  const cCallback = callback;\n  return arrayMacro(dependentKey, additionalDependentKeys, function (value) {\n    // This is a really silly way to keep TS happy\n    return Array.isArray(value) ? value.filter(cCallback, this) : value.filter(cCallback, this);\n  });\n}\n\n/**\n  Filters the array by the property and value.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { filterBy } from '@ember/object/computed';\n\n  class Hamster {\n    constructor(chores) {\n      set(this, 'chores', chores);\n    }\n\n    @filterBy('chores', 'done', false) remainingChores;\n  }\n\n  let hamster = new Hamster([\n    { name: 'cook', done: true },\n    { name: 'clean', done: true },\n    { name: 'write more unit tests', done: false }\n  ]);\n\n  hamster.remainingChores; // [{ name: 'write more unit tests', done: false }]\n  ```\n\n  @method filterBy\n  @for @ember/object/computed\n  @static\n  @param {String} dependentKey\n  @param {String} propertyKey\n  @param {*} value\n  @return {ComputedProperty} the filtered array\n  @public\n*/\nfunction filterBy(dependentKey, propertyKey, value) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @filterBy as a decorator directly, but it requires atleast `dependentKey` and `propertyKey` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n   true && !!/[[\\]{}]/g.test(dependentKey) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)(`Dependent key passed to \\`filterBy\\` computed macro shouldn't contain brace expanding pattern.`, !/[[\\]{}]/g.test(dependentKey));\n  let callback;\n  if (arguments.length === 2) {\n    callback = item => (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(item, propertyKey);\n  } else {\n    callback = item => (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(item, propertyKey) === value;\n  }\n  return filter(`${dependentKey}.@each.${propertyKey}`, callback);\n}\n\n/**\n  A computed property which returns a new array with all the unique elements\n  from one or more dependent arrays.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { uniq } from '@ember/object/computed';\n\n  class Hamster {\n    constructor(fruits) {\n      set(this, 'fruits', fruits);\n    }\n\n    @uniq('fruits') uniqueFruits;\n  }\n\n  let hamster = new Hamster([\n    'banana',\n    'grape',\n    'kale',\n    'banana'\n  ]);\n\n  hamster.uniqueFruits; // ['banana', 'grape', 'kale']\n  ```\n\n  @method uniq\n  @for @ember/object/computed\n  @static\n  @param {String} propertyKey*\n  @return {ComputedProperty} computes a new array with all the\n  unique elements from the dependent array\n  @public\n*/\nfunction uniq(dependentKey, ...additionalDependentKeys) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @uniq/@union as a decorator directly, but it requires atleast one dependent key parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n  let args = [dependentKey, ...additionalDependentKeys];\n  return multiArrayMacro(args, function (dependentKeys) {\n    let uniq = (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)();\n    let seen = new Set();\n    dependentKeys.forEach(dependentKey => {\n      let value = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, dependentKey);\n      if (isNativeOrEmberArray(value)) {\n        value.forEach(item => {\n          if (!seen.has(item)) {\n            seen.add(item);\n            uniq.push(item);\n          }\n        });\n      }\n    });\n    return uniq;\n  }, 'uniq');\n}\n\n/**\n  A computed property which returns a new array with all the unique elements\n  from an array, with uniqueness determined by specific key.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { uniqBy } from '@ember/object/computed';\n\n  class Hamster {\n    constructor(fruits) {\n      set(this, 'fruits', fruits);\n    }\n\n    @uniqBy('fruits', 'id') uniqueFruits;\n  }\n\n  let hamster = new Hamster([\n    { id: 1, 'banana' },\n    { id: 2, 'grape' },\n    { id: 3, 'peach' },\n    { id: 1, 'banana' }\n  ]);\n\n  hamster.uniqueFruits; // [ { id: 1, 'banana' }, { id: 2, 'grape' }, { id: 3, 'peach' }]\n  ```\n\n  @method uniqBy\n  @for @ember/object/computed\n  @static\n  @param {String} dependentKey\n  @param {String} propertyKey\n  @return {ComputedProperty} computes a new array with all the\n  unique elements from the dependent array\n  @public\n*/\nfunction uniqBy(dependentKey, propertyKey) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @uniqBy as a decorator directly, but it requires `dependentKey` and `propertyKey` parameters', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n   true && !!/[[\\]{}]/g.test(dependentKey) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)(`Dependent key passed to \\`uniqBy\\` computed macro shouldn't contain brace expanding pattern.`, !/[[\\]{}]/g.test(dependentKey));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.c)(`${dependentKey}.[]`, function () {\n    let list = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, dependentKey);\n    return isNativeOrEmberArray(list) ? (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.u)(list, propertyKey) : (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)();\n  }).readOnly();\n}\n\n/**\n  A computed property which returns a new array with all the unique elements\n  from one or more dependent arrays.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { union } from '@ember/object/computed';\n\n  class Hamster {\n    constructor(fruits, vegetables) {\n      set(this, 'fruits', fruits);\n      set(this, 'vegetables', vegetables);\n    }\n\n    @union('fruits', 'vegetables') uniqueFruits;\n  });\n\n  let hamster = new, Hamster(\n    [\n      'banana',\n      'grape',\n      'kale',\n      'banana',\n      'tomato'\n    ],\n    [\n      'tomato',\n      'carrot',\n      'lettuce'\n    ]\n  );\n\n  hamster.uniqueFruits; // ['banana', 'grape', 'kale', 'tomato', 'carrot', 'lettuce']\n  ```\n\n  @method union\n  @for @ember/object/computed\n  @static\n  @param {String} propertyKey*\n  @return {ComputedProperty} computes a new array with all the unique elements\n  from one or more dependent arrays.\n  @public\n*/\nlet union = uniq;\n\n/**\n  A computed property which returns a new array with all the elements\n  two or more dependent arrays have in common.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { intersect } from '@ember/object/computed';\n\n  class FriendGroups {\n    constructor(adaFriends, charlesFriends) {\n      set(this, 'adaFriends', adaFriends);\n      set(this, 'charlesFriends', charlesFriends);\n    }\n\n    @intersect('adaFriends', 'charlesFriends') friendsInCommon;\n  }\n\n  let groups = new FriendGroups(\n    ['Charles Babbage', 'John Hobhouse', 'William King', 'Mary Somerville'],\n    ['William King', 'Mary Somerville', 'Ada Lovelace', 'George Peacock']\n  );\n\n  groups.friendsInCommon; // ['William King', 'Mary Somerville']\n  ```\n\n  @method intersect\n  @for @ember/object/computed\n  @static\n  @param {String} propertyKey*\n  @return {ComputedProperty} computes a new array with all the duplicated\n  elements from the dependent arrays\n  @public\n*/\nfunction intersect(dependentKey, ...additionalDependentKeys) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @intersect as a decorator directly, but it requires atleast one dependent key parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n  let args = [dependentKey, ...additionalDependentKeys];\n  return multiArrayMacro(args, function (dependentKeys) {\n    let arrays = dependentKeys.map(dependentKey => {\n      let array = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, dependentKey);\n      return Array.isArray(array) ? array : [];\n    });\n    let firstArray = arrays.pop();\n     true && !firstArray && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('Attempted to apply multiArrayMacro for intersect without any dependentKeys', firstArray);\n    let results = firstArray.filter(candidate => {\n      for (let array of arrays) {\n        let found = false;\n        for (let item of array) {\n          if (item === candidate) {\n            found = true;\n            break;\n          }\n        }\n        if (found === false) {\n          return false;\n        }\n      }\n      return true;\n    });\n    return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)(results);\n  }, 'intersect');\n}\n\n/**\n  A computed property which returns a new array with all the properties from the\n  first dependent array that are not in the second dependent array.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { setDiff } from '@ember/object/computed';\n\n  class Hamster {\n    constructor(likes, fruits) {\n      set(this, 'likes', likes);\n      set(this, 'fruits', fruits);\n    }\n\n    @setDiff('likes', 'fruits') wants;\n  }\n\n  let hamster = new Hamster(\n    [\n      'banana',\n      'grape',\n      'kale'\n    ],\n    [\n      'grape',\n      'kale',\n    ]\n  );\n\n  hamster.wants; // ['banana']\n  ```\n\n  @method setDiff\n  @for @ember/object/computed\n  @static\n  @param {String} setAProperty\n  @param {String} setBProperty\n  @return {ComputedProperty} computes a new array with all the items from the\n  first dependent array that are not in the second dependent array\n  @public\n*/\nfunction setDiff(setAProperty, setBProperty) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @setDiff as a decorator directly, but it requires atleast one dependent key parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n   true && !(arguments.length === 2) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('`setDiff` computed macro requires exactly two dependent arrays.', arguments.length === 2);\n   true && !(!/[[\\]{}]/g.test(setAProperty) && !/[[\\]{}]/g.test(setBProperty)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)(`Dependent keys passed to \\`setDiff\\` computed macro shouldn't contain brace expanding pattern.`, !/[[\\]{}]/g.test(setAProperty) && !/[[\\]{}]/g.test(setBProperty));\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.c)(`${setAProperty}.[]`, `${setBProperty}.[]`, function () {\n    let setA = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, setAProperty);\n    let setB = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, setBProperty);\n    if (!isNativeOrEmberArray(setA)) {\n      return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)();\n    }\n    if (!isNativeOrEmberArray(setB)) {\n      return setA;\n    }\n    return setA.filter(x => setB.indexOf(x) === -1);\n  }).readOnly();\n}\n\n/**\n  A computed property that returns the array of values for the provided\n  dependent properties.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { collect } from '@ember/object/computed';\n\n  class Hamster {\n    @collect('hat', 'shirt') clothes;\n  }\n\n  let hamster = new Hamster();\n\n  hamster.clothes; // [null, null]\n\n  set(hamster, 'hat', 'Camp Hat');\n  set(hamster, 'shirt', 'Camp Shirt');\n  hamster.clothes; // ['Camp Hat', 'Camp Shirt']\n  ```\n\n  @method collect\n  @for @ember/object/computed\n  @static\n  @param {String} dependentKey*\n  @return {ComputedProperty} computed property which maps values of all passed\n  in properties to an array.\n  @public\n*/\nfunction collect(dependentKey, ...additionalDependentKeys) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @collect as a decorator directly, but it requires atleast one dependent key parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n  let dependentKeys = [dependentKey, ...additionalDependentKeys];\n  return multiArrayMacro(dependentKeys, function () {\n    let res = dependentKeys.map(key => {\n      let val = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, key);\n      return val === undefined ? null : val;\n    });\n    return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)(res);\n  }, 'collect');\n}\n\n// (UN)SAFETY: we use `any` here to match how TS defines the sorting for arrays.\n// Additionally, since we're using it with *decorators*, we don't have any way\n// to plumb through the relationship between the types in a way that would be\n// variance-safe.\n\n/**\n  A computed property which returns a new array with all the properties from the\n  first dependent array sorted based on a property or sort function. The sort\n  macro can be used in two different ways:\n\n  1. By providing a sort callback function\n  2. By providing an array of keys to sort the array\n\n  In the first form, the callback method you provide should have the following\n  signature:\n\n  ```javascript\n  function sortCallback(itemA, itemB);\n  ```\n\n  - `itemA` the first item to compare.\n  - `itemB` the second item to compare.\n\n  This function should return negative number (e.g. `-1`) when `itemA` should\n  come before `itemB`. It should return positive number (e.g. `1`) when `itemA`\n  should come after `itemB`. If the `itemA` and `itemB` are equal this function\n  should return `0`.\n\n  Therefore, if this function is comparing some numeric values, simple `itemA -\n  itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used instead of\n  series of `if`.\n\n  Example:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { sort } from '@ember/object/computed';\n\n  class ToDoList {\n    constructor(todos) {\n      set(this, 'todos', todos);\n    }\n\n    // using a custom sort function\n    @sort('todos', function(a, b){\n      if (a.priority > b.priority) {\n        return 1;\n      } else if (a.priority < b.priority) {\n        return -1;\n      }\n\n      return 0;\n    })\n    priorityTodos;\n  }\n\n  let todoList = new ToDoList([\n    { name: 'Unit Test', priority: 2 },\n    { name: 'Documentation', priority: 3 },\n    { name: 'Release', priority: 1 }\n  ]);\n\n  todoList.priorityTodos; // [{ name:'Release', priority:1 }, { name:'Unit Test', priority:2 }, { name:'Documentation', priority:3 }]\n  ```\n\n  You can also optionally pass an array of additional dependent keys as the\n  second parameter, if your sort function is dependent on additional values that\n  could changes:\n\n  ```js\n  import EmberObject, { set } from '@ember/object';\n  import { sort } from '@ember/object/computed';\n\n  class ToDoList {\n    sortKey = 'priority';\n\n    constructor(todos) {\n      set(this, 'todos', todos);\n    }\n\n    // using a custom sort function\n    @sort('todos', ['sortKey'], function(a, b){\n      if (a[this.sortKey] > b[this.sortKey]) {\n        return 1;\n      } else if (a[this.sortKey] < b[this.sortKey]) {\n        return -1;\n      }\n\n      return 0;\n    })\n    sortedTodos;\n  });\n\n  let todoList = new ToDoList([\n    { name: 'Unit Test', priority: 2 },\n    { name: 'Documentation', priority: 3 },\n    { name: 'Release', priority: 1 }\n  ]);\n\n  todoList.priorityTodos; // [{ name:'Release', priority:1 }, { name:'Unit Test', priority:2 }, { name:'Documentation', priority:3 }]\n  ```\n\n  In the second form, you should provide the key of the array of sort values as\n  the second parameter:\n\n  ```javascript\n  import { set } from '@ember/object';\n  import { sort } from '@ember/object/computed';\n\n  class ToDoList {\n    constructor(todos) {\n      set(this, 'todos', todos);\n    }\n\n    // using standard ascending sort\n    todosSorting = ['name'];\n    @sort('todos', 'todosSorting') sortedTodos;\n\n    // using descending sort\n    todosSortingDesc = ['name:desc'];\n    @sort('todos', 'todosSortingDesc') sortedTodosDesc;\n  }\n\n  let todoList = new ToDoList([\n    { name: 'Unit Test', priority: 2 },\n    { name: 'Documentation', priority: 3 },\n    { name: 'Release', priority: 1 }\n  ]);\n\n  todoList.sortedTodos; // [{ name:'Documentation', priority:3 }, { name:'Release', priority:1 }, { name:'Unit Test', priority:2 }]\n  todoList.sortedTodosDesc; // [{ name:'Unit Test', priority:2 }, { name:'Release', priority:1 }, { name:'Documentation', priority:3 }]\n  ```\n\n  @method sort\n  @for @ember/object/computed\n  @static\n  @param {String} itemsKey\n  @param {String|Function|Array} sortDefinitionOrDependentKeys The key of the sort definition (an array of sort properties),\n  the sort function, or an array of additional dependent keys\n  @param {Function?} sortDefinition the sort function (when used with additional dependent keys)\n  @return {ComputedProperty} computes a new sorted array based on the sort\n  property array or callback function\n  @public\n*/\n\nfunction sort(itemsKey, additionalDependentKeysOrDefinition, sortDefinition) {\n   true && !!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('You attempted to use @sort as a decorator directly, but it requires atleast an `itemsKey` parameter', !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.i)(Array.prototype.slice.call(arguments)));\n  if (true) {\n    let argumentsValid = false;\n    if (arguments.length === 2) {\n      argumentsValid = typeof itemsKey === 'string' && (typeof additionalDependentKeysOrDefinition === 'string' || typeof additionalDependentKeysOrDefinition === 'function');\n    }\n    if (arguments.length === 3) {\n      argumentsValid = typeof itemsKey === 'string' && Array.isArray(additionalDependentKeysOrDefinition) && typeof sortDefinition === 'function';\n    }\n     true && !argumentsValid && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)('The `sort` computed macro can either be used with an array of sort properties or with a sort function. If used with an array of sort properties, it must receive exactly two arguments: the key of the array to sort, and the key of the array of sort properties. If used with a sort function, it may receive up to three arguments: the key of the array to sort, an optional additional array of dependent keys for the computed property, and the sort function.', argumentsValid);\n  }\n  let additionalDependentKeys;\n  let sortDefinitionOrString;\n  if (Array.isArray(additionalDependentKeysOrDefinition)) {\n    additionalDependentKeys = additionalDependentKeysOrDefinition;\n    sortDefinitionOrString = sortDefinition;\n  } else {\n    additionalDependentKeys = [];\n    sortDefinitionOrString = additionalDependentKeysOrDefinition;\n  }\n  if (typeof sortDefinitionOrString === 'function') {\n    return customSort(itemsKey, additionalDependentKeys, sortDefinitionOrString);\n  } else {\n    return propertySort(itemsKey, sortDefinitionOrString);\n  }\n}\nfunction customSort(itemsKey, additionalDependentKeys, comparator) {\n  return arrayMacro(itemsKey, additionalDependentKeys, function (value) {\n    return value.slice().sort((x, y) => comparator.call(this, x, y));\n  });\n}\n\n// This one needs to dynamically set up and tear down observers on the itemsKey\n// depending on the sortProperties\nfunction propertySort(itemsKey, sortPropertiesKey) {\n  let cp = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.Y)(function (key) {\n    let sortProperties = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, sortPropertiesKey);\n     true && !function (arr) {\n      return isNativeOrEmberArray(arr) && arr.every(s => typeof s === 'string');\n    }(sortProperties) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__.a)(`The sort definition for '${key}' on ${this} must be a function or an array of strings`, function (arr) {\n      return isNativeOrEmberArray(arr) && arr.every(s => typeof s === 'string');\n    }(sortProperties));\n    let itemsKeyIsAtThis = itemsKey === '@this';\n    let normalizedSortProperties = normalizeSortProperties(sortProperties);\n    let items = itemsKeyIsAtThis ? this : (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(this, itemsKey);\n    if (!isNativeOrEmberArray(items)) {\n      return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)();\n    }\n    if (normalizedSortProperties.length === 0) {\n      return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)(items.slice());\n    } else {\n      return sortByNormalizedSortProperties(items, normalizedSortProperties);\n    }\n  }).readOnly();\n  return cp;\n}\nfunction normalizeSortProperties(sortProperties) {\n  let callback = p => {\n    let [prop, direction] = p.split(':');\n    direction = direction || 'asc';\n\n    // SAFETY: There will always be at least one value returned by split\n    return [prop, direction];\n  };\n  // This nonsense is necessary since technically the two map implementations diverge.\n  return Array.isArray(sortProperties) ? sortProperties.map(callback) : sortProperties.map(callback);\n}\nfunction sortByNormalizedSortProperties(items, normalizedSortProperties) {\n  return (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.A)(items.slice().sort((itemA, itemB) => {\n    for (let [prop, direction] of normalizedSortProperties) {\n      let result = (0,_shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_8__.c)((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(itemA, prop), (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_1__.g)(itemB, prop));\n      if (result !== 0) {\n        return direction === 'desc' ? -1 * result : result;\n      }\n    }\n    return 0;\n  }));\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/lib/computed/reduce_computed_macros.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyMixin: () => (/* binding */ applyMixin),\n/* harmony export */   \"default\": () => (/* binding */ Mixin),\n/* harmony export */   mixin: () => (/* binding */ mixin)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/registry-DzfcDwii.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../shared-chunks/namespace_search-CBgHTkDh.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/namespace_search-CBgHTkDh.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/object/mixin\n*/\nconst a_concat = Array.prototype.concat;\nconst {\n  isArray\n} = Array;\nfunction extractAccessors(properties) {\n  if (properties !== undefined) {\n    for (let key of Object.keys(properties)) {\n      let desc = Object.getOwnPropertyDescriptor(properties, key);\n      if (desc.get !== undefined || desc.set !== undefined) {\n        Object.defineProperty(properties, key, {\n          value: (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.q)(desc)\n        });\n      }\n    }\n  }\n  return properties;\n}\nfunction concatenatedMixinProperties(concatProp, props, values, base) {\n  // reset before adding each new mixin to pickup concats from previous\n  let concats = values[concatProp] || base[concatProp];\n  if (props[concatProp]) {\n    concats = concats ? a_concat.call(concats, props[concatProp]) : props[concatProp];\n  }\n  return concats;\n}\nfunction giveDecoratorSuper(key, decorator, property, descs) {\n  if (property === true) {\n    return decorator;\n  }\n  let originalGetter = property._getter;\n  if (originalGetter === undefined) {\n    return decorator;\n  }\n  let superDesc = descs[key];\n\n  // Check to see if the super property is a decorator first, if so load its descriptor\n  let superProperty = typeof superDesc === 'function' ? (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.v)(superDesc) : superDesc;\n  if (superProperty === undefined || superProperty === true) {\n    return decorator;\n  }\n  let superGetter = superProperty._getter;\n  if (superGetter === undefined) {\n    return decorator;\n  }\n  let get = (0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__.w)(originalGetter, superGetter);\n  let set;\n  let originalSetter = property._setter;\n  let superSetter = superProperty._setter;\n  if (superSetter !== undefined) {\n    if (originalSetter !== undefined) {\n      set = (0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__.w)(originalSetter, superSetter);\n    } else {\n      // If the super property has a setter, we default to using it no matter what.\n      // This is clearly very broken and weird, but it's what was here so we have\n      // to keep it until the next major at least.\n      //\n      // TODO: Add a deprecation here.\n      set = superSetter;\n    }\n  } else {\n    set = originalSetter;\n  }\n\n  // only create a new CP if we must\n  if (get !== originalGetter || set !== originalSetter) {\n    // Since multiple mixins may inherit from the same parent, we need\n    // to clone the computed property so that other mixins do not receive\n    // the wrapped version.\n    let dependentKeys = property._dependentKeys || [];\n    let newProperty = new _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.C([...dependentKeys, {\n      get,\n      set\n    }]);\n    newProperty._readOnly = property._readOnly;\n    newProperty._meta = property._meta;\n    newProperty.enumerable = property.enumerable;\n\n    // SAFETY: We passed in the impl for this class\n    return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.w)(newProperty, _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.C);\n  }\n  return decorator;\n}\nfunction giveMethodSuper(key, method, values, descs) {\n  // Methods overwrite computed properties, and do not call super to them.\n  if (descs[key] !== undefined) {\n    return method;\n  }\n\n  // Find the original method in a parent mixin\n  let superMethod = values[key];\n\n  // Only wrap the new method if the original method was a function\n  if (typeof superMethod === 'function') {\n    return (0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__.w)(method, superMethod);\n  }\n  return method;\n}\nfunction simpleMakeArray(value) {\n  if (!value) {\n    return [];\n  } else if (!Array.isArray(value)) {\n    return [value];\n  } else {\n    return value;\n  }\n}\nfunction applyConcatenatedProperties(key, value, values) {\n  let baseValue = values[key];\n  let ret = simpleMakeArray(baseValue).concat(simpleMakeArray(value));\n  if (true) {\n    // it is possible to use concatenatedProperties with strings (which cannot be frozen)\n    // only freeze objects...\n    if (typeof ret === 'object' && ret !== null) {\n      // prevent mutating `concatenatedProperties` array after it is applied\n      Object.freeze(ret);\n    }\n  }\n  return ret;\n}\nfunction applyMergedProperties(key, value, values) {\n  let baseValue = values[key];\n   true && !!isArray(value) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__.a)(`You passed in \\`${JSON.stringify(value)}\\` as the value for \\`${key}\\` but \\`${key}\\` cannot be an Array`, !isArray(value));\n  if (!baseValue) {\n    return value;\n  }\n  let newBase = Object.assign({}, baseValue);\n  let hasFunction = false;\n  let props = Object.keys(value);\n  for (let prop of props) {\n    let propValue = value[prop];\n    if (typeof propValue === 'function') {\n      hasFunction = true;\n      newBase[prop] = giveMethodSuper(prop, propValue, baseValue, {});\n    } else {\n      newBase[prop] = propValue;\n    }\n  }\n  if (hasFunction) {\n    newBase._super = _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__.R;\n  }\n  return newBase;\n}\nfunction mergeMixins(mixins, meta, descs, values, base, keys, keysWithSuper) {\n  let currentMixin;\n  for (let i = 0; i < mixins.length; i++) {\n    currentMixin = mixins[i];\n     true && !(typeof currentMixin === 'object' && currentMixin !== null && Object.prototype.toString.call(currentMixin) !== '[object Array]') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__.a)(`Expected hash or Mixin instance, got ${Object.prototype.toString.call(currentMixin)}`, typeof currentMixin === 'object' && currentMixin !== null && Object.prototype.toString.call(currentMixin) !== '[object Array]');\n    if (MIXINS.has(currentMixin)) {\n      if (meta.hasMixin(currentMixin)) {\n        continue;\n      }\n      meta.addMixin(currentMixin);\n      let {\n        properties,\n        mixins\n      } = currentMixin;\n      if (properties !== undefined) {\n        mergeProps(meta, properties, descs, values, base, keys, keysWithSuper);\n      } else if (mixins !== undefined) {\n        mergeMixins(mixins, meta, descs, values, base, keys, keysWithSuper);\n        if (currentMixin instanceof Mixin && currentMixin._without !== undefined) {\n          currentMixin._without.forEach(keyName => {\n            // deleting the key means we won't process the value\n            let index = keys.indexOf(keyName);\n            if (index !== -1) {\n              keys.splice(index, 1);\n            }\n          });\n        }\n      }\n    } else {\n      mergeProps(meta, currentMixin, descs, values, base, keys, keysWithSuper);\n    }\n  }\n}\nfunction mergeProps(meta, props, descs, values, base, keys, keysWithSuper) {\n  let concats = concatenatedMixinProperties('concatenatedProperties', props, values, base);\n  let mergings = concatenatedMixinProperties('mergedProperties', props, values, base);\n  let propKeys = Object.keys(props);\n  for (let key of propKeys) {\n    let value = props[key];\n    if (value === undefined) continue;\n    if (keys.indexOf(key) === -1) {\n      keys.push(key);\n      let desc = meta.peekDescriptors(key);\n      if (desc === undefined) {\n        // If the value is a classic decorator, we don't want to actually\n        // access it, because that will execute the decorator while we're\n        // building the class.\n        if (!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.u)(value)) {\n          // The superclass did not have a CP, which means it may have\n          // observers or listeners on that property.\n          let prev = values[key] = base[key];\n          if (typeof prev === 'function') {\n            updateObserversAndListeners(base, key, prev, false);\n          }\n        }\n      } else {\n        descs[key] = desc;\n\n        // The super desc will be overwritten on descs, so save off the fact that\n        // there was a super so we know to Object.defineProperty when writing\n        // the value\n        keysWithSuper.push(key);\n        desc.teardown(base, key, meta);\n      }\n    }\n    let isFunction = typeof value === 'function';\n    if (isFunction) {\n      let desc = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.v)(value);\n      if (desc !== undefined) {\n        // Wrap descriptor function to implement _super() if needed\n        descs[key] = giveDecoratorSuper(key, value, desc, descs);\n        values[key] = undefined;\n        continue;\n      }\n    }\n    if (concats && concats.indexOf(key) >= 0 || key === 'concatenatedProperties' || key === 'mergedProperties') {\n      value = applyConcatenatedProperties(key, value, values);\n    } else if (mergings && mergings.indexOf(key) > -1) {\n      value = applyMergedProperties(key, value, values);\n    } else if (isFunction) {\n      value = giveMethodSuper(key, value, values, descs);\n    }\n    values[key] = value;\n    descs[key] = undefined;\n  }\n}\nfunction updateObserversAndListeners(obj, key, fn, add) {\n  let meta = (0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__.o)(fn);\n  if (meta === undefined) return;\n  let {\n    observers,\n    listeners\n  } = meta;\n  if (observers !== undefined) {\n    let updateObserver = add ? _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.x : _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.y;\n    for (let path of observers.paths) {\n      updateObserver(obj, path, null, key, observers.sync);\n    }\n  }\n  if (listeners !== undefined) {\n    let updateListener = add ? _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.z : _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.A;\n    for (let listener of listeners) {\n      updateListener(obj, listener, null, key);\n    }\n  }\n}\nfunction applyMixin(obj, mixins, _hideKeys = false) {\n  let descs = Object.create(null);\n  let values = Object.create(null);\n  let meta$1 = (0,_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_2__.meta)(obj);\n  let keys = [];\n  let keysWithSuper = [];\n  obj._super = _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__.R;\n\n  // Go through all mixins and hashes passed in, and:\n  //\n  // * Handle concatenated properties\n  // * Handle merged properties\n  // * Set up _super wrapping if necessary\n  // * Set up computed property descriptors\n  // * Copying `toString` in broken browsers\n  mergeMixins(mixins, meta$1, descs, values, obj, keys, keysWithSuper);\n  for (let key of keys) {\n    let value = values[key];\n    let desc = descs[key];\n    if (value !== undefined) {\n      if (typeof value === 'function') {\n        updateObserversAndListeners(obj, key, value, true);\n      }\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.o)(obj, key, value, keysWithSuper.indexOf(key) !== -1, !_hideKeys);\n    } else if (desc !== undefined) {\n      (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.p)(obj, key, desc, meta$1);\n    }\n  }\n  if (!meta$1.isPrototypeMeta(obj)) {\n    (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.r)(obj);\n  }\n  return obj;\n}\n\n/**\n  @method mixin\n  @param obj\n  @param mixins*\n  @return obj\n  @private\n*/\nfunction mixin(obj, ...args) {\n  applyMixin(obj, args);\n  return obj;\n}\nconst MIXINS = new WeakSet();\n\n/**\n  The `Mixin` class allows you to create mixins, whose properties can be\n  added to other classes. For instance,\n\n  ```javascript\n  import Mixin from '@ember/object/mixin';\n\n  const EditableMixin = Mixin.create({\n    edit() {\n      console.log('starting to edit');\n      this.set('isEditing', true);\n    },\n    isEditing: false\n  });\n  ```\n\n  ```javascript\n  import EmberObject from '@ember/object';\n  import EditableMixin from '../mixins/editable';\n\n  // Mix mixins into classes by passing them as the first arguments to\n  // `.extend.`\n  const Comment = EmberObject.extend(EditableMixin, {\n    post: null\n  });\n\n  let comment = Comment.create({\n    post: somePost\n  });\n\n  comment.edit(); // outputs 'starting to edit'\n  ```\n\n  Note that Mixins are created with `Mixin.create`, not\n  `Mixin.extend`.\n\n  Note that mixins extend a constructor's prototype so arrays and object literals\n  defined as properties will be shared amongst objects that implement the mixin.\n  If you want to define a property in a mixin that is not shared, you can define\n  it either as a computed property or have it be created on initialization of the object.\n\n  ```javascript\n  // filters array will be shared amongst any object implementing mixin\n  import Mixin from '@ember/object/mixin';\n  import { A } from '@ember/array';\n\n  const FilterableMixin = Mixin.create({\n    filters: A()\n  });\n  ```\n\n  ```javascript\n  import Mixin from '@ember/object/mixin';\n  import { A } from '@ember/array';\n  import { computed } from '@ember/object';\n\n  // filters will be a separate array for every object implementing the mixin\n  const FilterableMixin = Mixin.create({\n    filters: computed(function() {\n      return A();\n    })\n  });\n  ```\n\n  ```javascript\n  import Mixin from '@ember/object/mixin';\n  import { A } from '@ember/array';\n\n  // filters will be created as a separate array during the object's initialization\n  const Filterable = Mixin.create({\n    filters: null,\n\n    init() {\n      this._super(...arguments);\n      this.set(\"filters\", A());\n    }\n  });\n  ```\n\n  @class Mixin\n  @public\n*/\nclass Mixin {\n  /** @internal */\n  constructor(mixins, properties) {\n    /** @internal */\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"mixins\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"properties\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"ownerConstructor\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_without\", void 0);\n    MIXINS.add(this);\n    this.properties = extractAccessors(properties);\n    this.mixins = buildMixinsArray(mixins);\n    this.ownerConstructor = undefined;\n    this._without = undefined;\n    if (true) {\n      // Eagerly add INIT_FACTORY to avoid issues in DEBUG as a result of Object.seal(mixin)\n      this[_shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_1__.I] = null;\n      /*\n        In debug builds, we seal mixins to help avoid performance pitfalls.\n         In IE11 there is a quirk that prevents sealed objects from being added\n        to a WeakMap. Unfortunately, the mixin system currently relies on\n        weak maps in `guidFor`, so we need to prime the guid cache weak map.\n      */\n      (0,_shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__.g)(this);\n      if (Mixin._disableDebugSeal !== true) {\n        Object.seal(this);\n      }\n    }\n  }\n\n  /**\n    @method create\n    @for @ember/object/mixin\n    @static\n    @param arguments*\n    @public\n  */\n  static create(...args) {\n    (0,_shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_9__.s)();\n    let M = this;\n    return new M(args, undefined);\n  }\n\n  // returns the mixins currently applied to the specified object\n  // TODO: Make `mixin`\n  /** @internal */\n  static mixins(obj) {\n    let meta = (0,_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_2__.peekMeta)(obj);\n    let ret = [];\n    if (meta === null) {\n      return ret;\n    }\n    meta.forEachMixins(currentMixin => {\n      // skip primitive mixins since these are always anonymous\n      if (!currentMixin.properties) {\n        ret.push(currentMixin);\n      }\n    });\n    return ret;\n  }\n\n  /**\n    @method reopen\n    @param arguments*\n    @private\n    @internal\n  */\n  reopen(...args) {\n    if (args.length === 0) {\n      return this;\n    }\n    if (this.properties) {\n      let currentMixin = new Mixin(undefined, this.properties);\n      this.properties = undefined;\n      this.mixins = [currentMixin];\n    } else if (!this.mixins) {\n      this.mixins = [];\n    }\n    this.mixins = this.mixins.concat(buildMixinsArray(args));\n    return this;\n  }\n\n  /**\n    @method apply\n    @param obj\n    @return applied object\n    @private\n    @internal\n  */\n  apply(obj, _hideKeys = false) {\n    // Ember.NativeArray is a normal Ember.Mixin that we mix into `Array.prototype` when prototype extensions are enabled\n    // mutating a native object prototype like this should _not_ result in enumerable properties being added (or we have significant\n    // issues with things like deep equality checks from test frameworks, or things like jQuery.extend(true, [], [])).\n    //\n    // _hideKeys disables enumerablity when applying the mixin. This is a hack, and we should stop mutating the array prototype by default 😫\n    return applyMixin(obj, [this], _hideKeys);\n  }\n\n  /** @internal */\n  applyPartial(obj) {\n    return applyMixin(obj, [this]);\n  }\n\n  /**\n    @method detect\n    @param obj\n    @return {Boolean}\n    @private\n    @internal\n  */\n  detect(obj) {\n    if (typeof obj !== 'object' || obj === null) {\n      return false;\n    }\n    if (MIXINS.has(obj)) {\n      return _detect(obj, this);\n    }\n    let meta = (0,_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_2__.peekMeta)(obj);\n    if (meta === null) {\n      return false;\n    }\n    return meta.hasMixin(this);\n  }\n\n  /** @internal */\n  without(...args) {\n    let ret = new Mixin([this]);\n    ret._without = args;\n    return ret;\n  }\n\n  /** @internal */\n  keys() {\n    let keys = _keys(this);\n     true && !keys && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__.a)('[BUG] Missing keys for mixin!', keys);\n    return keys;\n  }\n\n  /** @internal */\n  toString() {\n    return '(unknown mixin)';\n  }\n}\nif (true) {\n  Object.defineProperty(Mixin, '_disableDebugSeal', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: false\n  });\n}\nfunction buildMixinsArray(mixins) {\n  let length = mixins && mixins.length || 0;\n  let m = undefined;\n  if (length > 0) {\n    m = new Array(length);\n    for (let i = 0; i < length; i++) {\n      let x = mixins[i];\n       true && !(typeof x === 'object' && x !== null && Object.prototype.toString.call(x) !== '[object Array]') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__.a)(`Expected hash or Mixin instance, got ${Object.prototype.toString.call(x)}`, typeof x === 'object' && x !== null && Object.prototype.toString.call(x) !== '[object Array]');\n      if (MIXINS.has(x)) {\n        m[i] = x;\n      } else {\n        m[i] = new Mixin(undefined, x);\n      }\n    }\n  }\n  return m;\n}\nif (true) {\n  Object.seal(Mixin.prototype);\n}\nfunction _detect(curMixin, targetMixin, seen = new Set()) {\n  if (seen.has(curMixin)) {\n    return false;\n  }\n  seen.add(curMixin);\n  if (curMixin === targetMixin) {\n    return true;\n  }\n  let mixins = curMixin.mixins;\n  if (mixins) {\n    return mixins.some(mixin => _detect(mixin, targetMixin, seen));\n  }\n  return false;\n}\nfunction _keys(mixin, ret = new Set(), seen = new Set()) {\n  if (seen.has(mixin)) {\n    return;\n  }\n  seen.add(mixin);\n  if (mixin.properties) {\n    let props = Object.keys(mixin.properties);\n    for (let prop of props) {\n      ret.add(prop);\n    }\n  } else if (mixin.mixins) {\n    mixin.mixins.forEach(x => _keys(x, ret, seen));\n  }\n  return ret;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/observers.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/observers.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addObserver: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.x),\n/* harmony export */   removeObserver: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.y)\n/* harmony export */ });\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/observers.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/promise-proxy-mixin.js":
/*!******************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/promise-proxy-mixin.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PromiseProxyMixin)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../shared-chunks/set_properties-DvalyQdu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/set_properties-DvalyQdu.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n  @module @ember/object/promise-proxy-mixin\n*/\n\nfunction tap(proxy, promise) {\n  (0,_shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_9__.s)(proxy, {\n    isFulfilled: false,\n    isRejected: false\n  });\n  return promise.then(value => {\n    if (!proxy.isDestroyed && !proxy.isDestroying) {\n      (0,_shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_9__.s)(proxy, {\n        content: value,\n        isFulfilled: true\n      });\n    }\n    return value;\n  }, reason => {\n    if (!proxy.isDestroyed && !proxy.isDestroying) {\n      (0,_shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_9__.s)(proxy, {\n        reason,\n        isRejected: true\n      });\n    }\n    throw reason;\n  }, 'Ember: PromiseProxy');\n}\n\n/**\n  A low level mixin making ObjectProxy promise-aware.\n\n  ```javascript\n  import { resolve } from 'rsvp';\n  import $ from 'jquery';\n  import ObjectProxy from '@ember/object/proxy';\n  import PromiseProxyMixin from '@ember/object/promise-proxy-mixin';\n\n  let ObjectPromiseProxy = ObjectProxy.extend(PromiseProxyMixin);\n\n  let proxy = ObjectPromiseProxy.create({\n    promise: resolve($.getJSON('/some/remote/data.json'))\n  });\n\n  proxy.then(function(json){\n     // the json\n  }, function(reason) {\n     // the reason why you have no json\n  });\n  ```\n\n  the proxy has bindable attributes which\n  track the promises life cycle\n\n  ```javascript\n  proxy.get('isPending')   //=> true\n  proxy.get('isSettled')  //=> false\n  proxy.get('isRejected')  //=> false\n  proxy.get('isFulfilled') //=> false\n  ```\n\n  When the $.getJSON completes, and the promise is fulfilled\n  with json, the life cycle attributes will update accordingly.\n  Note that $.getJSON doesn't return an ECMA specified promise,\n  it is useful to wrap this with an `RSVP.resolve` so that it behaves\n  as a spec compliant promise.\n\n  ```javascript\n  proxy.get('isPending')   //=> false\n  proxy.get('isSettled')   //=> true\n  proxy.get('isRejected')  //=> false\n  proxy.get('isFulfilled') //=> true\n  ```\n\n  As the proxy is an ObjectProxy, and the json now its content,\n  all the json properties will be available directly from the proxy.\n\n  ```javascript\n  // Assuming the following json:\n  {\n    firstName: 'Stefan',\n    lastName: 'Penner'\n  }\n\n  // both properties will accessible on the proxy\n  proxy.get('firstName') //=> 'Stefan'\n  proxy.get('lastName')  //=> 'Penner'\n  ```\n\n  @class PromiseProxyMixin\n  @public\n*/\n\nconst PromiseProxyMixin = _mixin_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n  reason: null,\n  isPending: (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.c)('isSettled', function () {\n    return !(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.g)(this, 'isSettled');\n  }).readOnly(),\n  isSettled: (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.c)('isRejected', 'isFulfilled', function () {\n    return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.g)(this, 'isRejected') || (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.g)(this, 'isFulfilled');\n  }).readOnly(),\n  isRejected: false,\n  isFulfilled: false,\n  promise: (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.c)({\n    get() {\n      throw new Error(\"PromiseProxy's promise must be set\");\n    },\n    set(_key, promise) {\n      return tap(this, promise);\n    }\n  }),\n  then: promiseAlias('then'),\n  catch: promiseAlias('catch'),\n  finally: promiseAlias('finally')\n});\nfunction promiseAlias(name) {\n  return function (...args) {\n    let promise = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.g)(this, 'promise');\n\n    // We need this cast because `Parameters` is deferred so that it is not\n    // possible for TS to see it will always produce the right type. However,\n    // since `AnyFn` has a rest type, it is allowed. See discussion on [this\n    // issue](https://github.com/microsoft/TypeScript/issues/47615).\n    return promise[name](...args);\n  };\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/promise-proxy-mixin.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/proxy.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/proxy.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ObjectProxy)\n/* harmony export */ });\n/* harmony import */ var _internals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/-internals.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/registry_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/container_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/comparable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/action_handler.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/-proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js\");\n/* harmony import */ var _enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/target_action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js\");\n/* harmony import */ var _internals_runtime_lib_ext_rsvp_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../-internals/runtime/lib/ext/rsvp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/object/proxy\n*/\n\n/**\n  `ObjectProxy` forwards all properties not defined by the proxy itself\n  to a proxied `content` object.\n\n  ```javascript\n  import EmberObject from '@ember/object';\n  import ObjectProxy from '@ember/object/proxy';\n\n  let exampleObject = EmberObject.create({\n    name: 'Foo'\n  });\n\n  let exampleProxy = ObjectProxy.create({\n    content: exampleObject\n  });\n\n  // Access and change existing properties\n  exampleProxy.get('name');          // 'Foo'\n  exampleProxy.set('name', 'Bar');\n  exampleObject.get('name');         // 'Bar'\n\n  // Create new 'description' property on `exampleObject`\n  exampleProxy.set('description', 'Foo is a whizboo baz');\n  exampleObject.get('description');  // 'Foo is a whizboo baz'\n  ```\n\n  While `content` is unset, setting a property to be delegated will throw an\n  Error.\n\n  ```javascript\n  import ObjectProxy from '@ember/object/proxy';\n\n  let exampleProxy = ObjectProxy.create({\n    content: null,\n    flag: null\n  });\n  exampleProxy.set('flag', true);\n  exampleProxy.get('flag');         // true\n  exampleProxy.get('foo');          // undefined\n  exampleProxy.set('foo', 'data');  // throws Error\n  ```\n\n  Delegated properties can be bound to and will change when content is updated.\n\n  Computed properties on the proxy itself can depend on delegated properties.\n\n  ```javascript\n  import { computed } from '@ember/object';\n  import ObjectProxy from '@ember/object/proxy';\n\n  ProxyWithComputedProperty = ObjectProxy.extend({\n    fullName: computed('firstName', 'lastName', function() {\n      var firstName = this.get('firstName'),\n          lastName = this.get('lastName');\n      if (firstName && lastName) {\n        return firstName + ' ' + lastName;\n      }\n      return firstName || lastName;\n    })\n  });\n\n  let exampleProxy = ProxyWithComputedProperty.create();\n\n  exampleProxy.get('fullName');  // undefined\n  exampleProxy.set('content', {\n    firstName: 'Tom', lastName: 'Dale'\n  }); // triggers property change for fullName on proxy\n\n  exampleProxy.get('fullName');  // 'Tom Dale'\n  ```\n\n  @class ObjectProxy\n  @extends EmberObject\n  @uses Ember.ProxyMixin\n  @public\n*/\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass ObjectProxy extends _internals_js__WEBPACK_IMPORTED_MODULE_0__.FrameworkObject {}\nObjectProxy.PrototypeMixin.reopen(_internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/proxy.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/owner/index.js":
/*!***************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/owner/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOwner: () => (/* binding */ getOwner),\n/* harmony export */   setOwner: () => (/* reexport safe */ _internals_owner_index_js__WEBPACK_IMPORTED_MODULE_0__.setOwner)\n/* harmony export */ });\n/* harmony import */ var _internals_owner_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../-internals/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n\n\n\n/**\n  Ember’s dependency injection system is built on the idea of an \"owner\": an\n  object responsible for managing items which can be registered and looked up\n  with the system.\n\n  This module does not provide any concrete instances of owners. Instead, it\n  defines the core type, `Owner`, which specifies the public API contract for an\n  owner. The primary concrete implementations of `Owner` are `EngineInstance`,\n  from `@ember/engine/instance`, and its `ApplicationInstance` subclass, from\n  `@ember/application/instance`.\n\n  Along with `Owner` itself, this module provides a number of supporting types\n  related to Ember's DI system:\n\n  - `Factory`, Ember's primary interface for something which can create class\n    instances registered with the DI system.\n\n  - `FactoryManager`, an interface for inspecting a `Factory`'s class.\n\n  - `Resolver`, an interface defining the contract for the object responsible\n    for mapping string names to the corresponding classes. For example, when you\n    write `@service('session')`, a resolver is responsible to map that back to\n    the `Session` service class in your codebase. Normally, this is handled for\n    you automatically with `ember-resolver`, which is the main implementor of\n    this interface.\n\n  For more details on each, see their per-item docs.\n\n  @module @ember/owner\n  @public\n*/\n\n// NOTE: this documentation appears here instead of at the definition site so\n// it can appear correctly in both API docs and for TS, while providing a richer\n// internal representation for Ember's own usage.\n/**\n  Framework objects in an Ember application (components, services, routes, etc.)\n  are created via a factory and dependency injection system. Each of these\n  objects is the responsibility of an \"owner\", which handled its\n  instantiation and manages its lifetime.\n\n  `getOwner` fetches the owner object responsible for an instance. This can\n  be used to lookup or resolve other class instances, or register new factories\n  into the owner.\n\n  For example, this component dynamically looks up a service based on the\n  `audioType` passed as an argument:\n\n  ```app/components/play-audio.js\n  import Component from '@glimmer/component';\n  import { action } from '@ember/object';\n  import { getOwner } from '@ember/owner';\n\n  // Usage:\n  //\n  //   <PlayAudio @audioType={{@model.audioType}} @audioFile={{@model.file}}/>\n  //\n  export default class extends Component {\n    get audioService() {\n      return getOwner(this)?.lookup(`service:${this.args.audioType}`);\n    }\n\n    @action\n    onPlay() {\n      this.audioService?.play(this.args.audioFile);\n    }\n  }\n  ```\n\n  @method getOwner\n  @static\n  @for @ember/owner\n  @param {Object} object An object with an owner.\n  @return {Object} An owner object.\n  @since 2.3.0\n  @public\n*/\n// SAFETY: the cast here is necessary, instead of using an assignment, because\n// TS (not incorrectly! Nothing expressly relates them) does not see that the\n// `InternalOwner` and `Owner` do actually have identical constraints on their\n// relations to the `DIRegistry`.\nconst getOwner = _internals_owner_index_js__WEBPACK_IMPORTED_MODULE_0__.getOwner;\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/owner/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/hash-location.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/hash-location.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ HashLocation)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _lib_location_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/location-utils.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/location-utils.js\");\n\n\n\n\n\n/**\n@module @ember/routing/hash-location\n*/\n\n/**\n  `HashLocation` implements the location API using the browser's\n  hash. At present, it relies on a `hashchange` event existing in the\n  browser.\n\n  Using `HashLocation` results in URLs with a `#` (hash sign) separating the\n  server side URL portion of the URL from the portion that is used by Ember.\n\n  Example:\n\n  ```app/router.js\n  Router.map(function() {\n    this.route('posts', function() {\n      this.route('new');\n    });\n  });\n\n  Router.reopen({\n    location: 'hash'\n  });\n  ```\n\n  This will result in a posts.new url of `/#/posts/new`.\n\n  @class HashLocation\n  @extends EmberObject\n  @protected\n*/\nclass HashLocation extends _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_1__.E {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_hashchangeHandler\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_location\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastSetURL\", null);\n  }\n  init() {\n    this.location = this._location ?? window.location;\n    this._hashchangeHandler = undefined;\n  }\n\n  /**\n    @private\n     Returns normalized location.hash\n     @since 1.5.1\n    @method getHash\n  */\n  getHash() {\n    return (0,_lib_location_utils_js__WEBPACK_IMPORTED_MODULE_3__.getHash)(this.location);\n  }\n\n  /**\n    Returns the normalized URL, constructed from `location.hash`.\n     e.g. `#/foo` => `/foo` as well as `#/foo#bar` => `/foo#bar`.\n     By convention, hashed paths must begin with a forward slash, otherwise they\n    are not treated as a path so we can distinguish intent.\n     @private\n    @method getURL\n  */\n  getURL() {\n    let originalPath = this.getHash().substring(1);\n    let outPath = originalPath;\n    if (outPath[0] !== '/') {\n      outPath = '/';\n\n      // Only add the # if the path isn't empty.\n      // We do NOT want `/#` since the ampersand\n      // is only included (conventionally) when\n      // the location.hash has a value\n      if (originalPath) {\n        outPath += `#${originalPath}`;\n      }\n    }\n    return outPath;\n  }\n\n  /**\n    Set the `location.hash` and remembers what was set. This prevents\n    `onUpdateURL` callbacks from triggering when the hash was set by\n    `HashLocation`.\n     @private\n    @method setURL\n    @param path {String}\n  */\n  setURL(path) {\n    this.location.hash = path;\n    this.lastSetURL = path;\n  }\n\n  /**\n    Uses location.replace to update the url without a page reload\n    or history modification.\n     @private\n    @method replaceURL\n    @param path {String}\n  */\n  replaceURL(path) {\n    this.location.replace(`#${path}`);\n    this.lastSetURL = path;\n  }\n  /**\n    Register a callback to be invoked when the hash changes. These\n    callbacks will execute when the user presses the back or forward\n    button, but not after `setURL` is invoked.\n     @private\n    @method onUpdateURL\n    @param callback {Function}\n  */\n  onUpdateURL(callback) {\n    this._removeEventListener();\n    this._hashchangeHandler = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_2__.P)(this, function (_event) {\n      let path = this.getURL();\n      if (this.lastSetURL === path) {\n        return;\n      }\n      this.lastSetURL = null;\n      callback(path);\n    });\n    window.addEventListener('hashchange', this._hashchangeHandler);\n  }\n\n  /**\n    Given a URL, formats it to be placed into the page as part\n    of an element's `href` attribute.\n     This is used, for example, when using the {{action}} helper\n    to generate a URL based on an event.\n     @private\n    @method formatURL\n    @param url {String}\n  */\n  formatURL(url) {\n    return `#${url}`;\n  }\n\n  /**\n    Cleans up the HashLocation event listener.\n     @private\n    @method willDestroy\n  */\n  willDestroy() {\n    this._removeEventListener();\n  }\n  _removeEventListener() {\n    if (this._hashchangeHandler) {\n      window.removeEventListener('hashchange', this._hashchangeHandler);\n    }\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/hash-location.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/history-location.js":
/*!****************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/history-location.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ HistoryLocation)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _lib_location_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/location-utils.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/location-utils.js\");\n\n\n\n\nlet popstateFired = false;\nfunction _uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r, v;\n    r = Math.random() * 16 | 0;\n    v = c === 'x' ? r : r & 3 | 8;\n    return v.toString(16);\n  });\n}\n\n/**\n  HistoryLocation implements the location API using the browser's\n  history.pushState API.\n\n  Using `HistoryLocation` results in URLs that are indistinguishable from a\n  standard URL. This relies upon the browser's `history` API.\n\n  Example:\n\n  ```app/router.js\n  Router.map(function() {\n    this.route('posts', function() {\n      this.route('new');\n    });\n  });\n\n  Router.reopen({\n    location: 'history'\n  });\n  ```\n\n  This will result in a posts.new url of `/posts/new`.\n\n  Keep in mind that your server must serve the Ember app at all the routes you\n  define.\n\n  Using `HistoryLocation` will also result in location states being recorded by\n  the browser `history` API with the following schema:\n\n  ```\n  window.history.state -> { path: '/', uuid: '3552e730-b4a6-46bd-b8bf-d8c3c1a97e0a' }\n  ```\n\n  This allows each in-app location state to be tracked uniquely across history\n  state changes via the `uuid` field.\n\n  @class HistoryLocation\n  @extends EmberObject\n  @protected\n*/\nclass HistoryLocation extends _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_1__.E {\n  constructor(...args) {\n    super(...args);\n    // SAFETY: both of these properties initialized via `init`.\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"history\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_previousURL\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_popstateHandler\", void 0);\n    /**\n      Will be pre-pended to path upon state change\n       @property rootURL\n      @default '/'\n      @private\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"rootURL\", '/');\n  }\n  /**\n    @private\n     Returns normalized location.hash\n     @method getHash\n  */\n  getHash() {\n    return (0,_lib_location_utils_js__WEBPACK_IMPORTED_MODULE_3__.getHash)(this.location);\n  }\n  init() {\n    this._super(...arguments);\n    let base = document.querySelector('base');\n    let baseURL = '';\n    if (base !== null && base.hasAttribute('href')) {\n      baseURL = base.getAttribute('href') ?? '';\n    }\n    this.baseURL = baseURL;\n    this.location = this.location ?? window.location;\n    this._popstateHandler = undefined;\n  }\n\n  /**\n    Used to set state on first call to setURL\n     @private\n    @method initState\n  */\n  initState() {\n    let history = this.history ?? window.history;\n    this.history = history;\n    let {\n      state\n    } = history;\n    let path = this.formatURL(this.getURL());\n    if (state && state.path === path) {\n      // preserve existing state\n      // used for webkit workaround, since there will be no initial popstate event\n      this._previousURL = this.getURL();\n    } else {\n      this.replaceState(path);\n    }\n  }\n\n  /**\n    Returns the current `location.pathname` without `rootURL` or `baseURL`\n     @private\n    @method getURL\n    @return url {String}\n  */\n  getURL() {\n    let {\n      location,\n      rootURL,\n      baseURL\n    } = this;\n    let path = location.pathname;\n\n    // remove trailing slashes if they exists\n    rootURL = rootURL.replace(/\\/$/, '');\n    baseURL = baseURL.replace(/\\/$/, '');\n\n    // remove baseURL and rootURL from start of path\n    let url = path.replace(new RegExp(`^${baseURL}(?=/|$)`), '').replace(new RegExp(`^${rootURL}(?=/|$)`), '').replace(/\\/\\//g, '/'); // remove extra slashes\n\n    let search = location.search || '';\n    url += search + this.getHash();\n    return url;\n  }\n\n  /**\n    Uses `history.pushState` to update the url without a page reload.\n     @private\n    @method setURL\n    @param path {String}\n  */\n  setURL(path) {\n     true && !this.history && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('HistoryLocation.history is unexpectedly missing', this.history);\n    let {\n      state\n    } = this.history;\n    path = this.formatURL(path);\n    if (!state || state.path !== path) {\n      this.pushState(path);\n    }\n  }\n\n  /**\n    Uses `history.replaceState` to update the url without a page reload\n    or history modification.\n     @private\n    @method replaceURL\n    @param path {String}\n  */\n  replaceURL(path) {\n     true && !this.history && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('HistoryLocation.history is unexpectedly missing', this.history);\n    let {\n      state\n    } = this.history;\n    path = this.formatURL(path);\n    if (!state || state.path !== path) {\n      this.replaceState(path);\n    }\n  }\n\n  /**\n   Pushes a new state.\n    @private\n   @method pushState\n   @param path {String}\n  */\n  pushState(path) {\n    let state = {\n      path,\n      uuid: _uuid()\n    };\n     true && !this.history && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('HistoryLocation.history is unexpectedly missing', this.history);\n    this.history.pushState(state, '', path);\n\n    // used for webkit workaround\n    this._previousURL = this.getURL();\n  }\n\n  /**\n   Replaces the current state.\n    @private\n   @method replaceState\n   @param path {String}\n  */\n  replaceState(path) {\n    let state = {\n      path,\n      uuid: _uuid()\n    };\n     true && !this.history && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('HistoryLocation.history is unexpectedly missing', this.history);\n    this.history.replaceState(state, '', path);\n\n    // used for webkit workaround\n    this._previousURL = this.getURL();\n  }\n\n  /**\n    Register a callback to be invoked whenever the browser\n    history changes, including using forward and back buttons.\n     @private\n    @method onUpdateURL\n    @param callback {Function}\n  */\n  onUpdateURL(callback) {\n    this._removeEventListener();\n    this._popstateHandler = () => {\n      // Ignore initial page load popstate event in Chrome\n      if (!popstateFired) {\n        popstateFired = true;\n        if (this.getURL() === this._previousURL) {\n          return;\n        }\n      }\n      callback(this.getURL());\n    };\n    window.addEventListener('popstate', this._popstateHandler);\n  }\n\n  /**\n    Used when using `{{action}}` helper.  The url is always appended to the rootURL.\n     @private\n    @method formatURL\n    @param url {String}\n    @return formatted url {String}\n  */\n  formatURL(url) {\n    let {\n      rootURL,\n      baseURL\n    } = this;\n    if (url !== '') {\n      // remove trailing slashes if they exists\n      rootURL = rootURL.replace(/\\/$/, '');\n      baseURL = baseURL.replace(/\\/$/, '');\n    } else if (baseURL[0] === '/' && rootURL[0] === '/') {\n      // if baseURL and rootURL both start with a slash\n      // ... remove trailing slash from baseURL if it exists\n      baseURL = baseURL.replace(/\\/$/, '');\n    }\n    return baseURL + rootURL + url;\n  }\n\n  /**\n    Cleans up the HistoryLocation event listener.\n     @private\n    @method willDestroy\n  */\n  willDestroy() {\n    this._removeEventListener();\n  }\n  _removeEventListener() {\n    if (this._popstateHandler) {\n      window.removeEventListener('popstate', this._popstateHandler);\n    }\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/history-location.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/cache.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/cache.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BucketCache)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\n/**\n  A two-tiered cache with support for fallback values when doing lookups.\n  Uses \"buckets\" and then \"keys\" to cache values.\n\n  @private\n  @class BucketCache\n*/\nclass BucketCache {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"cache\", void 0);\n    this.cache = new Map();\n  }\n  has(bucketKey) {\n    return this.cache.has(bucketKey);\n  }\n  stash(bucketKey, key, value) {\n    let bucket = this.cache.get(bucketKey);\n    if (bucket === undefined) {\n      bucket = new Map();\n      this.cache.set(bucketKey, bucket);\n    }\n    bucket.set(key, value);\n  }\n  lookup(bucketKey, prop, defaultValue) {\n    if (!this.has(bucketKey)) {\n      return defaultValue;\n    }\n    let bucket = this.cache.get(bucketKey);\n    if (bucket.has(prop)) {\n      return bucket.get(prop);\n    } else {\n      return defaultValue;\n    }\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/cache.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/controller_for.js":
/*!******************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/controller_for.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ controllerFor)\n/* harmony export */ });\n/**\n  @module @ember/routing\n*/\n\n/**\n  Finds a controller instance.\n\n  @for Ember\n  @method controllerFor\n  @private\n*/\nfunction controllerFor(container, controllerName, lookupOptions) {\n  return container.lookup(`controller:${controllerName}`, lookupOptions);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/controller_for.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/dsl.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/dsl.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DSLImpl)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n\n\nlet uuid = 0;\nfunction isCallback(value) {\n  return typeof value === 'function';\n}\nfunction isOptions(value) {\n  return value !== null && typeof value === 'object';\n}\nclass DSLImpl {\n  constructor(name = null, options) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"parent\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"matches\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"enableLoadingSubstates\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"explicitIndex\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"options\", void 0);\n    this.parent = name;\n    this.enableLoadingSubstates = Boolean(options && options.enableLoadingSubstates);\n    this.matches = [];\n    this.options = options;\n  }\n  route(name, _options, _callback) {\n    let options;\n    let callback = null;\n    let dummyErrorRoute = `/_unused_dummy_error_path_route_${name}/:error`;\n    if (isCallback(_options)) {\n       true && !(arguments.length === 2) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('Unexpected arguments', arguments.length === 2);\n      options = {};\n      callback = _options;\n    } else if (isCallback(_callback)) {\n       true && !(arguments.length === 3) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('Unexpected arguments', arguments.length === 3);\n       true && !isOptions(_options) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('Unexpected arguments', isOptions(_options));\n      options = _options;\n      callback = _callback;\n    } else {\n      options = _options || {};\n    }\n     true && !(() => {\n      if (options.overrideNameAssertion === true) {\n        return true;\n      }\n      return ['basic', 'application'].indexOf(name) === -1;\n    })() && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(`'${name}' cannot be used as a route name.`, (() => {\n      if (options.overrideNameAssertion === true) {\n        return true;\n      }\n      return ['basic', 'application'].indexOf(name) === -1;\n    })());\n     true && !(name.indexOf(':') === -1) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(`'${name}' is not a valid route name. It cannot contain a ':'. You may want to use the 'path' option instead.`, name.indexOf(':') === -1);\n    if (this.enableLoadingSubstates) {\n      createRoute(this, `${name}_loading`, {\n        resetNamespace: options.resetNamespace\n      });\n      createRoute(this, `${name}_error`, {\n        resetNamespace: options.resetNamespace,\n        path: dummyErrorRoute\n      });\n    }\n    if (callback) {\n      let fullName = getFullName(this, name, options.resetNamespace);\n      let dsl = new DSLImpl(fullName, this.options);\n      createRoute(dsl, 'loading');\n      createRoute(dsl, 'error', {\n        path: dummyErrorRoute\n      });\n      callback.call(dsl);\n      createRoute(this, name, options, dsl.generate());\n    } else {\n      createRoute(this, name, options);\n    }\n  }\n  push(url, name, callback, serialize) {\n    let parts = name.split('.');\n    if (this.options.engineInfo) {\n      let localFullName = name.slice(this.options.engineInfo.fullName.length + 1);\n      let routeInfo = Object.assign({\n        localFullName\n      }, this.options.engineInfo);\n      if (serialize) {\n        routeInfo.serializeMethod = serialize;\n      }\n      this.options.addRouteForEngine(name, routeInfo);\n    } else if (serialize) {\n      throw new Error(`Defining a route serializer on route '${name}' outside an Engine is not allowed.`);\n    }\n    if (url === '' || url === '/' || parts[parts.length - 1] === 'index') {\n      this.explicitIndex = true;\n    }\n    this.matches.push(url, name, callback);\n  }\n  generate() {\n    let dslMatches = this.matches;\n    if (!this.explicitIndex) {\n      this.route('index', {\n        path: '/'\n      });\n    }\n    return match => {\n      for (let i = 0; i < dslMatches.length; i += 3) {\n        match(dslMatches[i]).to(dslMatches[i + 1], dslMatches[i + 2]);\n      }\n    };\n  }\n  mount(_name, options = {}) {\n    let engineRouteMap = this.options.resolveRouteMap(_name);\n    let name = _name;\n    if (options.as) {\n      name = options.as;\n    }\n    let fullName = getFullName(this, name, options.resetNamespace);\n    let engineInfo = {\n      name: _name,\n      instanceId: uuid++,\n      mountPoint: fullName,\n      fullName\n    };\n    let path = options.path;\n    if (typeof path !== 'string') {\n      path = `/${name}`;\n    }\n    let callback;\n    let dummyErrorRoute = `/_unused_dummy_error_path_route_${name}/:error`;\n    if (engineRouteMap) {\n      let shouldResetEngineInfo = false;\n      let oldEngineInfo = this.options.engineInfo;\n      if (oldEngineInfo) {\n        shouldResetEngineInfo = true;\n        this.options.engineInfo = engineInfo;\n      }\n      let optionsForChild = Object.assign({\n        engineInfo\n      }, this.options);\n      let childDSL = new DSLImpl(fullName, optionsForChild);\n      createRoute(childDSL, 'loading');\n      createRoute(childDSL, 'error', {\n        path: dummyErrorRoute\n      });\n      engineRouteMap.class.call(childDSL);\n      callback = childDSL.generate();\n      if (shouldResetEngineInfo) {\n        this.options.engineInfo = oldEngineInfo;\n      }\n    }\n    let localFullName = 'application';\n    let routeInfo = Object.assign({\n      localFullName\n    }, engineInfo);\n    if (this.enableLoadingSubstates) {\n      // These values are important to register the loading routes under their\n      // proper names for the Router and within the Engine's registry.\n      let substateName = `${name}_loading`;\n      let localFullName = `application_loading`;\n      let routeInfo = Object.assign({\n        localFullName\n      }, engineInfo);\n      createRoute(this, substateName, {\n        resetNamespace: options.resetNamespace\n      });\n      this.options.addRouteForEngine(substateName, routeInfo);\n      substateName = `${name}_error`;\n      localFullName = `application_error`;\n      routeInfo = Object.assign({\n        localFullName\n      }, engineInfo);\n      createRoute(this, substateName, {\n        resetNamespace: options.resetNamespace,\n        path: dummyErrorRoute\n      });\n      this.options.addRouteForEngine(substateName, routeInfo);\n    }\n    this.options.addRouteForEngine(fullName, routeInfo);\n    this.push(path, fullName, callback);\n  }\n}\nfunction canNest(dsl) {\n  return dsl.parent !== 'application';\n}\nfunction getFullName(dsl, name, resetNamespace) {\n  if (canNest(dsl) && resetNamespace !== true) {\n    return `${dsl.parent}.${name}`;\n  } else {\n    return name;\n  }\n}\nfunction createRoute(dsl, name, options = {}, callback) {\n  let fullName = getFullName(dsl, name, options.resetNamespace);\n  if (typeof options.path !== 'string') {\n    options.path = `/${name}`;\n  }\n  dsl.push(options.path, fullName, callback, options.serialize);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/dsl.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/generate_controller.js":
/*!***********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/generate_controller.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ generateController),\n/* harmony export */   generateControllerFactory: () => (/* binding */ generateControllerFactory)\n/* harmony export */ });\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _controller_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../controller/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/controller/index.js\");\n\n\n\n\n\n\n\n\n\nfunction generateControllerFactory(owner, controllerName) {\n  let factoryManager = owner.factoryFor('controller:basic');\n   true && !(factoryManager !== undefined) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('[BUG] unexpectedly missing a factoryManager for `controller:basic`', factoryManager !== undefined); // SAFETY: This is *not* safe, and the cast should be removed in favor of the\n  // `assert()` below after altering *tests*. It is left in this state for the\n  // moment in the interest of keeping type-only changes separate from changes\n  // to the runtime behavior of the system, even for tests.\n  let Factory = factoryManager.class;\n  // assert(\n  //   '[BUG] factory for `controller:main` is unexpectedly not a Controller',\n  //   ((factory): factory is typeof Controller => factory === Controller)(Factory)\n  // );\n\n  Factory = Factory.extend({\n    toString() {\n      return `(generated ${controllerName} controller)`;\n    }\n  });\n  let fullName = `controller:${controllerName}`;\n  owner.register(fullName, Factory);\n  return owner.factoryFor(fullName);\n}\n\n/**\n  Generates and instantiates a controller extending from `controller:basic`\n  if present, or `Controller` if not.\n\n  @for Ember\n  @method generateController\n  @private\n  @since 1.3.0\n*/\nfunction generateController(owner, controllerName) {\n  generateControllerFactory(owner, controllerName);\n  let fullName = `controller:${controllerName}`;\n  let instance = owner.lookup(fullName);\n   true && !(instance instanceof _controller_index_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]) && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('Expected an instance of controller', instance instanceof _controller_index_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n  if (true) {\n    if ((0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(instance, 'namespace.LOG_ACTIVE_GENERATION')) {\n      (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.i)(`generated -> ${fullName}`, {\n        fullName\n      });\n    }\n  }\n  return instance;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/generate_controller.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/location-utils.js":
/*!******************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/location-utils.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFullPath: () => (/* binding */ getFullPath),\n/* harmony export */   getHash: () => (/* binding */ getHash),\n/* harmony export */   getOrigin: () => (/* binding */ getOrigin),\n/* harmony export */   getPath: () => (/* binding */ getPath),\n/* harmony export */   getQuery: () => (/* binding */ getQuery),\n/* harmony export */   replacePath: () => (/* binding */ replacePath)\n/* harmony export */ });\n/**\n  @private\n\n  Returns the current `location.pathname`, normalized for IE inconsistencies.\n*/\nfunction getPath(location) {\n  let pathname = location.pathname;\n  // Various versions of IE/Opera don't always return a leading slash\n  if (pathname[0] !== '/') {\n    pathname = `/${pathname}`;\n  }\n  return pathname;\n}\n\n/**\n  @private\n\n  Returns the current `location.search`.\n*/\nfunction getQuery(location) {\n  return location.search;\n}\n\n/**\n  @private\n\n  Returns the hash or empty string\n*/\nfunction getHash(location) {\n  if (location.hash !== undefined) {\n    return location.hash.substring(0);\n  }\n  return '';\n}\nfunction getFullPath(location) {\n  return getPath(location) + getQuery(location) + getHash(location);\n}\nfunction getOrigin(location) {\n  let origin = location.origin;\n\n  // Older browsers, especially IE, don't have origin\n  if (!origin) {\n    origin = `${location.protocol}//${location.hostname}`;\n    if (location.port) {\n      origin += `:${location.port}`;\n    }\n  }\n  return origin;\n}\n\n/**\n  Replaces the current location, making sure we explicitly include the origin\n  to prevent redirecting to a different origin.\n\n  @private\n*/\nfunction replacePath(location, path) {\n  location.replace(getOrigin(location) + path);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/location-utils.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/none-location.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/none-location.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NoneLocation)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n\n\n\n/**\n@module @ember/routing/none-location\n*/\n\n/**\n  NoneLocation does not interact with the browser. It is useful for\n  testing, or when you need to manage state with your Router, but temporarily\n  don't want it to muck with the URL (for example when you embed your\n  application in a larger page).\n\n  Using `NoneLocation` causes Ember to not store the applications URL state\n  in the actual URL. This is generally used for testing purposes, and is one\n  of the changes made when calling `App.setupForTesting()`.\n\n  @class NoneLocation\n  @extends EmberObject\n  @protected\n*/\nclass NoneLocation extends _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_1__.E {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"updateCallback\", void 0);\n  }\n  // Set in reopen so it can be overwritten with extend\n\n  /**\n    Will be pre-pended to path.\n     @private\n    @property rootURL\n    @default '/'\n  */\n  // Set in reopen so it can be overwritten with extend\n\n  initState() {\n    this._super(...arguments);\n    let {\n      rootURL\n    } = this;\n\n    // This assert doesn't have anything to do with state initialization,\n    // but we're hijacking this method since it's called after the route has\n    // set the rootURL property on its Location instance.\n     true && !(rootURL.charAt(rootURL.length - 1) === '/') && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('rootURL must end with a trailing forward slash e.g. \"/app/\"', rootURL.charAt(rootURL.length - 1) === '/');\n  }\n\n  /**\n    Returns the current path without `rootURL`.\n     @private\n    @method getURL\n    @return {String} path\n  */\n  getURL() {\n    let {\n      path,\n      rootURL\n    } = this;\n\n    // remove trailing slashes if they exists\n    rootURL = rootURL.replace(/\\/$/, '');\n\n    // remove rootURL from url\n    return path.replace(new RegExp(`^${rootURL}(?=/|$)`), '');\n  }\n\n  /**\n    Set the path and remembers what was set. Using this method\n    to change the path will not invoke the `updateURL` callback.\n     @private\n    @method setURL\n    @param path {String}\n  */\n  setURL(path) {\n    this.path = path;\n  }\n\n  /**\n    Register a callback to be invoked when the path changes. These\n    callbacks will execute when the user presses the back or forward\n    button, but not after `setURL` is invoked.\n     @private\n    @method onUpdateURL\n    @param callback {Function}\n  */\n  onUpdateURL(callback) {\n    this.updateCallback = callback;\n  }\n\n  /**\n    Sets the path and calls the `updateURL` callback.\n     @private\n    @method handleURL\n    @param url {String}\n  */\n  handleURL(url) {\n    this.path = url;\n    if (this.updateCallback) {\n      this.updateCallback(url);\n    }\n  }\n\n  /**\n    Given a URL, formats it to be placed into the page as part\n    of an element's `href` attribute.\n     This is used, for example, when using the {{action}} helper\n    to generate a URL based on an event.\n     @private\n    @method formatURL\n    @param {String} url\n    @return {String} url\n  */\n  formatURL(url) {\n    let {\n      rootURL\n    } = this;\n    if (url !== '') {\n      // remove trailing slashes if they exists\n      rootURL = rootURL.replace(/\\/$/, '');\n    }\n    return rootURL + url;\n  }\n}\nNoneLocation.reopen({\n  path: '',\n  rootURL: '/'\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/none-location.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/router.js":
/*!******************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/router.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_3__.j),\n/* harmony export */   triggerEvent: () => (/* reexport safe */ _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_3__.G)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared-chunks/registry-DzfcDwii.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _owner_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/owner/index.js\");\n/* harmony import */ var _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/index-BXPoca1S.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BXPoca1S.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../shared-chunks/property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _controller_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../controller/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/controller/index.js\");\n/* harmony import */ var _lib_cache_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./lib/cache.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/cache.js\");\n/* harmony import */ var _lib_dsl_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./lib/dsl.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/dsl.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/registry_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/container_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/comparable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/action_handler.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/-proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js\");\n/* harmony import */ var _enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../-internals/runtime/lib/mixins/target_action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js\");\n/* harmony import */ var _internals_runtime_lib_ext_rsvp_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../-internals/runtime/lib/ext/rsvp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js\");\n/* harmony import */ var _object_evented_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../object/evented.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/evented.js\");\n/* harmony import */ var _shared_chunks_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../shared-chunks/router-B-Q1aYBn.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/router-B-Q1aYBn.js\");\n/* harmony import */ var _shared_chunks_rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../shared-chunks/rsvp-DaQAFb0W.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/rsvp-DaQAFb0W.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/router.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/runloop/index.js":
/*!*****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/runloop/index.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _backburner: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__._),\n/* harmony export */   _cancelTimers: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.al),\n/* harmony export */   _getCurrentRunLoop: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.Z),\n/* harmony export */   _hasScheduledTimers: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.$),\n/* harmony export */   _queues: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.ai),\n/* harmony export */   _rsvpErrorQueue: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.b),\n/* harmony export */   begin: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.aj),\n/* harmony export */   bind: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.P),\n/* harmony export */   cancel: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.ah),\n/* harmony export */   debounce: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.an),\n/* harmony export */   end: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.ak),\n/* harmony export */   join: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.j),\n/* harmony export */   later: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.am),\n/* harmony export */   next: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.X),\n/* harmony export */   once: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.N),\n/* harmony export */   run: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.O),\n/* harmony export */   schedule: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.s),\n/* harmony export */   scheduleOnce: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.ag),\n/* harmony export */   throttle: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.ao)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _internals_error_handling_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../-internals/error-handling/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/error-handling/index.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _backburner_js_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../backburner.js/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/backburner.js/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/runloop/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/service/index.js":
/*!*****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/service/index.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Service),\n/* harmony export */   inject: () => (/* binding */ inject),\n/* harmony export */   service: () => (/* binding */ service)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _object_internals_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../object/-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/-internals.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n @module @ember/service\n @public\n */\n\n/**\n  @method inject\n  @static\n  @since 1.10.0\n  @for @ember/service\n  @param {String} name (optional) name of the service to inject, defaults to\n         the property's name\n  @return {ComputedDecorator} injection decorator instance\n  @public\n*/\n\nfunction inject(...args) {\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.f)('service', ...args);\n}\n\n/**\n  Creates a property that lazily looks up a service in the container. There are\n  no restrictions as to what objects a service can be injected into.\n\n  Example:\n\n  ```app/routes/application.js\n  import Route from '@ember/routing/route';\n  import { service } from '@ember/service';\n\n  export default class ApplicationRoute extends Route {\n    @service('auth') authManager;\n\n    model() {\n      return this.authManager.findCurrentUser();\n    }\n  }\n  ```\n\n  Classic Class Example:\n\n  ```app/routes/application.js\n  import Route from '@ember/routing/route';\n  import { service } from '@ember/service';\n\n  export default Route.extend({\n    authManager: service('auth'),\n\n    model() {\n      return this.get('authManager').findCurrentUser();\n    }\n  });\n  ```\n\n  This example will create an `authManager` property on the application route\n  that looks up the `auth` service in the container, making it easily accessible\n  in the `model` hook.\n\n  @method service\n  @static\n  @since 4.1.0\n  @for @ember/service\n  @param {String} name (optional) name of the service to inject, defaults to\n         the property's name\n  @return {ComputedDecorator} injection decorator instance\n  @public\n*/\n\nfunction service(...args) {\n  return (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.f)('service', ...args);\n}\n\n/**\n  @class Service\n  @extends EmberObject\n  @since 1.10.0\n  @public\n*/\nclass Service extends _object_internals_js__WEBPACK_IMPORTED_MODULE_1__.FrameworkObject {}\n\n/**\n  A type registry for Ember `Service`s. Meant to be declaration-merged so string\n  lookups resolve to the correct type.\n\n  Blueprints should include such a declaration merge for TypeScript:\n\n  ```ts\n  import Service from '@ember/service';\n\n  export default class ExampleService extends Service {\n    // ...\n  }\n\n  declare module '@ember/service' {\n    export interface Registry {\n      example: ExampleService;\n    }\n  }\n  ```\n\n  Then `@service` can check that the service is registered correctly, and APIs\n  like `owner.lookup('service:example')` can return `ExampleService`.\n */\n// NOTE: this cannot be `Record<string, Service | undefined>`, convenient as\n// that would be for end users, because there is no actual contract to that\n// effect with Ember -- and in the future this choice would allow us to have\n// registered services which have no base class.\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Service, \"isServiceFactory\", true);\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/service/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/template-compilation/index.js":
/*!******************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/template-compilation/index.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __emberTemplateCompiler: () => (/* binding */ __emberTemplateCompiler),\n/* harmony export */   __registerTemplateCompiler: () => (/* binding */ __registerTemplateCompiler),\n/* harmony export */   compileTemplate: () => (/* binding */ compileTemplate),\n/* harmony export */   precompileTemplate: () => (/* binding */ precompileTemplate)\n/* harmony export */ });\n// it is emitted as part of Ember's build!), so we define it as having the type\n// which makes that work. However, in practice it is supplied by the build,\n// *for* the build, and will *not* be present at runtime, so the actual value\n// here is `undefined` in prod; in dev it is a function which throws a somewhat\n// nicer error. This is janky, but... here we are.\nlet __emberTemplateCompiler;\nconst compileTemplate = (...args) => {\n  if (!__emberTemplateCompiler) {\n    throw new Error('Attempted to call `compileTemplate` without first loading the runtime template compiler.');\n  }\n  return __emberTemplateCompiler.compile(...args);\n};\nlet precompileTemplate;\nif (true) {\n  precompileTemplate = () => {\n    throw new Error('Attempted to call `precompileTemplate` at runtime, but this API is meant to be used at compile time. You should use `compileTemplate` instead.');\n  };\n}\nfunction __registerTemplateCompiler(c) {\n  __emberTemplateCompiler = c;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/template-compilation/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/template-factory/index.js":
/*!**************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/template-factory/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTemplateFactory: () => (/* reexport safe */ _glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_0__.templateFactory)\n/* harmony export */ });\n/* harmony import */ var _glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@glimmer/opcode-compiler/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js\");\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/template-factory/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/test/index.js":
/*!**************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/test/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _impl: () => (/* binding */ _impl),\n/* harmony export */   registerAsyncHelper: () => (/* binding */ registerAsyncHelper),\n/* harmony export */   registerHelper: () => (/* binding */ registerHelper),\n/* harmony export */   registerTestImplementation: () => (/* binding */ registerTestImplementation),\n/* harmony export */   registerWaiter: () => (/* binding */ registerWaiter),\n/* harmony export */   unregisterHelper: () => (/* binding */ unregisterHelper),\n/* harmony export */   unregisterWaiter: () => (/* binding */ unregisterWaiter)\n/* harmony export */ });\nlet registerAsyncHelper;\nlet registerHelper;\nlet registerWaiter;\nlet unregisterHelper;\nlet unregisterWaiter;\nlet _impl;\nlet testingNotAvailableMessage = () => {\n  throw new Error('Attempted to use test utilities, but `ember-testing` was not included');\n};\nregisterAsyncHelper = testingNotAvailableMessage;\nregisterHelper = testingNotAvailableMessage;\nregisterWaiter = testingNotAvailableMessage;\nunregisterHelper = testingNotAvailableMessage;\nunregisterWaiter = testingNotAvailableMessage;\nfunction registerTestImplementation(impl) {\n  let {\n    Test\n  } = impl;\n  registerAsyncHelper = Test.registerAsyncHelper;\n  registerHelper = Test.registerHelper;\n  registerWaiter = Test.registerWaiter;\n  unregisterHelper = Test.unregisterHelper;\n  unregisterWaiter = Test.unregisterWaiter;\n  _impl = impl;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/test/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/index.js":
/*!***************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_5__.c),\n/* harmony export */   isBlank: () => (/* reexport safe */ _lib_is_blank_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   isEmpty: () => (/* reexport safe */ _lib_is_empty_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   isEqual: () => (/* reexport safe */ _lib_is_equal_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   isNone: () => (/* reexport safe */ _lib_is_none_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   isPresent: () => (/* reexport safe */ _lib_is_present_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   typeOf: () => (/* reexport safe */ _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_5__.t)\n/* harmony export */ });\n/* harmony import */ var _lib_is_none_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/is_none.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_none.js\");\n/* harmony import */ var _lib_is_blank_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/is_blank.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_blank.js\");\n/* harmony import */ var _lib_is_empty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/is_empty.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_empty.js\");\n/* harmony import */ var _lib_is_present_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/is_present.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_present.js\");\n/* harmony import */ var _lib_is_equal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/is-equal.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is-equal.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n\n\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is-equal.js":
/*!**********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is-equal.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isEqual)\n/* harmony export */ });\n/**\n @module @ember/utils\n*/\n/**\n  Compares two objects, returning true if they are equal.\n\n  ```javascript\n  import { isEqual } from '@ember/utils';\n\n  isEqual('hello', 'hello');                   // true\n  isEqual(1, 2);                               // false\n  ```\n\n  `isEqual` is a more specific comparison than a triple equal comparison.\n  It will call the `isEqual` instance method on the objects being\n  compared, allowing finer control over when objects should be considered\n  equal to each other.\n\n  ```javascript\n  import { isEqual } from '@ember/utils';\n  import EmberObject from '@ember/object';\n\n  let Person = EmberObject.extend({\n    isEqual(other) { return this.ssn == other.ssn; }\n  });\n\n  let personA = Person.create({name: 'Muhammad Ali', ssn: '123-45-6789'});\n  let personB = Person.create({name: 'Cassius Clay', ssn: '123-45-6789'});\n\n  isEqual(personA, personB); // true\n  ```\n\n  Due to the expense of array comparisons, collections will never be equal to\n  each other even if each of their items are equal to each other.\n\n  ```javascript\n  import { isEqual } from '@ember/utils';\n\n  isEqual([4, 2], [4, 2]);                     // false\n  ```\n\n  @method isEqual\n  @for @ember/utils\n  @static\n  @param {Object} a first object to compare\n  @param {Object} b second object to compare\n  @return {Boolean}\n  @public\n*/\nfunction isEqual(a, b) {\n  if (a && typeof a.isEqual === 'function') {\n    return a.isEqual(b);\n  }\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  return a === b;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is-equal.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_blank.js":
/*!**********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_blank.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isBlank)\n/* harmony export */ });\n/* harmony import */ var _is_empty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is_empty.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_empty.js\");\n\n\n/**\n @module @ember/utils\n*/\n/**\n  A value is blank if it is empty or a whitespace string.\n\n  ```javascript\n  import { isBlank } from '@ember/utils';\n\n  isBlank(null);            // true\n  isBlank(undefined);       // true\n  isBlank('');              // true\n  isBlank([]);              // true\n  isBlank('\\n\\t');          // true\n  isBlank('  ');            // true\n  isBlank({});              // false\n  isBlank('\\n\\t Hello');    // false\n  isBlank('Hello world');   // false\n  isBlank([1,2,3]);         // false\n  ```\n\n  @method isBlank\n  @static\n  @for @ember/utils\n  @param {Object} obj Value to test\n  @return {Boolean}\n  @since 1.5.0\n  @public\n*/\nfunction isBlank(obj) {\n  return (0,_is_empty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(obj) || typeof obj === 'string' && /\\S/.test(obj) === false;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_blank.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_empty.js":
/*!**********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_empty.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isEmpty)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n @module @ember/utils\n*/\n/**\n  Verifies that a value is `null` or `undefined`, an empty string, or an empty\n  array.\n\n  Constrains the rules on `isNone` by returning true for empty strings and\n  empty arrays.\n\n  If the value is an object with a `size` property of type number, it is used\n  to check emptiness.\n\n  ```javascript\n  isEmpty(null);             // true\n  isEmpty(undefined);        // true\n  isEmpty('');               // true\n  isEmpty([]);               // true\n  isEmpty({ size: 0});       // true\n  isEmpty({});               // false\n  isEmpty('Adam Hawkins');   // false\n  isEmpty([0,1,2]);          // false\n  isEmpty('\\n\\t');           // false\n  isEmpty('  ');             // false\n  isEmpty({ size: 1 })       // false\n  isEmpty({ size: () => 0 }) // false\n  ```\n\n  @method isEmpty\n  @static\n  @for @ember/utils\n  @param {Object} obj Value to test\n  @return {Boolean}\n  @public\n*/\nfunction isEmpty(obj) {\n  if (obj === null || obj === undefined) {\n    return true;\n  }\n  if (!(0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.H)(obj) && typeof obj.size === 'number') {\n    return !obj.size;\n  }\n  if (typeof obj === 'object') {\n    let size = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(obj, 'size');\n    if (typeof size === 'number') {\n      return !size;\n    }\n    let length = (0,_shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.g)(obj, 'length');\n    if (typeof length === 'number') {\n      return !length;\n    }\n  }\n  if (typeof obj.length === 'number' && typeof obj !== 'function') {\n    return !obj.length;\n  }\n  return false;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_empty.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_none.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_none.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isNone)\n/* harmony export */ });\n/**\n @module @ember/utils\n*/\n/**\n  Returns true if the passed value is null or undefined. This avoids errors\n  from JSLint complaining about use of ==, which can be technically\n  confusing.\n\n  ```javascript\n  isNone(null);          // true\n  isNone(undefined);     // true\n  isNone('');            // false\n  isNone([]);            // false\n  isNone(function() {}); // false\n  ```\n\n  @method isNone\n  @static\n  @for @ember/utils\n  @param {Object} obj Value to test\n  @return {Boolean}\n  @public\n*/\nfunction isNone(obj) {\n  return obj === null || obj === undefined;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_none.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_present.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_present.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isPresent)\n/* harmony export */ });\n/* harmony import */ var _is_blank_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is_blank.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_blank.js\");\n\n\n/**\n @module @ember/utils\n*/\n/**\n  A value is present if it not `isBlank`.\n\n  ```javascript\n  isPresent(null);            // false\n  isPresent(undefined);       // false\n  isPresent('');              // false\n  isPresent('  ');            // false\n  isPresent('\\n\\t');          // false\n  isPresent([]);              // false\n  isPresent({ length: 0 });   // false\n  isPresent(false);           // true\n  isPresent(true);            // true\n  isPresent('string');        // true\n  isPresent(0);               // true\n  isPresent(function() {});   // true\n  isPresent({});              // true\n  isPresent('\\n\\t Hello');    // true\n  isPresent([1, 2, 3]);       // true\n  ```\n\n  @method isPresent\n  @static\n  @for @ember/utils\n  @param {Object} obj Value to test\n  @return {Boolean}\n  @since 1.8.0\n  @public\n*/\nfunction isPresent(obj) {\n  return !(0,_is_blank_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(obj);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_present.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/debug/index.js":
/*!*****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/debug/index.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CheckArray: () => (/* binding */ CheckArray),\n/* harmony export */   CheckBlockSymbolTable: () => (/* binding */ CheckBlockSymbolTable),\n/* harmony export */   CheckBoolean: () => (/* binding */ CheckBoolean),\n/* harmony export */   CheckDict: () => (/* binding */ CheckDict),\n/* harmony export */   CheckDocumentFragment: () => (/* binding */ CheckDocumentFragment),\n/* harmony export */   CheckElement: () => (/* binding */ CheckElement),\n/* harmony export */   CheckFunction: () => (/* binding */ CheckFunction),\n/* harmony export */   CheckHandle: () => (/* binding */ CheckHandle),\n/* harmony export */   CheckInstanceof: () => (/* binding */ CheckInstanceof),\n/* harmony export */   CheckInterface: () => (/* binding */ CheckInterface),\n/* harmony export */   CheckMaybe: () => (/* binding */ CheckMaybe),\n/* harmony export */   CheckNode: () => (/* binding */ CheckNode),\n/* harmony export */   CheckNull: () => (/* binding */ CheckNull),\n/* harmony export */   CheckNumber: () => (/* binding */ CheckNumber),\n/* harmony export */   CheckObject: () => (/* binding */ CheckObject),\n/* harmony export */   CheckOption: () => (/* binding */ CheckOption),\n/* harmony export */   CheckOr: () => (/* binding */ CheckOr),\n/* harmony export */   CheckPrimitive: () => (/* binding */ CheckPrimitive),\n/* harmony export */   CheckProgramSymbolTable: () => (/* binding */ CheckProgramSymbolTable),\n/* harmony export */   CheckSafeString: () => (/* binding */ CheckSafeString),\n/* harmony export */   CheckString: () => (/* binding */ CheckString),\n/* harmony export */   CheckUndefined: () => (/* binding */ CheckUndefined),\n/* harmony export */   CheckUnknown: () => (/* binding */ CheckUnknown),\n/* harmony export */   CheckValue: () => (/* binding */ CheckValue),\n/* harmony export */   META_KIND: () => (/* binding */ META_KIND),\n/* harmony export */   OPERAND_TYPES: () => (/* binding */ OPERAND_TYPES),\n/* harmony export */   buildEnum: () => (/* binding */ buildEnum),\n/* harmony export */   buildMetas: () => (/* binding */ buildMetas),\n/* harmony export */   buildSingleMeta: () => (/* binding */ buildSingleMeta),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   debugSlice: () => (/* binding */ debugSlice),\n/* harmony export */   expectStackChange: () => (/* binding */ expectStackChange),\n/* harmony export */   logOpcode: () => (/* binding */ logOpcode),\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   normalizeAll: () => (/* binding */ normalizeAll),\n/* harmony export */   normalizeParsed: () => (/* binding */ normalizeParsed),\n/* harmony export */   opcodeMetadata: () => (/* binding */ opcodeMetadata),\n/* harmony export */   recordStackSize: () => (/* binding */ recordStackSize),\n/* harmony export */   strip: () => (/* binding */ strip),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js\");\n/* harmony import */ var _vm_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vm/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/vm/index.js\");\n\n\n\n\n/* This file is generated by build/debug.js */\n\nfunction opcodeMetadata(op, isMachine) {\n  let value = isMachine ? MACHINE_METADATA[op] : METADATA[op];\n  return value || null;\n}\nconst METADATA = new Array(_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Size).fill(null);\nconst MACHINE_METADATA = new Array(_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Size).fill(null);\nMACHINE_METADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.MachineOp.PushFrame] = {\n  name: 'PushFrame',\n  mnemonic: 'pushf',\n  before: null,\n  stackChange: 2,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMACHINE_METADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.MachineOp.PopFrame] = {\n  name: 'PopFrame',\n  mnemonic: 'popf',\n  before: null,\n  stackChange: -2,\n  ops: [],\n  operands: 0,\n  check: false\n};\nMACHINE_METADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.MachineOp.InvokeVirtual] = {\n  name: 'InvokeVirtual',\n  mnemonic: 'vcall',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMACHINE_METADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.MachineOp.InvokeStatic] = {\n  name: 'InvokeStatic',\n  mnemonic: 'scall',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'offset',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMACHINE_METADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.MachineOp.Jump] = {\n  name: 'Jump',\n  mnemonic: 'goto',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'to',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMACHINE_METADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.MachineOp.Return] = {\n  name: 'Return',\n  mnemonic: 'ret',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: false\n};\nMACHINE_METADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.MachineOp.ReturnTo] = {\n  name: 'ReturnTo',\n  mnemonic: 'setra',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'offset',\n    type: 'i32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Helper] = {\n  name: 'Helper',\n  mnemonic: 'ncall',\n  before: null,\n  stackChange: null,\n  ops: [{\n    name: 'helper',\n    type: 'handle'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.DynamicHelper] = {\n  name: 'DynamicHelper',\n  mnemonic: 'dynamiccall',\n  before: null,\n  stackChange: null,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.SetNamedVariables] = {\n  name: 'SetNamedVariables',\n  mnemonic: 'vsargs',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'register',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.SetBlocks] = {\n  name: 'SetBlocks',\n  mnemonic: 'vbblocks',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'register',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.SetVariable] = {\n  name: 'SetVariable',\n  mnemonic: 'sbvar',\n  before: null,\n  stackChange: -1,\n  ops: [{\n    name: 'symbol',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.SetBlock] = {\n  name: 'SetBlock',\n  mnemonic: 'sblock',\n  before: null,\n  stackChange: -3,\n  ops: [{\n    name: 'symbol',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.GetVariable] = {\n  name: 'GetVariable',\n  mnemonic: 'symload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'symbol',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.GetProperty] = {\n  name: 'GetProperty',\n  mnemonic: 'getprop',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'property',\n    type: 'str'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.GetBlock] = {\n  name: 'GetBlock',\n  mnemonic: 'blockload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'block',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.SpreadBlock] = {\n  name: 'SpreadBlock',\n  mnemonic: 'blockspread',\n  before: null,\n  stackChange: 2,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.HasBlock] = {\n  name: 'HasBlock',\n  mnemonic: 'hasblockload',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.HasBlockParams] = {\n  name: 'HasBlockParams',\n  mnemonic: 'hasparamsload',\n  before: null,\n  stackChange: -2,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Concat] = {\n  name: 'Concat',\n  mnemonic: 'concat',\n  before: null,\n  stackChange: null,\n  ops: [{\n    name: 'count',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.IfInline] = {\n  name: 'IfInline',\n  mnemonic: 'ifinline',\n  before: null,\n  stackChange: -2,\n  ops: [{\n    name: 'count',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Not] = {\n  name: 'Not',\n  mnemonic: 'not',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'count',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Constant] = {\n  name: 'Constant',\n  mnemonic: 'rconstload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'constant',\n    type: 'unknown'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.ConstantReference] = {\n  name: 'ConstantReference',\n  mnemonic: 'rconstrefload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'constant',\n    type: 'unknown'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Primitive] = {\n  name: 'Primitive',\n  mnemonic: 'pconstload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'constant',\n    type: 'primitive'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PrimitiveReference] = {\n  name: 'PrimitiveReference',\n  mnemonic: 'ptoref',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.ReifyU32] = {\n  name: 'ReifyU32',\n  mnemonic: 'reifyload',\n  before: null,\n  stackChange: 1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Dup] = {\n  name: 'Dup',\n  mnemonic: 'dup',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'register',\n    type: 'u32'\n  }, {\n    name: 'offset',\n    type: 'u32'\n  }],\n  operands: 2,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Pop] = {\n  name: 'Pop',\n  mnemonic: 'pop',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'count',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: false\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Load] = {\n  name: 'Load',\n  mnemonic: 'put',\n  before: null,\n  stackChange: -1,\n  ops: [{\n    name: 'register',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Fetch] = {\n  name: 'Fetch',\n  mnemonic: 'regload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'register',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.RootScope] = {\n  name: 'RootScope',\n  mnemonic: 'rscopepush',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'symbols',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.VirtualRootScope] = {\n  name: 'VirtualRootScope',\n  mnemonic: 'vrscopepush',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'register',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.ChildScope] = {\n  name: 'ChildScope',\n  mnemonic: 'cscopepush',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PopScope] = {\n  name: 'PopScope',\n  mnemonic: 'scopepop',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Text] = {\n  name: 'Text',\n  mnemonic: 'apnd_text',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'contents',\n    type: 'str'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Comment] = {\n  name: 'Comment',\n  mnemonic: 'apnd_comment',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'contents',\n    type: 'str'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.AppendHTML] = {\n  name: 'AppendHTML',\n  mnemonic: 'apnd_dynhtml',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.AppendSafeHTML] = {\n  name: 'AppendSafeHTML',\n  mnemonic: 'apnd_dynshtml',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.AppendDocumentFragment] = {\n  name: 'AppendDocumentFragment',\n  mnemonic: 'apnd_dynfrag',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.AppendNode] = {\n  name: 'AppendNode',\n  mnemonic: 'apnd_dynnode',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.AppendText] = {\n  name: 'AppendText',\n  mnemonic: 'apnd_dyntext',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.OpenElement] = {\n  name: 'OpenElement',\n  mnemonic: 'apnd_tag',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'tag',\n    type: 'str'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.OpenDynamicElement] = {\n  name: 'OpenDynamicElement',\n  mnemonic: 'apnd_dyntag',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PushRemoteElement] = {\n  name: 'PushRemoteElement',\n  mnemonic: 'apnd_remotetag',\n  before: null,\n  stackChange: -3,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.StaticAttr] = {\n  name: 'StaticAttr',\n  mnemonic: 'apnd_attr',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'name',\n    type: 'str'\n  }, {\n    name: 'value',\n    type: 'str'\n  }, {\n    name: 'namespace',\n    type: 'option-str'\n  }],\n  operands: 3,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.DynamicAttr] = {\n  name: 'DynamicAttr',\n  mnemonic: 'apnd_dynattr',\n  before: null,\n  stackChange: -1,\n  ops: [{\n    name: 'name',\n    type: 'str'\n  }, {\n    name: 'trusting',\n    type: 'bool'\n  }, {\n    name: 'namespace',\n    type: 'option-str'\n  }],\n  operands: 3,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.ComponentAttr] = {\n  name: 'ComponentAttr',\n  mnemonic: 'apnd_cattr',\n  before: null,\n  stackChange: -1,\n  ops: [{\n    name: 'name',\n    type: 'str'\n  }, {\n    name: 'trusting',\n    type: 'bool'\n  }, {\n    name: 'namespace',\n    type: 'option-str'\n  }],\n  operands: 3,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.FlushElement] = {\n  name: 'FlushElement',\n  mnemonic: 'apnd_flushtag',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.CloseElement] = {\n  name: 'CloseElement',\n  mnemonic: 'apnd_closetag',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PopRemoteElement] = {\n  name: 'PopRemoteElement',\n  mnemonic: 'apnd_closeremotetag',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Modifier] = {\n  name: 'Modifier',\n  mnemonic: 'apnd_modifier',\n  before: null,\n  stackChange: -1,\n  ops: [{\n    name: 'helper',\n    type: 'handle'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.BindDynamicScope] = {\n  name: 'BindDynamicScope',\n  mnemonic: 'setdynscope',\n  before: null,\n  stackChange: null,\n  ops: [{\n    name: 'names',\n    type: 'str-array'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PushDynamicScope] = {\n  name: 'PushDynamicScope',\n  mnemonic: 'dynscopepush',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PopDynamicScope] = {\n  name: 'PopDynamicScope',\n  mnemonic: 'dynscopepop',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.CompileBlock] = {\n  name: 'CompileBlock',\n  mnemonic: 'cmpblock',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PushBlockScope] = {\n  name: 'PushBlockScope',\n  mnemonic: 'scopeload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'scope',\n    type: 'scope'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PushSymbolTable] = {\n  name: 'PushSymbolTable',\n  mnemonic: 'dsymload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'table',\n    type: 'symbol-table'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.InvokeYield] = {\n  name: 'InvokeYield',\n  mnemonic: 'invokeyield',\n  before: null,\n  stackChange: null,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.JumpIf] = {\n  name: 'JumpIf',\n  mnemonic: 'iftrue',\n  before: null,\n  stackChange: -1,\n  ops: [{\n    name: 'to',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.JumpUnless] = {\n  name: 'JumpUnless',\n  mnemonic: 'iffalse',\n  before: null,\n  stackChange: -1,\n  ops: [{\n    name: 'to',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.JumpEq] = {\n  name: 'JumpEq',\n  mnemonic: 'ifeq',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'to',\n    type: 'i32'\n  }, {\n    name: 'comparison',\n    type: 'i32'\n  }],\n  operands: 2,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.AssertSame] = {\n  name: 'AssertSame',\n  mnemonic: 'assert_eq',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Enter] = {\n  name: 'Enter',\n  mnemonic: 'blk_start',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'args',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Exit] = {\n  name: 'Exit',\n  mnemonic: 'blk_end',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.ToBoolean] = {\n  name: 'ToBoolean',\n  mnemonic: 'anytobool',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.EnterList] = {\n  name: 'EnterList',\n  mnemonic: 'list_start',\n  before: null,\n  stackChange: null,\n  ops: [{\n    name: 'address',\n    type: 'u32'\n  }, {\n    name: 'address',\n    type: 'u32'\n  }],\n  operands: 2,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.ExitList] = {\n  name: 'ExitList',\n  mnemonic: 'list_end',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Iterate] = {\n  name: 'Iterate',\n  mnemonic: 'iter',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'end',\n    type: 'u32'\n  }],\n  operands: 1,\n  check: false\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Main] = {\n  name: 'Main',\n  mnemonic: 'main',\n  before: null,\n  stackChange: -2,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.ContentType] = {\n  name: 'ContentType',\n  mnemonic: 'ctload',\n  before: null,\n  stackChange: 1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.DynamicContentType] = {\n  name: 'DynamicContentType',\n  mnemonic: 'dctload',\n  before: null,\n  stackChange: 1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Curry] = {\n  name: 'Curry',\n  mnemonic: 'curry',\n  before: null,\n  stackChange: null,\n  ops: [{\n    name: 'type',\n    type: 'u32'\n  }, {\n    name: 'is-strict',\n    type: 'bool'\n  }],\n  operands: 2,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PushComponentDefinition] = {\n  name: 'PushComponentDefinition',\n  mnemonic: 'cmload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'spec',\n    type: 'handle'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PushDynamicComponentInstance] = {\n  name: 'PushDynamicComponentInstance',\n  mnemonic: 'dciload',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.ResolveDynamicComponent] = {\n  name: 'ResolveDynamicComponent',\n  mnemonic: 'cdload',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'owner',\n    type: 'owner'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PushArgs] = {\n  name: 'PushArgs',\n  mnemonic: 'argsload',\n  before: null,\n  stackChange: null,\n  ops: [{\n    name: 'names',\n    type: 'str-array'\n  }, {\n    name: 'block-names',\n    type: 'str-array'\n  }, {\n    name: 'flags',\n    type: 'u32'\n  }],\n  operands: 3,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PushEmptyArgs] = {\n  name: 'PushEmptyArgs',\n  mnemonic: 'emptyargsload',\n  before: null,\n  stackChange: 1,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PopArgs] = {\n  name: 'PopArgs',\n  mnemonic: 'argspop',\n  before: null,\n  stackChange: null,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PrepareArgs] = {\n  name: 'PrepareArgs',\n  mnemonic: 'argsprep',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: false\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.CaptureArgs] = {\n  name: 'CaptureArgs',\n  mnemonic: 'argscapture',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.CreateComponent] = {\n  name: 'CreateComponent',\n  mnemonic: 'comp_create',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'flags',\n    type: 'u32'\n  }, {\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 2,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.RegisterComponentDestructor] = {\n  name: 'RegisterComponentDestructor',\n  mnemonic: 'comp_dest',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PutComponentOperations] = {\n  name: 'PutComponentOperations',\n  mnemonic: 'comp_elops',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.GetComponentSelf] = {\n  name: 'GetComponentSelf',\n  mnemonic: 'comp_selfload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.GetComponentTagName] = {\n  name: 'GetComponentTagName',\n  mnemonic: 'comp_tagload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.GetComponentLayout] = {\n  name: 'GetComponentLayout',\n  mnemonic: 'comp_layoutload',\n  before: null,\n  stackChange: 2,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.BindEvalScope] = {\n  name: 'BindEvalScope',\n  mnemonic: 'eval_scope',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.SetupForEval] = {\n  name: 'SetupForEval',\n  mnemonic: 'eval_setup',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.PopulateLayout] = {\n  name: 'PopulateLayout',\n  mnemonic: 'comp_layoutput',\n  before: null,\n  stackChange: -2,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.InvokeComponentLayout] = {\n  name: 'InvokeComponentLayout',\n  mnemonic: 'comp_invokelayout',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.BeginComponentTransaction] = {\n  name: 'BeginComponentTransaction',\n  mnemonic: 'comp_begin',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.CommitComponentTransaction] = {\n  name: 'CommitComponentTransaction',\n  mnemonic: 'comp_commit',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.DidCreateElement] = {\n  name: 'DidCreateElement',\n  mnemonic: 'comp_created',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.DidRenderLayout] = {\n  name: 'DidRenderLayout',\n  mnemonic: 'comp_rendered',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'state',\n    type: 'register'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.ResolveMaybeLocal] = {\n  name: 'ResolveMaybeLocal',\n  mnemonic: 'eval_varload',\n  before: null,\n  stackChange: 1,\n  ops: [{\n    name: 'local',\n    type: 'str'\n  }],\n  operands: 1,\n  check: true\n};\nMETADATA[_vm_index_js__WEBPACK_IMPORTED_MODULE_2__.Op.Debugger] = {\n  name: 'Debugger',\n  mnemonic: 'debugger',\n  before: null,\n  stackChange: 0,\n  ops: [{\n    name: 'symbols',\n    type: 'str-array'\n  }, {\n    name: 'debugInfo',\n    type: 'array'\n  }],\n  operands: 2,\n  check: true\n};\nfunction debugSlice(context, start, end) {}\nfunction logOpcode(type, params) {}\nfunction debug(c, op, isMachine) {\n  return undefined;\n}\n\n// TODO: How do these map onto constant and machine types?\nconst OPERAND_TYPES = ['u32', 'i32', 'owner', 'handle', 'str', 'option-str', 'array', 'str-array', 'bool', 'primitive', 'register', 'unknown', 'symbol-table', 'scope'];\nfunction isOperandType(s) {\n  return OPERAND_TYPES.indexOf(s) !== -1;\n}\nfunction normalize(key, input) {\n  let name;\n  if (input.format === undefined) {\n    throw new Error(`Missing format in ${JSON.stringify(input)}`);\n  }\n  if (Array.isArray(input.format)) {\n    name = input.format[0];\n  } else {\n    name = input.format;\n  }\n  let ops = Array.isArray(input.format) ? operands(input.format.slice(1)) : [];\n  return {\n    name,\n    mnemonic: key,\n    before: null,\n    stackChange: stackChange(input['operand-stack']),\n    ops,\n    operands: ops.length,\n    check: input.skip === true ? false : true\n  };\n}\nfunction stackChange(stack) {\n  if (stack === undefined) {\n    return 0;\n  }\n  let before = stack[0];\n  let after = stack[1];\n  if (hasRest(before) || hasRest(after)) {\n    return null;\n  }\n  return after.length - before.length;\n}\nfunction hasRest(input) {\n  if (!Array.isArray(input)) {\n    throw new Error(`Unexpected stack entry: ${JSON.stringify(input)}`);\n  }\n  return input.some(s => s.slice(-3) === '...');\n}\nfunction operands(input) {\n  if (!Array.isArray(input)) {\n    throw new Error(`Expected operands array, got ${JSON.stringify(input)}`);\n  }\n  return input.map(op);\n}\nfunction op(input) {\n  let [name, type] = input.split(':');\n  if (isOperandType(type)) {\n    return {\n      name,\n      type\n    };\n  } else {\n    throw new Error(`Expected operand, found ${JSON.stringify(input)}`);\n  }\n}\nfunction normalizeAll(parsed) {\n  let machine = normalizeParsed(parsed.machine);\n  let syscall = normalizeParsed(parsed.syscall);\n  return {\n    machine,\n    syscall\n  };\n}\nfunction normalizeParsed(parsed) {\n  let out = Object.create(null);\n  for (const [key, value] of Object.entries(parsed)) {\n    out[key] = normalize(key, value);\n  }\n  return out;\n}\nfunction buildEnum(name, parsed, offset, max) {\n  let e = [`export enum ${name} {`];\n  let last;\n  Object.values(parsed).forEach((value, i) => {\n    e.push(`  ${value.name} = ${offset + i},`);\n    last = i;\n  });\n  e.push(`  Size = ${last + offset + 1},`);\n  e.push('}');\n  let enumString = e.join('\\n');\n  let predicate;\n  if (max) {\n    predicate = strip`\n      export function is${name}(value: number): value is ${name} {\n        return value >= ${offset} && value <= ${max};\n      }\n    `;\n  } else {\n    predicate = strip`\n      export function is${name}(value: number): value is ${name} {\n        return value >= ${offset};\n      }\n    `;\n  }\n  return {\n    enumString,\n    predicate\n  };\n}\nfunction strip(strings, ...args) {\n  let out = '';\n  for (let i = 0; i < strings.length; i++) {\n    let string = strings[i];\n    let dynamic = args[i] !== undefined ? String(args[i]) : '';\n    out += `${string}${dynamic}`;\n  }\n\n  // eslint-disable-next-line regexp/no-super-linear-backtracking\n  out = /^\\s*?\\n?([\\s\\S]*?)\\s*$/u.exec(out)[1];\n  let min = Number.MAX_SAFE_INTEGER;\n  for (let line of out.split('\\n')) {\n    let leading = /^\\s*/u.exec(line)[0].length;\n    min = Math.min(min, leading);\n  }\n  let stripped = '';\n  for (let line of out.split('\\n')) {\n    stripped += line.slice(min) + '\\n';\n  }\n  return stripped;\n}\nconst META_KIND = ['METADATA', 'MACHINE_METADATA'];\nfunction buildSingleMeta(kind, all, key) {\n  let e = kind === 'MACHINE_METADATA' ? 'MachineOp' : 'Op';\n  return `${kind}[${e}.${all[key].name}] = ${stringify(all[key], 0)};`;\n}\nfunction stringify(o, pad) {\n  if (typeof o !== 'object' || o === null) {\n    if (typeof o === 'string') {\n      return `'${o}'`;\n    }\n    return JSON.stringify(o);\n  }\n  if (Array.isArray(o)) {\n    return `[${o.map(v => stringify(v, pad)).join(', ')}]`;\n  }\n  let out = ['{'];\n  for (let key of Object.keys(o)) {\n    out.push(`${' '.repeat(pad + 2)}${key}: ${stringify(o[key], pad + 2)},`);\n  }\n  out.push(`${' '.repeat(pad)}}`);\n  return out.join('\\n');\n}\nfunction buildMetas(kind, all) {\n  let out = [];\n  for (let key of Object.keys(all)) {\n    out.push(buildSingleMeta(kind, all, key));\n  }\n  return out.join('\\n\\n');\n}\nfunction wrap(checker) {\n  class Wrapped {\n    validate(value) {\n      return checker().validate(value);\n    }\n    expected() {\n      return checker().expected();\n    }\n  }\n  return new Wrapped();\n}\nclass TypeofChecker {\n  constructor(expectedType) {\n    this.expectedType = expectedType;\n  }\n  validate(value) {\n    return typeof value === this.expectedType;\n  }\n  expected() {\n    return `typeof ${this.expectedType}`;\n  }\n}\nclass PrimitiveChecker {\n  validate(value) {\n    return typeof value !== 'string' || typeof value === 'number' || typeof value === 'string' || value === undefined || value === null;\n  }\n  expected() {\n    return `a primitive`;\n  }\n}\nclass NullChecker {\n  validate(value) {\n    return value === null;\n  }\n  expected() {\n    return `null`;\n  }\n}\nclass UndefinedChecker {\n  validate(value) {\n    return value === undefined;\n  }\n  expected() {\n    return `undefined`;\n  }\n}\nclass InstanceofChecker {\n  constructor(Class) {\n    this.Class = Class;\n  }\n  validate(value) {\n    return value ? value instanceof this.Class : false;\n  }\n  expected() {\n    return `an instance of ${this.Class.name}`;\n  }\n}\nclass OptionChecker {\n  constructor(checker, emptyValue) {\n    this.checker = checker;\n    this.emptyValue = emptyValue;\n  }\n  validate(value) {\n    if (value === this.emptyValue) return true;\n    return this.checker.validate(value);\n  }\n  expected() {\n    return `${this.checker.expected()} or null`;\n  }\n}\nclass MaybeChecker {\n  constructor(checker) {\n    this.checker = checker;\n  }\n  validate(value) {\n    if (value === null || value === undefined) return true;\n    return this.checker.validate(value);\n  }\n  expected() {\n    return `${this.checker.expected()} or null or undefined`;\n  }\n}\nclass OrChecker {\n  constructor(left, right) {\n    this.left = left;\n    this.right = right;\n  }\n  validate(value) {\n    return this.left.validate(value) || this.right.validate(value);\n  }\n  expected() {\n    return `${this.left.expected()} or ${this.right.expected()}`;\n  }\n}\nclass ExactValueChecker {\n  constructor(value, desc) {\n    this.value = value;\n    this.desc = desc;\n  }\n  validate(obj) {\n    return obj === this.value;\n  }\n  expected() {\n    return this.desc;\n  }\n}\nclass PropertyChecker {\n  constructor(checkers) {\n    this.checkers = checkers;\n  }\n  validate(obj) {\n    if (typeof obj !== 'object') return false;\n    if (obj === null || obj === undefined) return false;\n    return Object.entries(this.checkers).every(([k, checker]) => k in obj ? checker.validate(obj[k]) : false);\n  }\n  expected() {\n    let pairs = Object.entries(this.checkers).map(([k, checker]) => {\n      return `${k}: ${checker.expected()}`;\n    });\n    return `{ ${pairs.join(',')} }`;\n  }\n}\nclass ArrayChecker {\n  constructor(checker) {\n    this.checker = checker;\n  }\n  validate(obj) {\n    if (obj === null || obj === undefined) return false;\n    if (!Array.isArray(obj)) return false;\n    return obj.every(item => this.checker.validate(item));\n  }\n  expected() {\n    return `Array<${this.checker.expected()}>`;\n  }\n}\nclass DictChecker {\n  constructor(checker) {\n    this.checker = checker;\n  }\n  validate(value) {\n    let isDict = typeof value === 'object' && value !== null && Object.getPrototypeOf(value) === null;\n    if (!isDict) return false;\n    let {\n      checker\n    } = this;\n    for (let key in value) {\n      if (!checker.validate(value[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  expected() {\n    return `a primitive`;\n  }\n}\nclass OpaqueChecker {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"type\", void 0);\n  }\n  validate(_obj) {\n    return true;\n  }\n  expected() {\n    return `any`;\n  }\n}\nclass ObjectChecker {\n  validate(obj) {\n    return typeof obj === 'function' || typeof obj === 'object' && obj !== null;\n  }\n  expected() {\n    return `an object or function (valid WeakMap key)`;\n  }\n}\nclass SafeStringChecker {\n  validate(value) {\n    return typeof value === 'object' && value !== null && typeof value.toHTML === 'function';\n  }\n  expected() {\n    return `SafeString`;\n  }\n}\nfunction CheckInstanceof(Class) {\n  return new InstanceofChecker(Class);\n}\nfunction CheckOption(checker) {\n  return new OptionChecker(checker, null);\n}\nfunction CheckMaybe(checker) {\n  return new MaybeChecker(checker);\n}\nfunction CheckInterface(obj) {\n  return new PropertyChecker(obj);\n}\nfunction CheckArray(obj) {\n  return new ArrayChecker(obj);\n}\nfunction CheckDict(obj) {\n  return new DictChecker(obj);\n}\nfunction defaultMessage(value, expected) {\n  return `Got ${value}, expected:\\n${expected}`;\n}\nfunction check(value, checker, message = defaultMessage) {\n  if (typeof checker === 'function') {\n    checker(value);\n    return value;\n  }\n  if (checker.validate(value)) {\n    return value;\n  } else {\n    throw new Error(message(value, checker.expected()));\n  }\n}\nlet size = 0;\nfunction recordStackSize(sp) {\n  size = sp;\n}\nfunction expectStackChange(stack, expected, name) {\n  let actual = stack.sp - size;\n  if (actual === expected) return;\n  throw new Error(`Expected stack to change by ${expected}, but it changed by ${actual} in ${name}`);\n}\nconst CheckPrimitive = new PrimitiveChecker();\nconst CheckFunction = new TypeofChecker('function');\nconst CheckNumber = new TypeofChecker('number');\nconst CheckBoolean = new TypeofChecker('boolean');\nconst CheckHandle = CheckNumber;\nconst CheckString = new TypeofChecker('string');\nconst CheckNull = new NullChecker();\nconst CheckUndefined = new UndefinedChecker();\nconst CheckUnknown = new OpaqueChecker();\nconst CheckSafeString = new SafeStringChecker();\nconst CheckObject = new ObjectChecker();\nfunction CheckOr(left, right) {\n  return new OrChecker(left, right);\n}\nfunction CheckValue(value, desc = String(value)) {\n  return new ExactValueChecker(value, desc);\n}\nconst CheckBlockSymbolTable = CheckInterface({\n  parameters: CheckArray(CheckNumber)\n});\nconst CheckProgramSymbolTable = CheckInterface({\n  hasEval: CheckBoolean,\n  symbols: CheckArray(CheckString)\n});\nconst CheckElement = CheckInterface({\n  nodeType: CheckValue(1),\n  tagName: CheckString,\n  nextSibling: CheckUnknown\n});\nconst CheckDocumentFragment = CheckInterface({\n  nodeType: CheckValue(11),\n  nextSibling: CheckUnknown\n});\nconst CheckNode = CheckInterface({\n  nodeType: CheckNumber,\n  nextSibling: CheckUnknown\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/debug/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _hasDestroyableChildren: () => (/* binding */ _hasDestroyableChildren),\n/* harmony export */   assertDestroyablesDestroyed: () => (/* binding */ assertDestroyablesDestroyed),\n/* harmony export */   associateDestroyableChild: () => (/* binding */ associateDestroyableChild),\n/* harmony export */   destroy: () => (/* binding */ destroy),\n/* harmony export */   destroyChildren: () => (/* binding */ destroyChildren),\n/* harmony export */   enableDestroyableTracking: () => (/* binding */ enableDestroyableTracking),\n/* harmony export */   isDestroyed: () => (/* binding */ isDestroyed),\n/* harmony export */   isDestroying: () => (/* binding */ isDestroying),\n/* harmony export */   registerDestructor: () => (/* binding */ registerDestructor),\n/* harmony export */   unregisterDestructor: () => (/* binding */ unregisterDestructor)\n/* harmony export */ });\n/* harmony import */ var _global_context_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../global-context/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/global-context/index.js\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js\");\n\n\nvar DestroyingState = /*#__PURE__*/function (DestroyingState) {\n  DestroyingState[DestroyingState[\"Live\"] = 0] = \"Live\";\n  DestroyingState[DestroyingState[\"Destroying\"] = 1] = \"Destroying\";\n  DestroyingState[DestroyingState[\"Destroyed\"] = 2] = \"Destroyed\";\n  return DestroyingState;\n}(DestroyingState || {});\nlet DESTROYABLE_META = new WeakMap();\nfunction push(collection, newItem) {\n  if (collection === null) {\n    return newItem;\n  } else if (Array.isArray(collection)) {\n    collection.push(newItem);\n    return collection;\n  } else {\n    return [collection, newItem];\n  }\n}\nfunction iterate(collection, fn) {\n  if (Array.isArray(collection)) {\n    collection.forEach(fn);\n  } else if (collection !== null) {\n    fn(collection);\n  }\n}\nfunction remove(collection, item, message) {\n  if (true) {\n    let collectionIsItem = collection === item;\n    let collectionContainsItem = Array.isArray(collection) && collection.indexOf(item) !== -1;\n    if (!collectionIsItem && !collectionContainsItem) {\n      throw new Error(String(message));\n    }\n  }\n  if (Array.isArray(collection) && collection.length > 1) {\n    let index = collection.indexOf(item);\n    collection.splice(index, 1);\n    return collection;\n  } else {\n    return null;\n  }\n}\nfunction getDestroyableMeta(destroyable) {\n  let meta = DESTROYABLE_META.get(destroyable);\n  if (meta === undefined) {\n    meta = {\n      parents: null,\n      children: null,\n      eagerDestructors: null,\n      destructors: null,\n      state: DestroyingState.Live\n    };\n    if (true) {\n      meta.source = destroyable;\n    }\n    DESTROYABLE_META.set(destroyable, meta);\n  }\n  return meta;\n}\nfunction associateDestroyableChild(parent, child) {\n  if ( true && isDestroying(parent)) {\n    throw new Error('Attempted to associate a destroyable child with an object that is already destroying or destroyed');\n  }\n  let parentMeta = getDestroyableMeta(parent);\n  let childMeta = getDestroyableMeta(child);\n  parentMeta.children = push(parentMeta.children, child);\n  childMeta.parents = push(childMeta.parents, parent);\n  return child;\n}\nfunction registerDestructor(destroyable, destructor, eager = false) {\n  if ( true && isDestroying(destroyable)) {\n    throw new Error('Attempted to register a destructor with an object that is already destroying or destroyed');\n  }\n  let meta = getDestroyableMeta(destroyable);\n  let destructorsKey = eager === true ? 'eagerDestructors' : 'destructors';\n  meta[destructorsKey] = push(meta[destructorsKey], destructor);\n  return destructor;\n}\nfunction unregisterDestructor(destroyable, destructor, eager = false) {\n  if ( true && isDestroying(destroyable)) {\n    throw new Error('Attempted to unregister a destructor with an object that is already destroying or destroyed');\n  }\n  let meta = getDestroyableMeta(destroyable);\n  let destructorsKey = eager === true ? 'eagerDestructors' : 'destructors';\n  meta[destructorsKey] = remove(meta[destructorsKey], destructor,  true && 'attempted to remove a destructor that was not registered with the destroyable');\n}\n\n////////////\n\nfunction destroy(destroyable) {\n  let meta = getDestroyableMeta(destroyable);\n  if (meta.state >= DestroyingState.Destroying) return;\n  let {\n    parents,\n    children,\n    eagerDestructors,\n    destructors\n  } = meta;\n  meta.state = DestroyingState.Destroying;\n  iterate(children, destroy);\n  iterate(eagerDestructors, destructor => destructor(destroyable));\n  iterate(destructors, destructor => (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_0__.scheduleDestroy)(destroyable, destructor));\n  (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_0__.scheduleDestroyed)(() => {\n    iterate(parents, parent => removeChildFromParent(destroyable, parent));\n    meta.state = DestroyingState.Destroyed;\n  });\n}\nfunction removeChildFromParent(child, parent) {\n  let parentMeta = getDestroyableMeta(parent);\n  if (parentMeta.state === DestroyingState.Live) {\n    parentMeta.children = remove(parentMeta.children, child,  true && \"attempted to remove child from parent, but the parent's children did not contain the child. This is likely a bug with destructors.\");\n  }\n}\nfunction destroyChildren(destroyable) {\n  let {\n    children\n  } = getDestroyableMeta(destroyable);\n  iterate(children, destroy);\n}\nfunction _hasDestroyableChildren(destroyable) {\n  let meta = DESTROYABLE_META.get(destroyable);\n  return meta === undefined ? false : meta.children !== null;\n}\nfunction isDestroying(destroyable) {\n  let meta = DESTROYABLE_META.get(destroyable);\n  return meta === undefined ? false : meta.state >= DestroyingState.Destroying;\n}\nfunction isDestroyed(destroyable) {\n  let meta = DESTROYABLE_META.get(destroyable);\n  return meta === undefined ? false : meta.state >= DestroyingState.Destroyed;\n}\n\n////////////\n\nlet enableDestroyableTracking;\nlet assertDestroyablesDestroyed;\nif (true) {\n  let isTesting = false;\n  enableDestroyableTracking = () => {\n    if (isTesting) {\n      // Reset destroyable meta just in case, before throwing the error\n      DESTROYABLE_META = new WeakMap();\n      throw new Error('Attempted to start destroyable testing, but you did not end the previous destroyable test. Did you forget to call `assertDestroyablesDestroyed()`');\n    }\n    isTesting = true;\n    DESTROYABLE_META = new Map();\n  };\n  assertDestroyablesDestroyed = () => {\n    if (!isTesting) {\n      throw new Error('Attempted to assert destroyables destroyed, but you did not start a destroyable test. Did you forget to call `enableDestroyableTracking()`');\n    }\n    isTesting = false;\n    let map = DESTROYABLE_META;\n    DESTROYABLE_META = new WeakMap();\n    let undestroyed = [];\n    map.forEach(meta => {\n      if (meta.state !== DestroyingState.Destroyed) {\n        undestroyed.push(meta.source);\n      }\n    });\n    if (undestroyed.length > 0) {\n      let objectsToString = undestroyed.map(_util_index_js__WEBPACK_IMPORTED_MODULE_1__.debugToString).join('\\n    ');\n      let error = new Error(`Some destroyables were not destroyed during this test:\\n    ${objectsToString}`);\n      error.destroyables = undestroyed;\n      throw error;\n    }\n  };\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/encoder/index.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/encoder/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstructionEncoderImpl: () => (/* binding */ InstructionEncoderImpl)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _vm_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vm/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/vm/index.js\");\n\n\nclass InstructionEncoderImpl {\n  constructor(buffer) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"size\", 0);\n    this.buffer = buffer;\n  }\n  encode(type, machine, ...args) {\n    if (type > _vm_index_js__WEBPACK_IMPORTED_MODULE_1__.TYPE_SIZE) {\n      throw new Error(`Opcode type over 8-bits. Got ${type}.`);\n    }\n    let first = type | machine | arguments.length - 2 << _vm_index_js__WEBPACK_IMPORTED_MODULE_1__.ARG_SHIFT;\n    this.buffer.push(first);\n    for (const op of args) {\n      if ( true && typeof op === 'number' && op > _vm_index_js__WEBPACK_IMPORTED_MODULE_1__.MAX_SIZE) {\n        throw new Error(`Operand over 32-bits. Got ${op}.`);\n      }\n      this.buffer.push(op);\n    }\n    this.size = this.buffer.length;\n  }\n  patch(position, target) {\n    if (this.buffer[position + 1] === -1) {\n      this.buffer[position + 1] = target;\n    } else {\n      throw new Error('Trying to patch operand in populated slot instead of a reserved slot.');\n    }\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/encoder/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/global-context/index.js":
/*!**************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/global-context/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   assertGlobalContextWasSet: () => (/* binding */ assertGlobalContextWasSet),\n/* harmony export */   \"default\": () => (/* binding */ setGlobalContext),\n/* harmony export */   deprecate: () => (/* binding */ deprecate),\n/* harmony export */   getPath: () => (/* binding */ getPath),\n/* harmony export */   getProp: () => (/* binding */ getProp),\n/* harmony export */   scheduleDestroy: () => (/* binding */ scheduleDestroy),\n/* harmony export */   scheduleDestroyed: () => (/* binding */ scheduleDestroyed),\n/* harmony export */   scheduleRevalidate: () => (/* binding */ scheduleRevalidate),\n/* harmony export */   setPath: () => (/* binding */ setPath),\n/* harmony export */   setProp: () => (/* binding */ setProp),\n/* harmony export */   testOverrideGlobalContext: () => (/* binding */ testOverrideGlobalContext),\n/* harmony export */   toBool: () => (/* binding */ toBool),\n/* harmony export */   toIterator: () => (/* binding */ toIterator),\n/* harmony export */   warnIfStyleNotTrusted: () => (/* binding */ warnIfStyleNotTrusted)\n/* harmony export */ });\n/**\n * This package contains global context functions for Glimmer. These functions\n * are set by the embedding environment and must be set before initial render.\n *\n * These functions should meet the following criteria:\n *\n * - Must be provided by the embedder, due to having framework specific\n *   behaviors (e.g. interop with classic Ember behaviors that should not be\n *   upstreamed) or to being out of scope for the VM (e.g. scheduling a\n *   revalidation)\n * - Never differ between render roots\n * - Never change over time\n *\n */\n//////////\n/**\n * Interfaces\n *\n * TODO: Move these into @glimmer/interfaces, move @glimmer/interfaces to\n * @glimmer/internal-interfaces.\n */\n//////////\n/**\n * Schedules a VM revalidation.\n *\n * Note: this has a default value so that tags can warm themselves when first loaded.\n */\nlet scheduleRevalidate = () => {};\n\n/**\n * Schedules a destructor to run\n *\n * @param destroyable The destroyable being destroyed\n * @param destructor The destructor being scheduled\n */\nlet scheduleDestroy;\n\n/**\n * Finalizes destruction\n *\n * @param finalizer finalizer function\n */\nlet scheduleDestroyed;\n\n/**\n * Hook to provide iterators for `{{each}}` loops\n *\n * @param value The value to create an iterator for\n */\nlet toIterator;\n\n/**\n * Hook to specify truthiness within Glimmer templates\n *\n * @param value The value to convert to a boolean\n */\nlet toBool;\n\n/**\n * Hook for specifying how Glimmer should access properties in cases where it\n * needs to. For instance, accessing an object's values in templates.\n *\n * @param obj The object provided to get a value from\n * @param path The path to get the value from\n */\nlet getProp;\n\n/**\n * Hook for specifying how Glimmer should update props in cases where it needs\n * to. For instance, when updating a template reference (e.g. 2-way-binding)\n *\n * @param obj The object provided to get a value from\n * @param prop The prop to set the value at\n * @param value The value to set the value to\n */\nlet setProp;\n\n/**\n * Hook for specifying how Glimmer should access paths in cases where it needs\n * to. For instance, the `key` value of `{{each}}` loops.\n *\n * @param obj The object provided to get a value from\n * @param path The path to get the value from\n */\nlet getPath;\n\n/**\n * Hook for specifying how Glimmer should update paths in cases where it needs\n * to. For instance, when updating a template reference (e.g. 2-way-binding)\n *\n * @param obj The object provided to get a value from\n * @param path The path to get the value from\n */\nlet setPath;\n\n/**\n * Hook to warn if a style binding string or value was not marked as trusted\n * (e.g. HTMLSafe)\n */\nlet warnIfStyleNotTrusted;\n\n/**\n * Hook to customize assertion messages in the VM. Usages can be stripped out\n * by using the @glimmer/vm-babel-plugins package.\n */\nlet assert;\n\n/**\n * Hook to customize deprecation messages in the VM. Usages can be stripped out\n * by using the @glimmer/vm-babel-plugins package.\n */\nlet deprecate;\n\n//////////\n\nlet globalContextWasSet = false;\nfunction setGlobalContext(context) {\n  if (true) {\n    if (globalContextWasSet) {\n      throw new Error('Attempted to set the global context twice. This should only be set once.');\n    }\n    globalContextWasSet = true;\n  }\n  scheduleRevalidate = context.scheduleRevalidate;\n  scheduleDestroy = context.scheduleDestroy;\n  scheduleDestroyed = context.scheduleDestroyed;\n  toIterator = context.toIterator;\n  toBool = context.toBool;\n  getProp = context.getProp;\n  setProp = context.setProp;\n  getPath = context.getPath;\n  setPath = context.setPath;\n  warnIfStyleNotTrusted = context.warnIfStyleNotTrusted;\n  assert = context.assert;\n  deprecate = context.deprecate;\n}\nlet assertGlobalContextWasSet;\nlet testOverrideGlobalContext;\nif (true) {\n  assertGlobalContextWasSet = () => {\n    if (globalContextWasSet === false) {\n      throw new Error('The global context for Glimmer VM was not set. You must set these global context functions to let Glimmer VM know how to accomplish certain operations. You can do this by importing `setGlobalContext` from `@glimmer/global-context`');\n    }\n  };\n  testOverrideGlobalContext = context => {\n    let originalGlobalContext = globalContextWasSet ? {\n      scheduleRevalidate,\n      scheduleDestroy,\n      scheduleDestroyed,\n      toIterator,\n      toBool,\n      getProp,\n      setProp,\n      getPath,\n      setPath,\n      warnIfStyleNotTrusted,\n      assert,\n      deprecate\n    } : null;\n    if (context === null) {\n      globalContextWasSet = false;\n    } else {\n      globalContextWasSet = true;\n    }\n\n    // We use `undefined as any` here to unset the values when resetting the\n    // context at the end of a test.\n    scheduleRevalidate = context?.scheduleRevalidate || undefined;\n    scheduleDestroy = context?.scheduleDestroy || undefined;\n    scheduleDestroyed = context?.scheduleDestroyed || undefined;\n    toIterator = context?.toIterator || undefined;\n    toBool = context?.toBool || undefined;\n    getProp = context?.getProp || undefined;\n    setProp = context?.setProp || undefined;\n    getPath = context?.getPath || undefined;\n    setPath = context?.setPath || undefined;\n    warnIfStyleNotTrusted = context?.warnIfStyleNotTrusted || undefined;\n    assert = context?.assert || undefined;\n    deprecate = context?.deprecate || undefined;\n    return originalGlobalContext;\n  };\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/global-context/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CustomComponentManager: () => (/* binding */ CustomComponentManager),\n/* harmony export */   CustomHelperManager: () => (/* binding */ CustomHelperManager),\n/* harmony export */   CustomModifierManager: () => (/* binding */ CustomModifierManager),\n/* harmony export */   capabilityFlagsFrom: () => (/* binding */ capabilityFlagsFrom),\n/* harmony export */   componentCapabilities: () => (/* binding */ componentCapabilities),\n/* harmony export */   getComponentTemplate: () => (/* binding */ getComponentTemplate),\n/* harmony export */   getCustomTagFor: () => (/* binding */ getCustomTagFor),\n/* harmony export */   getInternalComponentManager: () => (/* binding */ getInternalComponentManager),\n/* harmony export */   getInternalHelperManager: () => (/* binding */ getInternalHelperManager),\n/* harmony export */   getInternalModifierManager: () => (/* binding */ getInternalModifierManager),\n/* harmony export */   hasCapability: () => (/* binding */ hasCapability),\n/* harmony export */   hasDestroyable: () => (/* binding */ hasDestroyable),\n/* harmony export */   hasInternalComponentManager: () => (/* binding */ hasInternalComponentManager),\n/* harmony export */   hasInternalHelperManager: () => (/* binding */ hasInternalHelperManager),\n/* harmony export */   hasInternalModifierManager: () => (/* binding */ hasInternalModifierManager),\n/* harmony export */   hasValue: () => (/* binding */ hasValue),\n/* harmony export */   helperCapabilities: () => (/* binding */ helperCapabilities),\n/* harmony export */   managerHasCapability: () => (/* binding */ managerHasCapability),\n/* harmony export */   modifierCapabilities: () => (/* binding */ modifierCapabilities),\n/* harmony export */   setComponentManager: () => (/* binding */ setComponentManager),\n/* harmony export */   setComponentTemplate: () => (/* binding */ setComponentTemplate),\n/* harmony export */   setCustomTagFor: () => (/* binding */ setCustomTagFor),\n/* harmony export */   setHelperManager: () => (/* binding */ setHelperManager),\n/* harmony export */   setInternalComponentManager: () => (/* binding */ setInternalComponentManager),\n/* harmony export */   setInternalHelperManager: () => (/* binding */ setInternalHelperManager),\n/* harmony export */   setInternalModifierManager: () => (/* binding */ setInternalModifierManager),\n/* harmony export */   setModifierManager: () => (/* binding */ setModifierManager)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js\");\n/* harmony import */ var _destroyable_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _reference_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reference/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js\");\n/* harmony import */ var _validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _debug_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../debug/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/debug/index.js\");\n/* harmony import */ var _vm_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../vm/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/vm/index.js\");\n\n\n\n\n\n\n\nconst CUSTOM_TAG_FOR = new WeakMap();\nfunction getCustomTagFor(obj) {\n  return CUSTOM_TAG_FOR.get(obj);\n}\nfunction setCustomTagFor(obj, customTagFn) {\n  CUSTOM_TAG_FOR.set(obj, customTagFn);\n}\nfunction convertToInt(prop) {\n  if (typeof prop === 'symbol') return null;\n  const num = Number(prop);\n  if (isNaN(num)) return null;\n  return num % 1 === 0 ? num : null;\n}\nfunction tagForNamedArg(namedArgs, key) {\n  return (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.track)(() => {\n    if (key in namedArgs) {\n      (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_3__.valueForRef)(namedArgs[key]);\n    }\n  });\n}\nfunction tagForPositionalArg(positionalArgs, key) {\n  return (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.track)(() => {\n    if (key === '[]') {\n      // consume all of the tags in the positional array\n      positionalArgs.forEach(_reference_index_js__WEBPACK_IMPORTED_MODULE_3__.valueForRef);\n    }\n    const parsed = convertToInt(key);\n    if (parsed !== null && parsed < positionalArgs.length) {\n      // consume the tag of the referenced index\n      (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_3__.valueForRef)(positionalArgs[parsed]);\n    }\n  });\n}\nclass NamedArgsProxy {\n  constructor(named) {\n    this.named = named;\n  }\n  get(_target, prop) {\n    const ref = this.named[prop];\n    if (ref !== undefined) {\n      return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_3__.valueForRef)(ref);\n    }\n  }\n  has(_target, prop) {\n    return prop in this.named;\n  }\n  ownKeys() {\n    return Object.keys(this.named);\n  }\n  isExtensible() {\n    return false;\n  }\n  getOwnPropertyDescriptor(_target, prop) {\n    if ( true && !(prop in this.named)) {\n      throw new Error(`args proxies do not have real property descriptors, so you should never need to call getOwnPropertyDescriptor yourself. This code exists for enumerability, such as in for-in loops and Object.keys(). Attempted to get the descriptor for \\`${String(prop)}\\``);\n    }\n    return {\n      enumerable: true,\n      configurable: true\n    };\n  }\n}\nclass PositionalArgsProxy {\n  constructor(positional) {\n    this.positional = positional;\n  }\n  get(target, prop) {\n    let {\n      positional\n    } = this;\n    if (prop === 'length') {\n      return positional.length;\n    }\n    const parsed = convertToInt(prop);\n    if (parsed !== null && parsed < positional.length) {\n      return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_3__.valueForRef)(positional[parsed]);\n    }\n    return target[prop];\n  }\n  isExtensible() {\n    return false;\n  }\n  has(_target, prop) {\n    const parsed = convertToInt(prop);\n    return parsed !== null && parsed < this.positional.length;\n  }\n}\nconst argsProxyFor = (capturedArgs, type) => {\n  const {\n    named,\n    positional\n  } = capturedArgs;\n  let getNamedTag = (_obj, key) => tagForNamedArg(named, key);\n  let getPositionalTag = (_obj, key) => tagForPositionalArg(positional, key);\n  const namedHandler = new NamedArgsProxy(named);\n  const positionalHandler = new PositionalArgsProxy(positional);\n  const namedTarget = Object.create(null);\n  const positionalTarget = [];\n  if (true) {\n    const setHandler = function (_target, prop) {\n      throw new Error(`You attempted to set ${String(prop)} on the arguments of a component, helper, or modifier. Arguments are immutable and cannot be updated directly; they always represent the values that are passed down. If you want to set default values, you should use a getter and local tracked state instead.`);\n    };\n    const forInDebugHandler = () => {\n      throw new Error(`Object.keys() was called on the positional arguments array for a ${type}, which is not supported. This function is a low-level function that should not need to be called for positional argument arrays. You may be attempting to iterate over the array using for...in instead of for...of.`);\n    };\n    namedHandler.set = setHandler;\n    positionalHandler.set = setHandler;\n    positionalHandler.ownKeys = forInDebugHandler;\n  }\n  const namedProxy = new Proxy(namedTarget, namedHandler);\n  const positionalProxy = new Proxy(positionalTarget, positionalHandler);\n  setCustomTagFor(namedProxy, getNamedTag);\n  setCustomTagFor(positionalProxy, getPositionalTag);\n  return {\n    named: namedProxy,\n    positional: positionalProxy\n  };\n};\nconst FROM_CAPABILITIES =  true ? new WeakSet() : 0;\nfunction buildCapabilities(capabilities) {\n  if (true) {\n    FROM_CAPABILITIES.add(capabilities);\n    Object.freeze(capabilities);\n  }\n  return capabilities;\n}\nconst EMPTY = _vm_index_js__WEBPACK_IMPORTED_MODULE_6__.InternalComponentCapabilities.Empty;\n/**\n * Converts a ComponentCapabilities object into a 32-bit integer representation.\n */\nfunction capabilityFlagsFrom(capabilities) {\n  return EMPTY | capability(capabilities, 'dynamicLayout') | capability(capabilities, 'dynamicTag') | capability(capabilities, 'prepareArgs') | capability(capabilities, 'createArgs') | capability(capabilities, 'attributeHook') | capability(capabilities, 'elementHook') | capability(capabilities, 'dynamicScope') | capability(capabilities, 'createCaller') | capability(capabilities, 'updateHook') | capability(capabilities, 'createInstance') | capability(capabilities, 'wrapped') | capability(capabilities, 'willDestroy') | capability(capabilities, 'hasSubOwner');\n}\nfunction capability(capabilities, capability) {\n  return capabilities[capability] ? _vm_index_js__WEBPACK_IMPORTED_MODULE_6__.InternalComponentCapabilities[capability] : EMPTY;\n}\nfunction managerHasCapability(_manager, capabilities, capability) {\n  (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_5__.check)(capabilities, _debug_index_js__WEBPACK_IMPORTED_MODULE_5__.CheckNumber);\n  return !!(capabilities & capability);\n}\nfunction hasCapability(capabilities, capability) {\n  (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_5__.check)(capabilities, _debug_index_js__WEBPACK_IMPORTED_MODULE_5__.CheckNumber);\n  return !!(capabilities & capability);\n}\nfunction helperCapabilities(managerAPI, options = {}) {\n  if ( true && managerAPI !== '3.23') {\n    throw new Error('Invalid helper manager compatibility specified');\n  }\n  if ( true && (!(options.hasValue || options.hasScheduledEffect) || options.hasValue && options.hasScheduledEffect)) {\n    throw new Error('You must pass either the `hasValue` OR the `hasScheduledEffect` capability when defining a helper manager. Passing neither, or both, is not permitted.');\n  }\n  if ( true && options.hasScheduledEffect) {\n    throw new Error('The `hasScheduledEffect` capability has not yet been implemented for helper managers. Please pass `hasValue` instead');\n  }\n  return buildCapabilities({\n    hasValue: Boolean(options.hasValue),\n    hasDestroyable: Boolean(options.hasDestroyable),\n    hasScheduledEffect: Boolean(options.hasScheduledEffect)\n  });\n}\n\n////////////\n\nfunction hasValue(manager) {\n  return manager.capabilities.hasValue;\n}\nfunction hasDestroyable(manager) {\n  return manager.capabilities.hasDestroyable;\n}\n\n////////////\n\nclass CustomHelperManager {\n  constructor(factory) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"helperManagerDelegates\", new WeakMap());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"undefinedDelegate\", null);\n    this.factory = factory;\n  }\n  getDelegateForOwner(owner) {\n    let delegate = this.helperManagerDelegates.get(owner);\n    if (delegate === undefined) {\n      let {\n        factory\n      } = this;\n      delegate = factory(owner);\n      if ( true && !FROM_CAPABILITIES.has(delegate.capabilities)) {\n        // TODO: This error message should make sense in both Ember and Glimmer https://github.com/glimmerjs/glimmer-vm/issues/1200\n        throw new Error(`Custom helper managers must have a \\`capabilities\\` property that is the result of calling the \\`capabilities('3.23')\\` (imported via \\`import { capabilities } from '@ember/helper';\\`). Received: \\`${JSON.stringify(delegate.capabilities)}\\` for: \\`${delegate}\\``);\n      }\n      this.helperManagerDelegates.set(owner, delegate);\n    }\n    return delegate;\n  }\n  getDelegateFor(owner) {\n    if (owner === undefined) {\n      let {\n        undefinedDelegate\n      } = this;\n      if (undefinedDelegate === null) {\n        let {\n          factory\n        } = this;\n        this.undefinedDelegate = undefinedDelegate = factory(undefined);\n      }\n      return undefinedDelegate;\n    } else {\n      return this.getDelegateForOwner(owner);\n    }\n  }\n  getHelper(definition) {\n    return (capturedArgs, owner) => {\n      let manager = this.getDelegateFor(owner);\n      const args = argsProxyFor(capturedArgs, 'helper');\n      const bucket = manager.createHelper(definition, args);\n      if (hasValue(manager)) {\n        let cache = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_3__.createComputeRef)(() => manager.getValue(bucket), null,  true && manager.getDebugName && manager.getDebugName(definition));\n        if (hasDestroyable(manager)) {\n          (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_2__.associateDestroyableChild)(cache, manager.getDestroyable(bucket));\n        }\n        return cache;\n      } else if (hasDestroyable(manager)) {\n        let ref = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_3__.createConstRef)(undefined,  true && (manager.getDebugName?.(definition) ?? 'unknown helper'));\n        (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_2__.associateDestroyableChild)(ref, manager.getDestroyable(bucket));\n        return ref;\n      } else {\n        return _reference_index_js__WEBPACK_IMPORTED_MODULE_3__.UNDEFINED_REFERENCE;\n      }\n    };\n  }\n}\nclass FunctionHelperManager {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"capabilities\", buildCapabilities({\n      hasValue: true,\n      hasDestroyable: false,\n      hasScheduledEffect: false\n    }));\n  }\n  createHelper(fn, args) {\n    return {\n      fn,\n      args\n    };\n  }\n  getValue({\n    fn,\n    args\n  }) {\n    if (Object.keys(args.named).length > 0) {\n      let argsForFn = [...args.positional, args.named];\n      return fn(...argsForFn);\n    }\n    return fn(...args.positional);\n  }\n  getDebugName(fn) {\n    if (fn.name) {\n      return `(helper function ${fn.name})`;\n    }\n    return '(anonymous helper function)';\n  }\n}\nconst COMPONENT_MANAGERS = new WeakMap();\nconst MODIFIER_MANAGERS = new WeakMap();\nconst HELPER_MANAGERS = new WeakMap();\n\n///////////\n\nconst getPrototypeOf$1 = Object.getPrototypeOf;\nfunction setManager(map, manager, obj) {\n  if ( true && (typeof obj !== 'object' || obj === null) && typeof obj !== 'function') {\n    throw new Error(`Attempted to set a manager on a non-object value. Managers can only be associated with objects or functions. Value was ${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.debugToString)(obj)}`);\n  }\n  if ( true && map.has(obj)) {\n    throw new Error(`Attempted to set the same type of manager multiple times on a value. You can only associate one manager of each type with a given value. Value was ${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.debugToString)(obj)}`);\n  }\n  map.set(obj, manager);\n  return obj;\n}\nfunction getManager(map, obj) {\n  let pointer = obj;\n  while (pointer !== undefined && pointer !== null) {\n    const manager = map.get(pointer);\n    if (manager !== undefined) {\n      return manager;\n    }\n    pointer = getPrototypeOf$1(pointer);\n  }\n  return undefined;\n}\n\n///////////\n\nfunction setInternalModifierManager(manager, definition) {\n  return setManager(MODIFIER_MANAGERS, manager, definition);\n}\nfunction getInternalModifierManager(definition, isOptional) {\n  if ( true && typeof definition !== 'function' && (typeof definition !== 'object' || definition === null)) {\n    throw new Error(`Attempted to use a value as a modifier, but it was not an object or function. Modifier definitions must be objects or functions with an associated modifier manager. The value was: ${definition}`);\n  }\n  const manager = getManager(MODIFIER_MANAGERS, definition);\n  if (manager === undefined) {\n    if (isOptional === true) {\n      return null;\n    } else if (true) {\n      throw new Error(`Attempted to load a modifier, but there wasn't a modifier manager associated with the definition. The definition was: ${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.debugToString)(definition)}`);\n    }\n  }\n  return manager;\n}\nfunction setInternalHelperManager(manager, definition) {\n  return setManager(HELPER_MANAGERS, manager, definition);\n}\nconst DEFAULT_MANAGER = new CustomHelperManager(() => new FunctionHelperManager());\nfunction getInternalHelperManager(definition, isOptional) {\n  if ( true && typeof definition !== 'function' && (typeof definition !== 'object' || definition === null)) {\n    throw new Error(`Attempted to use a value as a helper, but it was not an object or function. Helper definitions must be objects or functions with an associated helper manager. The value was: ${definition}`);\n  }\n  let manager = getManager(HELPER_MANAGERS, definition);\n\n  // Functions are special-cased because functions are defined\n  // as the \"default\" helper, per: https://github.com/emberjs/rfcs/pull/756\n  if (manager === undefined && typeof definition === 'function') {\n    manager = DEFAULT_MANAGER;\n  }\n  if (manager) {\n    return manager;\n  } else if (isOptional === true) {\n    return null;\n  } else if (true) {\n    throw new Error(`Attempted to load a helper, but there wasn't a helper manager associated with the definition. The definition was: ${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.debugToString)(definition)}`);\n  }\n  return null;\n}\nfunction setInternalComponentManager(factory, obj) {\n  return setManager(COMPONENT_MANAGERS, factory, obj);\n}\nfunction getInternalComponentManager(definition, isOptional) {\n  if ( true && typeof definition !== 'function' && (typeof definition !== 'object' || definition === null)) {\n    throw new Error(`Attempted to use a value as a component, but it was not an object or function. Component definitions must be objects or functions with an associated component manager. The value was: ${definition}`);\n  }\n  const manager = getManager(COMPONENT_MANAGERS, definition);\n  if (manager === undefined) {\n    if (isOptional === true) {\n      return null;\n    } else if (true) {\n      throw new Error(`Attempted to load a component, but there wasn't a component manager associated with the definition. The definition was: ${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.debugToString)(definition)}`);\n    }\n  }\n  return manager;\n}\n\n///////////\n\nfunction hasInternalComponentManager(definition) {\n  return getManager(COMPONENT_MANAGERS, definition) !== undefined;\n}\nfunction hasInternalHelperManager(definition) {\n  return hasDefaultHelperManager(definition) || getManager(HELPER_MANAGERS, definition) !== undefined;\n}\nfunction hasInternalModifierManager(definition) {\n  return getManager(MODIFIER_MANAGERS, definition) !== undefined;\n}\nfunction hasDefaultHelperManager(definition) {\n  return typeof definition === 'function';\n}\nconst CAPABILITIES = {\n  dynamicLayout: false,\n  dynamicTag: false,\n  prepareArgs: false,\n  createArgs: true,\n  attributeHook: false,\n  elementHook: false,\n  createCaller: false,\n  dynamicScope: true,\n  updateHook: true,\n  createInstance: true,\n  wrapped: false,\n  willDestroy: false,\n  hasSubOwner: false\n};\nfunction componentCapabilities(managerAPI, options = {}) {\n  if ( true && managerAPI !== '3.13') {\n    throw new Error('Invalid component manager compatibility specified');\n  }\n  let updateHook = Boolean(options.updateHook);\n  return buildCapabilities({\n    asyncLifeCycleCallbacks: Boolean(options.asyncLifecycleCallbacks),\n    destructor: Boolean(options.destructor),\n    updateHook\n  });\n}\nfunction hasAsyncLifeCycleCallbacks(delegate) {\n  return delegate.capabilities.asyncLifeCycleCallbacks;\n}\nfunction hasUpdateHook(delegate) {\n  return delegate.capabilities.updateHook;\n}\nfunction hasAsyncUpdateHook(delegate) {\n  return hasAsyncLifeCycleCallbacks(delegate) && hasUpdateHook(delegate);\n}\nfunction hasDestructors(delegate) {\n  return delegate.capabilities.destructor;\n}\n\n/**\n  The CustomComponentManager allows addons to provide custom component\n  implementations that integrate seamlessly into Ember. This is accomplished\n  through a delegate, registered with the custom component manager, which\n  implements a set of hooks that determine component behavior.\n\n  To create a custom component manager, instantiate a new CustomComponentManager\n  class and pass the delegate as the first argument:\n\n  ```js\n  let manager = new CustomComponentManager({\n    // ...delegate implementation...\n  });\n  ```\n\n  ## Delegate Hooks\n\n  Throughout the lifecycle of a component, the component manager will invoke\n  delegate hooks that are responsible for surfacing those lifecycle changes to\n  the end developer.\n\n  * `create()` - invoked when a new instance of a component should be created\n  * `update()` - invoked when the arguments passed to a component change\n  * `getContext()` - returns the object that should be\n*/\nclass CustomComponentManager {\n  constructor(factory) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"componentManagerDelegates\", new WeakMap());\n    this.factory = factory;\n  }\n  getDelegateFor(owner) {\n    let {\n      componentManagerDelegates\n    } = this;\n    let delegate = componentManagerDelegates.get(owner);\n    if (delegate === undefined) {\n      let {\n        factory\n      } = this;\n      delegate = factory(owner);\n      if ( true && !FROM_CAPABILITIES.has(delegate.capabilities)) {\n        // TODO: This error message should make sense in both Ember and Glimmer https://github.com/glimmerjs/glimmer-vm/issues/1200\n        throw new Error(`Custom component managers must have a \\`capabilities\\` property that is the result of calling the \\`capabilities('3.13')\\` (imported via \\`import { capabilities } from '@ember/component';\\`). Received: \\`${JSON.stringify(delegate.capabilities)}\\` for: \\`${delegate}\\``);\n      }\n      componentManagerDelegates.set(owner, delegate);\n    }\n    return delegate;\n  }\n  create(owner, definition, vmArgs) {\n    let delegate = this.getDelegateFor(owner);\n    let args = argsProxyFor(vmArgs.capture(), 'component');\n    let component = delegate.createComponent(definition, args);\n    return new CustomComponentState(component, delegate, args);\n  }\n  getDebugName(definition) {\n    return typeof definition === 'function' ? definition.name : definition.toString();\n  }\n  update(bucket) {\n    let {\n      delegate\n    } = bucket;\n    if (hasUpdateHook(delegate)) {\n      let {\n        component,\n        args\n      } = bucket;\n      delegate.updateComponent(component, args);\n    }\n  }\n  didCreate({\n    component,\n    delegate\n  }) {\n    if (hasAsyncLifeCycleCallbacks(delegate)) {\n      delegate.didCreateComponent(component);\n    }\n  }\n  didUpdate({\n    component,\n    delegate\n  }) {\n    if (hasAsyncUpdateHook(delegate)) {\n      delegate.didUpdateComponent(component);\n    }\n  }\n  didRenderLayout() {}\n  didUpdateLayout() {}\n  getSelf({\n    component,\n    delegate\n  }) {\n    return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_3__.createConstRef)(delegate.getContext(component), 'this');\n  }\n  getDestroyable(bucket) {\n    const {\n      delegate\n    } = bucket;\n    if (hasDestructors(delegate)) {\n      const {\n        component\n      } = bucket;\n      (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_2__.registerDestructor)(bucket, () => delegate.destroyComponent(component));\n      return bucket;\n    }\n    return null;\n  }\n  getCapabilities() {\n    return CAPABILITIES;\n  }\n}\n\n/**\n * Stores internal state about a component instance after it's been created.\n */\nclass CustomComponentState {\n  constructor(component, delegate, args) {\n    this.component = component;\n    this.delegate = delegate;\n    this.args = args;\n  }\n}\nfunction modifierCapabilities(managerAPI, optionalFeatures = {}) {\n  if ( true && managerAPI !== '3.22') {\n    throw new Error('Invalid modifier manager compatibility specified');\n  }\n  return buildCapabilities({\n    disableAutoTracking: Boolean(optionalFeatures.disableAutoTracking)\n  });\n}\n/**\n  The CustomModifierManager allows addons to provide custom modifier\n  implementations that integrate seamlessly into Ember. This is accomplished\n  through a delegate, registered with the custom modifier manager, which\n  implements a set of hooks that determine modifier behavior.\n  To create a custom modifier manager, instantiate a new CustomModifierManager\n  class and pass the delegate as the first argument:\n\n  ```js\n  let manager = new CustomModifierManager({\n    // ...delegate implementation...\n  });\n  ```\n\n  ## Delegate Hooks\n\n  Throughout the lifecycle of a modifier, the modifier manager will invoke\n  delegate hooks that are responsible for surfacing those lifecycle changes to\n  the end developer.\n  * `createModifier()` - invoked when a new instance of a modifier should be created\n  * `installModifier()` - invoked when the modifier is installed on the element\n  * `updateModifier()` - invoked when the arguments passed to a modifier change\n  * `destroyModifier()` - invoked when the modifier is about to be destroyed\n*/\nclass CustomModifierManager {\n  constructor(factory) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"componentManagerDelegates\", new WeakMap());\n    this.factory = factory;\n  }\n  getDelegateFor(owner) {\n    let {\n      componentManagerDelegates\n    } = this;\n    let delegate = componentManagerDelegates.get(owner);\n    if (delegate === undefined) {\n      let {\n        factory\n      } = this;\n      delegate = factory(owner);\n      if ( true && !FROM_CAPABILITIES.has(delegate.capabilities)) {\n        // TODO: This error message should make sense in both Ember and Glimmer https://github.com/glimmerjs/glimmer-vm/issues/1200\n        throw new Error(`Custom modifier managers must have a \\`capabilities\\` property that is the result of calling the \\`capabilities('3.22')\\` (imported via \\`import { capabilities } from '@ember/modifier';\\`). Received: \\`${JSON.stringify(delegate.capabilities)}\\` for: \\`${delegate}\\``);\n      }\n      componentManagerDelegates.set(owner, delegate);\n    }\n    return delegate;\n  }\n  create(owner, element, definition, capturedArgs) {\n    let delegate = this.getDelegateFor(owner);\n    let args = argsProxyFor(capturedArgs, 'modifier');\n    let instance = delegate.createModifier(definition, args);\n    let tag = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.createUpdatableTag)();\n    let state;\n    state = {\n      tag,\n      element,\n      delegate,\n      args,\n      modifier: instance\n    };\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_2__.registerDestructor)(state, () => delegate.destroyModifier(instance, args));\n    return state;\n  }\n  getDebugName(definition) {\n    if (typeof definition === 'function') {\n      return definition.name || definition.toString();\n    } else {\n      return '<unknown>';\n    }\n  }\n  getDebugInstance({\n    modifier\n  }) {\n    return modifier;\n  }\n  getTag({\n    tag\n  }) {\n    return tag;\n  }\n  install({\n    element,\n    args,\n    modifier,\n    delegate\n  }) {\n    let {\n      capabilities\n    } = delegate;\n    if (capabilities.disableAutoTracking === true) {\n      (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.untrack)(() => delegate.installModifier(modifier, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.castToBrowser)(element, 'ELEMENT'), args));\n    } else {\n      delegate.installModifier(modifier, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.castToBrowser)(element, 'ELEMENT'), args);\n    }\n  }\n  update({\n    args,\n    modifier,\n    delegate\n  }) {\n    let {\n      capabilities\n    } = delegate;\n    if (capabilities.disableAutoTracking === true) {\n      (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.untrack)(() => delegate.updateModifier(modifier, args));\n    } else {\n      delegate.updateModifier(modifier, args);\n    }\n  }\n  getDestroyable(state) {\n    return state;\n  }\n}\nfunction setComponentManager(factory, obj) {\n  return setInternalComponentManager(new CustomComponentManager(factory), obj);\n}\nfunction setModifierManager(factory, obj) {\n  return setInternalModifierManager(new CustomModifierManager(factory), obj);\n}\nfunction setHelperManager(factory, obj) {\n  return setInternalHelperManager(new CustomHelperManager(factory), obj);\n}\nconst TEMPLATES = new WeakMap();\nconst getPrototypeOf = Object.getPrototypeOf;\nfunction setComponentTemplate(factory, obj) {\n  if ( true && !(obj !== null && (typeof obj === 'object' || typeof obj === 'function'))) {\n    throw new Error(`Cannot call \\`setComponentTemplate\\` on \\`${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.debugToString)(obj)}\\``);\n  }\n  if ( true && TEMPLATES.has(obj)) {\n    throw new Error(`Cannot call \\`setComponentTemplate\\` multiple times on the same class (\\`${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.debugToString)(obj)}\\`)`);\n  }\n  TEMPLATES.set(obj, factory);\n  return obj;\n}\nfunction getComponentTemplate(obj) {\n  let pointer = obj;\n  while (pointer !== null) {\n    let template = TEMPLATES.get(pointer);\n    if (template !== undefined) {\n      return template;\n    }\n    pointer = getPrototypeOf(pointer);\n  }\n  return undefined;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/node/index.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/node/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeDOMTreeConstruction: () => (/* binding */ NodeDOMTreeConstruction),\n/* harmony export */   serializeBuilder: () => (/* binding */ serializeBuilder)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _runtime_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runtime/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/runtime/index.js\");\n/* harmony import */ var _simple_dom_document_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@simple-dom/document/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@simple-dom/document/index.js\");\n\n\n\nclass NodeDOMTreeConstruction extends _runtime_index_js__WEBPACK_IMPORTED_MODULE_1__.DOMTreeConstruction {\n  // Hides property on base class\n  constructor(doc) {\n    super(doc || (0,_simple_dom_document_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])());\n  }\n\n  // override to prevent usage of `this.document` until after the constructor\n  setupUselessElement() {}\n  insertHTMLBefore(parent, reference, html) {\n    let raw = this.document.createRawHTMLSection(html);\n    parent.insertBefore(raw, reference);\n    return new _runtime_index_js__WEBPACK_IMPORTED_MODULE_1__.ConcreteBounds(parent, raw, raw);\n  }\n\n  // override to avoid SVG detection/work when in node (this is not needed in SSR)\n  createElement(tag) {\n    return this.document.createElement(tag);\n  }\n\n  // override to avoid namespace shenanigans when in node (this is not needed in SSR)\n  setAttribute(element, name, value) {\n    element.setAttribute(name, value);\n  }\n}\nconst TEXT_NODE = 3;\nconst NEEDS_EXTRA_CLOSE = new WeakMap();\nfunction currentNode(cursor) {\n  let {\n    element,\n    nextSibling\n  } = cursor;\n  if (nextSibling === null) {\n    return element.lastChild;\n  } else {\n    return nextSibling.previousSibling;\n  }\n}\nclass SerializeBuilder extends _runtime_index_js__WEBPACK_IMPORTED_MODULE_1__.NewElementBuilder {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"serializeBlockDepth\", 0);\n  }\n  __openBlock() {\n    let {\n      tagName\n    } = this.element;\n    if (tagName !== 'TITLE' && tagName !== 'SCRIPT' && tagName !== 'STYLE') {\n      let depth = this.serializeBlockDepth++;\n      this.__appendComment(`%+b:${depth}%`);\n    }\n    super.__openBlock();\n  }\n  __closeBlock() {\n    let {\n      tagName\n    } = this.element;\n    super.__closeBlock();\n    if (tagName !== 'TITLE' && tagName !== 'SCRIPT' && tagName !== 'STYLE') {\n      let depth = --this.serializeBlockDepth;\n      this.__appendComment(`%-b:${depth}%`);\n    }\n  }\n  __appendHTML(html) {\n    let {\n      tagName\n    } = this.element;\n    if (tagName === 'TITLE' || tagName === 'SCRIPT' || tagName === 'STYLE') {\n      return super.__appendHTML(html);\n    }\n\n    // Do we need to run the html tokenizer here?\n    let first = this.__appendComment('%glmr%');\n    if (tagName === 'TABLE') {\n      let openIndex = html.indexOf('<');\n      if (openIndex > -1) {\n        let tr = html.slice(openIndex + 1, openIndex + 3);\n        if (tr === 'tr') {\n          html = `<tbody>${html}</tbody>`;\n        }\n      }\n    }\n    if (html === '') {\n      this.__appendComment('% %');\n    } else {\n      super.__appendHTML(html);\n    }\n    let last = this.__appendComment('%glmr%');\n    return new _runtime_index_js__WEBPACK_IMPORTED_MODULE_1__.ConcreteBounds(this.element, first, last);\n  }\n  __appendText(string) {\n    let {\n      tagName\n    } = this.element;\n    let current = currentNode(this);\n    if (tagName === 'TITLE' || tagName === 'SCRIPT' || tagName === 'STYLE') {\n      return super.__appendText(string);\n    } else if (string === '') {\n      return this.__appendComment('% %');\n    } else if (current && current.nodeType === TEXT_NODE) {\n      this.__appendComment('%|%');\n    }\n    return super.__appendText(string);\n  }\n  closeElement() {\n    if (NEEDS_EXTRA_CLOSE.has(this.element)) {\n      NEEDS_EXTRA_CLOSE.delete(this.element);\n      super.closeElement();\n    }\n    return super.closeElement();\n  }\n  openElement(tag) {\n    if (tag === 'tr') {\n      if (this.element.tagName !== 'TBODY' && this.element.tagName !== 'THEAD' && this.element.tagName !== 'TFOOT') {\n        this.openElement('tbody');\n        // This prevents the closeBlock comment from being re-parented\n        // under the auto inserted tbody. Rehydration builder needs to\n        // account for the insertion since it is injected here and not\n        // really in the template.\n        NEEDS_EXTRA_CLOSE.set(this.constructing, true);\n        this.flushElement(null);\n      }\n    }\n    return super.openElement(tag);\n  }\n  pushRemoteElement(element, cursorId, insertBefore = null) {\n    let {\n      dom\n    } = this;\n    let script = dom.createElement('script');\n    script.setAttribute('glmr', cursorId);\n    dom.insertBefore(element, script, insertBefore);\n    return super.pushRemoteElement(element, cursorId, insertBefore);\n  }\n}\nfunction serializeBuilder(env, cursor) {\n  return SerializeBuilder.forInitialRender(env, cursor);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/node/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js":
/*!***************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompileTimeCompilationContextImpl: () => (/* binding */ CompileTimeCompilationContextImpl),\n/* harmony export */   DEFAULT_CAPABILITIES: () => (/* binding */ DEFAULT_CAPABILITIES),\n/* harmony export */   EMPTY_BLOCKS: () => (/* binding */ EMPTY_BLOCKS),\n/* harmony export */   MINIMAL_CAPABILITIES: () => (/* binding */ MINIMAL_CAPABILITIES),\n/* harmony export */   StdLib: () => (/* binding */ StdLib),\n/* harmony export */   WrappedBuilder: () => (/* binding */ WrappedBuilder),\n/* harmony export */   compilable: () => (/* binding */ compilable),\n/* harmony export */   compileStatements: () => (/* binding */ compileStatements),\n/* harmony export */   compileStd: () => (/* binding */ compileStd),\n/* harmony export */   debugCompiler: () => (/* binding */ debugCompiler),\n/* harmony export */   invokeStaticBlock: () => (/* binding */ InvokeStaticBlock),\n/* harmony export */   invokeStaticBlockWithStack: () => (/* binding */ InvokeStaticBlockWithStack),\n/* harmony export */   meta: () => (/* binding */ meta),\n/* harmony export */   programCompilationContext: () => (/* binding */ programCompilationContext),\n/* harmony export */   templateCacheCounters: () => (/* binding */ templateCacheCounters),\n/* harmony export */   templateCompilationContext: () => (/* binding */ templateCompilationContext),\n/* harmony export */   templateFactory: () => (/* binding */ templateFactory)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js\");\n/* harmony import */ var _debug_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/debug/index.js\");\n/* harmony import */ var _vm_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../vm/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/vm/index.js\");\n/* harmony import */ var _encoder_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../encoder/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/encoder/index.js\");\n/* harmony import */ var _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../wire-format/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/wire-format/index.js\");\n/* harmony import */ var _manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n\n\n\n\n\n\n\nlet debugCompiler;\nfunction isGetLikeTuple(opcode) {\n  return Array.isArray(opcode) && opcode.length === 2;\n}\nfunction makeResolutionTypeVerifier(typeToVerify) {\n  return opcode => {\n    if (!isGetLikeTuple(opcode)) return false;\n    let type = opcode[0];\n    return type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetStrictKeyword || type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetLexicalSymbol || type === typeToVerify;\n  };\n}\nconst isGetFreeComponent = makeResolutionTypeVerifier(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetFreeAsComponentHead);\nconst isGetFreeModifier = makeResolutionTypeVerifier(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetFreeAsModifierHead);\nconst isGetFreeHelper = makeResolutionTypeVerifier(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetFreeAsHelperHead);\nconst isGetFreeComponentOrHelper = makeResolutionTypeVerifier(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetFreeAsComponentOrHelperHead);\nfunction assertResolverInvariants(meta) {\n  if (true) {\n    if (!meta.upvars) {\n      throw new Error('Attempted to resolve a component, helper, or modifier, but no free vars were found');\n    }\n    if (!meta.owner) {\n      throw new Error('Attempted to resolve a component, helper, or modifier, but no owner was associated with the template it was being resolved from');\n    }\n  }\n  return meta;\n}\n\n/**\n * <Foo/>\n * <Foo></Foo>\n * <Foo @arg={{true}} />\n */\nfunction resolveComponent(resolver, constants, meta, [, expr, then]) {\n  (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(isGetFreeComponent(expr), 'Attempted to resolve a component with incorrect opcode');\n  let type = expr[0];\n  if ( true && expr[0] === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetStrictKeyword) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!meta.isStrictMode, 'Strict mode errors should already be handled at compile time');\n    throw new Error(`Attempted to resolve a component in a strict mode template, but that value was not in scope: ${meta.upvars[expr[1]] ?? '{unknown variable}'}`);\n  }\n  if (type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetLexicalSymbol) {\n    let {\n      scopeValues,\n      owner\n    } = meta;\n    let definition = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(scopeValues, 'BUG: scopeValues must exist if template symbol is used')[expr[1]];\n    then(constants.component(definition, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(owner, 'BUG: expected owner when resolving component definition')));\n  } else {\n    let {\n      upvars,\n      owner\n    } = assertResolverInvariants(meta);\n    let name = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(upvars[expr[1]]);\n    let definition = resolver.lookupComponent(name, owner);\n    if ( true && (typeof definition !== 'object' || definition === null)) {\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!meta.isStrictMode, 'Strict mode errors should already be handled at compile time');\n      throw new Error(`Attempted to resolve \\`${name}\\`, which was expected to be a component, but nothing was found.`);\n    }\n    then(constants.resolvedComponent(definition, name));\n  }\n}\n\n/**\n * (helper)\n * (helper arg)\n */\nfunction resolveHelper(resolver, constants, meta, [, expr, then]) {\n  (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(isGetFreeHelper(expr), 'Attempted to resolve a helper with incorrect opcode');\n  let type = expr[0];\n  if (type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetLexicalSymbol) {\n    let {\n      scopeValues\n    } = meta;\n    let definition = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(scopeValues, 'BUG: scopeValues must exist if template symbol is used')[expr[1]];\n    then(constants.helper(definition));\n  } else if (type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetStrictKeyword) {\n    then(lookupBuiltInHelper(expr, resolver, meta, constants, 'helper'));\n  } else {\n    let {\n      upvars,\n      owner\n    } = assertResolverInvariants(meta);\n    let name = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(upvars[expr[1]]);\n    let helper = resolver.lookupHelper(name, owner);\n    if ( true && helper === null) {\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!meta.isStrictMode, 'Strict mode errors should already be handled at compile time');\n      throw new Error(`Attempted to resolve \\`${name}\\`, which was expected to be a helper, but nothing was found.`);\n    }\n    then(constants.helper(helper, name));\n  }\n}\n\n/**\n * <div {{modifier}}/>\n * <div {{modifier arg}}/>\n * <Foo {{modifier}}/>\n */\nfunction resolveModifier(resolver, constants, meta, [, expr, then]) {\n  (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(isGetFreeModifier(expr), 'Attempted to resolve a modifier with incorrect opcode');\n  let type = expr[0];\n  if (type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetLexicalSymbol) {\n    let {\n      scopeValues\n    } = meta;\n    let definition = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(scopeValues, 'BUG: scopeValues must exist if template symbol is used')[expr[1]];\n    then(constants.modifier(definition));\n  } else if (type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetStrictKeyword) {\n    let {\n      upvars\n    } = assertResolverInvariants(meta);\n    let name = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(upvars[expr[1]]);\n    let modifier = resolver.lookupBuiltInModifier(name);\n    if ( true && modifier === null) {\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!meta.isStrictMode, 'Strict mode errors should already be handled at compile time');\n      throw new Error(`Attempted to resolve a modifier in a strict mode template, but it was not in scope: ${name}`);\n    }\n    then(constants.modifier(modifier, name));\n  } else {\n    let {\n      upvars,\n      owner\n    } = assertResolverInvariants(meta);\n    let name = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(upvars[expr[1]]);\n    let modifier = resolver.lookupModifier(name, owner);\n    if ( true && modifier === null) {\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!meta.isStrictMode, 'Strict mode errors should already be handled at compile time');\n      throw new Error(`Attempted to resolve \\`${name}\\`, which was expected to be a modifier, but nothing was found.`);\n    }\n    then(constants.modifier(modifier, name));\n  }\n}\n\n/**\n * {{component-or-helper arg}}\n */\nfunction resolveComponentOrHelper(resolver, constants, meta, [, expr, {\n  ifComponent,\n  ifHelper\n}]) {\n  (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(isGetFreeComponentOrHelper(expr), 'Attempted to resolve a component or helper with incorrect opcode');\n  let type = expr[0];\n  if (type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetLexicalSymbol) {\n    let {\n      scopeValues,\n      owner\n    } = meta;\n    let definition = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(scopeValues, 'BUG: scopeValues must exist if template symbol is used')[expr[1]];\n    let component = constants.component(definition, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(owner, 'BUG: expected owner when resolving component definition'), true);\n    if (component !== null) {\n      ifComponent(component);\n      return;\n    }\n    let helper = constants.helper(definition, null, true);\n    if ( true && helper === null) {\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!meta.isStrictMode, 'Strict mode errors should already be handled at compile time');\n      throw new Error(`Attempted to use a value as either a component or helper, but it did not have a component manager or helper manager associated with it. The value was: ${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.debugToString)(definition)}`);\n    }\n    ifHelper((0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(helper, 'BUG: helper must exist'));\n  } else if (type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetStrictKeyword) {\n    ifHelper(lookupBuiltInHelper(expr, resolver, meta, constants, 'component or helper'));\n  } else {\n    let {\n      upvars,\n      owner\n    } = assertResolverInvariants(meta);\n    let name = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(upvars[expr[1]]);\n    let definition = resolver.lookupComponent(name, owner);\n    if (definition !== null) {\n      ifComponent(constants.resolvedComponent(definition, name));\n    } else {\n      let helper = resolver.lookupHelper(name, owner);\n      if ( true && helper === null) {\n        (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!meta.isStrictMode, 'Strict mode errors should already be handled at compile time');\n        throw new Error(`Attempted to resolve \\`${name}\\`, which was expected to be a component or helper, but nothing was found.`);\n      }\n      ifHelper(constants.helper(helper, name));\n    }\n  }\n}\n\n/**\n * {{maybeHelperOrComponent}}\n */\nfunction resolveOptionalComponentOrHelper(resolver, constants, meta, [, expr, {\n  ifComponent,\n  ifHelper,\n  ifValue\n}]) {\n  (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(isGetFreeComponentOrHelper(expr), 'Attempted to resolve an optional component or helper with incorrect opcode');\n  let type = expr[0];\n  if (type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetLexicalSymbol) {\n    let {\n      scopeValues,\n      owner\n    } = meta;\n    let definition = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(scopeValues, 'BUG: scopeValues must exist if template symbol is used')[expr[1]];\n    if (typeof definition !== 'function' && (typeof definition !== 'object' || definition === null)) {\n      // The value is not an object, so it can't be a component or helper.\n      ifValue(constants.value(definition));\n      return;\n    }\n    let component = constants.component(definition, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(owner, 'BUG: expected owner when resolving component definition'), true);\n    if (component !== null) {\n      ifComponent(component);\n      return;\n    }\n    let helper = constants.helper(definition, null, true);\n    if (helper !== null) {\n      ifHelper(helper);\n      return;\n    }\n    ifValue(constants.value(definition));\n  } else if (type === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetStrictKeyword) {\n    ifHelper(lookupBuiltInHelper(expr, resolver, meta, constants, 'value'));\n  } else {\n    let {\n      upvars,\n      owner\n    } = assertResolverInvariants(meta);\n    let name = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(upvars[expr[1]]);\n    let definition = resolver.lookupComponent(name, owner);\n    if (definition !== null) {\n      ifComponent(constants.resolvedComponent(definition, name));\n      return;\n    }\n    let helper = resolver.lookupHelper(name, owner);\n    if (helper !== null) {\n      ifHelper(constants.helper(helper, name));\n    }\n  }\n}\nfunction lookupBuiltInHelper(expr, resolver, meta, constants, type) {\n  let {\n    upvars\n  } = assertResolverInvariants(meta);\n  let name = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(upvars[expr[1]]);\n  let helper = resolver.lookupBuiltInHelper(name);\n  if ( true && helper === null) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!meta.isStrictMode, 'Strict mode errors should already be handled at compile time');\n\n    // Keyword helper did not exist, which means that we're attempting to use a\n    // value of some kind that is not in scope\n    throw new Error(`Attempted to resolve a ${type} in a strict mode template, but that value was not in scope: ${meta.upvars[expr[1]] ?? '{unknown variable}'}`);\n  }\n  return constants.helper(helper, name);\n}\nconst HighLevelResolutionOpcodes = {\n  Modifier: 1003,\n  Component: 1004,\n  Helper: 1005,\n  ComponentOrHelper: 1007,\n  OptionalComponentOrHelper: 1008,\n  Local: 1010,\n  TemplateLocal: 1011\n};\nconst HighLevelBuilderOpcodes = {\n  Label: 1000,\n  StartLabels: 1001,\n  StopLabels: 1002,\n  Start: 1000,\n  End: 1002\n};\nconst HighLevelOperands = {\n  Label: 1,\n  IsStrictMode: 2,\n  DebugSymbols: 3,\n  Block: 4,\n  StdLib: 5,\n  NonSmallInt: 6,\n  SymbolTable: 7,\n  Layout: 8\n};\nfunction labelOperand(value) {\n  return {\n    type: HighLevelOperands.Label,\n    value\n  };\n}\nfunction debugSymbolsOperand() {\n  return {\n    type: HighLevelOperands.DebugSymbols,\n    value: undefined\n  };\n}\nfunction isStrictMode() {\n  return {\n    type: HighLevelOperands.IsStrictMode,\n    value: undefined\n  };\n}\nfunction blockOperand(value) {\n  return {\n    type: HighLevelOperands.Block,\n    value\n  };\n}\nfunction stdlibOperand(value) {\n  return {\n    type: HighLevelOperands.StdLib,\n    value\n  };\n}\nfunction nonSmallIntOperand(value) {\n  (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!(0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.isSmallInt)(value), 'Attempted to make a operand for an int that was not a small int, you should encode this as an immediate');\n  return {\n    type: HighLevelOperands.NonSmallInt,\n    value\n  };\n}\nfunction symbolTableOperand(value) {\n  return {\n    type: HighLevelOperands.SymbolTable,\n    value\n  };\n}\nfunction layoutOperand(value) {\n  return {\n    type: HighLevelOperands.Layout,\n    value\n  };\n}\nclass Labels {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"labels\", (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.dict)());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"targets\", []);\n  }\n  label(name, index) {\n    this.labels[name] = index;\n  }\n  target(at, target) {\n    this.targets.push({\n      at,\n      target\n    });\n  }\n  patch(heap) {\n    let {\n      targets,\n      labels\n    } = this;\n    for (const {\n      at,\n      target\n    } of targets) {\n      let address = labels[target] - at;\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(heap.getbyaddr(at) === -1, 'Expected heap to contain a placeholder, but it did not');\n      heap.setbyaddr(at, address);\n    }\n  }\n}\nfunction encodeOp(encoder, constants, resolver, meta, op) {\n  if (isBuilderOpcode(op[0])) {\n    let [type, ...operands] = op;\n    encoder.push(constants, type, ...operands);\n  } else {\n    switch (op[0]) {\n      case HighLevelBuilderOpcodes.Label:\n        return encoder.label(op[1]);\n      case HighLevelBuilderOpcodes.StartLabels:\n        return encoder.startLabels();\n      case HighLevelBuilderOpcodes.StopLabels:\n        return encoder.stopLabels();\n      case HighLevelResolutionOpcodes.Component:\n        return resolveComponent(resolver, constants, meta, op);\n      case HighLevelResolutionOpcodes.Modifier:\n        return resolveModifier(resolver, constants, meta, op);\n      case HighLevelResolutionOpcodes.Helper:\n        return resolveHelper(resolver, constants, meta, op);\n      case HighLevelResolutionOpcodes.ComponentOrHelper:\n        return resolveComponentOrHelper(resolver, constants, meta, op);\n      case HighLevelResolutionOpcodes.OptionalComponentOrHelper:\n        return resolveOptionalComponentOrHelper(resolver, constants, meta, op);\n      case HighLevelResolutionOpcodes.Local:\n        {\n          let freeVar = op[1];\n          let name = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(meta.upvars, 'BUG: attempted to resolve value but no upvars found')[freeVar];\n          let andThen = op[2];\n          andThen(name, meta.moduleName);\n          break;\n        }\n      case HighLevelResolutionOpcodes.TemplateLocal:\n        {\n          let [, valueIndex, then] = op;\n          let value = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(meta.scopeValues, 'BUG: Attempted to get a template local, but template does not have any')[valueIndex];\n          then(constants.value(value));\n          break;\n        }\n      default:\n        throw new Error(`Unexpected high level opcode ${op[0]}`);\n    }\n  }\n}\nclass EncoderImpl {\n  constructor(heap, meta, stdlib) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"labelsStack\", new _util_index_js__WEBPACK_IMPORTED_MODULE_1__.Stack());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"encoder\", new _encoder_index_js__WEBPACK_IMPORTED_MODULE_4__.InstructionEncoderImpl([]));\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"errors\", []);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"handle\", void 0);\n    this.heap = heap;\n    this.meta = meta;\n    this.stdlib = stdlib;\n    this.handle = heap.malloc();\n  }\n  error(error) {\n    this.encoder.encode(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Primitive, 0);\n    this.errors.push(error);\n  }\n  commit(size) {\n    let handle = this.handle;\n    this.heap.pushMachine(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.Return);\n    this.heap.finishMalloc(handle, size);\n    if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.isPresentArray)(this.errors)) {\n      return {\n        errors: this.errors,\n        handle\n      };\n    } else {\n      return handle;\n    }\n  }\n  push(constants, type, ...args) {\n    let {\n      heap\n    } = this;\n    if ( true && type > _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.TYPE_SIZE) {\n      throw new Error(`Opcode type over 8-bits. Got ${type}.`);\n    }\n    let machine = (0,_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.isMachineOp)(type) ? _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MACHINE_MASK : 0;\n    let first = type | machine | args.length << _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ARG_SHIFT;\n    heap.pushRaw(first);\n    for (let i = 0; i < args.length; i++) {\n      let op = args[i];\n      heap.pushRaw(this.operand(constants, op));\n    }\n  }\n  operand(constants, operand) {\n    if (typeof operand === 'number') {\n      return operand;\n    }\n    if (typeof operand === 'object' && operand !== null) {\n      if (Array.isArray(operand)) {\n        return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.encodeHandle)(constants.array(operand));\n      } else {\n        switch (operand.type) {\n          case HighLevelOperands.Label:\n            this.currentLabels.target(this.heap.offset, operand.value);\n            return -1;\n          case HighLevelOperands.IsStrictMode:\n            return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.encodeHandle)(constants.value(this.meta.isStrictMode));\n          case HighLevelOperands.DebugSymbols:\n            return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.encodeHandle)(constants.array(this.meta.evalSymbols || _util_index_js__WEBPACK_IMPORTED_MODULE_1__.EMPTY_STRING_ARRAY));\n          case HighLevelOperands.Block:\n            return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.encodeHandle)(constants.value(compilableBlock(operand.value, this.meta)));\n          case HighLevelOperands.StdLib:\n            return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(this.stdlib, 'attempted to encode a stdlib operand, but the encoder did not have a stdlib. Are you currently building the stdlib?')[operand.value];\n          case HighLevelOperands.NonSmallInt:\n          case HighLevelOperands.SymbolTable:\n          case HighLevelOperands.Layout:\n            return constants.value(operand.value);\n        }\n      }\n    }\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.encodeHandle)(constants.value(operand));\n  }\n  get currentLabels() {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(this.labelsStack.current, 'bug: not in a label stack');\n  }\n  label(name) {\n    this.currentLabels.label(name, this.heap.offset + 1);\n  }\n  startLabels() {\n    this.labelsStack.push(new Labels());\n  }\n  stopLabels() {\n    let label = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.expect)(this.labelsStack.pop(), 'unbalanced push and pop labels');\n    label.patch(this.heap);\n  }\n}\nfunction isBuilderOpcode(op) {\n  return op < HighLevelBuilderOpcodes.Start;\n}\nclass StdLib {\n  constructor(main, trustingGuardedAppend, cautiousGuardedAppend, trustingNonDynamicAppend, cautiousNonDynamicAppend) {\n    this.main = main;\n    this.trustingGuardedAppend = trustingGuardedAppend;\n    this.cautiousGuardedAppend = cautiousGuardedAppend;\n    this.trustingNonDynamicAppend = trustingNonDynamicAppend;\n    this.cautiousNonDynamicAppend = cautiousNonDynamicAppend;\n  }\n  get 'trusting-append'() {\n    return this.trustingGuardedAppend;\n  }\n  get 'cautious-append'() {\n    return this.cautiousGuardedAppend;\n  }\n  get 'trusting-non-dynamic-append'() {\n    return this.trustingNonDynamicAppend;\n  }\n  get 'cautious-non-dynamic-append'() {\n    return this.cautiousNonDynamicAppend;\n  }\n  getAppend(trusting) {\n    return trusting ? this.trustingGuardedAppend : this.cautiousGuardedAppend;\n  }\n}\nclass NamedBlocksImpl {\n  constructor(blocks) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"names\", void 0);\n    this.blocks = blocks;\n    this.names = blocks ? Object.keys(blocks) : [];\n  }\n  get(name) {\n    if (!this.blocks) return null;\n    return this.blocks[name] || null;\n  }\n  has(name) {\n    let {\n      blocks\n    } = this;\n    return blocks !== null && name in blocks;\n  }\n  with(name, block) {\n    let {\n      blocks\n    } = this;\n    if (blocks) {\n      return new NamedBlocksImpl((0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assign)({}, blocks, {\n        [name]: block\n      }));\n    } else {\n      return new NamedBlocksImpl({\n        [name]: block\n      });\n    }\n  }\n  get hasAny() {\n    return this.blocks !== null;\n  }\n}\nconst EMPTY_BLOCKS = new NamedBlocksImpl(null);\nfunction namedBlocks(blocks) {\n  if (blocks === null) {\n    return EMPTY_BLOCKS;\n  }\n  let out = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.dict)();\n  let [keys, values] = blocks;\n  for (const [i, key] of (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.enumerate)(keys)) {\n    out[key] = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(values[i]);\n  }\n  return new NamedBlocksImpl(out);\n}\n\n/**\n * Push a reference onto the stack corresponding to a statically known primitive\n * @param value A JavaScript primitive (undefined, null, boolean, number or string)\n */\nfunction PushPrimitiveReference(op, value) {\n  PushPrimitive(op, value);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PrimitiveReference);\n}\n\n/**\n * Push an encoded representation of a JavaScript primitive on the stack\n *\n * @param value A JavaScript primitive (undefined, null, boolean, number or string)\n */\nfunction PushPrimitive(op, primitive) {\n  let p = primitive;\n  if (typeof p === 'number') {\n    p = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.isSmallInt)(p) ? (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.encodeImmediate)(p) : nonSmallIntOperand(p);\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Primitive, p);\n}\n\n/**\n * Invoke a foreign function (a \"helper\") based on a statically known handle\n *\n * @param op The op creation function\n * @param handle A handle\n * @param positional An optional list of expressions to compile\n * @param named An optional list of named arguments (name + expression) to compile\n */\nfunction Call(op, handle, positional, named) {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n  SimpleArgs(op, positional, named, false);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Helper, handle);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$v0);\n}\n\n/**\n * Invoke a foreign function (a \"helper\") based on a dynamically loaded definition\n *\n * @param op The op creation function\n * @param positional An optional list of expressions to compile\n * @param named An optional list of named arguments (name + expression) to compile\n */\nfunction CallDynamic(op, positional, named, append) {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n  SimpleArgs(op, positional, named, false);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Dup, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$fp, 1);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.DynamicHelper);\n  if (append) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$v0);\n    append();\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Pop, 1);\n  } else {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Pop, 1);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$v0);\n  }\n}\n\n/**\n * Evaluate statements in the context of new dynamic scope entries. Move entries from the\n * stack into named entries in the dynamic scope, then evaluate the statements, then pop\n * the dynamic scope\n *\n * @param names a list of dynamic scope names\n * @param block a function that returns a list of statements to evaluate\n */\nfunction DynamicScope(op, names, block) {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushDynamicScope);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.BindDynamicScope, names);\n  block();\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PopDynamicScope);\n}\nfunction Curry(op, type, definition, positional, named) {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n  SimpleArgs(op, positional, named, false);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CaptureArgs);\n  expr(op, definition);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Curry, type, isStrictMode());\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$v0);\n}\nclass Compilers {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"names\", {});\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"funcs\", []);\n  }\n  add(name, func) {\n    this.names[name] = this.funcs.push(func) - 1;\n  }\n  compile(op, sexp) {\n    let name = sexp[0];\n    let index = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(this.names[name]);\n    let func = this.funcs[index];\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(!!func, `expected an implementation for ${sexp[0]}`);\n    func(op, sexp);\n  }\n}\nconst EXPRESSIONS = new Compilers();\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Concat, (op, [, parts]) => {\n  for (let part of parts) {\n    expr(op, part);\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Concat, parts.length);\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Call, (op, [, expression, positional, named]) => {\n  if (isGetFreeHelper(expression)) {\n    op(HighLevelResolutionOpcodes.Helper, expression, handle => {\n      Call(op, handle, positional, named);\n    });\n  } else {\n    expr(op, expression);\n    CallDynamic(op, positional, named);\n  }\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Curry, (op, [, expr, type, positional, named]) => {\n  Curry(op, type, expr, positional, named);\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetSymbol, (op, [, sym, path]) => {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.GetVariable, sym);\n  withPath(op, path);\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetLexicalSymbol, (op, [, sym, path]) => {\n  op(HighLevelResolutionOpcodes.TemplateLocal, sym, handle => {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ConstantReference, handle);\n    withPath(op, path);\n  });\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetStrictKeyword, (op, expr) => {\n  op(HighLevelResolutionOpcodes.Local, expr[1], _name => {\n    op(HighLevelResolutionOpcodes.Helper, expr, handle => {\n      Call(op, handle, null, null);\n    });\n  });\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetFreeAsHelperHead, (op, expr) => {\n  op(HighLevelResolutionOpcodes.Local, expr[1], _name => {\n    op(HighLevelResolutionOpcodes.Helper, expr, handle => {\n      Call(op, handle, null, null);\n    });\n  });\n});\nfunction withPath(op, path) {\n  if (path === undefined || path.length === 0) return;\n  for (let i = 0; i < path.length; i++) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.GetProperty, path[i]);\n  }\n}\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Undefined, op => PushPrimitiveReference(op, undefined));\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.HasBlock, (op, [, block]) => {\n  expr(op, block);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.HasBlock);\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.HasBlockParams, (op, [, block]) => {\n  expr(op, block);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.SpreadBlock);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CompileBlock);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.HasBlockParams);\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.IfInline, (op, [, condition, truthy, falsy]) => {\n  // Push in reverse order\n  expr(op, falsy);\n  expr(op, truthy);\n  expr(op, condition);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.IfInline);\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Not, (op, [, value]) => {\n  expr(op, value);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Not);\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.GetDynamicVar, (op, [, expression]) => {\n  expr(op, expression);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.GetDynamicVar);\n});\nEXPRESSIONS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Log, (op, [, positional]) => {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n  SimpleArgs(op, positional, null, false);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Log);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$v0);\n});\nfunction expr(op, expression) {\n  if (Array.isArray(expression)) {\n    EXPRESSIONS.compile(op, expression);\n  } else {\n    PushPrimitive(op, expression);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PrimitiveReference);\n  }\n}\n\n/**\n * Compile arguments, pushing an Arguments object onto the stack.\n *\n * @param args.params\n * @param args.hash\n * @param args.blocks\n * @param args.atNames\n */\nfunction CompileArgs(op, positional, named, blocks, atNames) {\n  let blockNames = blocks.names;\n  for (const name of blockNames) {\n    PushYieldableBlock(op, blocks.get(name));\n  }\n  let count = CompilePositional(op, positional);\n  let flags = count << 4;\n  if (atNames) flags |= 0b1000;\n  if (blocks) {\n    flags |= 0b111;\n  }\n  let names = _util_index_js__WEBPACK_IMPORTED_MODULE_1__.EMPTY_ARRAY;\n  if (named) {\n    names = named[0];\n    let val = named[1];\n    for (let i = 0; i < val.length; i++) {\n      expr(op, val[i]);\n    }\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushArgs, names, blockNames, flags);\n}\nfunction SimpleArgs(op, positional, named, atNames) {\n  if (positional === null && named === null) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushEmptyArgs);\n    return;\n  }\n  let count = CompilePositional(op, positional);\n  let flags = count << 4;\n  if (atNames) flags |= 0b1000;\n  let names = _util_index_js__WEBPACK_IMPORTED_MODULE_1__.EMPTY_STRING_ARRAY;\n  if (named) {\n    names = named[0];\n    let val = named[1];\n    for (let i = 0; i < val.length; i++) {\n      expr(op, val[i]);\n    }\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushArgs, names, _util_index_js__WEBPACK_IMPORTED_MODULE_1__.EMPTY_STRING_ARRAY, flags);\n}\n\n/**\n * Compile an optional list of positional arguments, which pushes each argument\n * onto the stack and returns the number of parameters compiled\n *\n * @param positional an optional list of positional arguments\n */\nfunction CompilePositional(op, positional) {\n  if (positional === null) return 0;\n  for (let i = 0; i < positional.length; i++) {\n    expr(op, positional[i]);\n  }\n  return positional.length;\n}\nfunction meta(layout) {\n  let [, symbols,, upvars] = layout.block;\n  return {\n    evalSymbols: evalSymbols(layout),\n    upvars: upvars,\n    scopeValues: layout.scope?.() ?? null,\n    isStrictMode: layout.isStrictMode,\n    moduleName: layout.moduleName,\n    owner: layout.owner,\n    size: symbols.length\n  };\n}\nfunction evalSymbols(layout) {\n  let {\n    block\n  } = layout;\n  let [, symbols, hasEval] = block;\n  return hasEval ? symbols : null;\n}\n\n/**\n * Yield to a block located at a particular symbol location.\n *\n * @param to the symbol containing the block to yield to\n * @param params optional block parameters to yield to the block\n */\nfunction YieldBlock(op, to, positional) {\n  SimpleArgs(op, positional, null, true);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.GetBlock, to);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.SpreadBlock);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CompileBlock);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.InvokeYield);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PopScope);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n}\n\n/**\n * Push an (optional) yieldable block onto the stack. The yieldable block must be known\n * statically at compile time.\n *\n * @param block An optional Compilable block\n */\nfunction PushYieldableBlock(op, block) {\n  PushSymbolTable(op, block && block[1]);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushBlockScope);\n  PushCompilable(op, block);\n}\n\n/**\n * Invoke a block that is known statically at compile time.\n *\n * @param block a Compilable block\n */\nfunction InvokeStaticBlock(op, block) {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n  PushCompilable(op, block);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CompileBlock);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.InvokeVirtual);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n}\n\n/**\n * Invoke a static block, preserving some number of stack entries for use in\n * updating.\n *\n * @param block A compilable block\n * @param callerCount A number of stack entries to preserve\n */\nfunction InvokeStaticBlockWithStack(op, block, callerCount) {\n  let parameters = block[1];\n  let calleeCount = parameters.length;\n  let count = Math.min(callerCount, calleeCount);\n  if (count === 0) {\n    InvokeStaticBlock(op, block);\n    return;\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n  if (count) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ChildScope);\n    for (let i = 0; i < count; i++) {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Dup, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$fp, callerCount - i);\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.SetVariable, parameters[i]);\n    }\n  }\n  PushCompilable(op, block);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CompileBlock);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.InvokeVirtual);\n  if (count) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PopScope);\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n}\nfunction PushSymbolTable(op, parameters) {\n  if (parameters !== null) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushSymbolTable, symbolTableOperand({\n      parameters\n    }));\n  } else {\n    PushPrimitive(op, null);\n  }\n}\nfunction PushCompilable(op, _block) {\n  if (_block === null) {\n    PushPrimitive(op, null);\n  } else {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Constant, blockOperand(_block));\n  }\n}\nfunction SwitchCases(op, bootstrap, matcher) {\n  // Setup the switch DSL\n  let clauses = [];\n  let count = 0;\n  function when(match, callback) {\n    clauses.push({\n      match,\n      callback,\n      label: `CLAUSE${count++}`\n    });\n  }\n\n  // Call the callback\n  matcher(when);\n\n  // Emit the opcodes for the switch\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Enter, 1);\n  bootstrap();\n  op(HighLevelBuilderOpcodes.StartLabels);\n\n  // First, emit the jump opcodes. We don't need a jump for the last\n  // opcode, since it bleeds directly into its clause.\n  for (let clause of clauses.slice(0, -1)) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.JumpEq, labelOperand(clause.label), clause.match);\n  }\n\n  // Enumerate the clauses in reverse order. Earlier matches will\n  // require fewer checks.\n  for (let i = clauses.length - 1; i >= 0; i--) {\n    let clause = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(clauses[i]);\n    op(HighLevelBuilderOpcodes.Label, clause.label);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Pop, 1);\n    clause.callback();\n\n    // The first match is special: it is placed directly before the END\n    // label, so no additional jump is needed at the end of it.\n    if (i !== 0) {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.Jump, labelOperand('END'));\n    }\n  }\n  op(HighLevelBuilderOpcodes.Label, 'END');\n  op(HighLevelBuilderOpcodes.StopLabels);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Exit);\n}\n\n/**\n * A convenience for pushing some arguments on the stack and\n * running some code if the code needs to be re-executed during\n * updating execution if some of the arguments have changed.\n *\n * # Initial Execution\n *\n * The `args` function should push zero or more arguments onto\n * the stack and return the number of arguments pushed.\n *\n * The `body` function provides the instructions to execute both\n * during initial execution and during updating execution.\n *\n * Internally, this function starts by pushing a new frame, so\n * that the body can return and sets the return point ($ra) to\n * the ENDINITIAL label.\n *\n * It then executes the `args` function, which adds instructions\n * responsible for pushing the arguments for the block to the\n * stack. These arguments will be restored to the stack before\n * updating execution.\n *\n * Next, it adds the Enter opcode, which marks the current position\n * in the DOM, and remembers the current $pc (the next instruction)\n * as the first instruction to execute during updating execution.\n *\n * Next, it runs `body`, which adds the opcodes that should\n * execute both during initial execution and during updating execution.\n * If the `body` wishes to finish early, it should Jump to the\n * `FINALLY` label.\n *\n * Next, it adds the FINALLY label, followed by:\n *\n * - the Exit opcode, which finalizes the marked DOM started by the\n *   Enter opcode.\n * - the Return opcode, which returns to the current return point\n *   ($ra).\n *\n * Finally, it adds the ENDINITIAL label followed by the PopFrame\n * instruction, which restores $fp, $sp and $ra.\n *\n * # Updating Execution\n *\n * Updating execution for this `replayable` occurs if the `body` added an\n * assertion, via one of the `JumpIf`, `JumpUnless` or `AssertSame` opcodes.\n *\n * If, during updating executon, the assertion fails, the initial VM is\n * restored, and the stored arguments are pushed onto the stack. The DOM\n * between the starting and ending markers is cleared, and the VM's cursor\n * is set to the area just cleared.\n *\n * The return point ($ra) is set to -1, the exit instruction.\n *\n * Finally, the $pc is set to to the instruction saved off by the\n * Enter opcode during initial execution, and execution proceeds as\n * usual.\n *\n * The only difference is that when a `Return` instruction is\n * encountered, the program jumps to -1 rather than the END label,\n * and the PopFrame opcode is not needed.\n */\nfunction Replayable(op, args, body) {\n  // Start a new label frame, to give END and RETURN\n  // a unique meaning.\n\n  op(HighLevelBuilderOpcodes.StartLabels);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n\n  // If the body invokes a block, its return will return to\n  // END. Otherwise, the return in RETURN will return to END.\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.ReturnTo, labelOperand('ENDINITIAL'));\n\n  // Push the arguments onto the stack. The args() function\n  // tells us how many stack elements to retain for re-execution\n  // when updating.\n  let count = args();\n\n  // Start a new updating closure, remembering `count` elements\n  // from the stack. Everything after this point, and before END,\n  // will execute both initially and to update the block.\n  //\n  // The enter and exit opcodes also track the area of the DOM\n  // associated with this block. If an assertion inside the block\n  // fails (for example, the test value changes from true to false\n  // in an #if), the DOM is cleared and the program is re-executed,\n  // restoring `count` elements to the stack and executing the\n  // instructions between the enter and exit.\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Enter, count);\n\n  // Evaluate the body of the block. The body of the block may\n  // return, which will jump execution to END during initial\n  // execution, and exit the updating routine.\n  body();\n\n  // All execution paths in the body should run the FINALLY once\n  // they are done. It is executed both during initial execution\n  // and during updating execution.\n  op(HighLevelBuilderOpcodes.Label, 'FINALLY');\n\n  // Finalize the DOM.\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Exit);\n\n  // In initial execution, this is a noop: it returns to the\n  // immediately following opcode. In updating execution, this\n  // exits the updating routine.\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.Return);\n\n  // Cleanup code for the block. Runs on initial execution\n  // but not on updating.\n  op(HighLevelBuilderOpcodes.Label, 'ENDINITIAL');\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n  op(HighLevelBuilderOpcodes.StopLabels);\n}\n\n/**\n * A specialized version of the `replayable` convenience that allows the\n * caller to provide different code based upon whether the item at\n * the top of the stack is true or false.\n *\n * As in `replayable`, the `ifTrue` and `ifFalse` code can invoke `return`.\n *\n * During the initial execution, a `return` will continue execution\n * in the cleanup code, which finalizes the current DOM block and pops\n * the current frame.\n *\n * During the updating execution, a `return` will exit the updating\n * routine, as it can reuse the DOM block and is always only a single\n * frame deep.\n */\nfunction ReplayableIf(op, args, ifTrue, ifFalse) {\n  return Replayable(op, args, () => {\n    // If the conditional is false, jump to the ELSE label.\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.JumpUnless, labelOperand('ELSE'));\n    // Otherwise, execute the code associated with the true branch.\n    ifTrue();\n    // We're done, so return. In the initial execution, this runs\n    // the cleanup code. In the updating VM, it exits the updating\n    // routine.\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.Jump, labelOperand('FINALLY'));\n    op(HighLevelBuilderOpcodes.Label, 'ELSE');\n\n    // If the conditional is false, and code associatied ith the\n    // false branch was provided, execute it. If there was no code\n    // associated with the false branch, jumping to the else statement\n    // has no other behavior.\n    if (ifFalse !== undefined) {\n      ifFalse();\n    }\n  });\n}\nconst ATTRS_BLOCK = '&attrs';\n\n// {{component}}\n\n// <Component>\n\n// chokepoint\n\nfunction InvokeComponent(op, component, _elementBlock, positional, named, _blocks) {\n  let {\n    compilable,\n    capabilities,\n    handle\n  } = component;\n  let elementBlock = _elementBlock ? [_elementBlock, []] : null;\n  let blocks = Array.isArray(_blocks) || _blocks === null ? namedBlocks(_blocks) : _blocks;\n  if (compilable) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushComponentDefinition, handle);\n    InvokeStaticComponent(op, {\n      capabilities: capabilities,\n      layout: compilable,\n      elementBlock,\n      positional,\n      named,\n      blocks\n    });\n  } else {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushComponentDefinition, handle);\n    InvokeNonStaticComponent(op, {\n      capabilities: capabilities,\n      elementBlock,\n      positional,\n      named,\n      atNames: true,\n      blocks\n    });\n  }\n}\nfunction InvokeDynamicComponent(op, definition, _elementBlock, positional, named, _blocks, atNames, curried) {\n  let elementBlock = _elementBlock ? [_elementBlock, []] : null;\n  let blocks = Array.isArray(_blocks) || _blocks === null ? namedBlocks(_blocks) : _blocks;\n  Replayable(op, () => {\n    expr(op, definition);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Dup, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$sp, 0);\n    return 2;\n  }, () => {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.JumpUnless, labelOperand('ELSE'));\n    if (curried) {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ResolveCurriedComponent);\n    } else {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ResolveDynamicComponent, isStrictMode());\n    }\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushDynamicComponentInstance);\n    InvokeNonStaticComponent(op, {\n      capabilities: true,\n      elementBlock,\n      positional,\n      named,\n      atNames,\n      blocks\n    });\n    op(HighLevelBuilderOpcodes.Label, 'ELSE');\n  });\n}\nfunction InvokeStaticComponent(op, {\n  capabilities,\n  layout,\n  elementBlock,\n  positional,\n  named,\n  blocks\n}) {\n  let {\n    symbolTable\n  } = layout;\n  let bailOut = symbolTable.hasEval || (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_6__.hasCapability)(capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.InternalComponentCapabilities.prepareArgs);\n  if (bailOut) {\n    InvokeNonStaticComponent(op, {\n      capabilities,\n      elementBlock,\n      positional,\n      named,\n      atNames: true,\n      blocks,\n      layout\n    });\n    return;\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Dup, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$sp, 1);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Load, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n\n  // Setup arguments\n  let {\n    symbols\n  } = symbolTable;\n\n  // As we push values onto the stack, we store the symbols associated  with them\n  // so that we can set them on the scope later on with SetVariable and SetBlock\n  let blockSymbols = [];\n  let argSymbols = [];\n  let argNames = [];\n\n  // First we push the blocks onto the stack\n  let blockNames = blocks.names;\n\n  // Starting with the attrs block, if it exists and is referenced in the component\n  if (elementBlock !== null) {\n    let symbol = symbols.indexOf(ATTRS_BLOCK);\n    if (symbol !== -1) {\n      PushYieldableBlock(op, elementBlock);\n      blockSymbols.push(symbol);\n    }\n  }\n\n  // Followed by the other blocks, if they exist and are referenced in the component.\n  // Also store the index of the associated symbol.\n  for (const name of blockNames) {\n    let symbol = symbols.indexOf(`&${name}`);\n    if (symbol !== -1) {\n      PushYieldableBlock(op, blocks.get(name));\n      blockSymbols.push(symbol);\n    }\n  }\n\n  // Next up we have arguments. If the component has the `createArgs` capability,\n  // then it wants access to the arguments in JavaScript. We can't know whether\n  // or not an argument is used, so we have to give access to all of them.\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_6__.hasCapability)(capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.InternalComponentCapabilities.createArgs)) {\n    // First we push positional arguments\n    let count = CompilePositional(op, positional);\n\n    // setup the flags with the count of positionals, and to indicate that atNames\n    // are used\n    let flags = count << 4;\n    flags |= 0b1000;\n    let names = _util_index_js__WEBPACK_IMPORTED_MODULE_1__.EMPTY_STRING_ARRAY;\n\n    // Next, if named args exist, push them all. If they have an associated symbol\n    // in the invoked component (e.g. they are used within its template), we push\n    // that symbol. If not, we still push the expression as it may be used, and\n    // we store the symbol as -1 (this is used later).\n    if (named !== null) {\n      names = named[0];\n      let val = named[1];\n      for (let i = 0; i < val.length; i++) {\n        let symbol = symbols.indexOf((0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(names[i]));\n        expr(op, val[i]);\n        argSymbols.push(symbol);\n      }\n    }\n\n    // Finally, push the VM arguments themselves. These args won't need access\n    // to blocks (they aren't accessible from userland anyways), so we push an\n    // empty array instead of the actual block names.\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushArgs, names, _util_index_js__WEBPACK_IMPORTED_MODULE_1__.EMPTY_STRING_ARRAY, flags);\n\n    // And push an extra pop operation to remove the args before we begin setting\n    // variables on the local context\n    argSymbols.push(-1);\n  } else if (named !== null) {\n    // If the component does not have the `createArgs` capability, then the only\n    // expressions we need to push onto the stack are those that are actually\n    // referenced in the template of the invoked component (e.g. have symbols).\n    let names = named[0];\n    let val = named[1];\n    for (let i = 0; i < val.length; i++) {\n      let name = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.unwrap)(names[i]);\n      let symbol = symbols.indexOf(name);\n      if (symbol !== -1) {\n        expr(op, val[i]);\n        argSymbols.push(symbol);\n        argNames.push(name);\n      }\n    }\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.BeginComponentTransaction, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_6__.hasCapability)(capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.InternalComponentCapabilities.dynamicScope)) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushDynamicScope);\n  }\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_6__.hasCapability)(capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.InternalComponentCapabilities.createInstance)) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CreateComponent, blocks.has('default') | 0, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.RegisterComponentDestructor, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_6__.hasCapability)(capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.InternalComponentCapabilities.createArgs)) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.GetComponentSelf, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  } else {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.GetComponentSelf, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0, argNames);\n  }\n\n  // Setup the new root scope for the component\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.RootScope, symbols.length + 1, Object.keys(blocks).length > 0 ? 1 : 0);\n\n  // Pop the self reference off the stack and set it to the symbol for `this`\n  // in the new scope. This is why all subsequent symbols are increased by one.\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.SetVariable, 0);\n\n  // Going in reverse, now we pop the args/blocks off the stack, starting with\n  // arguments, and assign them to their symbols in the new scope.\n  for (const symbol of (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.reverse)(argSymbols)) {\n    // for (let i = argSymbols.length - 1; i >= 0; i--) {\n    //   let symbol = argSymbols[i];\n\n    if (symbol === -1) {\n      // The expression was not bound to a local symbol, it was only pushed to be\n      // used with VM args in the javascript side\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Pop, 1);\n    } else {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.SetVariable, symbol + 1);\n    }\n  }\n\n  // if any positional params exist, pop them off the stack as well\n  if (positional !== null) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Pop, positional.length);\n  }\n\n  // Finish up by popping off and assigning blocks\n  for (const symbol of (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.reverse)(blockSymbols)) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.SetBlock, symbol + 1);\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Constant, layoutOperand(layout));\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CompileBlock);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.InvokeVirtual);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.DidRenderLayout, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PopScope);\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_6__.hasCapability)(capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.InternalComponentCapabilities.dynamicScope)) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PopDynamicScope);\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CommitComponentTransaction);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Load, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n}\nfunction InvokeNonStaticComponent(op, {\n  capabilities,\n  elementBlock,\n  positional,\n  named,\n  atNames,\n  blocks: namedBlocks,\n  layout\n}) {\n  let bindableBlocks = !!namedBlocks;\n  let bindableAtNames = capabilities === true || (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_6__.hasCapability)(capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.InternalComponentCapabilities.prepareArgs) || !!(named && named[0].length !== 0);\n  let blocks = namedBlocks.with('attrs', elementBlock);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Dup, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$sp, 1);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Load, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n  CompileArgs(op, positional, named, blocks, atNames);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PrepareArgs, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  invokePreparedComponent(op, blocks.has('default'), bindableBlocks, bindableAtNames, () => {\n    if (layout) {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushSymbolTable, symbolTableOperand(layout.symbolTable));\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Constant, layoutOperand(layout));\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CompileBlock);\n    } else {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.GetComponentLayout, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n    }\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PopulateLayout, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  });\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Load, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n}\nfunction WrappedComponent(op, layout, attrsBlockNumber) {\n  op(HighLevelBuilderOpcodes.StartLabels);\n  WithSavedRegister(op, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s1, () => {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.GetComponentTagName, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PrimitiveReference);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Dup, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$sp, 0);\n  });\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.JumpUnless, labelOperand('BODY'));\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s1);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PutComponentOperations);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.OpenDynamicElement);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.DidCreateElement, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  YieldBlock(op, attrsBlockNumber, null);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.FlushElement);\n  op(HighLevelBuilderOpcodes.Label, 'BODY');\n  InvokeStaticBlock(op, [layout.block[0], []]);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s1);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.JumpUnless, labelOperand('END'));\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CloseElement);\n  op(HighLevelBuilderOpcodes.Label, 'END');\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Load, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s1);\n  op(HighLevelBuilderOpcodes.StopLabels);\n}\nfunction invokePreparedComponent(op, hasBlock, bindableBlocks, bindableAtNames, populateLayout = null) {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.BeginComponentTransaction, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushDynamicScope);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CreateComponent, hasBlock | 0, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n\n  // this has to run after createComponent to allow\n  // for late-bound layouts, but a caller is free\n  // to populate the layout earlier if it wants to\n  // and do nothing here.\n  if (populateLayout) {\n    populateLayout();\n  }\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.RegisterComponentDestructor, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.GetComponentSelf, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.VirtualRootScope, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.SetVariable, 0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.SetupForEval, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  if (bindableAtNames) op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.SetNamedVariables, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  if (bindableBlocks) op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.SetBlocks, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Pop, 1);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.InvokeComponentLayout, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.DidRenderLayout, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PopScope);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PopDynamicScope);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CommitComponentTransaction);\n}\nfunction InvokeBareComponent(op) {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Dup, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$sp, 1);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Load, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushEmptyArgs);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PrepareArgs, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  invokePreparedComponent(op, false, false, true, () => {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.GetComponentLayout, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PopulateLayout, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  });\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Load, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n}\nfunction WithSavedRegister(op, register, block) {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Fetch, register);\n  block();\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Load, register);\n}\nfunction main(op) {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Main, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$s0);\n  invokePreparedComponent(op, false, false, true);\n}\n\n/**\n * Append content to the DOM. This standard function triages content and does the\n * right thing based upon whether it's a string, safe string, component, fragment\n * or node.\n *\n * @param trusting whether to interpolate a string as raw HTML (corresponds to\n * triple curlies)\n */\nfunction StdAppend(op, trusting, nonDynamicAppend) {\n  SwitchCases(op, () => op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ContentType), when => {\n    when(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ContentType.String, () => {\n      if (trusting) {\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AssertSame);\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AppendHTML);\n      } else {\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AppendText);\n      }\n    });\n    if (typeof nonDynamicAppend === 'number') {\n      when(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ContentType.Component, () => {\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ResolveCurriedComponent);\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushDynamicComponentInstance);\n        InvokeBareComponent(op);\n      });\n      when(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ContentType.Helper, () => {\n        CallDynamic(op, null, null, () => {\n          op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.InvokeStatic, nonDynamicAppend);\n        });\n      });\n    } else {\n      // when non-dynamic, we can no longer call the value (potentially because we've already called it)\n      // this prevents infinite loops. We instead coerce the value, whatever it is, into the DOM.\n      when(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ContentType.Component, () => {\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AppendText);\n      });\n      when(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ContentType.Helper, () => {\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AppendText);\n      });\n    }\n    when(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ContentType.SafeString, () => {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AssertSame);\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AppendSafeHTML);\n    });\n    when(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ContentType.Fragment, () => {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AssertSame);\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AppendDocumentFragment);\n    });\n    when(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ContentType.Node, () => {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AssertSame);\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.AppendNode);\n    });\n  });\n}\nfunction compileStd(context) {\n  let mainHandle = build(context, op => main(op));\n  let trustingGuardedNonDynamicAppend = build(context, op => StdAppend(op, true, null));\n  let cautiousGuardedNonDynamicAppend = build(context, op => StdAppend(op, false, null));\n  let trustingGuardedDynamicAppend = build(context, op => StdAppend(op, true, trustingGuardedNonDynamicAppend));\n  let cautiousGuardedDynamicAppend = build(context, op => StdAppend(op, false, cautiousGuardedNonDynamicAppend));\n  return new StdLib(mainHandle, trustingGuardedDynamicAppend, cautiousGuardedDynamicAppend, trustingGuardedNonDynamicAppend, cautiousGuardedNonDynamicAppend);\n}\nconst STDLIB_META = {\n  evalSymbols: null,\n  upvars: null,\n  moduleName: 'stdlib',\n  // TODO: ??\n  scopeValues: null,\n  isStrictMode: true,\n  owner: null,\n  size: 0\n};\nfunction build(program, builder) {\n  let {\n    constants,\n    heap,\n    resolver\n  } = program;\n  let encoder = new EncoderImpl(heap, STDLIB_META);\n  function pushOp(...op) {\n    encodeOp(encoder, constants, resolver, STDLIB_META, op);\n  }\n  builder(pushOp);\n  let result = encoder.commit(0);\n  if (typeof result !== 'number') {\n    // This shouldn't be possible\n    throw new Error(`Unexpected errors compiling std`);\n  } else {\n    return result;\n  }\n}\nclass CompileTimeCompilationContextImpl {\n  constructor({\n    constants,\n    heap\n  }, resolver, createOp) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"constants\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"heap\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"stdlib\", void 0);\n    this.resolver = resolver;\n    this.createOp = createOp;\n    this.constants = constants;\n    this.heap = heap;\n    this.stdlib = compileStd(this);\n  }\n}\nfunction programCompilationContext(artifacts, resolver, createOp) {\n  return new CompileTimeCompilationContextImpl(artifacts, resolver, createOp);\n}\nfunction templateCompilationContext(program, meta) {\n  let encoder = new EncoderImpl(program.heap, meta, program.stdlib);\n  return {\n    program,\n    encoder,\n    meta\n  };\n}\nconst STATEMENTS = new Compilers();\nconst INFLATE_ATTR_TABLE = ['class', 'id', 'value', 'name', 'type', 'style', 'href'];\nconst INFLATE_TAG_TABLE = ['div', 'span', 'p', 'a'];\nfunction inflateTagName(tagName) {\n  return typeof tagName === 'string' ? tagName : INFLATE_TAG_TABLE[tagName];\n}\nfunction inflateAttrName(attrName) {\n  return typeof attrName === 'string' ? attrName : INFLATE_ATTR_TABLE[attrName];\n}\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Comment, (op, sexp) => op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Comment, sexp[1]));\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.CloseElement, op => op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.CloseElement));\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.FlushElement, op => op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.FlushElement));\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Modifier, (op, [, expression, positional, named]) => {\n  if (isGetFreeModifier(expression)) {\n    op(HighLevelResolutionOpcodes.Modifier, expression, handle => {\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n      SimpleArgs(op, positional, named, false);\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Modifier, handle);\n      op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n    });\n  } else {\n    expr(op, expression);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n    SimpleArgs(op, positional, named, false);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Dup, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$fp, 1);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.DynamicModifier);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n  }\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.StaticAttr, (op, [, name, value, namespace]) => {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.StaticAttr, inflateAttrName(name), value, namespace ?? null);\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.StaticComponentAttr, (op, [, name, value, namespace]) => {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.StaticComponentAttr, inflateAttrName(name), value, namespace ?? null);\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.DynamicAttr, (op, [, name, value, namespace]) => {\n  expr(op, value);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.DynamicAttr, inflateAttrName(name), false, namespace ?? null);\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.TrustingDynamicAttr, (op, [, name, value, namespace]) => {\n  expr(op, value);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.DynamicAttr, inflateAttrName(name), true, namespace ?? null);\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.ComponentAttr, (op, [, name, value, namespace]) => {\n  expr(op, value);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ComponentAttr, inflateAttrName(name), false, namespace ?? null);\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.TrustingComponentAttr, (op, [, name, value, namespace]) => {\n  expr(op, value);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ComponentAttr, inflateAttrName(name), true, namespace ?? null);\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.OpenElement, (op, [, tag]) => {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.OpenElement, inflateTagName(tag));\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.OpenElementWithSplat, (op, [, tag]) => {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PutComponentOperations);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.OpenElement, inflateTagName(tag));\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Component, (op, [, expr, elementBlock, named, blocks]) => {\n  if (isGetFreeComponent(expr)) {\n    op(HighLevelResolutionOpcodes.Component, expr, component => {\n      InvokeComponent(op, component, elementBlock, null, named, blocks);\n    });\n  } else {\n    // otherwise, the component name was an expression, so resolve the expression\n    // and invoke it as a dynamic component\n    InvokeDynamicComponent(op, expr, elementBlock, null, named, blocks, true, true);\n  }\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Yield, (op, [, to, params]) => YieldBlock(op, to, params));\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.AttrSplat, (op, [, to]) => YieldBlock(op, to, null));\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Debugger, (op, [, debugInfo]) => op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Debugger, debugSymbolsOperand(), debugInfo));\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Append, (op, [, value]) => {\n  // Special case for static values\n  if (!Array.isArray(value)) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Text, value === null || value === undefined ? '' : String(value));\n  } else if (isGetFreeComponentOrHelper(value)) {\n    op(HighLevelResolutionOpcodes.OptionalComponentOrHelper, value, {\n      ifComponent(component) {\n        InvokeComponent(op, component, null, null, null, null);\n      },\n      ifHelper(handle) {\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n        Call(op, handle, null, null);\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.InvokeStatic, stdlibOperand('cautious-non-dynamic-append'));\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n      },\n      ifValue(handle) {\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ConstantReference, handle);\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.InvokeStatic, stdlibOperand('cautious-non-dynamic-append'));\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n      }\n    });\n  } else if (value[0] === _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Call) {\n    let [, expression, positional, named] = value;\n    if (isGetFreeComponentOrHelper(expression)) {\n      op(HighLevelResolutionOpcodes.ComponentOrHelper, expression, {\n        ifComponent(component) {\n          InvokeComponent(op, component, null, positional, hashToArgs(named), null);\n        },\n        ifHelper(handle) {\n          op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n          Call(op, handle, positional, named);\n          op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.InvokeStatic, stdlibOperand('cautious-non-dynamic-append'));\n          op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n        }\n      });\n    } else {\n      SwitchCases(op, () => {\n        expr(op, expression);\n        op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.DynamicContentType);\n      }, when => {\n        when(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ContentType.Component, () => {\n          op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ResolveCurriedComponent);\n          op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushDynamicComponentInstance);\n          InvokeNonStaticComponent(op, {\n            capabilities: true,\n            elementBlock: null,\n            positional,\n            named,\n            atNames: false,\n            blocks: namedBlocks(null)\n          });\n        });\n        when(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.ContentType.Helper, () => {\n          CallDynamic(op, positional, named, () => {\n            op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.InvokeStatic, stdlibOperand('cautious-non-dynamic-append'));\n          });\n        });\n      });\n    }\n  } else {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n    expr(op, value);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.InvokeStatic, stdlibOperand('cautious-append'));\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n  }\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.TrustingAppend, (op, [, value]) => {\n  if (!Array.isArray(value)) {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Text, value === null || value === undefined ? '' : String(value));\n  } else {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n    expr(op, value);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.InvokeStatic, stdlibOperand('trusting-append'));\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n  }\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Block, (op, [, expr, positional, named, blocks]) => {\n  if (isGetFreeComponent(expr)) {\n    op(HighLevelResolutionOpcodes.Component, expr, component => {\n      InvokeComponent(op, component, null, positional, hashToArgs(named), blocks);\n    });\n  } else {\n    InvokeDynamicComponent(op, expr, null, positional, named, blocks, false, false);\n  }\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.InElement, (op, [, block, guid, destination, insertBefore]) => {\n  ReplayableIf(op, () => {\n    expr(op, guid);\n    if (insertBefore === undefined) {\n      PushPrimitiveReference(op, undefined);\n    } else {\n      expr(op, insertBefore);\n    }\n    expr(op, destination);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Dup, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$sp, 0);\n    return 4;\n  }, () => {\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PushRemoteElement);\n    InvokeStaticBlock(op, block);\n    op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.PopRemoteElement);\n  });\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.If, (op, [, condition, block, inverse]) => ReplayableIf(op, () => {\n  expr(op, condition);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ToBoolean);\n  return 1;\n}, () => {\n  InvokeStaticBlock(op, block);\n}, inverse ? () => {\n  InvokeStaticBlock(op, inverse);\n} : undefined));\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Each, (op, [, value, key, block, inverse]) => Replayable(op, () => {\n  if (key) {\n    expr(op, key);\n  } else {\n    PushPrimitiveReference(op, null);\n  }\n  expr(op, value);\n  return 2;\n}, () => {\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.EnterList, labelOperand('BODY'), labelOperand('ELSE'));\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PushFrame);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Dup, _vm_index_js__WEBPACK_IMPORTED_MODULE_3__.$fp, 1);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.ReturnTo, labelOperand('ITER'));\n  op(HighLevelBuilderOpcodes.Label, 'ITER');\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Iterate, labelOperand('BREAK'));\n  op(HighLevelBuilderOpcodes.Label, 'BODY');\n  InvokeStaticBlockWithStack(op, block, 2);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.Pop, 2);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.Jump, labelOperand('FINALLY'));\n  op(HighLevelBuilderOpcodes.Label, 'BREAK');\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.PopFrame);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.Op.ExitList);\n  op(_vm_index_js__WEBPACK_IMPORTED_MODULE_3__.MachineOp.Jump, labelOperand('FINALLY'));\n  op(HighLevelBuilderOpcodes.Label, 'ELSE');\n  if (inverse) {\n    InvokeStaticBlock(op, inverse);\n  }\n}));\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Let, (op, [, positional, block]) => {\n  let count = CompilePositional(op, positional);\n  InvokeStaticBlockWithStack(op, block, count);\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.WithDynamicVars, (op, [, named, block]) => {\n  if (named) {\n    let [names, expressions] = named;\n    CompilePositional(op, expressions);\n    DynamicScope(op, names, () => {\n      InvokeStaticBlock(op, block);\n    });\n  } else {\n    InvokeStaticBlock(op, block);\n  }\n});\nSTATEMENTS.add(_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.InvokeComponent, (op, [, expr, positional, named, blocks]) => {\n  if (isGetFreeComponent(expr)) {\n    op(HighLevelResolutionOpcodes.Component, expr, component => {\n      InvokeComponent(op, component, null, positional, hashToArgs(named), blocks);\n    });\n  } else {\n    InvokeDynamicComponent(op, expr, null, positional, named, blocks, false, false);\n  }\n});\nfunction hashToArgs(hash) {\n  if (hash === null) return null;\n  let names = hash[0].map(key => `@${key}`);\n  return [names, hash[1]];\n}\nconst PLACEHOLDER_HANDLE = -1;\nclass CompilableTemplateImpl {\n  constructor(statements, meta,\n  // Part of CompilableTemplate\n  symbolTable,\n  // Used for debugging\n  moduleName = 'plain block') {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"compiled\", null);\n    this.statements = statements;\n    this.meta = meta;\n    this.symbolTable = symbolTable;\n    this.moduleName = moduleName;\n  }\n\n  // Part of CompilableTemplate\n  compile(context) {\n    return maybeCompile(this, context);\n  }\n}\nfunction compilable(layout, moduleName) {\n  let [statements, symbols, hasEval] = layout.block;\n  return new CompilableTemplateImpl(statements, meta(layout), {\n    symbols,\n    hasEval\n  }, moduleName);\n}\nfunction maybeCompile(compilable, context) {\n  if (compilable.compiled !== null) return compilable.compiled;\n  compilable.compiled = PLACEHOLDER_HANDLE;\n  let {\n    statements,\n    meta\n  } = compilable;\n  let result = compileStatements(statements, meta, context);\n  compilable.compiled = result;\n  return result;\n}\nfunction compileStatements(statements, meta, syntaxContext) {\n  let sCompiler = STATEMENTS;\n  let context = templateCompilationContext(syntaxContext, meta);\n  let {\n    encoder,\n    program: {\n      constants,\n      resolver\n    }\n  } = context;\n  function pushOp(...op) {\n    encodeOp(encoder, constants, resolver, meta, op);\n  }\n  for (const statement of statements) {\n    sCompiler.compile(pushOp, statement);\n  }\n  let handle = context.encoder.commit(meta.size);\n  return handle;\n}\nfunction compilableBlock(block, containing) {\n  return new CompilableTemplateImpl(block[0], containing, {\n    parameters: block[1] || _util_index_js__WEBPACK_IMPORTED_MODULE_1__.EMPTY_ARRAY\n  });\n}\nconst DEFAULT_CAPABILITIES = {\n  dynamicLayout: true,\n  dynamicTag: true,\n  prepareArgs: true,\n  createArgs: true,\n  attributeHook: false,\n  elementHook: false,\n  dynamicScope: true,\n  createCaller: false,\n  updateHook: true,\n  createInstance: true,\n  wrapped: false,\n  willDestroy: false,\n  hasSubOwner: false\n};\nconst MINIMAL_CAPABILITIES = {\n  dynamicLayout: false,\n  dynamicTag: false,\n  prepareArgs: false,\n  createArgs: false,\n  attributeHook: false,\n  elementHook: false,\n  dynamicScope: false,\n  createCaller: false,\n  updateHook: false,\n  createInstance: false,\n  wrapped: false,\n  willDestroy: false,\n  hasSubOwner: false\n};\nclass WrappedBuilder {\n  constructor(layout, moduleName) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"symbolTable\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"compiled\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attrsBlockNumber\", void 0);\n    this.layout = layout;\n    this.moduleName = moduleName;\n    let {\n      block\n    } = layout;\n    let [, symbols, hasEval] = block;\n    symbols = symbols.slice();\n\n    // ensure ATTRS_BLOCK is always included (only once) in the list of symbols\n    let attrsBlockIndex = symbols.indexOf(ATTRS_BLOCK);\n    if (attrsBlockIndex === -1) {\n      this.attrsBlockNumber = symbols.push(ATTRS_BLOCK);\n    } else {\n      this.attrsBlockNumber = attrsBlockIndex + 1;\n    }\n    this.symbolTable = {\n      hasEval,\n      symbols\n    };\n  }\n  compile(syntax) {\n    if (this.compiled !== null) return this.compiled;\n    let m = meta(this.layout);\n    let context = templateCompilationContext(syntax, m);\n    let {\n      encoder,\n      program: {\n        constants,\n        resolver\n      }\n    } = context;\n    function pushOp(...op) {\n      encodeOp(encoder, constants, resolver, m, op);\n    }\n    WrappedComponent(pushOp, this.layout, this.attrsBlockNumber);\n    let handle = context.encoder.commit(m.size);\n    if (typeof handle !== 'number') {\n      return handle;\n    }\n    this.compiled = handle;\n    return handle;\n  }\n}\nlet clientId = 0;\nlet templateCacheCounters = {\n  cacheHit: 0,\n  cacheMiss: 0\n};\n\n// These interfaces are for backwards compatibility, some addons use these intimate APIs\n\n/**\n * Wraps a template js in a template module to change it into a factory\n * that handles lazy parsing the template and to create per env singletons\n * of the template.\n */\nfunction templateFactory({\n  id: templateId,\n  moduleName,\n  block,\n  scope,\n  isStrictMode\n}) {\n  // TODO(template-refactors): This should be removed in the near future, as it\n  // appears that id is unused. It is currently kept for backwards compat reasons.\n  let id = templateId || `client-${clientId++}`;\n\n  // TODO: This caches JSON serialized output once in case a template is\n  // compiled by multiple owners, but we haven't verified if this is actually\n  // helpful. We should benchmark this in the future.\n  let parsedBlock;\n  let ownerlessTemplate = null;\n  let templateCache = new WeakMap();\n  let factory = owner => {\n    if (parsedBlock === undefined) {\n      parsedBlock = JSON.parse(block);\n    }\n    if (owner === undefined) {\n      if (ownerlessTemplate === null) {\n        templateCacheCounters.cacheMiss++;\n        ownerlessTemplate = new TemplateImpl({\n          id,\n          block: parsedBlock,\n          moduleName,\n          owner: null,\n          scope,\n          isStrictMode\n        });\n      } else {\n        templateCacheCounters.cacheHit++;\n      }\n      return ownerlessTemplate;\n    }\n    let result = templateCache.get(owner);\n    if (result === undefined) {\n      templateCacheCounters.cacheMiss++;\n      result = new TemplateImpl({\n        id,\n        block: parsedBlock,\n        moduleName,\n        owner,\n        scope,\n        isStrictMode\n      });\n      templateCache.set(owner, result);\n    } else {\n      templateCacheCounters.cacheHit++;\n    }\n    return result;\n  };\n  factory.__id = id;\n  factory.__meta = {\n    moduleName\n  };\n  return factory;\n}\nclass TemplateImpl {\n  constructor(parsedLayout) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"result\", 'ok');\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"layout\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"wrappedLayout\", null);\n    this.parsedLayout = parsedLayout;\n  }\n  get moduleName() {\n    return this.parsedLayout.moduleName;\n  }\n  get id() {\n    return this.parsedLayout.id;\n  }\n\n  // TODO(template-refactors): This should be removed in the near future, it is\n  // only being exposed for backwards compatibility\n  get referrer() {\n    return {\n      moduleName: this.parsedLayout.moduleName,\n      owner: this.parsedLayout.owner\n    };\n  }\n  asLayout() {\n    if (this.layout) return this.layout;\n    return this.layout = compilable((0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assign)({}, this.parsedLayout), this.moduleName);\n  }\n  asWrappedLayout() {\n    if (this.wrappedLayout) return this.wrappedLayout;\n    return this.wrappedLayout = new WrappedBuilder((0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.assign)({}, this.parsedLayout), this.moduleName);\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/owner/index.js":
/*!*****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/owner/index.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OWNER: () => (/* binding */ OWNER),\n/* harmony export */   getOwner: () => (/* binding */ getOwner),\n/* harmony export */   setOwner: () => (/* binding */ setOwner)\n/* harmony export */ });\nconst OWNER = Symbol('OWNER');\n/**\n  Framework objects in a Glimmer application may receive an owner object.\n  Glimmer is unopinionated about this owner, but will forward it through its\n  internal resolution system, and through its managers if it is provided.\n*/\nfunction getOwner(object) {\n  return object[OWNER];\n}\n\n/**\n  `setOwner` set's an object's owner\n*/\nfunction setOwner(object, owner) {\n  object[OWNER] = owner;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/owner/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/program/index.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/program/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompileTimeConstantImpl: () => (/* binding */ CompileTimeConstantImpl),\n/* harmony export */   ConstantsImpl: () => (/* binding */ ConstantsImpl),\n/* harmony export */   HeapImpl: () => (/* binding */ HeapImpl),\n/* harmony export */   RuntimeConstantsImpl: () => (/* binding */ RuntimeConstantsImpl),\n/* harmony export */   RuntimeHeapImpl: () => (/* binding */ RuntimeHeapImpl),\n/* harmony export */   RuntimeOpImpl: () => (/* binding */ RuntimeOpImpl),\n/* harmony export */   RuntimeProgramImpl: () => (/* binding */ RuntimeProgramImpl),\n/* harmony export */   artifacts: () => (/* binding */ artifacts),\n/* harmony export */   hydrateHeap: () => (/* binding */ hydrateHeap)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _manager_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../opcode-compiler/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js\");\n/* harmony import */ var _vm_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../vm/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/vm/index.js\");\n/* harmony import */ var _wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../wire-format/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/wire-format/index.js\");\n\n\n\n\n\n\n\n/**\n * Default component template, which is a plain yield\n */\nconst DEFAULT_TEMPLATE_BLOCK = [[[_wire_format_index_js__WEBPACK_IMPORTED_MODULE_5__.SexpOpcodes.Yield, 1, null]], ['&default'], false, []];\nconst DEFAULT_TEMPLATE = {\n  // random uuid\n  id: '1b32f5c2-7623-43d6-a0ad-9672898920a1',\n  moduleName: '__default__.hbs',\n  block: JSON.stringify(DEFAULT_TEMPLATE_BLOCK),\n  scope: null,\n  isStrictMode: true\n};\nconst WELL_KNOWN_EMPTY_ARRAY = Object.freeze([]);\nconst STARTER_CONSTANTS = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.constants)(WELL_KNOWN_EMPTY_ARRAY);\nconst WELL_KNOWN_EMPTY_ARRAY_POSITION = STARTER_CONSTANTS.indexOf(WELL_KNOWN_EMPTY_ARRAY);\nclass CompileTimeConstantImpl {\n  constructor() {\n    // `0` means NULL\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"values\", STARTER_CONSTANTS.slice());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"indexMap\", new Map(this.values.map((value, index) => [value, index])));\n  }\n  value(value) {\n    let indexMap = this.indexMap;\n    let index = indexMap.get(value);\n    if (index === undefined) {\n      index = this.values.push(value) - 1;\n      indexMap.set(value, index);\n    }\n    return index;\n  }\n  array(values) {\n    if (values.length === 0) {\n      return WELL_KNOWN_EMPTY_ARRAY_POSITION;\n    }\n    let handles = new Array(values.length);\n    for (let i = 0; i < values.length; i++) {\n      handles[i] = this.value(values[i]);\n    }\n    return this.value(handles);\n  }\n  toPool() {\n    return this.values;\n  }\n}\nclass RuntimeConstantsImpl {\n  constructor(pool) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"values\", void 0);\n    this.values = pool;\n  }\n  getValue(handle) {\n    return this.values[handle];\n  }\n  getArray(value) {\n    let handles = this.getValue(value);\n    let reified = new Array(handles.length);\n    for (const [i, n] of (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.enumerate)(handles)) {\n      reified[i] = this.getValue(n);\n    }\n    return reified;\n  }\n}\nclass ConstantsImpl extends CompileTimeConstantImpl {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"reifiedArrs\", {\n      [WELL_KNOWN_EMPTY_ARRAY_POSITION]: WELL_KNOWN_EMPTY_ARRAY\n    });\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"defaultTemplate\", (0,_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_2__.templateFactory)(DEFAULT_TEMPLATE)());\n    // Used for tests and debugging purposes, and to be able to analyze large apps\n    // This is why it's enabled even in production\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"helperDefinitionCount\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"modifierDefinitionCount\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"componentDefinitionCount\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"helperDefinitionCache\", new WeakMap());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"modifierDefinitionCache\", new WeakMap());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"componentDefinitionCache\", new WeakMap());\n  }\n  helper(definitionState,\n  // TODO: Add a way to expose resolved name for debugging\n  _resolvedName = null, isOptional) {\n    let handle = this.helperDefinitionCache.get(definitionState);\n    if (handle === undefined) {\n      let managerOrHelper = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_1__.getInternalHelperManager)(definitionState, isOptional);\n      if (managerOrHelper === null) {\n        this.helperDefinitionCache.set(definitionState, null);\n        return null;\n      }\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(managerOrHelper, 'BUG: expected manager or helper');\n      let helper = typeof managerOrHelper === 'function' ? managerOrHelper : managerOrHelper.getHelper(definitionState);\n      handle = this.value(helper);\n      this.helperDefinitionCache.set(definitionState, handle);\n      this.helperDefinitionCount++;\n    }\n    return handle;\n  }\n  modifier(definitionState, resolvedName = null, isOptional) {\n    let handle = this.modifierDefinitionCache.get(definitionState);\n    if (handle === undefined) {\n      let manager = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_1__.getInternalModifierManager)(definitionState, isOptional);\n      if (manager === null) {\n        this.modifierDefinitionCache.set(definitionState, null);\n        return null;\n      }\n      let definition = {\n        resolvedName,\n        manager,\n        state: definitionState\n      };\n      handle = this.value(definition);\n      this.modifierDefinitionCache.set(definitionState, handle);\n      this.modifierDefinitionCount++;\n    }\n    return handle;\n  }\n  component(definitionState, owner, isOptional) {\n    let definition = this.componentDefinitionCache.get(definitionState);\n    if (definition === undefined) {\n      let manager = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_1__.getInternalComponentManager)(definitionState, isOptional);\n      if (manager === null) {\n        this.componentDefinitionCache.set(definitionState, null);\n        return null;\n      }\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(manager, 'BUG: expected manager');\n      let capabilities = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_1__.capabilityFlagsFrom)(manager.getCapabilities(definitionState));\n      let templateFactory = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_1__.getComponentTemplate)(definitionState);\n      let compilable = null;\n      let template;\n      if (!(0,_manager_index_js__WEBPACK_IMPORTED_MODULE_1__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.dynamicLayout)) {\n        template = templateFactory?.(owner) ?? this.defaultTemplate;\n      } else {\n        template = templateFactory?.(owner);\n      }\n      if (template !== undefined) {\n        template = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrapTemplate)(template);\n        compilable = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_1__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.wrapped) ? template.asWrappedLayout() : template.asLayout();\n      }\n      definition = {\n        resolvedName: null,\n        handle: -1,\n        // replaced momentarily\n        manager,\n        capabilities,\n        state: definitionState,\n        compilable\n      };\n      definition.handle = this.value(definition);\n      this.componentDefinitionCache.set(definitionState, definition);\n      this.componentDefinitionCount++;\n    }\n    return definition;\n  }\n  resolvedComponent(resolvedDefinition, resolvedName) {\n    let definition = this.componentDefinitionCache.get(resolvedDefinition);\n    if (definition === undefined) {\n      let {\n        manager,\n        state,\n        template\n      } = resolvedDefinition;\n      let capabilities = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_1__.capabilityFlagsFrom)(manager.getCapabilities(resolvedDefinition));\n      let compilable = null;\n      if (!(0,_manager_index_js__WEBPACK_IMPORTED_MODULE_1__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.dynamicLayout)) {\n        template = template ?? this.defaultTemplate;\n      }\n      if (template !== null) {\n        template = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrapTemplate)(template);\n        compilable = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_1__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.wrapped) ? template.asWrappedLayout() : template.asLayout();\n      }\n      definition = {\n        resolvedName,\n        handle: -1,\n        // replaced momentarily\n        manager,\n        capabilities,\n        state,\n        compilable\n      };\n      definition.handle = this.value(definition);\n      this.componentDefinitionCache.set(resolvedDefinition, definition);\n      this.componentDefinitionCount++;\n    }\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(definition, 'BUG: resolved component definitions cannot be null');\n  }\n  getValue(index) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(index >= 0, `cannot get value for handle: ${index}`);\n    return this.values[index];\n  }\n  getArray(index) {\n    let reifiedArrs = this.reifiedArrs;\n    let reified = reifiedArrs[index];\n    if (reified === undefined) {\n      let names = this.getValue(index);\n      reified = new Array(names.length);\n      for (const [i, name] of (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.enumerate)(names)) {\n        reified[i] = this.getValue(name);\n      }\n      reifiedArrs[index] = reified;\n    }\n    return reified;\n  }\n}\nclass RuntimeOpImpl {\n  constructor(heap) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"offset\", 0);\n    this.heap = heap;\n  }\n  get size() {\n    let rawType = this.heap.getbyaddr(this.offset);\n    return ((rawType & _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.OPERAND_LEN_MASK) >> _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ARG_SHIFT) + 1;\n  }\n  get isMachine() {\n    let rawType = this.heap.getbyaddr(this.offset);\n    return rawType & _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.MACHINE_MASK ? 1 : 0;\n  }\n  get type() {\n    return this.heap.getbyaddr(this.offset) & _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.TYPE_MASK;\n  }\n  get op1() {\n    return this.heap.getbyaddr(this.offset + 1);\n  }\n  get op2() {\n    return this.heap.getbyaddr(this.offset + 2);\n  }\n  get op3() {\n    return this.heap.getbyaddr(this.offset + 3);\n  }\n}\nvar TableSlotState = /*#__PURE__*/function (TableSlotState) {\n  TableSlotState[TableSlotState[\"Allocated\"] = 0] = \"Allocated\";\n  TableSlotState[TableSlotState[\"Freed\"] = 1] = \"Freed\";\n  TableSlotState[TableSlotState[\"Purged\"] = 2] = \"Purged\";\n  TableSlotState[TableSlotState[\"Pointer\"] = 3] = \"Pointer\";\n  return TableSlotState;\n}(TableSlotState || {});\nconst PAGE_SIZE = 0x100000;\nclass RuntimeHeapImpl {\n  constructor(serializedHeap) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"heap\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"table\", void 0);\n    let {\n      buffer,\n      table\n    } = serializedHeap;\n    this.heap = new Int32Array(buffer);\n    this.table = table;\n  }\n\n  // It is illegal to close over this address, as compaction\n  // may move it. However, it is legal to use this address\n  // multiple times between compactions.\n  getaddr(handle) {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(this.table[handle]);\n  }\n  getbyaddr(address) {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.heap[address], 'Access memory out of bounds of the heap');\n  }\n  sizeof(handle) {\n    return sizeof(this.table);\n  }\n}\nfunction hydrateHeap(serializedHeap) {\n  return new RuntimeHeapImpl(serializedHeap);\n}\n\n/**\n * The Heap is responsible for dynamically allocating\n * memory in which we read/write the VM's instructions\n * from/to. When we malloc we pass out a VMHandle, which\n * is used as an indirect way of accessing the memory during\n * execution of the VM. Internally we track the different\n * regions of the memory in an int array known as the table.\n *\n * The table 32-bit aligned and has the following layout:\n *\n * | ... | hp (u32) |       info (u32)   | size (u32) |\n * | ... |  Handle  | Scope Size | State | Size       |\n * | ... | 32bits   | 30bits     | 2bits | 32bit      |\n *\n * With this information we effectively have the ability to\n * control when we want to free memory. That being said you\n * can not free during execution as raw address are only\n * valid during the execution. This means you cannot close\n * over them as you will have a bad memory access exception.\n */\nclass HeapImpl {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"offset\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"heap\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"handleTable\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"handleState\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"handle\", 0);\n    this.heap = new Int32Array(PAGE_SIZE);\n    this.handleTable = [];\n    this.handleState = [];\n  }\n  pushRaw(value) {\n    this.sizeCheck();\n    this.heap[this.offset++] = value;\n  }\n  pushOp(item) {\n    this.pushRaw(item);\n  }\n  pushMachine(item) {\n    this.pushRaw(item | _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.MACHINE_MASK);\n  }\n  sizeCheck() {\n    let {\n      heap\n    } = this;\n    if (this.offset === this.heap.length) {\n      let newHeap = new Int32Array(heap.length + PAGE_SIZE);\n      newHeap.set(heap, 0);\n      this.heap = newHeap;\n    }\n  }\n  getbyaddr(address) {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(this.heap[address]);\n  }\n  setbyaddr(address, value) {\n    this.heap[address] = value;\n  }\n  malloc() {\n    // push offset, info, size\n    this.handleTable.push(this.offset);\n    return this.handleTable.length - 1;\n  }\n  finishMalloc(handle) {}\n  size() {\n    return this.offset;\n  }\n\n  // It is illegal to close over this address, as compaction\n  // may move it. However, it is legal to use this address\n  // multiple times between compactions.\n  getaddr(handle) {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(this.handleTable[handle]);\n  }\n  sizeof(handle) {\n    return sizeof(this.handleTable);\n  }\n  free(handle) {\n    this.handleState[handle] = TableSlotState.Freed;\n  }\n\n  /**\n   * The heap uses the [Mark-Compact Algorithm](https://en.wikipedia.org/wiki/Mark-compact_algorithm) to shift\n   * reachable memory to the bottom of the heap and freeable\n   * memory to the top of the heap. When we have shifted all\n   * the reachable memory to the top of the heap, we move the\n   * offset to the next free position.\n   */\n  compact() {\n    let compactedSize = 0;\n    let {\n      handleTable,\n      handleState,\n      heap\n    } = this;\n    for (let i = 0; i < length; i++) {\n      let offset = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(handleTable[i]);\n      let size = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(handleTable[i + 1]) - (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(offset);\n      let state = handleState[i];\n      if (state === TableSlotState.Purged) {\n        continue;\n      } else if (state === TableSlotState.Freed) {\n        // transition to \"already freed\" aka \"purged\"\n        // a good improvement would be to reuse\n        // these slots\n        handleState[i] = TableSlotState.Purged;\n        compactedSize += size;\n      } else if (state === TableSlotState.Allocated) {\n        for (let j = offset; j <= i + size; j++) {\n          heap[j - compactedSize] = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(heap[j]);\n        }\n        handleTable[i] = offset - compactedSize;\n      } else if (state === TableSlotState.Pointer) {\n        handleTable[i] = offset - compactedSize;\n      }\n    }\n    this.offset = this.offset - compactedSize;\n  }\n  capture(offset = this.offset) {\n    // Only called in eager mode\n    let buffer = slice(this.heap, 0, offset).buffer;\n    return {\n      handle: this.handle,\n      table: this.handleTable,\n      buffer: buffer\n    };\n  }\n}\nclass RuntimeProgramImpl {\n  constructor(constants, heap) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_opcode\", void 0);\n    this.constants = constants;\n    this.heap = heap;\n    this._opcode = new RuntimeOpImpl(this.heap);\n  }\n  opcode(offset) {\n    this._opcode.offset = offset;\n    return this._opcode;\n  }\n}\nfunction slice(arr, start, end) {\n  if (arr.slice !== undefined) {\n    return arr.slice(start, end);\n  }\n  let ret = new Int32Array(end);\n  for (; start < end; start++) {\n    ret[start] = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(arr[start]);\n  }\n  return ret;\n}\nfunction sizeof(table, handle) {\n  {\n    return -1;\n  }\n}\nfunction artifacts() {\n  return {\n    constants: new ConstantsImpl(),\n    heap: new HeapImpl()\n  };\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/program/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FALSE_REFERENCE: () => (/* binding */ FALSE_REFERENCE),\n/* harmony export */   NULL_REFERENCE: () => (/* binding */ NULL_REFERENCE),\n/* harmony export */   REFERENCE: () => (/* binding */ REFERENCE),\n/* harmony export */   TRUE_REFERENCE: () => (/* binding */ TRUE_REFERENCE),\n/* harmony export */   UNDEFINED_REFERENCE: () => (/* binding */ UNDEFINED_REFERENCE),\n/* harmony export */   childRefFor: () => (/* binding */ childRefFor),\n/* harmony export */   childRefFromParts: () => (/* binding */ childRefFromParts),\n/* harmony export */   createComputeRef: () => (/* binding */ createComputeRef),\n/* harmony export */   createConstRef: () => (/* binding */ createConstRef),\n/* harmony export */   createDebugAliasRef: () => (/* binding */ createDebugAliasRef),\n/* harmony export */   createInvokableRef: () => (/* binding */ createInvokableRef),\n/* harmony export */   createIteratorItemRef: () => (/* binding */ createIteratorItemRef),\n/* harmony export */   createIteratorRef: () => (/* binding */ createIteratorRef),\n/* harmony export */   createPrimitiveRef: () => (/* binding */ createPrimitiveRef),\n/* harmony export */   createReadOnlyRef: () => (/* binding */ createReadOnlyRef),\n/* harmony export */   createUnboundRef: () => (/* binding */ createUnboundRef),\n/* harmony export */   isConstRef: () => (/* binding */ isConstRef),\n/* harmony export */   isInvokableRef: () => (/* binding */ isInvokableRef),\n/* harmony export */   isUpdatableRef: () => (/* binding */ isUpdatableRef),\n/* harmony export */   updateRef: () => (/* binding */ updateRef),\n/* harmony export */   valueForRef: () => (/* binding */ valueForRef)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _global_context_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../global-context/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/global-context/index.js\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js\");\n/* harmony import */ var _validator_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n\n\n\n\nconst REFERENCE = Symbol('REFERENCE');\nconst CONSTANT = 0;\nconst COMPUTE = 1;\nconst UNBOUND = 2;\nconst INVOKABLE = 3;\n\n//////////\n\nclass ReferenceImpl {\n  constructor(type) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, REFERENCE, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"tag\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastRevision\", _validator_index_js__WEBPACK_IMPORTED_MODULE_3__.INITIAL);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastValue\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"children\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"compute\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"update\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"debugLabel\", void 0);\n    this[REFERENCE] = type;\n  }\n}\nfunction createPrimitiveRef(value) {\n  const ref = new ReferenceImpl(UNBOUND);\n  ref.tag = _validator_index_js__WEBPACK_IMPORTED_MODULE_3__.CONSTANT_TAG;\n  ref.lastValue = value;\n  if (true) {\n    ref.debugLabel = String(value);\n  }\n  return ref;\n}\nconst UNDEFINED_REFERENCE = createPrimitiveRef(undefined);\nconst NULL_REFERENCE = createPrimitiveRef(null);\nconst TRUE_REFERENCE = createPrimitiveRef(true);\nconst FALSE_REFERENCE = createPrimitiveRef(false);\nfunction createConstRef(value, debugLabel) {\n  const ref = new ReferenceImpl(CONSTANT);\n  ref.lastValue = value;\n  ref.tag = _validator_index_js__WEBPACK_IMPORTED_MODULE_3__.CONSTANT_TAG;\n  if (true) {\n    ref.debugLabel = debugLabel;\n  }\n  return ref;\n}\nfunction createUnboundRef(value, debugLabel) {\n  const ref = new ReferenceImpl(UNBOUND);\n  ref.lastValue = value;\n  ref.tag = _validator_index_js__WEBPACK_IMPORTED_MODULE_3__.CONSTANT_TAG;\n  if (true) {\n    ref.debugLabel = debugLabel;\n  }\n  return ref;\n}\nfunction createComputeRef(compute, update = null, debugLabel = 'unknown') {\n  const ref = new ReferenceImpl(COMPUTE);\n  ref.compute = compute;\n  ref.update = update;\n  if (true) {\n    ref.debugLabel = `(result of a \\`${debugLabel}\\` helper)`;\n  }\n  return ref;\n}\nfunction createReadOnlyRef(ref) {\n  if (!isUpdatableRef(ref)) return ref;\n  return createComputeRef(() => valueForRef(ref), null, ref.debugLabel);\n}\nfunction isInvokableRef(ref) {\n  return ref[REFERENCE] === INVOKABLE;\n}\nfunction createInvokableRef(inner) {\n  const ref = createComputeRef(() => valueForRef(inner), value => updateRef(inner, value));\n  ref.debugLabel = inner.debugLabel;\n  ref[REFERENCE] = INVOKABLE;\n  return ref;\n}\nfunction isConstRef(_ref) {\n  const ref = _ref;\n  return ref.tag === _validator_index_js__WEBPACK_IMPORTED_MODULE_3__.CONSTANT_TAG;\n}\nfunction isUpdatableRef(_ref) {\n  const ref = _ref;\n  return ref.update !== null;\n}\nfunction valueForRef(_ref) {\n  const ref = _ref;\n  let {\n    tag\n  } = ref;\n  if (tag === _validator_index_js__WEBPACK_IMPORTED_MODULE_3__.CONSTANT_TAG) {\n    return ref.lastValue;\n  }\n  const {\n    lastRevision\n  } = ref;\n  let lastValue;\n  if (tag === null || !(0,_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.validateTag)(tag, lastRevision)) {\n    const {\n      compute\n    } = ref;\n    const newTag = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.track)(() => {\n      lastValue = ref.lastValue = compute();\n    },  true && ref.debugLabel);\n    tag = ref.tag = newTag;\n    ref.lastRevision = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.valueForTag)(newTag);\n  } else {\n    lastValue = ref.lastValue;\n  }\n  (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.consumeTag)(tag);\n  return lastValue;\n}\nfunction updateRef(_ref, value) {\n  const ref = _ref;\n  const update = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.expect)(ref.update, 'called update on a non-updatable reference');\n  update(value);\n}\nfunction childRefFor(_parentRef, path) {\n  const parentRef = _parentRef;\n  const type = parentRef[REFERENCE];\n  let children = parentRef.children;\n  let child;\n  if (children === null) {\n    children = parentRef.children = new Map();\n  } else {\n    child = children.get(path);\n    if (child !== undefined) {\n      return child;\n    }\n  }\n  if (type === UNBOUND) {\n    const parent = valueForRef(parentRef);\n    if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.isDict)(parent)) {\n      child = createUnboundRef(parent[path],  true && `${parentRef.debugLabel}.${path}`);\n    } else {\n      child = UNDEFINED_REFERENCE;\n    }\n  } else {\n    child = createComputeRef(() => {\n      const parent = valueForRef(parentRef);\n      if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.isDict)(parent)) {\n        return (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_1__.getProp)(parent, path);\n      }\n    }, val => {\n      const parent = valueForRef(parentRef);\n      if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.isDict)(parent)) {\n        return (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_1__.setProp)(parent, path, val);\n      }\n    });\n    if (true) {\n      child.debugLabel = `${parentRef.debugLabel}.${path}`;\n    }\n  }\n  children.set(path, child);\n  return child;\n}\nfunction childRefFromParts(root, parts) {\n  let reference = root;\n  for (const part of parts) {\n    reference = childRefFor(reference, part);\n  }\n  return reference;\n}\nlet createDebugAliasRef;\nif (true) {\n  createDebugAliasRef = (debugLabel, inner) => {\n    const update = isUpdatableRef(inner) ? value => updateRef(inner, value) : null;\n    const ref = createComputeRef(() => valueForRef(inner), update);\n    ref[REFERENCE] = inner[REFERENCE];\n    ref.debugLabel = debugLabel;\n    return ref;\n  };\n}\nconst NULL_IDENTITY = {};\nconst KEY = (_, index) => index;\nconst INDEX = (_, index) => String(index);\nconst IDENTITY = item => {\n  if (item === null) {\n    // Returning null as an identity will cause failures since the iterator\n    // can't tell that it's actually supposed to be null\n    return NULL_IDENTITY;\n  }\n  return item;\n};\nfunction keyForPath(path) {\n  if ( true && path[0] === '@') {\n    throw new Error(`invalid keypath: '${path}', valid keys: @index, @identity, or a path`);\n  }\n  return uniqueKeyFor(item => (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_1__.getPath)(item, path));\n}\nfunction makeKeyFor(key) {\n  switch (key) {\n    case '@key':\n      return uniqueKeyFor(KEY);\n    case '@index':\n      return uniqueKeyFor(INDEX);\n    case '@identity':\n      return uniqueKeyFor(IDENTITY);\n    default:\n      return keyForPath(key);\n  }\n}\nclass WeakMapWithPrimitives {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_weakMap\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_primitiveMap\", void 0);\n  }\n  get weakMap() {\n    if (this._weakMap === undefined) {\n      this._weakMap = new WeakMap();\n    }\n    return this._weakMap;\n  }\n  get primitiveMap() {\n    if (this._primitiveMap === undefined) {\n      this._primitiveMap = new Map();\n    }\n    return this._primitiveMap;\n  }\n  set(key, value) {\n    if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(key)) {\n      this.weakMap.set(key, value);\n    } else {\n      this.primitiveMap.set(key, value);\n    }\n  }\n  get(key) {\n    if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(key)) {\n      return this.weakMap.get(key);\n    } else {\n      return this.primitiveMap.get(key);\n    }\n  }\n}\nconst IDENTITIES = new WeakMapWithPrimitives();\nfunction identityForNthOccurence(value, count) {\n  let identities = IDENTITIES.get(value);\n  if (identities === undefined) {\n    identities = [];\n    IDENTITIES.set(value, identities);\n  }\n  let identity = identities[count];\n  if (identity === undefined) {\n    identity = {\n      value,\n      count\n    };\n    identities[count] = identity;\n  }\n  return identity;\n}\n\n/**\n * When iterating over a list, it's possible that an item with the same unique\n * key could be encountered twice:\n *\n * ```js\n * let arr = ['same', 'different', 'same', 'same'];\n * ```\n *\n * In general, we want to treat these items as _unique within the list_. To do\n * this, we track the occurences of every item as we iterate the list, and when\n * an item occurs more than once, we generate a new unique key just for that\n * item, and that occurence within the list. The next time we iterate the list,\n * and encounter an item for the nth time, we can get the _same_ key, and let\n * Glimmer know that it should reuse the DOM for the previous nth occurence.\n */\nfunction uniqueKeyFor(keyFor) {\n  let seen = new WeakMapWithPrimitives();\n  return (value, memo) => {\n    let key = keyFor(value, memo);\n    let count = seen.get(key) || 0;\n    seen.set(key, count + 1);\n    if (count === 0) {\n      return key;\n    }\n    return identityForNthOccurence(key, count);\n  };\n}\nfunction createIteratorRef(listRef, key) {\n  return createComputeRef(() => {\n    let iterable = valueForRef(listRef);\n    let keyFor = makeKeyFor(key);\n    if (Array.isArray(iterable)) {\n      return new ArrayIterator(iterable, keyFor);\n    }\n    let maybeIterator = (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_1__.toIterator)(iterable);\n    if (maybeIterator === null) {\n      return new ArrayIterator(_util_index_js__WEBPACK_IMPORTED_MODULE_2__.EMPTY_ARRAY, () => null);\n    }\n    return new IteratorWrapper(maybeIterator, keyFor);\n  });\n}\nfunction createIteratorItemRef(_value) {\n  let value = _value;\n  let tag = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.createTag)();\n  return createComputeRef(() => {\n    (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.consumeTag)(tag);\n    return value;\n  }, newValue => {\n    if (value !== newValue) {\n      value = newValue;\n      (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.dirtyTag)(tag);\n    }\n  });\n}\nclass IteratorWrapper {\n  constructor(inner, keyFor) {\n    this.inner = inner;\n    this.keyFor = keyFor;\n  }\n  isEmpty() {\n    return this.inner.isEmpty();\n  }\n  next() {\n    let nextValue = this.inner.next();\n    if (nextValue !== null) {\n      nextValue.key = this.keyFor(nextValue.value, nextValue.memo);\n    }\n    return nextValue;\n  }\n}\nclass ArrayIterator {\n  constructor(iterator, keyFor) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"current\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pos\", 0);\n    this.iterator = iterator;\n    this.keyFor = keyFor;\n    if (iterator.length === 0) {\n      this.current = {\n        kind: 'empty'\n      };\n    } else {\n      this.current = {\n        kind: 'first',\n        value: iterator[this.pos]\n      };\n    }\n  }\n  isEmpty() {\n    return this.current.kind === 'empty';\n  }\n  next() {\n    let value;\n    let current = this.current;\n    if (current.kind === 'first') {\n      this.current = {\n        kind: 'progress'\n      };\n      value = current.value;\n    } else if (this.pos >= this.iterator.length - 1) {\n      return null;\n    } else {\n      value = this.iterator[++this.pos];\n    }\n    let {\n      keyFor\n    } = this;\n    let key = keyFor(value, this.pos);\n    let memo = this.pos;\n    return {\n      key,\n      value,\n      memo\n    };\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/runtime/index.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/runtime/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConcreteBounds: () => (/* binding */ ConcreteBounds),\n/* harmony export */   CurriedValue: () => (/* binding */ CurriedValue),\n/* harmony export */   CursorImpl: () => (/* binding */ CursorImpl),\n/* harmony export */   DOMChanges: () => (/* binding */ DOMChanges),\n/* harmony export */   DOMTreeConstruction: () => (/* binding */ DOMTreeConstruction),\n/* harmony export */   DynamicAttribute: () => (/* binding */ DynamicAttribute),\n/* harmony export */   DynamicScopeImpl: () => (/* binding */ DynamicScopeImpl),\n/* harmony export */   EMPTY_ARGS: () => (/* binding */ EMPTY_ARGS),\n/* harmony export */   EMPTY_NAMED: () => (/* binding */ EMPTY_NAMED),\n/* harmony export */   EMPTY_POSITIONAL: () => (/* binding */ EMPTY_POSITIONAL),\n/* harmony export */   EnvironmentImpl: () => (/* binding */ EnvironmentImpl),\n/* harmony export */   IDOMChanges: () => (/* binding */ DOMChangesImpl),\n/* harmony export */   LowLevelVM: () => (/* binding */ VM),\n/* harmony export */   NewElementBuilder: () => (/* binding */ NewElementBuilder),\n/* harmony export */   PartialScopeImpl: () => (/* binding */ PartialScopeImpl),\n/* harmony export */   RehydrateBuilder: () => (/* binding */ RehydrateBuilder),\n/* harmony export */   RemoteLiveBlock: () => (/* binding */ RemoteLiveBlock),\n/* harmony export */   SERIALIZATION_FIRST_NODE_STRING: () => (/* binding */ SERIALIZATION_FIRST_NODE_STRING),\n/* harmony export */   SimpleDynamicAttribute: () => (/* binding */ SimpleDynamicAttribute),\n/* harmony export */   TEMPLATE_ONLY_COMPONENT_MANAGER: () => (/* binding */ TEMPLATE_ONLY_COMPONENT_MANAGER),\n/* harmony export */   TemplateOnlyComponent: () => (/* binding */ TemplateOnlyComponentDefinition),\n/* harmony export */   TemplateOnlyComponentManager: () => (/* binding */ TemplateOnlyComponentManager),\n/* harmony export */   UpdatableBlockImpl: () => (/* binding */ UpdatableBlockImpl),\n/* harmony export */   UpdatingVM: () => (/* binding */ UpdatingVM),\n/* harmony export */   array: () => (/* binding */ array),\n/* harmony export */   clear: () => (/* binding */ clear),\n/* harmony export */   clientBuilder: () => (/* binding */ clientBuilder),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   createCapturedArgs: () => (/* binding */ createCapturedArgs),\n/* harmony export */   curry: () => (/* binding */ curry),\n/* harmony export */   destroy: () => (/* reexport safe */ _destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.destroy),\n/* harmony export */   dynamicAttribute: () => (/* binding */ dynamicAttribute),\n/* harmony export */   fn: () => (/* binding */ fn),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   hash: () => (/* binding */ hash),\n/* harmony export */   inTransaction: () => (/* binding */ inTransaction),\n/* harmony export */   invokeHelper: () => (/* binding */ invokeHelper),\n/* harmony export */   isDestroyed: () => (/* reexport safe */ _destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.isDestroyed),\n/* harmony export */   isDestroying: () => (/* reexport safe */ _destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.isDestroying),\n/* harmony export */   isSerializationFirstNode: () => (/* binding */ isSerializationFirstNode),\n/* harmony export */   isWhitespace: () => (/* binding */ isWhitespace),\n/* harmony export */   normalizeProperty: () => (/* binding */ normalizeProperty),\n/* harmony export */   on: () => (/* binding */ on),\n/* harmony export */   registerDestructor: () => (/* reexport safe */ _destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.registerDestructor),\n/* harmony export */   rehydrationBuilder: () => (/* binding */ rehydrationBuilder),\n/* harmony export */   reifyArgs: () => (/* binding */ reifyArgs),\n/* harmony export */   reifyNamed: () => (/* binding */ reifyNamed),\n/* harmony export */   reifyPositional: () => (/* binding */ reifyPositional),\n/* harmony export */   renderComponent: () => (/* binding */ renderComponent),\n/* harmony export */   renderMain: () => (/* binding */ renderMain),\n/* harmony export */   renderSync: () => (/* binding */ renderSync),\n/* harmony export */   resetDebuggerCallback: () => (/* binding */ resetDebuggerCallback),\n/* harmony export */   runtimeContext: () => (/* binding */ runtimeContext),\n/* harmony export */   setDebuggerCallback: () => (/* binding */ setDebuggerCallback),\n/* harmony export */   templateOnlyComponent: () => (/* binding */ templateOnlyComponent)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _debug_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/debug/index.js\");\n/* harmony import */ var _reference_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../reference/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js\");\n/* harmony import */ var _vm_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../vm/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/vm/index.js\");\n/* harmony import */ var _destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _global_context_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../global-context/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/global-context/index.js\");\n/* harmony import */ var _manager_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _validator_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _program_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../program/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/program/index.js\");\n/* harmony import */ var _owner_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/owner/index.js\");\n\n\n\n\n\n\n\n\n\n\n\nclass DynamicScopeImpl {\n  constructor(bucket) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"bucket\", void 0);\n    if (bucket) {\n      this.bucket = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assign)({}, bucket);\n    } else {\n      this.bucket = {};\n    }\n  }\n  get(key) {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(this.bucket[key]);\n  }\n  set(key, reference) {\n    return this.bucket[key] = reference;\n  }\n  child() {\n    return new DynamicScopeImpl(this.bucket);\n  }\n}\nclass PartialScopeImpl {\n  static root(self, size = 0, owner) {\n    let refs = new Array(size + 1).fill(_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE);\n    return new PartialScopeImpl(refs, owner, null, null, null).init({\n      self\n    });\n  }\n  static sized(size = 0, owner) {\n    let refs = new Array(size + 1).fill(_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE);\n    return new PartialScopeImpl(refs, owner, null, null, null);\n  }\n  constructor(\n  // the 0th slot is `self`\n  slots, owner, callerScope,\n  // named arguments and blocks passed to a layout that uses eval\n  evalScope,\n  // locals in scope when the partial was invoked\n  partialMap) {\n    this.slots = slots;\n    this.owner = owner;\n    this.callerScope = callerScope;\n    this.evalScope = evalScope;\n    this.partialMap = partialMap;\n  }\n  init({\n    self\n  }) {\n    this.slots[0] = self;\n    return this;\n  }\n  getSelf() {\n    return this.get(0);\n  }\n  getSymbol(symbol) {\n    return this.get(symbol);\n  }\n  getBlock(symbol) {\n    let block = this.get(symbol);\n    return block === _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE ? null : block;\n  }\n  getEvalScope() {\n    return this.evalScope;\n  }\n  getPartialMap() {\n    return this.partialMap;\n  }\n  bind(symbol, value) {\n    this.set(symbol, value);\n  }\n  bindSelf(self) {\n    this.set(0, self);\n  }\n  bindSymbol(symbol, value) {\n    this.set(symbol, value);\n  }\n  bindBlock(symbol, value) {\n    this.set(symbol, value);\n  }\n  bindEvalScope(map) {\n    this.evalScope = map;\n  }\n  bindPartialMap(map) {\n    this.partialMap = map;\n  }\n  bindCallerScope(scope) {\n    this.callerScope = scope;\n  }\n  getCallerScope() {\n    return this.callerScope;\n  }\n  child() {\n    return new PartialScopeImpl(this.slots.slice(), this.owner, this.callerScope, this.evalScope, this.partialMap);\n  }\n  get(index) {\n    if (index >= this.slots.length) {\n      throw new RangeError(`BUG: cannot get $${index} from scope; length=${this.slots.length}`);\n    }\n    return this.slots[index];\n  }\n  set(index, value) {\n    if (index >= this.slots.length) {\n      throw new RangeError(`BUG: cannot get $${index} from scope; length=${this.slots.length}`);\n    }\n    this.slots[index] = value;\n  }\n}\n\n// These symbols represent \"friend\" properties that are used inside of\n// the VM in other classes, but are not intended to be a part of\n// Glimmer's API.\n\nconst INNER_VM = Symbol('INNER_VM');\nconst DESTROYABLE_STACK = Symbol('DESTROYABLE_STACK');\nconst STACKS = Symbol('STACKS');\nconst REGISTERS = Symbol('REGISTERS');\nconst HEAP = Symbol('HEAP');\nconst CONSTANTS = Symbol('CONSTANTS');\nconst ARGS$1 = Symbol('ARGS');\nclass CursorImpl {\n  constructor(element, nextSibling) {\n    this.element = element;\n    this.nextSibling = nextSibling;\n  }\n}\nclass ConcreteBounds {\n  constructor(parentNode, first, last) {\n    this.parentNode = parentNode;\n    this.first = first;\n    this.last = last;\n  }\n  parentElement() {\n    return this.parentNode;\n  }\n  firstNode() {\n    return this.first;\n  }\n  lastNode() {\n    return this.last;\n  }\n}\nfunction move(bounds, reference) {\n  let parent = bounds.parentElement();\n  let first = bounds.firstNode();\n  let last = bounds.lastNode();\n  let current = first;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let next = current.nextSibling;\n    parent.insertBefore(current, reference);\n    if (current === last) {\n      return next;\n    }\n    current = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(next, 'invalid bounds');\n  }\n}\nfunction clear(bounds) {\n  let parent = bounds.parentElement();\n  let first = bounds.firstNode();\n  let last = bounds.lastNode();\n  let current = first;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let next = current.nextSibling;\n    parent.removeChild(current);\n    if (current === last) {\n      return next;\n    }\n    current = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(next, 'invalid bounds');\n  }\n}\nfunction normalizeStringValue(value) {\n  if (isEmpty$2(value)) {\n    return '';\n  }\n  return String(value);\n}\nfunction shouldCoerce(value) {\n  return isString(value) || isEmpty$2(value) || typeof value === 'boolean' || typeof value === 'number';\n}\nfunction isEmpty$2(value) {\n  return value === null || value === undefined || typeof value.toString !== 'function';\n}\nfunction isSafeString(value) {\n  return typeof value === 'object' && value !== null && typeof value.toHTML === 'function';\n}\nfunction isNode(value) {\n  return typeof value === 'object' && value !== null && typeof value.nodeType === 'number';\n}\nfunction isFragment(value) {\n  return isNode(value) && value.nodeType === 11;\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\n/*\n * @method normalizeProperty\n * @param element {HTMLElement}\n * @param slotName {String}\n * @returns {Object} { name, type }\n */\nfunction normalizeProperty(element, slotName) {\n  let type, normalized;\n  if (slotName in element) {\n    normalized = slotName;\n    type = 'prop';\n  } else {\n    let lower = slotName.toLowerCase();\n    if (lower in element) {\n      type = 'prop';\n      normalized = lower;\n    } else {\n      type = 'attr';\n      normalized = slotName;\n    }\n  }\n  if (type === 'prop' && (normalized.toLowerCase() === 'style' || preferAttr(element.tagName, normalized))) {\n    type = 'attr';\n  }\n  return {\n    normalized,\n    type\n  };\n}\n\n// properties that MUST be set as attributes, due to:\n// * browser bug\n// * strange spec outlier\nconst ATTR_OVERRIDES = {\n  INPUT: {\n    form: true,\n    // Chrome 46.0.2464.0: 'autocorrect' in document.createElement('input') === false\n    // Safari 8.0.7: 'autocorrect' in document.createElement('input') === false\n    // Mobile Safari (iOS 8.4 simulator): 'autocorrect' in document.createElement('input') === true\n    autocorrect: true,\n    // Chrome 54.0.2840.98: 'list' in document.createElement('input') === true\n    // Safari 9.1.3: 'list' in document.createElement('input') === false\n    list: true\n  },\n  // element.form is actually a legitimate readOnly property, that is to be\n  // mutated, but must be mutated by setAttribute...\n  SELECT: {\n    form: true\n  },\n  OPTION: {\n    form: true\n  },\n  TEXTAREA: {\n    form: true\n  },\n  LABEL: {\n    form: true\n  },\n  FIELDSET: {\n    form: true\n  },\n  LEGEND: {\n    form: true\n  },\n  OBJECT: {\n    form: true\n  },\n  OUTPUT: {\n    form: true\n  },\n  BUTTON: {\n    form: true\n  }\n};\nfunction preferAttr(tagName, propName) {\n  let tag = ATTR_OVERRIDES[tagName.toUpperCase()];\n  return tag && tag[propName.toLowerCase()] || false;\n}\nconst badProtocols = ['javascript:', 'vbscript:'];\nconst badTags = ['A', 'BODY', 'LINK', 'IMG', 'IFRAME', 'BASE', 'FORM'];\nconst badTagsForDataURI = ['EMBED'];\nconst badAttributes = ['href', 'src', 'background', 'action'];\nconst badAttributesForDataURI = ['src'];\nfunction has(array, item) {\n  return array.indexOf(item) !== -1;\n}\nfunction checkURI(tagName, attribute) {\n  return (tagName === null || has(badTags, tagName)) && has(badAttributes, attribute);\n}\nfunction checkDataURI(tagName, attribute) {\n  if (tagName === null) return false;\n  return has(badTagsForDataURI, tagName) && has(badAttributesForDataURI, attribute);\n}\nfunction requiresSanitization(tagName, attribute) {\n  return checkURI(tagName, attribute) || checkDataURI(tagName, attribute);\n}\nfunction findProtocolForURL() {\n  if (typeof URL === 'object' && URL !== null &&\n  // this is super annoying, TS thinks that URL **must** be a function so `URL.parse` check\n  // thinks it is `never` without this `as unknown as any`\n  typeof URL.parse === 'function') {\n    // In Ember-land the `fastboot` package sets the `URL` global to `require('url')`\n    // ultimately, this should be changed (so that we can either rely on the natural `URL` global\n    // that exists) but for now we have to detect the specific `FastBoot` case first\n    //\n    // a future version of `fastboot` will detect if this legacy URL setup is required (by\n    // inspecting Ember version) and if new enough, it will avoid shadowing the `URL` global\n    // constructor with `require('url')`.\n    let nodeURL = URL;\n    return url => {\n      let protocol = null;\n      if (typeof url === 'string') {\n        protocol = nodeURL.parse(url).protocol;\n      }\n      return protocol === null ? ':' : protocol;\n    };\n  } else if (typeof URL === 'function') {\n    return _url => {\n      try {\n        let url = new URL(_url);\n        return url.protocol;\n      } catch (error) {\n        // any non-fully qualified url string will trigger an error (because there is no\n        // baseURI that we can provide; in that case we **know** that the protocol is\n        // \"safe\" because it isn't specifically one of the `badProtocols` listed above\n        // (and those protocols can never be the default baseURI)\n        return ':';\n      }\n    };\n  } else {\n    throw new Error(`@glimmer/runtime needs a valid \"globalThis.URL\"`);\n  }\n}\nlet _protocolForUrlImplementation;\nfunction protocolForUrl(url) {\n  if (!_protocolForUrlImplementation) {\n    _protocolForUrlImplementation = findProtocolForURL();\n  }\n  return _protocolForUrlImplementation(url);\n}\nfunction sanitizeAttributeValue(element, attribute, value) {\n  let tagName = null;\n  if (value === null || value === undefined) {\n    return value;\n  }\n  if (isSafeString(value)) {\n    return value.toHTML();\n  }\n  if (!element) {\n    tagName = null;\n  } else {\n    tagName = element.tagName.toUpperCase();\n  }\n  let str = normalizeStringValue(value);\n  if (checkURI(tagName, attribute)) {\n    let protocol = protocolForUrl(str);\n    if (has(badProtocols, protocol)) {\n      return `unsafe:${str}`;\n    }\n  }\n  if (checkDataURI(tagName, attribute)) {\n    return `unsafe:${str}`;\n  }\n  return str;\n}\nfunction dynamicAttribute(element, attr, namespace, isTrusting = false) {\n  const {\n    tagName,\n    namespaceURI\n  } = element;\n  const attribute = {\n    element,\n    name: attr,\n    namespace\n  };\n  if ( true && attr === 'style' && !isTrusting) {\n    return new DebugStyleAttributeManager(attribute);\n  }\n  if (namespaceURI === _util_index_js__WEBPACK_IMPORTED_MODULE_3__.NS_SVG) {\n    return buildDynamicAttribute(tagName, attr, attribute);\n  }\n  const {\n    type,\n    normalized\n  } = normalizeProperty(element, attr);\n  if (type === 'attr') {\n    return buildDynamicAttribute(tagName, normalized, attribute);\n  } else {\n    return buildDynamicProperty(tagName, normalized, attribute);\n  }\n}\nfunction buildDynamicAttribute(tagName, name, attribute) {\n  if (requiresSanitization(tagName, name)) {\n    return new SafeDynamicAttribute(attribute);\n  } else {\n    return new SimpleDynamicAttribute(attribute);\n  }\n}\nfunction buildDynamicProperty(tagName, name, attribute) {\n  if (requiresSanitization(tagName, name)) {\n    return new SafeDynamicProperty(name, attribute);\n  }\n  if (isUserInputValue(tagName, name)) {\n    return new InputValueDynamicAttribute(name, attribute);\n  }\n  if (isOptionSelected(tagName, name)) {\n    return new OptionSelectedDynamicAttribute(name, attribute);\n  }\n  return new DefaultDynamicProperty(name, attribute);\n}\nclass DynamicAttribute {\n  constructor(attribute) {\n    this.attribute = attribute;\n  }\n}\nclass SimpleDynamicAttribute extends DynamicAttribute {\n  set(dom, value, _env) {\n    const normalizedValue = normalizeValue(value);\n    if (normalizedValue !== null) {\n      const {\n        name,\n        namespace\n      } = this.attribute;\n      dom.__setAttribute(name, normalizedValue, namespace);\n    }\n  }\n  update(value, _env) {\n    const normalizedValue = normalizeValue(value);\n    const {\n      element,\n      name\n    } = this.attribute;\n    if (normalizedValue === null) {\n      element.removeAttribute(name);\n    } else {\n      element.setAttribute(name, normalizedValue);\n    }\n  }\n}\nclass DefaultDynamicProperty extends DynamicAttribute {\n  constructor(normalizedName, attribute) {\n    super(attribute);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"value\", void 0);\n    this.normalizedName = normalizedName;\n  }\n  set(dom, value, _env) {\n    if (value !== null && value !== undefined) {\n      this.value = value;\n      dom.__setProperty(this.normalizedName, value);\n    }\n  }\n  update(value, _env) {\n    const {\n      element\n    } = this.attribute;\n    if (this.value !== value) {\n      element[this.normalizedName] = this.value = value;\n      if (value === null || value === undefined) {\n        this.removeAttribute();\n      }\n    }\n  }\n  removeAttribute() {\n    // TODO this sucks but to preserve properties first and to meet current\n    // semantics we must do this.\n    const {\n      element,\n      namespace\n    } = this.attribute;\n    if (namespace) {\n      element.removeAttributeNS(namespace, this.normalizedName);\n    } else {\n      element.removeAttribute(this.normalizedName);\n    }\n  }\n}\nclass SafeDynamicProperty extends DefaultDynamicProperty {\n  set(dom, value, env) {\n    const {\n      element,\n      name\n    } = this.attribute;\n    const sanitized = sanitizeAttributeValue(element, name, value);\n    super.set(dom, sanitized, env);\n  }\n  update(value, env) {\n    const {\n      element,\n      name\n    } = this.attribute;\n    const sanitized = sanitizeAttributeValue(element, name, value);\n    super.update(sanitized, env);\n  }\n}\nclass SafeDynamicAttribute extends SimpleDynamicAttribute {\n  set(dom, value, env) {\n    const {\n      element,\n      name\n    } = this.attribute;\n    const sanitized = sanitizeAttributeValue(element, name, value);\n    super.set(dom, sanitized, env);\n  }\n  update(value, env) {\n    const {\n      element,\n      name\n    } = this.attribute;\n    const sanitized = sanitizeAttributeValue(element, name, value);\n    super.update(sanitized, env);\n  }\n}\nclass InputValueDynamicAttribute extends DefaultDynamicProperty {\n  set(dom, value) {\n    dom.__setProperty('value', normalizeStringValue(value));\n  }\n  update(value) {\n    const input = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.castToBrowser)(this.attribute.element, ['input', 'textarea']);\n    const currentValue = input.value;\n    const normalizedValue = normalizeStringValue(value);\n    if (currentValue !== normalizedValue) {\n      input.value = normalizedValue;\n    }\n  }\n}\nclass OptionSelectedDynamicAttribute extends DefaultDynamicProperty {\n  set(dom, value) {\n    if (value !== null && value !== undefined && value !== false) {\n      dom.__setProperty('selected', true);\n    }\n  }\n  update(value) {\n    const option = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.castToBrowser)(this.attribute.element, 'option');\n    if (value) {\n      option.selected = true;\n    } else {\n      option.selected = false;\n    }\n  }\n}\nfunction isOptionSelected(tagName, attribute) {\n  return tagName === 'OPTION' && attribute === 'selected';\n}\nfunction isUserInputValue(tagName, attribute) {\n  return (tagName === 'INPUT' || tagName === 'TEXTAREA') && attribute === 'value';\n}\nfunction normalizeValue(value) {\n  if (value === false || value === undefined || value === null || typeof value.toString === 'undefined') {\n    return null;\n  }\n  if (value === true) {\n    return '';\n  }\n  // onclick function etc in SSR\n  if (typeof value === 'function') {\n    return null;\n  }\n  return String(value);\n}\nlet DebugStyleAttributeManager;\nif (true) {\n  DebugStyleAttributeManager = class extends SimpleDynamicAttribute {\n    set(dom, value, env) {\n      (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_6__.warnIfStyleNotTrusted)(value);\n      super.set(dom, value, env);\n    }\n    update(value, env) {\n      (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_6__.warnIfStyleNotTrusted)(value);\n      super.update(value, env);\n    }\n  };\n}\nclass First {\n  constructor(node) {\n    this.node = node;\n  }\n  firstNode() {\n    return this.node;\n  }\n}\nclass Last {\n  constructor(node) {\n    this.node = node;\n  }\n  lastNode() {\n    return this.node;\n  }\n}\nconst CURSOR_STACK = Symbol('CURSOR_STACK');\nclass NewElementBuilder {\n  static forInitialRender(env, cursor) {\n    return new this(env, cursor.element, cursor.nextSibling).initialize();\n  }\n  static resume(env, block) {\n    let parentNode = block.parentElement();\n    let nextSibling = block.reset(env);\n    let stack = new this(env, parentNode, nextSibling).initialize();\n    stack.pushLiveBlock(block);\n    return stack;\n  }\n  constructor(env, parentNode, nextSibling) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dom\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"updateOperations\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"constructing\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"operations\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"env\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, CURSOR_STACK, new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"modifierStack\", new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"blockStack\", new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n    this.pushElement(parentNode, nextSibling);\n    this.env = env;\n    this.dom = env.getAppendOperations();\n    this.updateOperations = env.getDOM();\n  }\n  initialize() {\n    this.pushSimpleBlock();\n    return this;\n  }\n  debugBlocks() {\n    return this.blockStack.toArray();\n  }\n  get element() {\n    return this[CURSOR_STACK].current.element;\n  }\n  get nextSibling() {\n    return this[CURSOR_STACK].current.nextSibling;\n  }\n  get hasBlocks() {\n    return this.blockStack.size > 0;\n  }\n  block() {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.blockStack.current, 'Expected a current live block');\n  }\n  popElement() {\n    this[CURSOR_STACK].pop();\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this[CURSOR_STACK].current, \"can't pop past the last element\");\n  }\n  pushSimpleBlock() {\n    return this.pushLiveBlock(new SimpleLiveBlock(this.element));\n  }\n  pushUpdatableBlock() {\n    return this.pushLiveBlock(new UpdatableBlockImpl(this.element));\n  }\n  pushBlockList(list) {\n    return this.pushLiveBlock(new LiveBlockList(this.element, list));\n  }\n  pushLiveBlock(block, isRemote = false) {\n    let current = this.blockStack.current;\n    if (current !== null) {\n      if (!isRemote) {\n        current.didAppendBounds(block);\n      }\n    }\n    this.__openBlock();\n    this.blockStack.push(block);\n    return block;\n  }\n  popBlock() {\n    this.block().finalize(this);\n    this.__closeBlock();\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.blockStack.pop(), 'Expected popBlock to return a block');\n  }\n  __openBlock() {}\n  __closeBlock() {}\n\n  // todo return seems unused\n  openElement(tag) {\n    let element = this.__openElement(tag);\n    this.constructing = element;\n    return element;\n  }\n  __openElement(tag) {\n    return this.dom.createElement(tag, this.element);\n  }\n  flushElement(modifiers) {\n    let parent = this.element;\n    let element = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.constructing, `flushElement should only be called when constructing an element`);\n    this.__flushElement(parent, element);\n    this.constructing = null;\n    this.operations = null;\n    this.pushModifiers(modifiers);\n    this.pushElement(element, null);\n    this.didOpenElement(element);\n  }\n  __flushElement(parent, constructing) {\n    this.dom.insertBefore(parent, constructing, this.nextSibling);\n  }\n  closeElement() {\n    this.willCloseElement();\n    this.popElement();\n    return this.popModifiers();\n  }\n  pushRemoteElement(element, guid, insertBefore) {\n    return this.__pushRemoteElement(element, guid, insertBefore);\n  }\n  __pushRemoteElement(element, _guid, insertBefore) {\n    this.pushElement(element, insertBefore);\n    if (insertBefore === undefined) {\n      while (element.lastChild) {\n        element.removeChild(element.lastChild);\n      }\n    }\n    let block = new RemoteLiveBlock(element);\n    return this.pushLiveBlock(block, true);\n  }\n  popRemoteElement() {\n    const block = this.popBlock();\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(block instanceof RemoteLiveBlock, '[BUG] expecting a RemoteLiveBlock');\n    this.popElement();\n    return block;\n  }\n  pushElement(element, nextSibling = null) {\n    this[CURSOR_STACK].push(new CursorImpl(element, nextSibling));\n  }\n  pushModifiers(modifiers) {\n    this.modifierStack.push(modifiers);\n  }\n  popModifiers() {\n    return this.modifierStack.pop();\n  }\n  didAppendBounds(bounds) {\n    this.block().didAppendBounds(bounds);\n    return bounds;\n  }\n  didAppendNode(node) {\n    this.block().didAppendNode(node);\n    return node;\n  }\n  didOpenElement(element) {\n    this.block().openElement(element);\n    return element;\n  }\n  willCloseElement() {\n    this.block().closeElement();\n  }\n  appendText(string) {\n    return this.didAppendNode(this.__appendText(string));\n  }\n  __appendText(text) {\n    let {\n      dom,\n      element,\n      nextSibling\n    } = this;\n    let node = dom.createTextNode(text);\n    dom.insertBefore(element, node, nextSibling);\n    return node;\n  }\n  __appendNode(node) {\n    this.dom.insertBefore(this.element, node, this.nextSibling);\n    return node;\n  }\n  __appendFragment(fragment) {\n    let first = fragment.firstChild;\n    if (first) {\n      let ret = new ConcreteBounds(this.element, first, fragment.lastChild);\n      this.dom.insertBefore(this.element, fragment, this.nextSibling);\n      return ret;\n    } else {\n      const comment = this.__appendComment('');\n      return new ConcreteBounds(this.element, comment, comment);\n    }\n  }\n  __appendHTML(html) {\n    return this.dom.insertHTMLBefore(this.element, this.nextSibling, html);\n  }\n  appendDynamicHTML(value) {\n    let bounds = this.trustedContent(value);\n    this.didAppendBounds(bounds);\n  }\n  appendDynamicText(value) {\n    let node = this.untrustedContent(value);\n    this.didAppendNode(node);\n    return node;\n  }\n  appendDynamicFragment(value) {\n    let bounds = this.__appendFragment(value);\n    this.didAppendBounds(bounds);\n  }\n  appendDynamicNode(value) {\n    let node = this.__appendNode(value);\n    let bounds = new ConcreteBounds(this.element, node, node);\n    this.didAppendBounds(bounds);\n  }\n  trustedContent(value) {\n    return this.__appendHTML(value);\n  }\n  untrustedContent(value) {\n    return this.__appendText(value);\n  }\n  appendComment(string) {\n    return this.didAppendNode(this.__appendComment(string));\n  }\n  __appendComment(string) {\n    let {\n      dom,\n      element,\n      nextSibling\n    } = this;\n    let node = dom.createComment(string);\n    dom.insertBefore(element, node, nextSibling);\n    return node;\n  }\n  __setAttribute(name, value, namespace) {\n    this.dom.setAttribute(this.constructing, name, value, namespace);\n  }\n  __setProperty(name, value) {\n    this.constructing[name] = value;\n  }\n  setStaticAttribute(name, value, namespace) {\n    this.__setAttribute(name, value, namespace);\n  }\n  setDynamicAttribute(name, value, trusting, namespace) {\n    let element = this.constructing;\n    let attribute = dynamicAttribute(element, name, namespace, trusting);\n    attribute.set(this, value, this.env);\n    return attribute;\n  }\n}\nclass SimpleLiveBlock {\n  constructor(parent) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"first\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"last\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"nesting\", 0);\n    this.parent = parent;\n  }\n  parentElement() {\n    return this.parent;\n  }\n  firstNode() {\n    let first = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.first, 'cannot call `firstNode()` while `SimpleLiveBlock` is still initializing');\n    return first.firstNode();\n  }\n  lastNode() {\n    let last = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.last, 'cannot call `lastNode()` while `SimpleLiveBlock` is still initializing');\n    return last.lastNode();\n  }\n  openElement(element) {\n    this.didAppendNode(element);\n    this.nesting++;\n  }\n  closeElement() {\n    this.nesting--;\n  }\n  didAppendNode(node) {\n    if (this.nesting !== 0) return;\n    if (!this.first) {\n      this.first = new First(node);\n    }\n    this.last = new Last(node);\n  }\n  didAppendBounds(bounds) {\n    if (this.nesting !== 0) return;\n    if (!this.first) {\n      this.first = bounds;\n    }\n    this.last = bounds;\n  }\n  finalize(stack) {\n    if (this.first === null) {\n      stack.appendComment('');\n    }\n  }\n}\nclass RemoteLiveBlock extends SimpleLiveBlock {\n  constructor(parent) {\n    super(parent);\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.registerDestructor)(this, () => {\n      // In general, you only need to clear the root of a hierarchy, and should never\n      // need to clear any child nodes. This is an important constraint that gives us\n      // a strong guarantee that clearing a subtree is a single DOM operation.\n      //\n      // Because remote blocks are not normally physically nested inside of the tree\n      // that they are logically nested inside, we manually clear remote blocks when\n      // a logical parent is cleared.\n      //\n      // HOWEVER, it is currently possible for a remote block to be physically nested\n      // inside of the block it is logically contained inside of. This happens when\n      // the remote block is appended to the end of the application's entire element.\n      //\n      // The problem with that scenario is that Glimmer believes that it owns more of\n      // the DOM than it actually does. The code is attempting to write past the end\n      // of the Glimmer-managed root, but Glimmer isn't aware of that.\n      //\n      // The correct solution to that problem is for Glimmer to be aware of the end\n      // of the bounds that it owns, and once we make that change, this check could\n      // be removed.\n      //\n      // For now, a more targeted fix is to check whether the node was already removed\n      // and avoid clearing the node if it was. In most cases this shouldn't happen,\n      // so this might hide bugs where the code clears nested nodes unnecessarily,\n      // so we should eventually try to do the correct fix.\n      if (this.parentElement() === this.firstNode().parentNode) {\n        clear(this);\n      }\n    });\n  }\n}\nclass UpdatableBlockImpl extends SimpleLiveBlock {\n  reset() {\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.destroy)(this);\n    let nextSibling = clear(this);\n    this.first = null;\n    this.last = null;\n    this.nesting = 0;\n    return nextSibling;\n  }\n}\n\n// FIXME: All the noops in here indicate a modelling problem\nclass LiveBlockList {\n  constructor(parent, boundList) {\n    this.parent = parent;\n    this.boundList = boundList;\n    this.parent = parent;\n    this.boundList = boundList;\n  }\n  parentElement() {\n    return this.parent;\n  }\n  firstNode() {\n    let head = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.boundList[0], 'cannot call `firstNode()` while `LiveBlockList` is still initializing');\n    return head.firstNode();\n  }\n  lastNode() {\n    let boundList = this.boundList;\n    let tail = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(boundList[boundList.length - 1], 'cannot call `lastNode()` while `LiveBlockList` is still initializing');\n    return tail.lastNode();\n  }\n  openElement(_element) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(false, 'Cannot openElement directly inside a block list');\n  }\n  closeElement() {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(false, 'Cannot closeElement directly inside a block list');\n  }\n  didAppendNode(_node) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(false, 'Cannot create a new node directly inside a block list');\n  }\n  didAppendBounds(_bounds) {}\n  finalize(_stack) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(this.boundList.length > 0, 'boundsList cannot be empty');\n  }\n}\nfunction clientBuilder(env, cursor) {\n  return NewElementBuilder.forInitialRender(env, cursor);\n}\nclass AppendOpcodes {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"evaluateOpcode\", new Array(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Size).fill(null));\n  }\n  add(name, evaluate, kind = 'syscall') {\n    this.evaluateOpcode[name] = {\n      syscall: kind !== 'machine',\n      evaluate\n    };\n  }\n  debugBefore(vm, opcode) {\n    let params = undefined;\n    let opName = undefined;\n    let sp;\n    (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.recordStackSize)(vm.fetchValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp));\n    return {\n      sp: sp,\n      pc: vm.fetchValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$pc),\n      name: opName,\n      params,\n      type: opcode.type,\n      isMachine: opcode.isMachine,\n      size: opcode.size,\n      state: undefined\n    };\n  }\n  debugAfter(vm, pre) {}\n  evaluate(vm, opcode, type) {\n    let operation = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(this.evaluateOpcode[type]);\n    if (operation.syscall) {\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(!opcode.isMachine, `BUG: Mismatch between operation.syscall (${operation.syscall}) and opcode.isMachine (${opcode.isMachine}) for ${opcode.type}`);\n      operation.evaluate(vm, opcode);\n    } else {\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(opcode.isMachine, `BUG: Mismatch between operation.syscall (${operation.syscall}) and opcode.isMachine (${opcode.isMachine}) for ${opcode.type}`);\n      operation.evaluate(vm[INNER_VM], opcode);\n    }\n  }\n}\nconst APPEND_OPCODES = new AppendOpcodes();\nconst TYPE = Symbol('TYPE');\nconst INNER = Symbol('INNER');\nconst OWNER = Symbol('OWNER');\nconst ARGS = Symbol('ARGS');\nconst RESOLVED = Symbol('RESOLVED');\nconst CURRIED_VALUES = new WeakSet();\nfunction isCurriedValue(value) {\n  return CURRIED_VALUES.has(value);\n}\nfunction isCurriedType(value, type) {\n  return isCurriedValue(value) && value[TYPE] === type;\n}\nclass CurriedValue {\n  /** @internal */\n  constructor(type, inner, owner, args, resolved = false) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, TYPE, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, INNER, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, OWNER, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ARGS, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, RESOLVED, void 0);\n    CURRIED_VALUES.add(this);\n    this[TYPE] = type;\n    this[INNER] = inner;\n    this[OWNER] = owner;\n    this[ARGS] = args;\n    this[RESOLVED] = resolved;\n  }\n}\nfunction resolveCurriedValue(curriedValue) {\n  let currentWrapper = curriedValue;\n  let positional;\n  let named;\n  let definition, owner, resolved;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let {\n      [ARGS]: curriedArgs,\n      [INNER]: inner\n    } = currentWrapper;\n    if (curriedArgs !== null) {\n      let {\n        named: curriedNamed,\n        positional: curriedPositional\n      } = curriedArgs;\n      if (curriedPositional.length > 0) {\n        positional = positional === undefined ? curriedPositional : curriedPositional.concat(positional);\n      }\n      if (named === undefined) {\n        named = [];\n      }\n      named.unshift(curriedNamed);\n    }\n    if (!isCurriedValue(inner)) {\n      // Save off the owner that this helper was curried with. Later on,\n      // we'll fetch the value of this register and set it as the owner on the\n      // new root scope.\n      definition = inner;\n      owner = currentWrapper[OWNER];\n      resolved = currentWrapper[RESOLVED];\n      break;\n    }\n    currentWrapper = inner;\n  }\n  return {\n    definition,\n    owner,\n    resolved,\n    positional,\n    named\n  };\n}\nfunction curry(type, spec, owner, args, resolved = false) {\n  return new CurriedValue(type, spec, owner, args, resolved);\n}\nfunction createCurryRef(type, inner, owner, args, resolver, isStrict) {\n  let lastValue, curriedDefinition;\n  return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    let value = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(inner);\n    if (value === lastValue) {\n      return curriedDefinition;\n    }\n    if (isCurriedType(value, type)) {\n      curriedDefinition = args ? curry(type, value, owner, args) : args;\n    } else if (type === _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.CurriedType.Component && typeof value === 'string' && value) {\n      // Only components should enter this path, as helpers and modifiers do not\n      // support string based resolution\n\n      if (true) {\n        if (isStrict) {\n          throw new Error(`Attempted to resolve a dynamic component with a string definition, \\`${value}\\` in a strict mode template. In strict mode, using strings to resolve component definitions is prohibited. You can instead import the component definition and use it directly.`);\n        }\n        let resolvedDefinition = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(resolver, 'BUG: expected resolver for curried component definitions').lookupComponent(value, owner);\n        if (!resolvedDefinition) {\n          throw new Error(`Attempted to resolve \\`${value}\\`, which was expected to be a component, but nothing was found.`);\n        }\n      }\n      curriedDefinition = curry(type, value, owner, args);\n    } else if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.isObject)(value)) {\n      curriedDefinition = curry(type, value, owner, args);\n    } else {\n      curriedDefinition = null;\n    }\n    lastValue = value;\n    return curriedDefinition;\n  });\n}\n\n/** @internal */\nfunction hasCustomDebugRenderTreeLifecycle(manager) {\n  return 'getDebugCustomRenderTree' in manager;\n}\nfunction resolveComponent(resolver, constants, name, owner) {\n  let definition = resolver.lookupComponent(name, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(owner, 'BUG: expected owner when looking up component'));\n  if ( true && !definition) {\n    throw new Error(`Attempted to resolve \\`${name}\\`, which was expected to be a component, but nothing was found.`);\n  }\n  return constants.resolvedComponent(definition, name);\n}\nfunction createClassListRef(list) {\n  return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    let ret = [];\n    for (const ref of list) {\n      let value = normalizeStringValue(typeof ref === 'string' ? ref : (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(ref));\n      if (value) ret.push(value);\n    }\n    return ret.length === 0 ? null : ret.join(' ');\n  });\n}\nfunction stackAssert(name, top) {\n  return `Expected top of stack to be ${name}, was ${String(top)}`;\n}\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.ChildScope, vm => vm.pushChildScope());\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PopScope, vm => vm.popScope());\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PushDynamicScope, vm => vm.pushDynamicScope());\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PopDynamicScope, vm => vm.popDynamicScope());\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Constant, (vm, {\n  op1: other\n}) => {\n  vm.stack.push(vm[CONSTANTS].getValue((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.decodeHandle)(other)));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.ConstantReference, (vm, {\n  op1: other\n}) => {\n  vm.stack.push((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createConstRef)(vm[CONSTANTS].getValue((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.decodeHandle)(other)), false));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Primitive, (vm, {\n  op1: primitive\n}) => {\n  let stack = vm.stack;\n  if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.isHandle)(primitive)) {\n    // it is a handle which does not already exist on the stack\n    let value = vm[CONSTANTS].getValue((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.decodeHandle)(primitive));\n    stack.push(value);\n  } else {\n    // is already an encoded immediate or primitive handle\n    stack.push((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.decodeImmediate)(primitive));\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PrimitiveReference, vm => {\n  let stack = vm.stack;\n  let value = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckPrimitive);\n  let ref;\n  if (value === undefined) {\n    ref = _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE;\n  } else if (value === null) {\n    ref = _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.NULL_REFERENCE;\n  } else if (value === true) {\n    ref = _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.TRUE_REFERENCE;\n  } else if (value === false) {\n    ref = _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.FALSE_REFERENCE;\n  } else {\n    ref = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createPrimitiveRef)(value);\n  }\n  stack.push(ref);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Dup, (vm, {\n  op1: register,\n  op2: offset\n}) => {\n  let position = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(register), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckNumber) - offset;\n  vm.stack.dup(position);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Pop, (vm, {\n  op1: count\n}) => {\n  vm.stack.pop(count);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Load, (vm, {\n  op1: register\n}) => {\n  vm.load(register);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Fetch, (vm, {\n  op1: register\n}) => {\n  vm.fetch(register);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.BindDynamicScope, (vm, {\n  op1: _names\n}) => {\n  let names = vm[CONSTANTS].getArray(_names);\n  vm.bindDynamicScope(names);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Enter, (vm, {\n  op1: args\n}) => {\n  vm.enter(args);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Exit, vm => {\n  vm.exit();\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PushSymbolTable, (vm, {\n  op1: _table\n}) => {\n  let stack = vm.stack;\n  stack.push(vm[CONSTANTS].getValue(_table));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PushBlockScope, vm => {\n  let stack = vm.stack;\n  stack.push(vm.scope());\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.CompileBlock, vm => {\n  let stack = vm.stack;\n  let block = stack.pop();\n  if (block) {\n    stack.push(vm.compile(block));\n  } else {\n    stack.push(null);\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.InvokeYield, vm => {\n  let {\n    stack\n  } = vm;\n  let handle = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckHandle));\n  let scope = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)(CheckScope));\n  let table = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckBlockSymbolTable));\n  (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(table === null || table && typeof table === 'object' && Array.isArray(table.parameters), stackAssert('Option<BlockSymbolTable>', table));\n  let args = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInstanceof)(VMArgumentsImpl));\n  if (table === null) {\n    // To balance the pop{Frame,Scope}\n    vm.pushFrame();\n    vm.pushScope(scope ?? vm.scope());\n    return;\n  }\n  let invokingScope = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(scope, 'BUG: expected scope');\n\n  // If necessary, create a child scope\n  {\n    let locals = table.parameters;\n    let localsCount = locals.length;\n    if (localsCount > 0) {\n      invokingScope = invokingScope.child();\n      for (let i = 0; i < localsCount; i++) {\n        invokingScope.bindSymbol((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(locals[i]), args.at(i));\n      }\n    }\n  }\n  vm.pushFrame();\n  vm.pushScope(invokingScope);\n  vm.call(handle);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.JumpIf, (vm, {\n  op1: target\n}) => {\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let value = Boolean((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference));\n  if ((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(reference)) {\n    if (value === true) {\n      vm.goto(target);\n    }\n  } else {\n    if (value === true) {\n      vm.goto(target);\n    }\n    vm.updateWith(new Assert(reference));\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.JumpUnless, (vm, {\n  op1: target\n}) => {\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let value = Boolean((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference));\n  if ((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(reference)) {\n    if (value === false) {\n      vm.goto(target);\n    }\n  } else {\n    if (value === false) {\n      vm.goto(target);\n    }\n    vm.updateWith(new Assert(reference));\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.JumpEq, (vm, {\n  op1: target,\n  op2: comparison\n}) => {\n  let other = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.peek(), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckNumber);\n  if (other === comparison) {\n    vm.goto(target);\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.AssertSame, vm => {\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.peek(), CheckReference);\n  if ((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(reference) === false) {\n    vm.updateWith(new Assert(reference));\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.ToBoolean, vm => {\n  let {\n    stack\n  } = vm;\n  let valueRef = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckReference);\n  stack.push((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_6__.toBool)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(valueRef))));\n});\nclass Assert {\n  constructor(ref) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"last\", void 0);\n    this.ref = ref;\n    this.last = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(ref);\n  }\n  evaluate(vm) {\n    let {\n      last,\n      ref\n    } = this;\n    let current = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(ref);\n    if (last !== current) {\n      vm.throw();\n    }\n  }\n}\nclass AssertFilter {\n  constructor(ref, filter) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"last\", void 0);\n    this.ref = ref;\n    this.filter = filter;\n    this.last = filter((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(ref));\n  }\n  evaluate(vm) {\n    let {\n      last,\n      ref,\n      filter\n    } = this;\n    let current = filter((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(ref));\n    if (last !== current) {\n      vm.throw();\n    }\n  }\n}\nclass JumpIfNotModifiedOpcode {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"tag\", _validator_index_js__WEBPACK_IMPORTED_MODULE_8__.CONSTANT_TAG);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastRevision\", _validator_index_js__WEBPACK_IMPORTED_MODULE_8__.INITIAL);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"target\", void 0);\n  }\n  finalize(tag, target) {\n    this.target = target;\n    this.didModify(tag);\n  }\n  evaluate(vm) {\n    let {\n      tag,\n      target,\n      lastRevision\n    } = this;\n    if (!vm.alwaysRevalidate && (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.validateTag)(tag, lastRevision)) {\n      (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.consumeTag)(tag);\n      vm.goto((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(target, 'VM BUG: Target must be set before attempting to jump'));\n    }\n  }\n  didModify(tag) {\n    this.tag = tag;\n    this.lastRevision = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.valueForTag)(this.tag);\n    (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.consumeTag)(tag);\n  }\n}\nclass BeginTrackFrameOpcode {\n  constructor(debugLabel) {\n    this.debugLabel = debugLabel;\n  }\n  evaluate() {\n    (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.beginTrackFrame)(this.debugLabel);\n  }\n}\nclass EndTrackFrameOpcode {\n  constructor(target) {\n    this.target = target;\n  }\n  evaluate() {\n    let tag = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.endTrackFrame)();\n    this.target.didModify(tag);\n  }\n}\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Text, (vm, {\n  op1: text\n}) => {\n  vm.elements().appendText(vm[CONSTANTS].getValue(text));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Comment, (vm, {\n  op1: text\n}) => {\n  vm.elements().appendComment(vm[CONSTANTS].getValue(text));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.OpenElement, (vm, {\n  op1: tag\n}) => {\n  vm.elements().openElement(vm[CONSTANTS].getValue(tag));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.OpenDynamicElement, vm => {\n  let tagName = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)((0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference)), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckString);\n  vm.elements().openElement(tagName);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PushRemoteElement, vm => {\n  let elementRef = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let insertBeforeRef = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let guidRef = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let element = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(elementRef), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckElement);\n  let insertBefore = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(insertBeforeRef), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckMaybe)((0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckNode)));\n  let guid = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(guidRef);\n  if (!(0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(elementRef)) {\n    vm.updateWith(new Assert(elementRef));\n  }\n  if (insertBefore !== undefined && !(0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(insertBeforeRef)) {\n    vm.updateWith(new Assert(insertBeforeRef));\n  }\n  let block = vm.elements().pushRemoteElement(element, guid, insertBefore);\n  if (block) vm.associateDestroyable(block);\n  if (vm.env.debugRenderTree !== undefined) {\n    // Note that there is nothing to update – when the args for an\n    // {{#in-element}} changes it gets torn down and a new one is\n    // re-created/rendered in its place (see the `Assert`s above)\n    let args = createCapturedArgs(insertBefore === undefined ? {} : {\n      insertBefore: insertBeforeRef\n    }, [elementRef]);\n    vm.env.debugRenderTree.create(block, {\n      type: 'keyword',\n      name: 'in-element',\n      args,\n      instance: null\n    });\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.registerDestructor)(block, () => {\n      vm.env.debugRenderTree?.willDestroy(block);\n    });\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PopRemoteElement, vm => {\n  let bounds = vm.elements().popRemoteElement();\n  if (vm.env.debugRenderTree !== undefined) {\n    // The RemoteLiveBlock is also its bounds\n    vm.env.debugRenderTree.didRender(bounds, bounds);\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.FlushElement, vm => {\n  let operations = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t0), CheckOperations);\n  let modifiers = null;\n  if (operations) {\n    modifiers = operations.flush(vm);\n    vm.loadValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t0, null);\n  }\n  vm.elements().flushElement(modifiers);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.CloseElement, vm => {\n  let modifiers = vm.elements().closeElement();\n  if (modifiers !== null) {\n    modifiers.forEach(modifier => {\n      vm.env.scheduleInstallModifier(modifier);\n      const d = modifier.manager.getDestroyable(modifier.state);\n      if (d !== null) {\n        vm.associateDestroyable(d);\n      }\n    });\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Modifier, (vm, {\n  op1: handle\n}) => {\n  if (vm.env.isInteractive === false) {\n    return;\n  }\n  let owner = vm.getOwner();\n  let args = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckArguments);\n  let definition = vm[CONSTANTS].getValue(handle);\n  let {\n    manager\n  } = definition;\n  let {\n    constructing\n  } = vm.elements();\n  let capturedArgs = args.capture();\n  let state = manager.create(owner, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(constructing, 'BUG: ElementModifier could not find the element it applies to'), definition.state, capturedArgs);\n  let instance = {\n    manager,\n    state,\n    definition\n  };\n  let operations = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)((0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t0), CheckOperations), 'BUG: ElementModifier could not find operations to append to');\n  operations.addModifier(vm, instance, capturedArgs);\n  let tag = manager.getTag(state);\n  if (tag !== null) {\n    (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.consumeTag)(tag);\n    return vm.updateWith(new UpdateModifierOpcode(tag, instance));\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.DynamicModifier, vm => {\n  if (vm.env.isInteractive === false) {\n    return;\n  }\n  let {\n    stack\n  } = vm;\n  let ref = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckReference);\n  let args = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckArguments).capture();\n  let {\n    positional: outerPositional,\n    named: outerNamed\n  } = args;\n  let {\n    constructing\n  } = vm.elements();\n  let initialOwner = vm.getOwner();\n  let instanceRef = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    let value = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(ref);\n    let owner;\n    if (!(0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.isObject)(value)) {\n      return;\n    }\n    let hostDefinition;\n    if (isCurriedType(value, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.CurriedType.Modifier)) {\n      let {\n        definition: resolvedDefinition,\n        owner: curriedOwner,\n        positional,\n        named\n      } = resolveCurriedValue(value);\n      hostDefinition = resolvedDefinition;\n      owner = curriedOwner;\n      if (positional !== undefined) {\n        args.positional = positional.concat(outerPositional);\n      }\n      if (named !== undefined) {\n        args.named = Object.assign({}, ...named, outerNamed);\n      }\n    } else {\n      hostDefinition = value;\n      owner = initialOwner;\n    }\n    let manager = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.getInternalModifierManager)(hostDefinition, true);\n    if (manager === null) {\n      if (true) {\n        throw new Error(`Expected a dynamic modifier definition, but received an object or function that did not have a modifier manager associated with it. The dynamic invocation was \\`{{${ref.debugLabel}}}\\`, and the incorrect definition is the value at the path \\`${ref.debugLabel}\\`, which was: ${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.debugToString)(hostDefinition)}`);\n      } else {}\n    }\n    let definition = {\n      resolvedName: null,\n      manager,\n      state: hostDefinition\n    };\n    let state = manager.create(owner, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(constructing, 'BUG: ElementModifier could not find the element it applies to'), definition.state, args);\n    return {\n      manager,\n      state,\n      definition\n    };\n  });\n  let instance = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(instanceRef);\n  let tag = null;\n  if (instance !== undefined) {\n    let operations = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)((0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t0), CheckOperations), 'BUG: ElementModifier could not find operations to append to');\n    operations.addModifier(vm, instance, args);\n    tag = instance.manager.getTag(instance.state);\n    if (tag !== null) {\n      (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.consumeTag)(tag);\n    }\n  }\n  if (!(0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(ref) || tag) {\n    return vm.updateWith(new UpdateDynamicModifierOpcode(tag, instance, instanceRef));\n  }\n});\nclass UpdateModifierOpcode {\n  constructor(tag, modifier) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastUpdated\", void 0);\n    this.tag = tag;\n    this.modifier = modifier;\n    this.lastUpdated = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.valueForTag)(tag);\n  }\n  evaluate(vm) {\n    let {\n      modifier,\n      tag,\n      lastUpdated\n    } = this;\n    (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.consumeTag)(tag);\n    if (!(0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.validateTag)(tag, lastUpdated)) {\n      vm.env.scheduleUpdateModifier(modifier);\n      this.lastUpdated = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.valueForTag)(tag);\n    }\n  }\n}\nclass UpdateDynamicModifierOpcode {\n  constructor(tag, instance, instanceRef) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastUpdated\", void 0);\n    this.tag = tag;\n    this.instance = instance;\n    this.instanceRef = instanceRef;\n    this.lastUpdated = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.valueForTag)(tag ?? _validator_index_js__WEBPACK_IMPORTED_MODULE_8__.CURRENT_TAG);\n  }\n  evaluate(vm) {\n    let {\n      tag,\n      lastUpdated,\n      instance,\n      instanceRef\n    } = this;\n    let newInstance = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(instanceRef);\n    if (newInstance !== instance) {\n      if (instance !== undefined) {\n        let destroyable = instance.manager.getDestroyable(instance.state);\n        if (destroyable !== null) {\n          (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.destroy)(destroyable);\n        }\n      }\n      if (newInstance !== undefined) {\n        let {\n          manager,\n          state\n        } = newInstance;\n        let destroyable = manager.getDestroyable(state);\n        if (destroyable !== null) {\n          (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.associateDestroyableChild)(this, destroyable);\n        }\n        tag = manager.getTag(state);\n        if (tag !== null) {\n          this.lastUpdated = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.valueForTag)(tag);\n        }\n        this.tag = tag;\n        vm.env.scheduleInstallModifier(newInstance);\n      }\n      this.instance = newInstance;\n    } else if (tag !== null && !(0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.validateTag)(tag, lastUpdated)) {\n      vm.env.scheduleUpdateModifier(instance);\n      this.lastUpdated = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.valueForTag)(tag);\n    }\n    if (tag !== null) {\n      (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.consumeTag)(tag);\n    }\n  }\n}\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.StaticAttr, (vm, {\n  op1: _name,\n  op2: _value,\n  op3: _namespace\n}) => {\n  let name = vm[CONSTANTS].getValue(_name);\n  let value = vm[CONSTANTS].getValue(_value);\n  let namespace = _namespace ? vm[CONSTANTS].getValue(_namespace) : null;\n  vm.elements().setStaticAttribute(name, value, namespace);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.DynamicAttr, (vm, {\n  op1: _name,\n  op2: _trusting,\n  op3: _namespace\n}) => {\n  let name = vm[CONSTANTS].getValue(_name);\n  let trusting = vm[CONSTANTS].getValue(_trusting);\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let value = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference);\n  let namespace = _namespace ? vm[CONSTANTS].getValue(_namespace) : null;\n  let attribute = vm.elements().setDynamicAttribute(name, value, trusting, namespace);\n  if (!(0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(reference)) {\n    vm.updateWith(new UpdateDynamicAttributeOpcode(reference, attribute, vm.env));\n  }\n});\nclass UpdateDynamicAttributeOpcode {\n  constructor(reference, attribute, env) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"updateRef\", void 0);\n    let initialized = false;\n    this.updateRef = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n      let value = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference);\n      if (initialized === true) {\n        attribute.update(value, env);\n      } else {\n        initialized = true;\n      }\n    });\n    (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(this.updateRef);\n  }\n  evaluate() {\n    (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(this.updateRef);\n  }\n}\n\n/**\n * The VM creates a new ComponentInstance data structure for every component\n * invocation it encounters.\n *\n * Similar to how a ComponentDefinition contains state about all components of a\n * particular type, a ComponentInstance contains state specific to a particular\n * instance of a component type. It also contains a pointer back to its\n * component type's ComponentDefinition.\n */\n\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PushComponentDefinition, (vm, {\n  op1: handle\n}) => {\n  let definition = vm[CONSTANTS].getValue(handle);\n  (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(!!definition, `Missing component for ${handle}`);\n  let {\n    manager,\n    capabilities\n  } = definition;\n  let instance = {\n    definition,\n    manager,\n    capabilities,\n    state: null,\n    handle: null,\n    table: null,\n    lookup: null\n  };\n  vm.stack.push(instance);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.ResolveDynamicComponent, (vm, {\n  op1: _isStrict\n}) => {\n  let stack = vm.stack;\n  let component = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)((0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckReference)), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOr)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckString, CheckCurriedComponentDefinition));\n  let constants = vm[CONSTANTS];\n  let owner = vm.getOwner();\n  let isStrict = constants.getValue(_isStrict);\n  vm.loadValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t1, null); // Clear the temp register\n\n  let definition;\n  if (typeof component === 'string') {\n    if ( true && isStrict) {\n      throw new Error(`Attempted to resolve a dynamic component with a string definition, \\`${component}\\` in a strict mode template. In strict mode, using strings to resolve component definitions is prohibited. You can instead import the component definition and use it directly.`);\n    }\n    let resolvedDefinition = resolveComponent(vm.runtime.resolver, constants, component, owner);\n    definition = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(resolvedDefinition, `Could not find a component named \"${component}\"`);\n  } else if (isCurriedValue(component)) {\n    definition = component;\n  } else {\n    definition = constants.component(component, owner);\n  }\n  stack.push(definition);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.ResolveCurriedComponent, vm => {\n  let stack = vm.stack;\n  let ref = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckReference);\n  let value = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(ref);\n  let constants = vm[CONSTANTS];\n  let definition;\n  if ( true && !(typeof value === 'function' || typeof value === 'object' && value !== null)) {\n    throw new Error(`Expected a component definition, but received ${value}. You may have accidentally done <${ref.debugLabel}>, where \"${ref.debugLabel}\" was a string instead of a curried component definition. You must either use the component definition directly, or use the {{component}} helper to create a curried component definition when invoking dynamically.`);\n  }\n  if (isCurriedValue(value)) {\n    definition = value;\n  } else {\n    definition = constants.component(value, vm.getOwner(), true);\n    if ( true && definition === null) {\n      throw new Error(`Expected a dynamic component definition, but received an object or function that did not have a component manager associated with it. The dynamic invocation was \\`<${ref.debugLabel}>\\` or \\`{{${ref.debugLabel}}}\\`, and the incorrect definition is the value at the path \\`${ref.debugLabel}\\`, which was: ${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.debugToString)(value)}`);\n    }\n  }\n  stack.push(definition);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PushDynamicComponentInstance, vm => {\n  let {\n    stack\n  } = vm;\n  let definition = stack.pop();\n  let capabilities, manager;\n  if (isCurriedValue(definition)) {\n    manager = capabilities = null;\n  } else {\n    manager = definition.manager;\n    capabilities = definition.capabilities;\n  }\n  stack.push({\n    definition,\n    capabilities,\n    manager,\n    state: null,\n    handle: null,\n    table: null\n  });\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PushArgs, (vm, {\n  op1: _names,\n  op2: _blockNames,\n  op3: flags\n}) => {\n  let stack = vm.stack;\n  let names = vm[CONSTANTS].getArray(_names);\n  let positionalCount = flags >> 4;\n  let atNames = flags & 0b1000;\n  let blockNames = flags & 0b0111 ? vm[CONSTANTS].getArray(_blockNames) : _util_index_js__WEBPACK_IMPORTED_MODULE_3__.EMPTY_STRING_ARRAY;\n  vm[ARGS$1].setup(stack, names, blockNames, positionalCount, !!atNames);\n  stack.push(vm[ARGS$1]);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PushEmptyArgs, vm => {\n  let {\n    stack\n  } = vm;\n  stack.push(vm[ARGS$1].empty(stack));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.CaptureArgs, vm => {\n  let stack = vm.stack;\n  let args = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInstanceof)(VMArgumentsImpl));\n  let capturedArgs = args.capture();\n  stack.push(capturedArgs);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PrepareArgs, (vm, {\n  op1: _state\n}) => {\n  let stack = vm.stack;\n  let instance = vm.fetchValue(_state);\n  let args = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInstanceof)(VMArgumentsImpl));\n  let {\n    definition\n  } = instance;\n  if (isCurriedType(definition, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.CurriedType.Component)) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(!definition.manager, \"If the component definition was curried, we don't yet have a manager\");\n    let constants = vm[CONSTANTS];\n    let {\n      definition: resolvedDefinition,\n      owner,\n      resolved,\n      positional,\n      named\n    } = resolveCurriedValue(definition);\n    if (resolved === true) {\n      definition = resolvedDefinition;\n    } else if (typeof resolvedDefinition === 'string') {\n      let resolvedValue = vm.runtime.resolver.lookupComponent(resolvedDefinition, owner);\n      definition = constants.resolvedComponent((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(resolvedValue, 'BUG: expected resolved component'), resolvedDefinition);\n    } else {\n      definition = constants.component(resolvedDefinition, owner);\n    }\n    if (named !== undefined) {\n      args.named.merge((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assign)({}, ...named));\n    }\n    if (positional !== undefined) {\n      args.realloc(positional.length);\n      args.positional.prepend(positional);\n    }\n    let {\n      manager\n    } = definition;\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(instance.manager === null, 'component instance manager should not be populated yet');\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(instance.capabilities === null, 'component instance manager should not be populated yet');\n    instance.definition = definition;\n    instance.manager = manager;\n    instance.capabilities = definition.capabilities;\n\n    // Save off the owner that this component was curried with. Later on,\n    // we'll fetch the value of this register and set it as the owner on the\n    // new root scope.\n    vm.loadValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t1, owner);\n  }\n  let {\n    manager,\n    state\n  } = definition;\n  let capabilities = instance.capabilities;\n  if (!(0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.prepareArgs)) {\n    stack.push(args);\n    return;\n  }\n  let blocks = args.blocks.values;\n  let blockNames = args.blocks.names;\n  let preparedArgs = manager.prepareArgs(state, args);\n  if (preparedArgs) {\n    args.clear();\n    for (let i = 0; i < blocks.length; i++) {\n      stack.push(blocks[i]);\n    }\n    let {\n      positional,\n      named\n    } = preparedArgs;\n    let positionalCount = positional.length;\n    for (let i = 0; i < positionalCount; i++) {\n      stack.push(positional[i]);\n    }\n    let names = Object.keys(named);\n    for (let i = 0; i < names.length; i++) {\n      stack.push(named[(0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(names[i])]);\n    }\n    args.setup(stack, names, blockNames, positionalCount, false);\n  }\n  stack.push(args);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.CreateComponent, (vm, {\n  op1: flags,\n  op2: _state\n}) => {\n  let instance = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckComponentInstance);\n  let {\n    definition,\n    manager,\n    capabilities\n  } = instance;\n  if (!(0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.createInstance)) {\n    // TODO: Closure and Main components are always invoked dynamically, so this\n    // opcode may run even if this capability is not enabled. In the future we\n    // should handle this in a better way.\n    return;\n  }\n  let dynamicScope = null;\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.dynamicScope)) {\n    dynamicScope = vm.dynamicScope();\n  }\n  let hasDefaultBlock = flags & 1;\n  let args = null;\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.createArgs)) {\n    args = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.peek(), CheckArguments);\n  }\n  let self = null;\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.createCaller)) {\n    self = vm.getSelf();\n  }\n  let state = manager.create(vm.getOwner(), definition.state, args, vm.env, dynamicScope, self, !!hasDefaultBlock);\n\n  // We want to reuse the `state` POJO here, because we know that the opcodes\n  // only transition at exactly one place.\n  instance.state = state;\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.updateHook)) {\n    vm.updateWith(new UpdateComponentOpcode(state, manager, dynamicScope));\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.RegisterComponentDestructor, (vm, {\n  op1: _state\n}) => {\n  let {\n    manager,\n    state,\n    capabilities\n  } = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckComponentInstance);\n  let d = manager.getDestroyable(state);\n  if ( true && !(0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.willDestroy) && d !== null && typeof 'willDestroy' in d) {\n    throw new Error('BUG: Destructor has willDestroy, but the willDestroy capability was not enabled for this component. Pre-destruction hooks must be explicitly opted into');\n  }\n  if (d) vm.associateDestroyable(d);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.BeginComponentTransaction, (vm, {\n  op1: _state\n}) => {\n  let name;\n  if (true) {\n    let {\n      definition,\n      manager\n    } = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckComponentInstance);\n    name = definition.resolvedName ?? manager.getDebugName(definition.state);\n  }\n  vm.beginCacheGroup(name);\n  vm.elements().pushSimpleBlock();\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PutComponentOperations, vm => {\n  vm.loadValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t0, new ComponentElementOperations());\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.ComponentAttr, (vm, {\n  op1: _name,\n  op2: _trusting,\n  op3: _namespace\n}) => {\n  let name = vm[CONSTANTS].getValue(_name);\n  let trusting = vm[CONSTANTS].getValue(_trusting);\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let namespace = _namespace ? vm[CONSTANTS].getValue(_namespace) : null;\n  (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t0), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInstanceof)(ComponentElementOperations)).setAttribute(name, reference, trusting, namespace);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.StaticComponentAttr, (vm, {\n  op1: _name,\n  op2: _value,\n  op3: _namespace\n}) => {\n  let name = vm[CONSTANTS].getValue(_name);\n  let value = vm[CONSTANTS].getValue(_value);\n  let namespace = _namespace ? vm[CONSTANTS].getValue(_namespace) : null;\n  (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t0), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInstanceof)(ComponentElementOperations)).setStaticAttribute(name, value, namespace);\n});\nclass ComponentElementOperations {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attributes\", (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.dict)());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"classes\", []);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"modifiers\", []);\n  }\n  setAttribute(name, value, trusting, namespace) {\n    let deferred = {\n      value,\n      namespace,\n      trusting\n    };\n    if (name === 'class') {\n      this.classes.push(value);\n    }\n    this.attributes[name] = deferred;\n  }\n  setStaticAttribute(name, value, namespace) {\n    let deferred = {\n      value,\n      namespace\n    };\n    if (name === 'class') {\n      this.classes.push(value);\n    }\n    this.attributes[name] = deferred;\n  }\n  addModifier(vm, modifier, capturedArgs) {\n    this.modifiers.push(modifier);\n    if (vm.env.debugRenderTree !== undefined) {\n      const {\n        manager,\n        definition,\n        state\n      } = modifier;\n\n      // TODO: we need a stable object for the debugRenderTree as the key, add support for\n      // the case where the state is a primitive, or if in practice we always have/require\n      // an object, then change the internal types to reflect that\n      if (state === null || typeof state !== 'object' && typeof state !== 'function') {\n        return;\n      }\n      let {\n        element,\n        constructing\n      } = vm.elements();\n      let name = manager.getDebugName(definition.state);\n      let instance = manager.getDebugInstance(state);\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(constructing, `Expected a constructing element in addModifier`);\n      let bounds = new ConcreteBounds(element, constructing, constructing);\n      vm.env.debugRenderTree.create(state, {\n        type: 'modifier',\n        name,\n        args: capturedArgs,\n        instance\n      });\n      vm.env.debugRenderTree.didRender(state, bounds);\n\n      // For tearing down the debugRenderTree\n      vm.associateDestroyable(state);\n      vm.updateWith(new DebugRenderTreeUpdateOpcode(state));\n      vm.updateWith(new DebugRenderTreeDidRenderOpcode(state, bounds));\n      (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.registerDestructor)(state, () => {\n        vm.env.debugRenderTree?.willDestroy(state);\n      });\n    }\n  }\n  flush(vm) {\n    let type;\n    let attributes = this.attributes;\n    for (let name in this.attributes) {\n      if (name === 'type') {\n        type = attributes[name];\n        continue;\n      }\n      let attr = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(this.attributes[name]);\n      if (name === 'class') {\n        setDeferredAttr(vm, 'class', mergeClasses(this.classes), attr.namespace, attr.trusting);\n      } else {\n        setDeferredAttr(vm, name, attr.value, attr.namespace, attr.trusting);\n      }\n    }\n    if (type !== undefined) {\n      setDeferredAttr(vm, 'type', type.value, type.namespace, type.trusting);\n    }\n    return this.modifiers;\n  }\n}\nfunction mergeClasses(classes) {\n  if (classes.length === 0) {\n    return '';\n  }\n  if (classes.length === 1) {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(classes[0]);\n  }\n  if (allStringClasses(classes)) {\n    return classes.join(' ');\n  }\n  return createClassListRef(classes);\n}\nfunction allStringClasses(classes) {\n  return classes.every(c => typeof c === 'string');\n}\nfunction setDeferredAttr(vm, name, value, namespace, trusting = false) {\n  if (typeof value === 'string') {\n    vm.elements().setStaticAttribute(name, value, namespace);\n  } else {\n    let attribute = vm.elements().setDynamicAttribute(name, (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(value), trusting, namespace);\n    if (!(0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(value)) {\n      vm.updateWith(new UpdateDynamicAttributeOpcode(value, attribute, vm.env));\n    }\n  }\n}\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.DidCreateElement, (vm, {\n  op1: _state\n}) => {\n  let {\n    definition,\n    state\n  } = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckComponentInstance);\n  let {\n    manager\n  } = definition;\n  let operations = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t0), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInstanceof)(ComponentElementOperations));\n  manager.didCreateElement(state, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(vm.elements().constructing, `Expected a constructing element in DidCreateOpcode`), operations);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.GetComponentSelf, (vm, {\n  op1: _state,\n  op2: _names\n}) => {\n  let instance = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckComponentInstance);\n  let {\n    definition,\n    state\n  } = instance;\n  let {\n    manager\n  } = definition;\n  let selfRef = manager.getSelf(state);\n  if (vm.env.debugRenderTree !== undefined) {\n    let instance = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckComponentInstance);\n    let {\n      definition,\n      manager\n    } = instance;\n    let args;\n    if (vm.stack.peek() === vm[ARGS$1]) {\n      args = vm[ARGS$1].capture();\n    } else {\n      let names = vm[CONSTANTS].getArray(_names);\n      vm[ARGS$1].setup(vm.stack, names, [], 0, true);\n      args = vm[ARGS$1].capture();\n    }\n    let moduleName;\n    let compilable = definition.compilable;\n    if (compilable === null) {\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, instance.capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.dynamicLayout), 'BUG: No template was found for this component, and the component did not have the dynamic layout capability');\n      compilable = manager.getDynamicLayout(state, vm.runtime.resolver);\n      if (compilable !== null) {\n        moduleName = compilable.moduleName;\n      } else {\n        moduleName = '__default__.hbs';\n      }\n    } else {\n      moduleName = compilable.moduleName;\n    }\n\n    // For tearing down the debugRenderTree\n    vm.associateDestroyable(instance);\n    if (hasCustomDebugRenderTreeLifecycle(manager)) {\n      let nodes = manager.getDebugCustomRenderTree(instance.definition.state, instance.state, args, moduleName);\n      nodes.forEach(node => {\n        let {\n          bucket\n        } = node;\n        vm.env.debugRenderTree.create(bucket, node);\n        (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.registerDestructor)(instance, () => {\n          vm.env.debugRenderTree?.willDestroy(bucket);\n        });\n        vm.updateWith(new DebugRenderTreeUpdateOpcode(bucket));\n      });\n    } else {\n      let name = definition.resolvedName ?? manager.getDebugName(definition.state);\n      vm.env.debugRenderTree.create(instance, {\n        type: 'component',\n        name,\n        args,\n        template: moduleName,\n        instance: (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(selfRef)\n      });\n      (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.registerDestructor)(instance, () => {\n        vm.env.debugRenderTree?.willDestroy(instance);\n      });\n      vm.updateWith(new DebugRenderTreeUpdateOpcode(instance));\n    }\n  }\n  vm.stack.push(selfRef);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.GetComponentTagName, (vm, {\n  op1: _state\n}) => {\n  let {\n    definition,\n    state\n  } = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckComponentInstance);\n  let {\n    manager\n  } = definition;\n  let tagName = manager.getTagName(state);\n\n  // User provided value from JS, so we don't bother to encode\n  vm.stack.push(tagName);\n});\n\n// Dynamic Invocation Only\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.GetComponentLayout, (vm, {\n  op1: _state\n}) => {\n  let instance = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckComponentInstance);\n  let {\n    manager,\n    definition\n  } = instance;\n  let {\n    stack\n  } = vm;\n  let {\n    compilable\n  } = definition;\n  if (compilable === null) {\n    let {\n      capabilities\n    } = instance;\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.dynamicLayout), 'BUG: No template was found for this component, and the component did not have the dynamic layout capability');\n    compilable = manager.getDynamicLayout(instance.state, vm.runtime.resolver);\n    if (compilable === null) {\n      if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.wrapped)) {\n        compilable = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrapTemplate)(vm[CONSTANTS].defaultTemplate).asWrappedLayout();\n      } else {\n        compilable = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrapTemplate)(vm[CONSTANTS].defaultTemplate).asLayout();\n      }\n    }\n  }\n  let handle = compilable.compile(vm.context);\n  stack.push(compilable.symbolTable);\n  stack.push(handle);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Main, (vm, {\n  op1: register\n}) => {\n  let definition = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckComponentDefinition);\n  let invocation = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckInvocation);\n  let {\n    manager,\n    capabilities\n  } = definition;\n  let state = {\n    definition,\n    manager,\n    capabilities,\n    state: null,\n    handle: invocation.handle,\n    table: invocation.symbolTable,\n    lookup: null\n  };\n  vm.loadValue(register, state);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.PopulateLayout, (vm, {\n  op1: _state\n}) => {\n  let {\n    stack\n  } = vm;\n\n  // In DEBUG handles could be ErrHandle objects\n  let handle = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckHandle);\n  let table = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckProgramSymbolTable);\n  let state = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckComponentInstance);\n  state.handle = handle;\n  state.table = table;\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.VirtualRootScope, (vm, {\n  op1: _state\n}) => {\n  let {\n    table,\n    manager,\n    capabilities,\n    state\n  } = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckFinishedComponentInstance);\n  let owner;\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.hasSubOwner)) {\n    owner = manager.getOwner(state);\n    vm.loadValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t1, null); // Clear the temp register\n  } else {\n    // Check the temp register to see if an owner was resolved from currying\n    owner = vm.fetchValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t1);\n    if (owner === null) {\n      // If an owner wasn't found, default to using the current owner. This\n      // will happen for normal dynamic component invocation,\n      // e.g. <SomeClassicEmberComponent/>\n      owner = vm.getOwner();\n    } else {\n      // Else the owner was found, so clear the temp register. This will happen\n      // if we are loading a curried component, e.g. <@someCurriedComponent/>\n      vm.loadValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t1, null);\n    }\n  }\n  vm.pushRootScope(table.symbols.length + 1, owner);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.SetupForEval, (vm, {\n  op1: _state\n}) => {\n  let state = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckFinishedComponentInstance);\n  if (state.table.hasEval) {\n    let lookup = state.lookup = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.dict)();\n    vm.scope().bindEvalScope(lookup);\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.SetNamedVariables, (vm, {\n  op1: _state\n}) => {\n  let state = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckFinishedComponentInstance);\n  let scope = vm.scope();\n  let args = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.peek(), CheckArguments);\n  let callerNames = args.named.atNames;\n  for (let i = callerNames.length - 1; i >= 0; i--) {\n    let atName = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(callerNames[i]);\n    let symbol = state.table.symbols.indexOf(atName);\n    let value = args.named.get(atName, true);\n    if (symbol !== -1) scope.bindSymbol(symbol + 1, value);\n    if (state.lookup) state.lookup[atName] = value;\n  }\n});\nfunction bindBlock(symbolName, blockName, state, blocks, vm) {\n  let symbol = state.table.symbols.indexOf(symbolName);\n  let block = blocks.get(blockName);\n  if (symbol !== -1) vm.scope().bindBlock(symbol + 1, block);\n  if (state.lookup) state.lookup[symbolName] = block;\n}\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.SetBlocks, (vm, {\n  op1: _state\n}) => {\n  let state = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckFinishedComponentInstance);\n  let {\n    blocks\n  } = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.peek(), CheckArguments);\n  for (const [i] of (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.enumerate)(blocks.names)) {\n    bindBlock((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(blocks.symbolNames[i]), (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(blocks.names[i]), state, blocks, vm);\n  }\n});\n\n// Dynamic Invocation Only\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.InvokeComponentLayout, (vm, {\n  op1: _state\n}) => {\n  let state = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckFinishedComponentInstance);\n  vm.call(state.handle);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.DidRenderLayout, (vm, {\n  op1: _state\n}) => {\n  let instance = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.fetchValue(_state), CheckComponentInstance);\n  let {\n    manager,\n    state,\n    capabilities\n  } = instance;\n  let bounds = vm.elements().popBlock();\n  if (vm.env.debugRenderTree !== undefined) {\n    if (hasCustomDebugRenderTreeLifecycle(manager)) {\n      let nodes = manager.getDebugCustomRenderTree(instance.definition.state, state, EMPTY_ARGS);\n      nodes.reverse().forEach(node => {\n        let {\n          bucket\n        } = node;\n        vm.env.debugRenderTree.didRender(bucket, bounds);\n        vm.updateWith(new DebugRenderTreeDidRenderOpcode(bucket, bounds));\n      });\n    } else {\n      vm.env.debugRenderTree.didRender(instance, bounds);\n      vm.updateWith(new DebugRenderTreeDidRenderOpcode(instance, bounds));\n    }\n  }\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.managerHasCapability)(manager, capabilities, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.InternalComponentCapabilities.createInstance)) {\n    let mgr = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(manager, (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n      didRenderLayout: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckFunction\n    }));\n    mgr.didRenderLayout(state, bounds);\n    vm.env.didCreate(instance);\n    vm.updateWith(new DidUpdateLayoutOpcode(instance, bounds));\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.CommitComponentTransaction, vm => {\n  vm.commitCacheGroup();\n});\nclass UpdateComponentOpcode {\n  constructor(component, manager, dynamicScope) {\n    this.component = component;\n    this.manager = manager;\n    this.dynamicScope = dynamicScope;\n  }\n  evaluate(_vm) {\n    let {\n      component,\n      manager,\n      dynamicScope\n    } = this;\n    manager.update(component, dynamicScope);\n  }\n}\nclass DidUpdateLayoutOpcode {\n  constructor(component, bounds) {\n    this.component = component;\n    this.bounds = bounds;\n  }\n  evaluate(vm) {\n    let {\n      component,\n      bounds\n    } = this;\n    let {\n      manager,\n      state\n    } = component;\n    manager.didUpdateLayout(state, bounds);\n    vm.env.didUpdate(component);\n  }\n}\nclass DebugRenderTreeUpdateOpcode {\n  constructor(bucket) {\n    this.bucket = bucket;\n  }\n  evaluate(vm) {\n    vm.env.debugRenderTree?.update(this.bucket);\n  }\n}\nclass DebugRenderTreeDidRenderOpcode {\n  constructor(bucket, bounds) {\n    this.bucket = bucket;\n    this.bounds = bounds;\n  }\n  evaluate(vm) {\n    vm.env.debugRenderTree?.didRender(this.bucket, this.bounds);\n  }\n}\nconst CheckOperations = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(() => (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)((0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInstanceof)(ComponentElementOperations)));\nclass ReferenceChecker {\n  validate(value) {\n    return typeof value === 'object' && value !== null && _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.REFERENCE in value;\n  }\n  expected() {\n    return `Reference`;\n  }\n}\nconst CheckReference = new ReferenceChecker();\nconst CheckIterator = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n  next: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckFunction,\n  isEmpty: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckFunction\n});\nconst CheckArguments = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(() => (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInstanceof)(VMArgumentsImpl));\nconst CheckHelper = _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckFunction;\nclass UndefinedReferenceChecker {\n  validate(value) {\n    return value === _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE;\n  }\n  expected() {\n    return `undefined`;\n  }\n}\nconst CheckUndefinedReference = new UndefinedReferenceChecker();\nconst CheckCapturedArguments = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n  positional: (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(() => (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckArray)(CheckReference)),\n  named: (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(() => (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckDict)(CheckReference))\n});\nconst CheckScope = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(() => (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInstanceof)(PartialScopeImpl));\nconst CheckComponentManager = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n  getCapabilities: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckFunction\n});\nconst CheckCapabilities = _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckNumber;\nconst CheckComponentInstance = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n  definition: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckUnknown,\n  state: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckUnknown,\n  handle: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckUnknown,\n  table: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckUnknown\n});\nconst CheckCurriedComponentDefinition = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOr)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckObject, _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckFunction);\nconst CheckInvocation = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n  handle: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckNumber,\n  symbolTable: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckProgramSymbolTable\n});\nconst CheckFinishedComponentInstance = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n  definition: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckUnknown,\n  state: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckUnknown,\n  handle: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckHandle,\n  table: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckProgramSymbolTable\n});\nconst CheckCompilableBlock = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n  compile: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckFunction,\n  symbolTable: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckBlockSymbolTable\n});\nconst CheckCompilableProgram = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n  compile: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckFunction,\n  symbolTable: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckProgramSymbolTable\n});\nconst CheckScopeBlock = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n  0: CheckCompilableBlock,\n  1: CheckScope,\n  2: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckBlockSymbolTable\n});\nconst CheckComponentDefinition = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckInterface)({\n  resolvedName: (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckString),\n  handle: _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckNumber,\n  state: (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOr)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckObject, _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckFunction),\n  manager: CheckComponentManager,\n  capabilities: CheckCapabilities,\n  compilable: CheckCompilableProgram\n});\n\n/*\n  The calling convention is:\n\n  * 0-N block arguments at the bottom\n  * 0-N positional arguments next (left-to-right)\n  * 0-N named arguments next\n*/\n\nclass VMArgumentsImpl {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"stack\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"positional\", new PositionalArgumentsImpl());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"named\", new NamedArgumentsImpl());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"blocks\", new BlockArgumentsImpl());\n  }\n  empty(stack) {\n    let base = stack[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp] + 1;\n    this.named.empty(stack, base);\n    this.positional.empty(stack, base);\n    this.blocks.empty(stack, base);\n    return this;\n  }\n  setup(stack, names, blockNames, positionalCount, atNames) {\n    this.stack = stack;\n\n    /*\n           | ... | blocks      | positional  | named |\n           | ... | b0    b1    | p0 p1 p2 p3 | n0 n1 |\n     index | ... | 4/5/6 7/8/9 | 10 11 12 13 | 14 15 |\n                   ^             ^             ^  ^\n                 bbase         pbase       nbase  sp\n    */\n\n    let named = this.named;\n    let namedCount = names.length;\n    let namedBase = stack[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp] - namedCount + 1;\n    named.setup(stack, namedBase, namedCount, names, atNames);\n    let positional = this.positional;\n    let positionalBase = namedBase - positionalCount;\n    positional.setup(stack, positionalBase, positionalCount);\n    let blocks = this.blocks;\n    let blocksCount = blockNames.length;\n    let blocksBase = positionalBase - blocksCount * 3;\n    blocks.setup(stack, blocksBase, blocksCount, blockNames);\n  }\n  get base() {\n    return this.blocks.base;\n  }\n  get length() {\n    return this.positional.length + this.named.length + this.blocks.length * 3;\n  }\n  at(pos) {\n    return this.positional.at(pos);\n  }\n  realloc(offset) {\n    let {\n      stack\n    } = this;\n    if (offset > 0 && stack !== null) {\n      let {\n        positional,\n        named\n      } = this;\n      let newBase = positional.base + offset;\n      let length = positional.length + named.length;\n      for (let i = length - 1; i >= 0; i--) {\n        stack.copy(i + positional.base, i + newBase);\n      }\n      positional.base += offset;\n      named.base += offset;\n      stack[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp] += offset;\n    }\n  }\n  capture() {\n    let positional = this.positional.length === 0 ? EMPTY_POSITIONAL : this.positional.capture();\n    let named = this.named.length === 0 ? EMPTY_NAMED : this.named.capture();\n    return {\n      named,\n      positional\n    };\n  }\n  clear() {\n    let {\n      stack,\n      length\n    } = this;\n    if (length > 0 && stack !== null) stack.pop(length);\n  }\n}\nconst EMPTY_REFERENCES = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.emptyArray)();\nclass PositionalArgumentsImpl {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"base\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"length\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"stack\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_references\", null);\n  }\n  empty(stack, base) {\n    this.stack = stack;\n    this.base = base;\n    this.length = 0;\n    this._references = EMPTY_REFERENCES;\n  }\n  setup(stack, base, length) {\n    this.stack = stack;\n    this.base = base;\n    this.length = length;\n    if (length === 0) {\n      this._references = EMPTY_REFERENCES;\n    } else {\n      this._references = null;\n    }\n  }\n  at(position) {\n    let {\n      base,\n      length,\n      stack\n    } = this;\n    if (position < 0 || position >= length) {\n      return _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE;\n    }\n    return (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.get(position, base), CheckReference);\n  }\n  capture() {\n    return this.references;\n  }\n  prepend(other) {\n    let additions = other.length;\n    if (additions > 0) {\n      let {\n        base,\n        length,\n        stack\n      } = this;\n      this.base = base = base - additions;\n      this.length = length + additions;\n      for (let i = 0; i < additions; i++) {\n        stack.set(other[i], i, base);\n      }\n      this._references = null;\n    }\n  }\n  get references() {\n    let references = this._references;\n    if (!references) {\n      let {\n        stack,\n        base,\n        length\n      } = this;\n      references = this._references = stack.slice(base, base + length);\n    }\n    return references;\n  }\n}\nclass NamedArgumentsImpl {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"base\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"length\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_references\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_names\", _util_index_js__WEBPACK_IMPORTED_MODULE_3__.EMPTY_STRING_ARRAY);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_atNames\", _util_index_js__WEBPACK_IMPORTED_MODULE_3__.EMPTY_STRING_ARRAY);\n  }\n  empty(stack, base) {\n    this.stack = stack;\n    this.base = base;\n    this.length = 0;\n    this._references = EMPTY_REFERENCES;\n    this._names = _util_index_js__WEBPACK_IMPORTED_MODULE_3__.EMPTY_STRING_ARRAY;\n    this._atNames = _util_index_js__WEBPACK_IMPORTED_MODULE_3__.EMPTY_STRING_ARRAY;\n  }\n  setup(stack, base, length, names, atNames) {\n    this.stack = stack;\n    this.base = base;\n    this.length = length;\n    if (length === 0) {\n      this._references = EMPTY_REFERENCES;\n      this._names = _util_index_js__WEBPACK_IMPORTED_MODULE_3__.EMPTY_STRING_ARRAY;\n      this._atNames = _util_index_js__WEBPACK_IMPORTED_MODULE_3__.EMPTY_STRING_ARRAY;\n    } else {\n      this._references = null;\n      if (atNames) {\n        this._names = null;\n        this._atNames = names;\n      } else {\n        this._names = names;\n        this._atNames = null;\n      }\n    }\n  }\n  get names() {\n    let names = this._names;\n    if (!names) {\n      names = this._names = this._atNames.map(this.toSyntheticName);\n    }\n    return names;\n  }\n  get atNames() {\n    let atNames = this._atNames;\n    if (!atNames) {\n      atNames = this._atNames = this._names.map(this.toAtName);\n    }\n    return atNames;\n  }\n  has(name) {\n    return this.names.indexOf(name) !== -1;\n  }\n  get(name, atNames = false) {\n    let {\n      base,\n      stack\n    } = this;\n    let names = atNames ? this.atNames : this.names;\n    let idx = names.indexOf(name);\n    if (idx === -1) {\n      return _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE;\n    }\n    let ref = stack.get(idx, base);\n    if (true) {\n      return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createDebugAliasRef)(atNames ? name : `@${name}`, ref);\n    } else {}\n  }\n  capture() {\n    let {\n      names,\n      references\n    } = this;\n    let map = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.dict)();\n    for (const [i, name] of (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.enumerate)(names)) {\n      if (true) {\n        map[name] = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createDebugAliasRef)(`@${name}`, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(references[i]));\n      } else {}\n    }\n    return map;\n  }\n  merge(other) {\n    let keys = Object.keys(other);\n    if (keys.length > 0) {\n      let {\n        names,\n        length,\n        stack\n      } = this;\n      let newNames = names.slice();\n      for (const name of keys) {\n        let idx = newNames.indexOf(name);\n        if (idx === -1) {\n          length = newNames.push(name);\n          stack.push(other[name]);\n        }\n      }\n      this.length = length;\n      this._references = null;\n      this._names = newNames;\n      this._atNames = null;\n    }\n  }\n  get references() {\n    let references = this._references;\n    if (!references) {\n      let {\n        base,\n        length,\n        stack\n      } = this;\n      references = this._references = stack.slice(base, base + length);\n    }\n    return references;\n  }\n  toSyntheticName(name) {\n    return name.slice(1);\n  }\n  toAtName(name) {\n    return `@${name}`;\n  }\n}\nfunction toSymbolName(name) {\n  return `&${name}`;\n}\nconst EMPTY_BLOCK_VALUES = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.emptyArray)();\nclass BlockArgumentsImpl {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"internalValues\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_symbolNames\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"internalTag\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"names\", _util_index_js__WEBPACK_IMPORTED_MODULE_3__.EMPTY_STRING_ARRAY);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"length\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"base\", 0);\n  }\n  empty(stack, base) {\n    this.stack = stack;\n    this.names = _util_index_js__WEBPACK_IMPORTED_MODULE_3__.EMPTY_STRING_ARRAY;\n    this.base = base;\n    this.length = 0;\n    this._symbolNames = null;\n    this.internalTag = _validator_index_js__WEBPACK_IMPORTED_MODULE_8__.CONSTANT_TAG;\n    this.internalValues = EMPTY_BLOCK_VALUES;\n  }\n  setup(stack, base, length, names) {\n    this.stack = stack;\n    this.names = names;\n    this.base = base;\n    this.length = length;\n    this._symbolNames = null;\n    if (length === 0) {\n      this.internalTag = _validator_index_js__WEBPACK_IMPORTED_MODULE_8__.CONSTANT_TAG;\n      this.internalValues = EMPTY_BLOCK_VALUES;\n    } else {\n      this.internalTag = null;\n      this.internalValues = null;\n    }\n  }\n  get values() {\n    let values = this.internalValues;\n    if (!values) {\n      let {\n        base,\n        length,\n        stack\n      } = this;\n      values = this.internalValues = stack.slice(base, base + length * 3);\n    }\n    return values;\n  }\n  has(name) {\n    return this.names.indexOf(name) !== -1;\n  }\n  get(name) {\n    let idx = this.names.indexOf(name);\n    if (idx === -1) {\n      return null;\n    }\n    let {\n      base,\n      stack\n    } = this;\n    let table = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.get(idx * 3, base), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckBlockSymbolTable));\n    let scope = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.get(idx * 3 + 1, base), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)(CheckScope));\n    let handle = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.get(idx * 3 + 2, base), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)((0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOr)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckHandle, CheckCompilableBlock)));\n    return handle === null ? null : [handle, scope, table];\n  }\n  capture() {\n    return new CapturedBlockArgumentsImpl(this.names, this.values);\n  }\n  get symbolNames() {\n    let symbolNames = this._symbolNames;\n    if (symbolNames === null) {\n      symbolNames = this._symbolNames = this.names.map(toSymbolName);\n    }\n    return symbolNames;\n  }\n}\nclass CapturedBlockArgumentsImpl {\n  constructor(names, values) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"length\", void 0);\n    this.names = names;\n    this.values = values;\n    this.length = names.length;\n  }\n  has(name) {\n    return this.names.indexOf(name) !== -1;\n  }\n  get(name) {\n    let idx = this.names.indexOf(name);\n    if (idx === -1) return null;\n    return [this.values[idx * 3 + 2], this.values[idx * 3 + 1], this.values[idx * 3]];\n  }\n}\nfunction createCapturedArgs(named, positional) {\n  return {\n    named,\n    positional\n  };\n}\nfunction reifyNamed(named) {\n  let reified = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.dict)();\n  for (const [key, value] of Object.entries(named)) {\n    reified[key] = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(value);\n  }\n  return reified;\n}\nfunction reifyPositional(positional) {\n  return positional.map(_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef);\n}\nfunction reifyArgs(args) {\n  return {\n    named: reifyNamed(args.named),\n    positional: reifyPositional(args.positional)\n  };\n}\nconst ARGUMENT_ERROR = Symbol('ARGUMENT_ERROR');\nfunction isArgumentError(arg) {\n  return arg !== null && typeof arg === 'object' && arg[ARGUMENT_ERROR];\n}\nfunction ArgumentErrorImpl(error) {\n  return {\n    [ARGUMENT_ERROR]: true,\n    error\n  };\n}\nfunction reifyNamedDebug(named) {\n  let reified = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.dict)();\n  for (const [key, value] of Object.entries(named)) {\n    try {\n      reified[key] = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(value);\n    } catch (e) {\n      reified[key] = ArgumentErrorImpl(e);\n    }\n  }\n  return reified;\n}\nfunction reifyPositionalDebug(positional) {\n  return positional.map(p => {\n    try {\n      return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(p);\n    } catch (e) {\n      return ArgumentErrorImpl(e);\n    }\n  });\n}\nfunction reifyArgsDebug(args) {\n  let named = reifyNamedDebug(args.named);\n  let positional = reifyPositionalDebug(args.positional);\n  return {\n    named,\n    positional\n  };\n}\nconst EMPTY_NAMED = Object.freeze(Object.create(null));\nconst EMPTY_POSITIONAL = EMPTY_REFERENCES;\nconst EMPTY_ARGS = createCapturedArgs(EMPTY_NAMED, EMPTY_POSITIONAL);\nfunction createConcatRef(partsRefs) {\n  return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    const parts = [];\n    for (const ref of partsRefs) {\n      const value = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(ref);\n      if (value !== null && value !== undefined) {\n        parts.push(castToString(value));\n      }\n    }\n    if (parts.length > 0) {\n      return parts.join('');\n    }\n    return null;\n  });\n}\nfunction castToString(value) {\n  if (typeof value === 'string') {\n    return value;\n  } else if (typeof value.toString !== 'function') {\n    return '';\n  }\n  return String(value);\n}\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Curry, (vm, {\n  op1: type,\n  op2: _isStrict\n}) => {\n  let stack = vm.stack;\n  let definition = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckReference);\n  let capturedArgs = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckCapturedArguments);\n  let owner = vm.getOwner();\n  let resolver = vm.runtime.resolver;\n  let isStrict = false;\n  if (true) {\n    // strict check only happens in DEBUG builds, no reason to load it otherwise\n    isStrict = vm[CONSTANTS].getValue((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.decodeHandle)(_isStrict));\n  }\n  vm.loadValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$v0, createCurryRef(type, definition, owner, capturedArgs, resolver, isStrict));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.DynamicHelper, vm => {\n  let stack = vm.stack;\n  let ref = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckReference);\n  let args = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckArguments).capture();\n  let helperRef;\n  let initialOwner = vm.getOwner();\n  let helperInstanceRef = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    if (helperRef !== undefined) {\n      (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.destroy)(helperRef);\n    }\n    let definition = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(ref);\n    if (isCurriedType(definition, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.CurriedType.Helper)) {\n      let {\n        definition: resolvedDef,\n        owner,\n        positional,\n        named\n      } = resolveCurriedValue(definition);\n      let helper = resolveHelper(resolvedDef, ref);\n      if (named !== undefined) {\n        args.named = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assign)({}, ...named, args.named);\n      }\n      if (positional !== undefined) {\n        args.positional = positional.concat(args.positional);\n      }\n      helperRef = helper(args, owner);\n      (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.associateDestroyableChild)(helperInstanceRef, helperRef);\n    } else if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.isObject)(definition)) {\n      let helper = resolveHelper(definition, ref);\n      helperRef = helper(args, initialOwner);\n      if ((0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__._hasDestroyableChildren)(helperRef)) {\n        (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.associateDestroyableChild)(helperInstanceRef, helperRef);\n      }\n    } else {\n      helperRef = _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE;\n    }\n  });\n  let helperValueRef = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(helperInstanceRef);\n    return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(helperRef);\n  });\n  vm.associateDestroyable(helperInstanceRef);\n  vm.loadValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$v0, helperValueRef);\n});\nfunction resolveHelper(definition, ref) {\n  let managerOrHelper = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.getInternalHelperManager)(definition, true);\n  let helper;\n  if (managerOrHelper === null) {\n    helper = null;\n  } else {\n    helper = typeof managerOrHelper === 'function' ? managerOrHelper : managerOrHelper.getHelper(definition);\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(managerOrHelper, 'BUG: expected manager or helper');\n  }\n  if ( true && helper === null) {\n    throw new Error(`Expected a dynamic helper definition, but received an object or function that did not have a helper manager associated with it. The dynamic invocation was \\`{{${ref.debugLabel}}}\\` or \\`(${ref.debugLabel})\\`, and the incorrect definition is the value at the path \\`${ref.debugLabel}\\`, which was: ${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.debugToString)(definition)}`);\n  }\n  return helper;\n}\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Helper, (vm, {\n  op1: handle\n}) => {\n  let stack = vm.stack;\n  let helper = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm[CONSTANTS].getValue(handle), CheckHelper);\n  let args = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckArguments);\n  let value = helper(args.capture(), vm.getOwner(), vm.dynamicScope());\n  if ((0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__._hasDestroyableChildren)(value)) {\n    vm.associateDestroyable(value);\n  }\n  vm.loadValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$v0, value);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.GetVariable, (vm, {\n  op1: symbol\n}) => {\n  let expr = vm.referenceForSymbol(symbol);\n  vm.stack.push(expr);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.SetVariable, (vm, {\n  op1: symbol\n}) => {\n  let expr = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  vm.scope().bindSymbol(symbol, expr);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.SetBlock, (vm, {\n  op1: symbol\n}) => {\n  let handle = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckCompilableBlock);\n  let scope = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckScope);\n  let table = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckBlockSymbolTable);\n  vm.scope().bindBlock(symbol, [handle, scope, table]);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.ResolveMaybeLocal, (vm, {\n  op1: _name\n}) => {\n  let name = vm[CONSTANTS].getValue(_name);\n  let locals = vm.scope().getPartialMap();\n  let ref = locals[name];\n  if (ref === undefined) {\n    ref = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.childRefFor)(vm.getSelf(), name);\n  }\n  vm.stack.push(ref);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.RootScope, (vm, {\n  op1: symbols\n}) => {\n  vm.pushRootScope(symbols, vm.getOwner());\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.GetProperty, (vm, {\n  op1: _key\n}) => {\n  let key = vm[CONSTANTS].getValue(_key);\n  let expr = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  vm.stack.push((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.childRefFor)(expr, key));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.GetBlock, (vm, {\n  op1: _block\n}) => {\n  let {\n    stack\n  } = vm;\n  let block = vm.scope().getBlock(_block);\n  stack.push(block);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.SpreadBlock, vm => {\n  let {\n    stack\n  } = vm;\n  let block = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)((0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOr)(CheckScopeBlock, CheckUndefinedReference)));\n  if (block && !isUndefinedReference(block)) {\n    let [handleOrCompilable, scope, table] = block;\n    stack.push(table);\n    stack.push(scope);\n    stack.push(handleOrCompilable);\n  } else {\n    stack.push(null);\n    stack.push(null);\n    stack.push(null);\n  }\n});\nfunction isUndefinedReference(input) {\n  (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(Array.isArray(input) || input === _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE, 'a reference other than UNDEFINED_REFERENCE is illegal here');\n  return input === _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE;\n}\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.HasBlock, vm => {\n  let {\n    stack\n  } = vm;\n  let block = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOption)((0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOr)(CheckScopeBlock, CheckUndefinedReference)));\n  if (block && !isUndefinedReference(block)) {\n    stack.push(_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.TRUE_REFERENCE);\n  } else {\n    stack.push(_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.FALSE_REFERENCE);\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.HasBlockParams, vm => {\n  // FIXME(mmun): should only need to push the symbol table\n  let block = vm.stack.pop();\n  let scope = vm.stack.pop();\n  (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(block, (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckMaybe)((0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOr)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckHandle, CheckCompilableBlock)));\n  (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(scope, (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckMaybe)(CheckScope));\n  let table = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckMaybe)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckBlockSymbolTable));\n  let hasBlockParams = table && table.parameters.length;\n  vm.stack.push(hasBlockParams ? _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.TRUE_REFERENCE : _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.FALSE_REFERENCE);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Concat, (vm, {\n  op1: count\n}) => {\n  let out = new Array(count);\n  for (let i = count; i > 0; i--) {\n    let offset = i - 1;\n    out[offset] = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  }\n  vm.stack.push(createConcatRef(out));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.IfInline, vm => {\n  let condition = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let truthy = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let falsy = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  vm.stack.push((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    if ((0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_6__.toBool)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(condition)) === true) {\n      return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(truthy);\n    } else {\n      return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(falsy);\n    }\n  }));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Not, vm => {\n  let ref = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  vm.stack.push((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    return !(0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_6__.toBool)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(ref));\n  }));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.GetDynamicVar, vm => {\n  let scope = vm.dynamicScope();\n  let stack = vm.stack;\n  let nameRef = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckReference);\n  stack.push((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    let name = String((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(nameRef));\n    return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(scope.get(name));\n  }));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Log, vm => {\n  let {\n    positional\n  } = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckArguments).capture();\n  vm.loadValue(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$v0, (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    // eslint-disable-next-line no-console\n    console.log(...reifyPositional(positional));\n  }));\n});\nclass DynamicTextContent {\n  constructor(node, reference, lastValue) {\n    this.node = node;\n    this.reference = reference;\n    this.lastValue = lastValue;\n  }\n  evaluate() {\n    let value = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(this.reference);\n    let {\n      lastValue\n    } = this;\n    if (value === lastValue) return;\n    let normalized;\n    if (isEmpty$2(value)) {\n      normalized = '';\n    } else if (isString(value)) {\n      normalized = value;\n    } else {\n      normalized = String(value);\n    }\n    if (normalized !== lastValue) {\n      let textNode = this.node;\n      textNode.nodeValue = this.lastValue = normalized;\n    }\n  }\n}\nfunction toContentType(value) {\n  if (shouldCoerce(value)) {\n    return _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ContentType.String;\n  } else if (isCurriedType(value, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.CurriedType.Component) || (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.hasInternalComponentManager)(value)) {\n    return _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ContentType.Component;\n  } else if (isCurriedType(value, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.CurriedType.Helper) || (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.hasInternalHelperManager)(value)) {\n    return _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ContentType.Helper;\n  } else if (isSafeString(value)) {\n    return _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ContentType.SafeString;\n  } else if (isFragment(value)) {\n    return _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ContentType.Fragment;\n  } else if (isNode(value)) {\n    return _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ContentType.Node;\n  } else {\n    return _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ContentType.String;\n  }\n}\nfunction toDynamicContentType(value) {\n  if (!(0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.isObject)(value)) {\n    return _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ContentType.String;\n  }\n  if (isCurriedType(value, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.CurriedType.Component) || (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.hasInternalComponentManager)(value)) {\n    return _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ContentType.Component;\n  } else {\n    if ( true && !isCurriedType(value, _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.CurriedType.Helper) && !(0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.hasInternalHelperManager)(value)) {\n      throw new Error(`Attempted use a dynamic value as a component or helper, but that value did not have an associated component or helper manager. The value was: ${value}`);\n    }\n    return _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.ContentType.Helper;\n  }\n}\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.ContentType, vm => {\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.peek(), CheckReference);\n  vm.stack.push(toContentType((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference)));\n  if (!(0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(reference)) {\n    vm.updateWith(new AssertFilter(reference, toContentType));\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.DynamicContentType, vm => {\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.peek(), CheckReference);\n  vm.stack.push(toDynamicContentType((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference)));\n  if (!(0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(reference)) {\n    vm.updateWith(new AssertFilter(reference, toDynamicContentType));\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.AppendHTML, vm => {\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let rawValue = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference);\n  let value = isEmpty$2(rawValue) ? '' : String(rawValue);\n  vm.elements().appendDynamicHTML(value);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.AppendSafeHTML, vm => {\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let rawValue = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckSafeString).toHTML();\n  let value = isEmpty$2(rawValue) ? '' : (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(rawValue, _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckString);\n  vm.elements().appendDynamicHTML(value);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.AppendText, vm => {\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let rawValue = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference);\n  let value = isEmpty$2(rawValue) ? '' : String(rawValue);\n  let node = vm.elements().appendDynamicText(value);\n  if (!(0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isConstRef)(reference)) {\n    vm.updateWith(new DynamicTextContent(node, reference, value));\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.AppendDocumentFragment, vm => {\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let value = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckDocumentFragment);\n  vm.elements().appendDynamicFragment(value);\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.AppendNode, vm => {\n  let reference = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(vm.stack.pop(), CheckReference);\n  let value = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(reference), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckNode);\n  vm.elements().appendDynamicNode(value);\n});\nfunction debugCallback(context, get) {\n  // eslint-disable-next-line no-console\n  console.info('Use `context`, and `get(<path>)` to debug this template.');\n\n  // for example...\n  context === get('this');\n\n  // eslint-disable-next-line no-debugger\n  debugger;\n}\nlet callback = debugCallback;\n\n// For testing purposes\nfunction setDebuggerCallback(cb) {\n  callback = cb;\n}\nfunction resetDebuggerCallback() {\n  callback = debugCallback;\n}\nclass ScopeInspector {\n  constructor(scope, symbols, debugInfo) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"locals\", (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.dict)());\n    this.scope = scope;\n    for (const slot of debugInfo) {\n      let name = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(symbols[slot - 1]);\n      let ref = scope.getSymbol(slot);\n      this.locals[name] = ref;\n    }\n  }\n  get(path) {\n    let {\n      scope,\n      locals\n    } = this;\n    let parts = path.split('.');\n    let [head, ...tail] = path.split('.');\n    let evalScope = scope.getEvalScope();\n    let ref;\n    if (head === 'this') {\n      ref = scope.getSelf();\n    } else if (locals[head]) {\n      ref = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(locals[head]);\n    } else if (head.indexOf('@') === 0 && evalScope[head]) {\n      ref = evalScope[head];\n    } else {\n      ref = this.scope.getSelf();\n      tail = parts;\n    }\n    return tail.reduce((r, part) => (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.childRefFor)(r, part), ref);\n  }\n}\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Debugger, (vm, {\n  op1: _symbols,\n  op2: _debugInfo\n}) => {\n  let symbols = vm[CONSTANTS].getArray(_symbols);\n  let debugInfo = vm[CONSTANTS].getArray((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.decodeHandle)(_debugInfo));\n  let inspector = new ScopeInspector(vm.scope(), symbols, debugInfo);\n  callback((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(vm.getSelf()), path => (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(inspector.get(path)));\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.EnterList, (vm, {\n  op1: relativeStart,\n  op2: elseTarget\n}) => {\n  let stack = vm.stack;\n  let listRef = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckReference);\n  let keyRef = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.pop(), CheckReference);\n  let keyValue = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(keyRef);\n  let key = keyValue === null ? '@identity' : String(keyValue);\n  let iteratorRef = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createIteratorRef)(listRef, key);\n  let iterator = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(iteratorRef);\n  vm.updateWith(new AssertFilter(iteratorRef, iterator => iterator.isEmpty()));\n  if (iterator.isEmpty() === true) {\n    // TODO: Fix this offset, should be accurate\n    vm.goto(elseTarget + 1);\n  } else {\n    vm.enterList(iteratorRef, relativeStart);\n    vm.stack.push(iterator);\n  }\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.ExitList, vm => {\n  vm.exitList();\n});\nAPPEND_OPCODES.add(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.Op.Iterate, (vm, {\n  op1: breaks\n}) => {\n  let stack = vm.stack;\n  let iterator = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(stack.peek(), CheckIterator);\n  let item = iterator.next();\n  if (item !== null) {\n    vm.registerItem(vm.enterItem(item));\n  } else {\n    vm.goto(breaks);\n  }\n});\nconst CAPABILITIES = {\n  dynamicLayout: false,\n  dynamicTag: false,\n  prepareArgs: false,\n  createArgs: false,\n  attributeHook: false,\n  elementHook: false,\n  createCaller: false,\n  dynamicScope: false,\n  updateHook: false,\n  createInstance: false,\n  wrapped: false,\n  willDestroy: false,\n  hasSubOwner: false\n};\nclass TemplateOnlyComponentManager {\n  getCapabilities() {\n    return CAPABILITIES;\n  }\n  getDebugName({\n    name\n  }) {\n    return name;\n  }\n  getSelf() {\n    return _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.NULL_REFERENCE;\n  }\n  getDestroyable() {\n    return null;\n  }\n}\nconst TEMPLATE_ONLY_COMPONENT_MANAGER = new TemplateOnlyComponentManager();\n\n// This is only exported for types, don't use this class directly\nclass TemplateOnlyComponentDefinition {\n  constructor(moduleName = '@glimmer/component/template-only', name = '(unknown template-only component)') {\n    this.moduleName = moduleName;\n    this.name = name;\n  }\n  toString() {\n    return this.moduleName;\n  }\n}\n(0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.setInternalComponentManager)(TEMPLATE_ONLY_COMPONENT_MANAGER, TemplateOnlyComponentDefinition.prototype);\n\n/**\n  This utility function is used to declare a given component has no backing class. When the rendering engine detects this it\n  is able to perform a number of optimizations. Templates that are associated with `templateOnly()` will be rendered _as is_\n  without adding a wrapping `<div>` (or any of the other element customization behaviors of [@ember/component](/ember/release/classes/Component)).\n  Specifically, this means that the template will be rendered as \"outer HTML\".\n\n  In general, this method will be used by build time tooling and would not be directly written in an application. However,\n  at times it may be useful to use directly to leverage the \"outer HTML\" semantics mentioned above. For example, if an addon would like\n  to use these semantics for its templates but cannot be certain it will only be consumed by applications that have enabled the\n  `template-only-glimmer-components` optional feature.\n\n  @example\n\n  ```js\n  import { templateOnlyComponent } from '@glimmer/runtime';\n\n  export default templateOnlyComponent();\n  ```\n\n  @public\n  @method templateOnly\n  @param {String} moduleName the module name that the template only component represents, this will be used for debugging purposes\n  @category EMBER_GLIMMER_SET_COMPONENT_TEMPLATE\n*/\n\nfunction templateOnlyComponent(moduleName, name) {\n  return new TemplateOnlyComponentDefinition(moduleName, name);\n}\n\n// http://www.w3.org/TR/html/syntax.html#html-integration-point\nconst SVG_INTEGRATION_POINTS = {\n  foreignObject: 1,\n  desc: 1,\n  title: 1\n};\n\n// http://www.w3.org/TR/html/syntax.html#adjust-svg-attributes\n// TODO: Adjust SVG attributes\n\n// http://www.w3.org/TR/html/syntax.html#parsing-main-inforeign\n// TODO: Adjust SVG elements\n\n// http://www.w3.org/TR/html/syntax.html#parsing-main-inforeign\nconst BLACKLIST_TABLE = Object.create(null);\nclass DOMOperations {\n  // Set by this.setupUselessElement() in constructor\n\n  constructor(document) {\n    this.document = document;\n    this.setupUselessElement();\n  }\n\n  // split into separate method so that NodeDOMTreeConstruction\n  // can override it.\n  setupUselessElement() {\n    this.uselessElement = this.document.createElement('div');\n  }\n  createElement(tag, context) {\n    let isElementInSVGNamespace, isHTMLIntegrationPoint;\n    if (context) {\n      isElementInSVGNamespace = context.namespaceURI === _util_index_js__WEBPACK_IMPORTED_MODULE_3__.NS_SVG || tag === 'svg';\n      isHTMLIntegrationPoint = !!SVG_INTEGRATION_POINTS[context.tagName];\n    } else {\n      isElementInSVGNamespace = tag === 'svg';\n      isHTMLIntegrationPoint = false;\n    }\n    if (isElementInSVGNamespace && !isHTMLIntegrationPoint) {\n      // FIXME: This does not properly handle <font> with color, face, or\n      // size attributes, which is also disallowed by the spec. We should fix\n      // this.\n      if (BLACKLIST_TABLE[tag]) {\n        throw new Error(`Cannot create a ${tag} inside an SVG context`);\n      }\n      return this.document.createElementNS(_util_index_js__WEBPACK_IMPORTED_MODULE_3__.NS_SVG, tag);\n    } else {\n      return this.document.createElement(tag);\n    }\n  }\n  insertBefore(parent, node, reference) {\n    parent.insertBefore(node, reference);\n  }\n  insertHTMLBefore(parent, nextSibling, html) {\n    if (html === '') {\n      const comment = this.createComment('');\n      parent.insertBefore(comment, nextSibling);\n      return new ConcreteBounds(parent, comment, comment);\n    }\n    const prev = nextSibling ? nextSibling.previousSibling : parent.lastChild;\n    let last;\n    if (nextSibling === null) {\n      parent.insertAdjacentHTML(_util_index_js__WEBPACK_IMPORTED_MODULE_3__.INSERT_BEFORE_END, html);\n      last = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(parent.lastChild, 'bug in insertAdjacentHTML?');\n    } else if (nextSibling instanceof HTMLElement) {\n      nextSibling.insertAdjacentHTML('beforebegin', html);\n      last = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(nextSibling.previousSibling, 'bug in insertAdjacentHTML?');\n    } else {\n      // Non-element nodes do not support insertAdjacentHTML, so add an\n      // element and call it on that element. Then remove the element.\n      //\n      // This also protects Edge, IE and Firefox w/o the inspector open\n      // from merging adjacent text nodes. See ./compat/text-node-merging-fix.ts\n      const {\n        uselessElement\n      } = this;\n      parent.insertBefore(uselessElement, nextSibling);\n      uselessElement.insertAdjacentHTML(_util_index_js__WEBPACK_IMPORTED_MODULE_3__.INSERT_BEFORE_BEGIN, html);\n      last = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(uselessElement.previousSibling, 'bug in insertAdjacentHTML?');\n      parent.removeChild(uselessElement);\n    }\n    const first = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(prev ? prev.nextSibling : parent.firstChild, 'bug in insertAdjacentHTML?');\n    return new ConcreteBounds(parent, first, last);\n  }\n  createTextNode(text) {\n    return this.document.createTextNode(text);\n  }\n  createComment(data) {\n    return this.document.createComment(data);\n  }\n}\nfunction moveNodesBefore(source, target, nextSibling) {\n  const first = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(source.firstChild, 'source is empty');\n  let last = first;\n  let current = first;\n  while (current) {\n    const next = current.nextSibling;\n    target.insertBefore(current, nextSibling);\n    last = current;\n    current = next;\n  }\n  return new ConcreteBounds(target, first, last);\n}\n\n// Patch:    insertAdjacentHTML on SVG Fix\n// Browsers: Safari, IE, Edge, Firefox ~33-34\n// Reason:   insertAdjacentHTML does not exist on SVG elements in Safari. It is\n//           present but throws an exception on IE and Edge. Old versions of\n//           Firefox create nodes in the incorrect namespace.\n// Fix:      Since IE and Edge silently fail to create SVG nodes using\n//           innerHTML, and because Firefox may create nodes in the incorrect\n//           namespace using innerHTML on SVG elements, an HTML-string wrapping\n//           approach is used. A pre/post SVG tag is added to the string, then\n//           that whole string is added to a div. The created nodes are plucked\n//           out and applied to the target location on DOM.\nfunction applySVGInnerHTMLFix(document, DOMClass, svgNamespace) {\n  if (!document) return DOMClass;\n  if (!shouldApplyFix$1(document, svgNamespace)) {\n    return DOMClass;\n  }\n  const div = document.createElement('div');\n  return class DOMChangesWithSVGInnerHTMLFix extends DOMClass {\n    insertHTMLBefore(parent, nextSibling, html) {\n      if (html === '') {\n        return super.insertHTMLBefore(parent, nextSibling, html);\n      }\n      if (parent.namespaceURI !== svgNamespace) {\n        return super.insertHTMLBefore(parent, nextSibling, html);\n      }\n      return fixSVG(parent, div, html, nextSibling);\n    }\n  };\n}\nfunction fixSVG(parent, div, html, reference) {\n  (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(html !== '', 'html cannot be empty');\n  let source;\n\n  // This is important, because descendants of the <foreignObject> integration\n  // point are parsed in the HTML namespace\n  if (parent.tagName.toUpperCase() === 'FOREIGNOBJECT') {\n    // IE, Edge: also do not correctly support using `innerHTML` on SVG\n    // namespaced elements. So here a wrapper is used.\n    const wrappedHtml = '<svg><foreignObject>' + html + '</foreignObject></svg>';\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.clearElement)(div);\n    div.insertAdjacentHTML(_util_index_js__WEBPACK_IMPORTED_MODULE_3__.INSERT_AFTER_BEGIN, wrappedHtml);\n    source = div.firstChild.firstChild;\n  } else {\n    // IE, Edge: also do not correctly support using `innerHTML` on SVG\n    // namespaced elements. So here a wrapper is used.\n    const wrappedHtml = '<svg>' + html + '</svg>';\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.clearElement)(div);\n    div.insertAdjacentHTML(_util_index_js__WEBPACK_IMPORTED_MODULE_3__.INSERT_AFTER_BEGIN, wrappedHtml);\n    source = div.firstChild;\n  }\n  return moveNodesBefore(source, parent, reference);\n}\nfunction shouldApplyFix$1(document, svgNamespace) {\n  const svg = document.createElementNS(svgNamespace, 'svg');\n  try {\n    svg.insertAdjacentHTML(_util_index_js__WEBPACK_IMPORTED_MODULE_3__.INSERT_BEFORE_END, '<circle></circle>');\n  } catch (e) {\n    // IE, Edge: Will throw, insertAdjacentHTML is unsupported on SVG\n    // Safari: Will throw, insertAdjacentHTML is not present on SVG\n  } finally {\n    // FF: Old versions will create a node in the wrong namespace\n    if (svg.childNodes.length === 1 && (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.castToBrowser)((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(svg.firstChild), 'SVG').namespaceURI === _util_index_js__WEBPACK_IMPORTED_MODULE_3__.NS_SVG) {\n      // The test worked as expected, no fix required\n      // eslint-disable-next-line no-unsafe-finally\n      return false;\n    }\n\n    // eslint-disable-next-line no-unsafe-finally\n    return true;\n  }\n}\n\n// Patch:    Adjacent text node merging fix\n// Browsers: IE, Edge, Firefox w/o inspector open\n// Reason:   These browsers will merge adjacent text nodes. For example given\n//           <div>Hello</div> with div.insertAdjacentHTML(' world') browsers\n//           with proper behavior will populate div.childNodes with two items.\n//           These browsers will populate it with one merged node instead.\n// Fix:      Add these nodes to a wrapper element, then iterate the childNodes\n//           of that wrapper and move the nodes to their target location. Note\n//           that potential SVG bugs will have been handled before this fix.\n//           Note that this fix must only apply to the previous text node, as\n//           the base implementation of `insertHTMLBefore` already handles\n//           following text nodes correctly.\nfunction applyTextNodeMergingFix(document, DOMClass) {\n  if (!document) return DOMClass;\n  if (!shouldApplyFix(document)) {\n    return DOMClass;\n  }\n  return class DOMChangesWithTextNodeMergingFix extends DOMClass {\n    constructor(document) {\n      super(document);\n      (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"uselessComment\", void 0);\n      this.uselessComment = document.createComment('');\n    }\n    insertHTMLBefore(parent, nextSibling, html) {\n      if (html === '') {\n        return super.insertHTMLBefore(parent, nextSibling, html);\n      }\n      let didSetUselessComment = false;\n      const nextPrevious = nextSibling ? nextSibling.previousSibling : parent.lastChild;\n      if (nextPrevious && nextPrevious instanceof Text) {\n        didSetUselessComment = true;\n        parent.insertBefore(this.uselessComment, nextSibling);\n      }\n      const bounds = super.insertHTMLBefore(parent, nextSibling, html);\n      if (didSetUselessComment) {\n        parent.removeChild(this.uselessComment);\n      }\n      return bounds;\n    }\n  };\n}\nfunction shouldApplyFix(document) {\n  const mergingTextDiv = document.createElement('div');\n  mergingTextDiv.appendChild(document.createTextNode('first'));\n  mergingTextDiv.insertAdjacentHTML(_util_index_js__WEBPACK_IMPORTED_MODULE_3__.INSERT_BEFORE_END, 'second');\n  if (mergingTextDiv.childNodes.length === 2) {\n    // It worked as expected, no fix required\n    return false;\n  }\n  return true;\n}\nconst doc$1 = typeof document === 'undefined' ? null : (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.castToSimple)(document);\nclass TreeConstruction extends DOMOperations {\n  createElementNS(namespace, tag) {\n    return this.document.createElementNS(namespace, tag);\n  }\n  setAttribute(element, name, value, namespace = null) {\n    if (namespace) {\n      element.setAttributeNS(namespace, name, value);\n    } else {\n      element.setAttribute(name, value);\n    }\n  }\n}\nlet appliedTreeConstruction = TreeConstruction;\nappliedTreeConstruction = applyTextNodeMergingFix(doc$1, appliedTreeConstruction);\nappliedTreeConstruction = applySVGInnerHTMLFix(doc$1, appliedTreeConstruction, _util_index_js__WEBPACK_IMPORTED_MODULE_3__.NS_SVG);\nconst DOMTreeConstruction = appliedTreeConstruction;\n['b', 'big', 'blockquote', 'body', 'br', 'center', 'code', 'dd', 'div', 'dl', 'dt', 'em', 'embed', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'hr', 'i', 'img', 'li', 'listing', 'main', 'meta', 'nobr', 'ol', 'p', 'pre', 'ruby', 's', 'small', 'span', 'strong', 'strike', 'sub', 'sup', 'table', 'tt', 'u', 'ul', 'var'].forEach(tag => BLACKLIST_TABLE[tag] = 1);\nconst WHITESPACE = /[\\t\\n\\v\\f\\r \\xA0\\u{1680}\\u{180e}\\u{2000}-\\u{200a}\\u{2028}\\u{2029}\\u{202f}\\u{205f}\\u{3000}\\u{feff}]/u;\nconst doc = typeof document === 'undefined' ? null : (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.castToSimple)(document);\nfunction isWhitespace(string) {\n  return WHITESPACE.test(string);\n}\nclass DOMChangesImpl extends DOMOperations {\n  constructor(document) {\n    super(document);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"namespace\", void 0);\n    this.document = document;\n    this.namespace = null;\n  }\n  setAttribute(element, name, value) {\n    element.setAttribute(name, value);\n  }\n  removeAttribute(element, name) {\n    element.removeAttribute(name);\n  }\n  insertAfter(element, node, reference) {\n    this.insertBefore(element, node, reference.nextSibling);\n  }\n}\nlet helper = DOMChangesImpl;\nhelper = applyTextNodeMergingFix(doc, helper);\nhelper = applySVGInnerHTMLFix(doc, helper, _util_index_js__WEBPACK_IMPORTED_MODULE_3__.NS_SVG);\nconst DOMChanges = helper;\nlet GUID = 0;\nclass Ref {\n  constructor(value) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", GUID++);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"value\", void 0);\n    this.value = value;\n  }\n  get() {\n    return this.value;\n  }\n  release() {\n    if ( true && this.value === null) {\n      throw new Error('BUG: double release?');\n    }\n    this.value = null;\n  }\n  toString() {\n    let label = `Ref ${this.id}`;\n    if (this.value === null) {\n      return `${label} (released)`;\n    } else {\n      try {\n        return `${label}: ${this.value}`;\n      } catch {\n        return label;\n      }\n    }\n  }\n}\nclass DebugRenderTreeImpl {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"stack\", new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"refs\", new WeakMap());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"roots\", new Set());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"nodes\", new WeakMap());\n  }\n  begin() {\n    this.reset();\n  }\n  create(state, node) {\n    let internalNode = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assign)({}, node, {\n      bounds: null,\n      refs: new Set()\n    });\n    this.nodes.set(state, internalNode);\n    this.appendChild(internalNode, state);\n    this.enter(state);\n  }\n  update(state) {\n    this.enter(state);\n  }\n  didRender(state, bounds) {\n    if ( true && this.stack.current !== state) {\n      throw new Error(`BUG: expecting ${this.stack.current}, got ${state}`);\n    }\n    this.nodeFor(state).bounds = bounds;\n    this.exit();\n  }\n  willDestroy(state) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.refs.get(state), 'BUG: missing ref').release();\n  }\n  commit() {\n    this.reset();\n  }\n  capture() {\n    return this.captureRefs(this.roots);\n  }\n  reset() {\n    if (this.stack.size !== 0) {\n      // We probably encountered an error during the rendering loop. This will\n      // likely trigger undefined behavior and memory leaks as the error left\n      // things in an inconsistent state. It is recommended that the user\n      // refresh the page.\n\n      // TODO: We could warn here? But this happens all the time in our tests?\n\n      // Clean up the root reference to prevent errors from happening if we\n      // attempt to capture the render tree (Ember Inspector may do this)\n      let root = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.stack.toArray()[0], 'expected root state when resetting render tree');\n      let ref = this.refs.get(root);\n      if (ref !== undefined) {\n        this.roots.delete(ref);\n      }\n      while (!this.stack.isEmpty()) {\n        this.stack.pop();\n      }\n    }\n  }\n  enter(state) {\n    this.stack.push(state);\n  }\n  exit() {\n    if ( true && this.stack.size === 0) {\n      throw new Error('BUG: unbalanced pop');\n    }\n    this.stack.pop();\n  }\n  nodeFor(state) {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.nodes.get(state), 'BUG: missing node');\n  }\n  appendChild(node, state) {\n    if ( true && this.refs.has(state)) {\n      throw new Error('BUG: child already appended');\n    }\n    let parent = this.stack.current;\n    let ref = new Ref(state);\n    this.refs.set(state, ref);\n    if (parent) {\n      let parentNode = this.nodeFor(parent);\n      parentNode.refs.add(ref);\n      node.parent = parentNode;\n    } else {\n      this.roots.add(ref);\n    }\n  }\n  captureRefs(refs) {\n    let captured = [];\n    refs.forEach(ref => {\n      let state = ref.get();\n      if (state) {\n        captured.push(this.captureNode(`render-node:${ref.id}`, state));\n      } else {\n        refs.delete(ref);\n      }\n    });\n    return captured;\n  }\n  captureNode(id, state) {\n    let node = this.nodeFor(state);\n    let {\n      type,\n      name,\n      args,\n      instance,\n      refs\n    } = node;\n    let template = this.captureTemplate(node);\n    let bounds = this.captureBounds(node);\n    let children = this.captureRefs(refs);\n    return {\n      id,\n      type,\n      name,\n      args: reifyArgsDebug(args),\n      instance,\n      template,\n      bounds,\n      children\n    };\n  }\n  captureTemplate({\n    template\n  }) {\n    return template || null;\n  }\n  captureBounds(node) {\n    let bounds = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(node.bounds, 'BUG: missing bounds');\n    let parentElement = bounds.parentElement();\n    let firstNode = bounds.firstNode();\n    let lastNode = bounds.lastNode();\n    return {\n      parentElement,\n      firstNode,\n      lastNode\n    };\n  }\n}\nconst TRANSACTION = Symbol('TRANSACTION');\nclass TransactionImpl {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"scheduledInstallModifiers\", []);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"scheduledUpdateModifiers\", []);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"createdComponents\", []);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"updatedComponents\", []);\n  }\n  didCreate(component) {\n    this.createdComponents.push(component);\n  }\n  didUpdate(component) {\n    this.updatedComponents.push(component);\n  }\n  scheduleInstallModifier(modifier) {\n    this.scheduledInstallModifiers.push(modifier);\n  }\n  scheduleUpdateModifier(modifier) {\n    this.scheduledUpdateModifiers.push(modifier);\n  }\n  commit() {\n    let {\n      createdComponents,\n      updatedComponents\n    } = this;\n    for (const {\n      manager,\n      state\n    } of createdComponents) {\n      manager.didCreate(state);\n    }\n    for (const {\n      manager,\n      state\n    } of updatedComponents) {\n      manager.didUpdate(state);\n    }\n    let {\n      scheduledInstallModifiers,\n      scheduledUpdateModifiers\n    } = this;\n    for (const {\n      manager,\n      state,\n      definition\n    } of scheduledInstallModifiers) {\n      let modifierTag = manager.getTag(state);\n      if (modifierTag !== null) {\n        let tag = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.track)(() => manager.install(state),  true && `- While rendering:\\n  (instance of a \\`${definition.resolvedName || manager.getDebugName(definition.state)}\\` modifier)`);\n        (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.updateTag)(modifierTag, tag);\n      } else {\n        manager.install(state);\n      }\n    }\n    for (const {\n      manager,\n      state,\n      definition\n    } of scheduledUpdateModifiers) {\n      let modifierTag = manager.getTag(state);\n      if (modifierTag !== null) {\n        let tag = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.track)(() => manager.update(state),  true && `- While rendering:\\n  (instance of a \\`${definition.resolvedName || manager.getDebugName(definition.state)}\\` modifier)`);\n        (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.updateTag)(modifierTag, tag);\n      } else {\n        manager.update(state);\n      }\n    }\n  }\n}\nclass EnvironmentImpl {\n  constructor(options, delegate) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, TRANSACTION, null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"updateOperations\", void 0);\n    // Delegate methods and values\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isInteractive\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isArgumentCaptureError\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"debugRenderTree\", void 0);\n    this.delegate = delegate;\n    this.isInteractive = delegate.isInteractive;\n    this.debugRenderTree = this.delegate.enableDebugTooling ? new DebugRenderTreeImpl() : undefined;\n    this.isArgumentCaptureError = this.delegate.enableDebugTooling ? isArgumentError : undefined;\n    if (options.appendOperations) {\n      this.appendOperations = options.appendOperations;\n      this.updateOperations = options.updateOperations;\n    } else if (options.document) {\n      this.appendOperations = new DOMTreeConstruction(options.document);\n      this.updateOperations = new DOMChangesImpl(options.document);\n    } else if (true) {\n      throw new Error('you must pass document or appendOperations to a new runtime');\n    }\n  }\n  getAppendOperations() {\n    return this.appendOperations;\n  }\n  getDOM() {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.updateOperations, 'Attempted to get DOM updateOperations, but they were not provided by the environment. You may be attempting to rerender in an environment which does not support rerendering, such as SSR.');\n  }\n  begin() {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(!this[TRANSACTION], 'A glimmer transaction was begun, but one already exists. You may have a nested transaction, possibly caused by an earlier runtime exception while rendering. Please check your console for the stack trace of any prior exceptions.');\n    this.debugRenderTree?.begin();\n    this[TRANSACTION] = new TransactionImpl();\n  }\n  get transaction() {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this[TRANSACTION], 'must be in a transaction');\n  }\n  didCreate(component) {\n    this.transaction.didCreate(component);\n  }\n  didUpdate(component) {\n    this.transaction.didUpdate(component);\n  }\n  scheduleInstallModifier(modifier) {\n    if (this.isInteractive) {\n      this.transaction.scheduleInstallModifier(modifier);\n    }\n  }\n  scheduleUpdateModifier(modifier) {\n    if (this.isInteractive) {\n      this.transaction.scheduleUpdateModifier(modifier);\n    }\n  }\n  commit() {\n    let transaction = this.transaction;\n    this[TRANSACTION] = null;\n    transaction.commit();\n    this.debugRenderTree?.commit();\n    this.delegate.onTransactionCommit();\n  }\n}\nfunction runtimeContext(options, delegate, artifacts, resolver) {\n  return {\n    env: new EnvironmentImpl(options, delegate),\n    program: new _program_index_js__WEBPACK_IMPORTED_MODULE_9__.RuntimeProgramImpl(artifacts.constants, artifacts.heap),\n    resolver: resolver\n  };\n}\nfunction inTransaction(env, block) {\n  if (!env[TRANSACTION]) {\n    env.begin();\n    try {\n      block();\n    } finally {\n      env.commit();\n    }\n  } else {\n    block();\n  }\n}\nfunction internalHelper(helper) {\n  return (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.setInternalHelperManager)(helper, {});\n}\n\n/**\n   Use the `{{array}}` helper to create an array to pass as an option to your\n   components.\n\n   ```handlebars\n   <MyComponent @people={{array\n     'Tom Dale'\n     'Yehuda Katz'\n     this.myOtherPerson}}\n   />\n   ```\n    or\n   ```handlebars\n   {{my-component people=(array\n     'Tom Dale'\n     'Yehuda Katz'\n     this.myOtherPerson)\n   }}\n   ```\n\n   Would result in an object such as:\n\n   ```js\n   ['Tom Dale', 'Yehuda Katz', this.get('myOtherPerson')]\n   ```\n\n   Where the 3rd item in the array is bound to updates of the `myOtherPerson` property.\n\n   @method array\n   @param {Array} options\n   @return {Array} Array\n   @public\n */\n\nconst array = internalHelper(({\n  positional\n}) => {\n  return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => reifyPositional(positional), null, 'array');\n});\nconst isEmpty$1 = value => {\n  return value === null || value === undefined || typeof value.toString !== 'function';\n};\nconst normalizeTextValue = value => {\n  if (isEmpty$1(value)) {\n    return '';\n  }\n  return String(value);\n};\n\n/**\n  Concatenates the given arguments into a string.\n\n  Example:\n\n  ```handlebars\n  {{some-component name=(concat firstName \" \" lastName)}}\n\n  {{! would pass name=\"<first name value> <last name value>\" to the component}}\n  ```\n\n  or for angle bracket invocation, you actually don't need concat at all.\n\n  ```handlebars\n  <SomeComponent @name=\"{{firstName}} {{lastName}}\" />\n  ```\n\n  @public\n  @method concat\n*/\nconst concat = internalHelper(({\n  positional\n}) => {\n  return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => reifyPositional(positional).map(normalizeTextValue).join(''), null, 'concat');\n});\nconst context = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.buildUntouchableThis)('`fn` helper');\n\n/**\n  The `fn` helper allows you to ensure a function that you are passing off\n  to another component, helper, or modifier has access to arguments that are\n  available in the template.\n\n  For example, if you have an `each` helper looping over a number of items, you\n  may need to pass a function that expects to receive the item as an argument\n  to a component invoked within the loop. Here's how you could use the `fn`\n  helper to pass both the function and its arguments together:\n\n    ```app/templates/components/items-listing.hbs\n  {{#each @items as |item|}}\n    <DisplayItem @item=item @select={{fn this.handleSelected item}} />\n  {{/each}}\n  ```\n\n  ```app/components/items-list.js\n  import Component from '@glimmer/component';\n  import { action } from '@ember/object';\n\n  export default class ItemsList extends Component {\n    handleSelected = (item) => {\n      // ...snip...\n    }\n  }\n  ```\n\n  In this case the `display-item` component will receive a normal function\n  that it can invoke. When it invokes the function, the `handleSelected`\n  function will receive the `item` and any arguments passed, thanks to the\n  `fn` helper.\n\n  Let's take look at what that means in a couple circumstances:\n\n  - When invoked as `this.args.select()` the `handleSelected` function will\n    receive the `item` from the loop as its first and only argument.\n  - When invoked as `this.args.select('foo')` the `handleSelected` function\n    will receive the `item` from the loop as its first argument and the\n    string `'foo'` as its second argument.\n\n  In the example above, we used an arrow function to ensure that\n  `handleSelected` is properly bound to the `items-list`, but let's explore what\n  happens if we left out the arrow function:\n\n  ```app/components/items-list.js\n  import Component from '@glimmer/component';\n\n  export default class ItemsList extends Component {\n    handleSelected(item) {\n      // ...snip...\n    }\n  }\n  ```\n\n  In this example, when `handleSelected` is invoked inside the `display-item`\n  component, it will **not** have access to the component instance. In other\n  words, it will have no `this` context, so please make sure your functions\n  are bound (via an arrow function or other means) before passing into `fn`!\n\n  See also [partial application](https://en.wikipedia.org/wiki/Partial_application).\n\n  @method fn\n  @public\n*/\nconst fn = internalHelper(({\n  positional\n}) => {\n  let callbackRef = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(positional[0], assertCallbackIsFn);\n  return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    return (...invocationArgs) => {\n      let [fn, ...args] = reifyPositional(positional);\n      if (true) assertCallbackIsFn(callbackRef);\n      if ((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isInvokableRef)(callbackRef)) {\n        let value = args.length > 0 ? args[0] : invocationArgs[0];\n        return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.updateRef)(callbackRef, value);\n      } else {\n        return fn.call(context, ...args, ...invocationArgs);\n      }\n    };\n  }, null, 'fn');\n});\nfunction assertCallbackIsFn(callbackRef) {\n  if (!(callbackRef && ((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.isInvokableRef)(callbackRef) || typeof (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(callbackRef) === 'function'))) {\n    throw new Error(`You must pass a function as the \\`fn\\` helper's first argument, you passed ${callbackRef ? (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(callbackRef) : callbackRef}. While rendering:\\n\\n${callbackRef?.debugLabel}`);\n  }\n}\n\n/**\n  Dynamically look up a property on an object. The second argument to `{{get}}`\n  should have a string value, although it can be bound.\n\n  For example, these two usages are equivalent:\n\n  ```app/components/developer-detail.js\n  import Component from '@glimmer/component';\n  import { tracked } from '@glimmer/tracking';\n\n  export default class extends Component {\n    @tracked developer = {\n      name: \"Sandi Metz\",\n      language: \"Ruby\"\n    }\n  }\n  ```\n\n  ```handlebars\n  {{this.developer.name}}\n  {{get this.developer \"name\"}}\n  ```\n\n  If there were several facts about a person, the `{{get}}` helper can dynamically\n  pick one:\n\n  ```app/templates/application.hbs\n  <DeveloperDetail @factName=\"language\" />\n  ```\n\n  ```handlebars\n  {{get this.developer @factName}}\n  ```\n\n  For a more complex example, this template would allow the user to switch\n  between showing the user's height and weight with a click:\n\n  ```app/components/developer-detail.js\n  import Component from '@glimmer/component';\n  import { tracked } from '@glimmer/tracking';\n\n  export default class extends Component {\n    @tracked developer = {\n      name: \"Sandi Metz\",\n      language: \"Ruby\"\n    }\n\n    @tracked currentFact = 'name'\n\n    showFact = (fact) => {\n      this.currentFact = fact;\n    }\n  }\n  ```\n\n  ```app/components/developer-detail.js\n  {{get this.developer this.currentFact}}\n\n  <button {{on 'click' (fn this.showFact \"name\")}}>Show name</button>\n  <button {{on 'click' (fn this.showFact \"language\")}}>Show language</button>\n  ```\n\n  The `{{get}}` helper can also respect mutable values itself. For example:\n\n  ```app/components/developer-detail.js\n  <Input @value={{mut (get this.person this.currentFact)}} />\n\n  <button {{on 'click' (fn this.showFact \"name\")}}>Show name</button>\n  <button {{on 'click' (fn this.showFact \"language\")}}>Show language</button>\n  ```\n\n  Would allow the user to swap what fact is being displayed, and also edit\n  that fact via a two-way mutable binding.\n\n  @public\n  @method get\n */\nconst get = internalHelper(({\n  positional\n}) => {\n  let sourceRef = positional[0] ?? _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE;\n  let pathRef = positional[1] ?? _reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE;\n  return (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    let source = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(sourceRef);\n    if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.isDict)(source)) {\n      return (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_6__.getPath)(source, String((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(pathRef)));\n    }\n  }, value => {\n    let source = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(sourceRef);\n    if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.isDict)(source)) {\n      return (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_6__.setPath)(source, String((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(pathRef)), value);\n    }\n  }, 'get');\n});\n\n/**\n   Use the `{{hash}}` helper to create a hash to pass as an option to your\n   components. This is specially useful for contextual components where you can\n   just yield a hash:\n\n   ```handlebars\n   {{yield (hash\n      name='Sarah'\n      title=office\n   )}}\n   ```\n\n   Would result in an object such as:\n\n   ```js\n   { name: 'Sarah', title: this.get('office') }\n   ```\n\n   Where the `title` is bound to updates of the `office` property.\n\n   Note that the hash is an empty object with no prototype chain, therefore\n   common methods like `toString` are not available in the resulting hash.\n   If you need to use such a method, you can use the `call` or `apply`\n   approach:\n\n   ```js\n   function toString(obj) {\n     return Object.prototype.toString.apply(obj);\n   }\n   ```\n\n   @method hash\n   @param {Object} options\n   @return {Object} Hash\n   @public\n */\nconst hash = internalHelper(({\n  named\n}) => {\n  let ref = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createComputeRef)(() => {\n    return reifyNamed(named);\n  }, null, 'hash');\n\n  // Setup the children so that templates can bypass getting the value of\n  // the reference and treat children lazily\n  let children = new Map();\n  for (let name in named) {\n    children.set(name, named[name]);\n  }\n  ref.children = children;\n  return ref;\n});\nlet ARGS_CACHES =  true ? new WeakMap() : 0;\nfunction getArgs(proxy) {\n  return (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.getValue)( true ? ARGS_CACHES.get(proxy) : 0);\n}\nclass SimpleArgsProxy {\n  constructor(context, computeArgs = () => EMPTY_ARGS) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"argsCache\", void 0);\n    let argsCache = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.createCache)(() => computeArgs(context));\n    if (true) {\n      ARGS_CACHES.set(this, argsCache);\n      Object.freeze(this);\n    } else {}\n  }\n  get named() {\n    return getArgs(this).named || EMPTY_NAMED;\n  }\n  get positional() {\n    return getArgs(this).positional || EMPTY_POSITIONAL;\n  }\n}\n\n////////////\n\nfunction invokeHelper(context, definition, computeArgs) {\n  if ( true && (typeof context !== 'object' || context === null)) {\n    throw new Error(`Expected a context object to be passed as the first parameter to invokeHelper, got ${context}`);\n  }\n  const owner = (0,_owner_index_js__WEBPACK_IMPORTED_MODULE_10__.getOwner)(context);\n  const internalManager = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.getInternalHelperManager)(definition);\n\n  // TODO: figure out why assert isn't using the TS assert thing\n  if ( true && !internalManager) {\n    throw new Error(`Expected a helper definition to be passed as the second parameter to invokeHelper, but no helper manager was found. The definition value that was passed was \\`${(0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.debugToString)(definition)}\\`. Did you use setHelperManager to associate a helper manager with this value?`);\n  }\n  if ( true && typeof internalManager === 'function') {\n    throw new Error('Found a helper manager, but it was an internal built-in helper manager. `invokeHelper` does not support internal helpers yet.');\n  }\n  const manager = internalManager.getDelegateFor(owner);\n  let args = new SimpleArgsProxy(context, computeArgs);\n  let bucket = manager.createHelper(definition, args);\n  let cache;\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.hasValue)(manager)) {\n    cache = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.createCache)(() => {\n      if ( true && ((0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.isDestroying)(cache) || (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.isDestroyed)(cache))) {\n        throw new Error(`You attempted to get the value of a helper after the helper was destroyed, which is not allowed`);\n      }\n      return manager.getValue(bucket);\n    });\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.associateDestroyableChild)(context, cache);\n  } else {\n    throw new Error('TODO: unreachable, to be implemented with hasScheduledEffect');\n  }\n  if ((0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.hasDestroyable)(manager)) {\n    let destroyable = manager.getDestroyable(bucket);\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.associateDestroyableChild)(cache, destroyable);\n  }\n  return cache;\n}\nconst untouchableContext = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.buildUntouchableThis)('`on` modifier');\nclass OnModifierState {\n  constructor(element, args) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"tag\", (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.createUpdatableTag)());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"element\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"args\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"listener\", null);\n    this.element = element;\n    this.args = args;\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.registerDestructor)(this, () => {\n      let {\n        element,\n        listener\n      } = this;\n      if (listener) {\n        let {\n          eventName,\n          callback,\n          options\n        } = listener;\n        removeEventListener(element, eventName, callback, options);\n      }\n    });\n  }\n\n  // Update this.listener if needed\n  updateListener() {\n    let {\n      element,\n      args,\n      listener\n    } = this;\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(args.positional[0], 'You must pass a valid DOM event name as the first argument to the `on` modifier');\n    let eventName = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(args.positional[0]), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckString, () => 'You must pass a valid DOM event name as the first argument to the `on` modifier');\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(args.positional[1], 'You must pass a function as the second argument to the `on` modifier');\n    let userProvidedCallback = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)((0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(args.positional[1]), _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckFunction, actual => {\n      return `You must pass a function as the second argument to the \\`on\\` modifier; you passed ${actual === null ? 'null' : typeof actual}. While rendering:\\n\\n${args.positional[1]?.debugLabel ?? `{unlabeled value}`}`;\n    });\n    if ( true && args.positional.length !== 2) {\n      throw new Error(`You can only pass two positional arguments (event name and callback) to the \\`on\\` modifier, but you provided ${args.positional.length}. Consider using the \\`fn\\` helper to provide additional arguments to the \\`on\\` callback.`);\n    }\n    let once = undefined;\n    let passive = undefined;\n    let capture = undefined;\n    if (true) {\n      let {\n        once: _once,\n        passive: _passive,\n        capture: _capture,\n        ...extra\n      } = reifyNamed(args.named);\n      once = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(_once, (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOr)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckBoolean, _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckUndefined), actual => {\n        return `You must pass a boolean or undefined as the \\`once\\` argument to the \\`on\\` modifier; you passed ${actual}. While rendering:\\n\\n${args.named['once'].debugLabel ?? `{unlabeled value}`}`;\n      });\n      passive = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(_passive, (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOr)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckBoolean, _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckUndefined), actual => {\n        return `You must pass a boolean or undefined as the \\`passive\\` argument to the \\`on\\` modifier; you passed ${actual}. While rendering:\\n\\n${args.named['passive'].debugLabel ?? `{unlabeled value}`}`;\n      });\n      capture = (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.check)(_capture, (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckOr)(_debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckBoolean, _debug_index_js__WEBPACK_IMPORTED_MODULE_1__.CheckUndefined), actual => {\n        return `You must pass a boolean or undefined as the \\`capture\\` argument to the \\`on\\` modifier; you passed ${actual}. While rendering:\\n\\n${args.named['capture'].debugLabel ?? `{unlabeled value}`}`;\n      });\n      if (Object.keys(extra).length > 0) {\n        throw new Error(`You can only \\`once\\`, \\`passive\\` or \\`capture\\` named arguments to the \\`on\\` modifier, but you provided ${Object.keys(extra).join(', ')}.`);\n      }\n    } else {}\n    let shouldUpdate = false;\n    if (listener === null) {\n      shouldUpdate = true;\n    } else {\n      shouldUpdate = eventName !== listener.eventName || userProvidedCallback !== listener.userProvidedCallback || once !== listener.once || passive !== listener.passive || capture !== listener.capture;\n    }\n    let options = undefined;\n\n    // we want to handle both `true` and `false` because both have a meaning:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=770208\n    if (shouldUpdate) {\n      if (once !== undefined || passive !== undefined || capture !== undefined) {\n        options = {\n          once,\n          passive,\n          capture\n        };\n      }\n    }\n    if (shouldUpdate) {\n      let callback = userProvidedCallback;\n      if (true) {\n        callback = userProvidedCallback.bind(untouchableContext);\n        if (passive) {\n          let _callback = callback;\n          callback = event => {\n            event.preventDefault = () => {\n              throw new Error(`You marked this listener as 'passive', meaning that you must not call 'event.preventDefault()': \\n\\n${userProvidedCallback.name ?? `{anonymous function}`}`);\n            };\n            return _callback(event);\n          };\n        }\n      }\n      this.listener = {\n        eventName,\n        callback,\n        userProvidedCallback,\n        once,\n        passive,\n        capture,\n        options\n      };\n      if (listener) {\n        removeEventListener(element, listener.eventName, listener.callback, listener.options);\n      }\n      addEventListener(element, eventName, callback, options);\n    }\n  }\n}\nlet adds = 0;\nlet removes = 0;\nfunction removeEventListener(element, eventName, callback, options) {\n  removes++;\n  element.removeEventListener(eventName, callback, options);\n}\nfunction addEventListener(element, eventName, callback, options) {\n  adds++;\n  element.addEventListener(eventName, callback, options);\n}\n\n/**\n  The `{{on}}` modifier lets you easily add event listeners (it uses\n  [EventTarget.addEventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\n  internally).\n\n  For example, if you'd like to run a function on your component when a `<button>`\n  in the components template is clicked you might do something like:\n\n  ```app/components/like-post.hbs\n  <button {{on 'click' this.saveLike}}>Like this post!</button>\n  ```\n\n  ```app/components/like-post.js\n  import Component from '@glimmer/component';\n  import { action } from '@ember/object';\n\n  export default class LikePostComponent extends Component {\n    saveLike = () => {\n      // someone likes your post!\n      // better send a request off to your server...\n    }\n  }\n  ```\n\n  ### Arguments\n\n  `{{on}}` accepts two positional arguments, and a few named arguments.\n\n  The positional arguments are:\n\n  - `event` -- the name to use when calling `addEventListener`\n  - `callback` -- the function to be passed to `addEventListener`\n\n  The named arguments are:\n\n  - capture -- a `true` value indicates that events of this type will be dispatched\n    to the registered listener before being dispatched to any EventTarget beneath it\n    in the DOM tree.\n  - once -- indicates that the listener should be invoked at most once after being\n    added. If true, the listener would be automatically removed when invoked.\n  - passive -- if `true`, indicates that the function specified by listener will never\n    call preventDefault(). If a passive listener does call preventDefault(), the user\n    agent will do nothing other than generate a console warning. See\n    [Improving scrolling performance with passive listeners](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Improving_scrolling_performance_with_passive_listeners)\n    to learn more.\n\n  The callback function passed to `{{on}}` will receive any arguments that are passed\n  to the event handler. Most commonly this would be the `event` itself.\n\n  If you would like to pass additional arguments to the function you should use\n  the `{{fn}}` helper.\n\n  For example, in our example case above if you'd like to pass in the post that\n  was being liked when the button is clicked you could do something like:\n\n  ```app/components/like-post.hbs\n  <button {{on 'click' (fn this.saveLike @post)}}>Like this post!</button>\n  ```\n\n  In this case, the `saveLike` function will receive two arguments: the click event\n  and the value of `@post`.\n\n  ### Function Context\n\n  In the example above, we used an arrow function to ensure that `likePost` is\n  properly bound to the `items-list`, but let's explore what happens if we\n  left out the arrow function:\n\n  ```app/components/like-post.js\n  import Component from '@glimmer/component';\n\n  export default class LikePostComponent extends Component {\n    saveLike() {\n      // ...snip...\n    }\n  }\n  ```\n\n  In this example, when the button is clicked `saveLike` will be invoked,\n  it will **not** have access to the component instance. In other\n  words, it will have no `this` context, so please make sure your functions\n  are bound (via an arrow function or other means) before passing into `on`!\n\n  @method on\n  @public\n*/\nclass OnModifierManager {\n  getDebugName() {\n    return 'on';\n  }\n  getDebugInstance() {\n    return null;\n  }\n  get counters() {\n    return {\n      adds,\n      removes\n    };\n  }\n  create(_owner, element, _state, args) {\n    return new OnModifierState(element, args);\n  }\n  getTag({\n    tag\n  }) {\n    return tag;\n  }\n  install(state) {\n    state.updateListener();\n  }\n  update(state) {\n    state.updateListener();\n  }\n  getDestroyable(state) {\n    return state;\n  }\n}\nconst on = (0,_manager_index_js__WEBPACK_IMPORTED_MODULE_7__.setInternalModifierManager)(new OnModifierManager(), {});\nfunction initializeRegistersWithSP(sp) {\n  return [0, -1, sp, 0];\n}\nclass LowLevelVM {\n  constructor(stack, heap, program, externs, registers) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentOpSize\", 0);\n    this.stack = stack;\n    this.heap = heap;\n    this.program = program;\n    this.externs = externs;\n    this.registers = registers;\n  }\n  fetchRegister(register) {\n    return this.registers[register];\n  }\n  loadRegister(register, value) {\n    this.registers[register] = value;\n  }\n  setPc(pc) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(typeof pc === 'number' && !isNaN(pc), 'pc is set to a number');\n    this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$pc] = pc;\n  }\n\n  // Start a new frame and save $ra and $fp on the stack\n  pushFrame() {\n    this.stack.push(this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$ra]);\n    this.stack.push(this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$fp]);\n    this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$fp] = this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp] - 1;\n  }\n\n  // Restore $ra, $sp and $fp\n  popFrame() {\n    this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp] = this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$fp] - 1;\n    this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$ra] = this.stack.get(0);\n    this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$fp] = this.stack.get(1);\n  }\n  pushSmallFrame() {\n    this.stack.push(this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$ra]);\n  }\n  popSmallFrame() {\n    this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$ra] = this.stack.pop();\n  }\n\n  // Jump to an address in `program`\n  goto(offset) {\n    this.setPc(this.target(offset));\n  }\n  target(offset) {\n    return this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$pc] + offset - this.currentOpSize;\n  }\n\n  // Save $pc into $ra, then jump to a new address in `program` (jal in MIPS)\n  call(handle) {\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(handle < 0xffffffff, `Jumping to placeholder address`);\n    this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$ra] = this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$pc];\n    this.setPc(this.heap.getaddr(handle));\n  }\n\n  // Put a specific `program` address in $ra\n  returnTo(offset) {\n    this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$ra] = this.target(offset);\n  }\n\n  // Return to the `program` address stored in $ra\n  return() {\n    this.setPc(this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$ra]);\n  }\n  nextStatement() {\n    let {\n      registers,\n      program\n    } = this;\n    let pc = registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$pc];\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(typeof pc === 'number', 'pc is a number');\n    if (pc === -1) {\n      return null;\n    }\n\n    // We have to save off the current operations size so that\n    // when we do a jump we can calculate the correct offset\n    // to where we are going. We can't simply ask for the size\n    // in a jump because we have have already incremented the\n    // program counter to the next instruction prior to executing.\n    let opcode = program.opcode(pc);\n    let operationSize = this.currentOpSize = opcode.size;\n    this.registers[_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$pc] += operationSize;\n    return opcode;\n  }\n  evaluateOuter(opcode, vm) {\n    {\n      this.evaluateInner(opcode, vm);\n    }\n  }\n  evaluateInner(opcode, vm) {\n    if (opcode.isMachine) {\n      this.evaluateMachine(opcode);\n    } else {\n      this.evaluateSyscall(opcode, vm);\n    }\n  }\n  evaluateMachine(opcode) {\n    switch (opcode.type) {\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.MachineOp.PushFrame:\n        return this.pushFrame();\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.MachineOp.PopFrame:\n        return this.popFrame();\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.MachineOp.InvokeStatic:\n        return this.call(opcode.op1);\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.MachineOp.InvokeVirtual:\n        return this.call(this.stack.pop());\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.MachineOp.Jump:\n        return this.goto(opcode.op1);\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.MachineOp.Return:\n        return this.return();\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.MachineOp.ReturnTo:\n        return this.returnTo(opcode.op1);\n    }\n  }\n  evaluateSyscall(opcode, vm) {\n    APPEND_OPCODES.evaluate(vm, opcode, opcode.type);\n  }\n}\nclass UpdatingVM {\n  constructor(env, {\n    alwaysRevalidate = false\n  }) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"env\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dom\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"alwaysRevalidate\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"frameStack\", new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n    this.env = env;\n    this.dom = env.getDOM();\n    this.alwaysRevalidate = alwaysRevalidate;\n  }\n  execute(opcodes, handler) {\n    if (true) {\n      let hasErrored = true;\n      try {\n        _validator_index_js__WEBPACK_IMPORTED_MODULE_8__.debug.runInTrackingTransaction(() => this._execute(opcodes, handler), '- While rendering:');\n\n        // using a boolean here to avoid breaking ergonomics of \"pause on uncaught exceptions\"\n        // which would happen with a `catch` + `throw`\n        hasErrored = false;\n      } finally {\n        if (hasErrored) {\n          // eslint-disable-next-line no-console\n          console.error(`\\n\\nError occurred:\\n\\n${(0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.resetTracking)()}\\n\\n`);\n        }\n      }\n    } else {}\n  }\n  _execute(opcodes, handler) {\n    let {\n      frameStack\n    } = this;\n    this.try(opcodes, handler);\n    while (!frameStack.isEmpty()) {\n      let opcode = this.frame.nextStatement();\n      if (opcode === undefined) {\n        frameStack.pop();\n        continue;\n      }\n      opcode.evaluate(this);\n    }\n  }\n  get frame() {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this.frameStack.current, 'bug: expected a frame');\n  }\n  goto(index) {\n    this.frame.goto(index);\n  }\n  try(ops, handler) {\n    this.frameStack.push(new UpdatingVMFrame(ops, handler));\n  }\n  throw() {\n    this.frame.handleException();\n    this.frameStack.pop();\n  }\n}\nclass ResumableVMStateImpl {\n  constructor(state, resumeCallback) {\n    this.state = state;\n    this.resumeCallback = resumeCallback;\n  }\n  resume(runtime, builder) {\n    return this.resumeCallback(runtime, this.state, builder);\n  }\n}\nclass BlockOpcode {\n  constructor(state, runtime, bounds, children) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"children\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"bounds\", void 0);\n    this.state = state;\n    this.runtime = runtime;\n    this.children = children;\n    this.bounds = bounds;\n  }\n  parentElement() {\n    return this.bounds.parentElement();\n  }\n  firstNode() {\n    return this.bounds.firstNode();\n  }\n  lastNode() {\n    return this.bounds.lastNode();\n  }\n  evaluate(vm) {\n    vm.try(this.children, null);\n  }\n}\nclass TryOpcode extends BlockOpcode {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"type\", 'try');\n  }\n  // Hides property on base class\n\n  evaluate(vm) {\n    vm.try(this.children, this);\n  }\n  handleException() {\n    let {\n      state,\n      bounds,\n      runtime\n    } = this;\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.destroyChildren)(this);\n    let elementStack = NewElementBuilder.resume(runtime.env, bounds);\n    let vm = state.resume(runtime, elementStack);\n    let updating = [];\n    let children = this.children = [];\n    let result = vm.execute(vm => {\n      vm.pushUpdating(updating);\n      vm.updateWith(this);\n      vm.pushUpdating(children);\n    });\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.associateDestroyableChild)(this, result.drop);\n  }\n}\nclass ListItemOpcode extends TryOpcode {\n  constructor(state, runtime, bounds, key, memo, value) {\n    super(state, runtime, bounds, []);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"retained\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"index\", -1);\n    this.key = key;\n    this.memo = memo;\n    this.value = value;\n  }\n  updateReferences(item) {\n    this.retained = true;\n    (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.updateRef)(this.value, item.value);\n    (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.updateRef)(this.memo, item.memo);\n  }\n  shouldRemove() {\n    return !this.retained;\n  }\n  reset() {\n    this.retained = false;\n  }\n}\nclass ListBlockOpcode extends BlockOpcode {\n  constructor(state, runtime, bounds, children, iterableRef) {\n    super(state, runtime, bounds, children);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"type\", 'list-block');\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"opcodeMap\", new Map());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"marker\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastIterator\", void 0);\n    this.iterableRef = iterableRef;\n    this.lastIterator = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(iterableRef);\n  }\n  initializeChild(opcode) {\n    opcode.index = this.children.length - 1;\n    this.opcodeMap.set(opcode.key, opcode);\n  }\n  evaluate(vm) {\n    let iterator = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.valueForRef)(this.iterableRef);\n    if (this.lastIterator !== iterator) {\n      let {\n        bounds\n      } = this;\n      let {\n        dom\n      } = vm;\n      let marker = this.marker = dom.createComment('');\n      dom.insertAfter(bounds.parentElement(), marker, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(bounds.lastNode(), \"can't insert after an empty bounds\"));\n      this.sync(iterator);\n      this.parentElement().removeChild(marker);\n      this.marker = null;\n      this.lastIterator = iterator;\n    }\n\n    // Run now-updated updating opcodes\n    super.evaluate(vm);\n  }\n  sync(iterator) {\n    let {\n      opcodeMap: itemMap,\n      children\n    } = this;\n    let currentOpcodeIndex = 0;\n    let seenIndex = 0;\n    this.children = this.bounds.boundList = [];\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      let item = iterator.next();\n      if (item === null) break;\n      let opcode = children[currentOpcodeIndex];\n      let {\n        key\n      } = item;\n\n      // Items that have already been found and moved will already be retained,\n      // we can continue until we find the next unretained item\n      while (opcode !== undefined && opcode.retained === true) {\n        opcode = children[++currentOpcodeIndex];\n      }\n      if (opcode !== undefined && opcode.key === key) {\n        this.retainItem(opcode, item);\n        currentOpcodeIndex++;\n      } else if (itemMap.has(key)) {\n        let itemOpcode = itemMap.get(key);\n\n        // The item opcode was seen already, so we should move it.\n        if (itemOpcode.index < seenIndex) {\n          this.moveItem(itemOpcode, item, opcode);\n        } else {\n          // Update the seen index, we are going to be moving this item around\n          // so any other items that come before it will likely need to move as\n          // well.\n          seenIndex = itemOpcode.index;\n          let seenUnretained = false;\n\n          // iterate through all of the opcodes between the current position and\n          // the position of the item's opcode, and determine if they are all\n          // retained.\n          for (let i = currentOpcodeIndex + 1; i < seenIndex; i++) {\n            if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(children[i]).retained === false) {\n              seenUnretained = true;\n              break;\n            }\n          }\n\n          // If we have seen only retained opcodes between this and the matching\n          // opcode, it means that all the opcodes in between have been moved\n          // already, and we can safely retain this item's opcode.\n          if (seenUnretained === false) {\n            this.retainItem(itemOpcode, item);\n            currentOpcodeIndex = seenIndex + 1;\n          } else {\n            this.moveItem(itemOpcode, item, opcode);\n            currentOpcodeIndex++;\n          }\n        }\n      } else {\n        this.insertItem(item, opcode);\n      }\n    }\n    for (const opcode of children) {\n      if (opcode.retained === false) {\n        this.deleteItem(opcode);\n      } else {\n        opcode.reset();\n      }\n    }\n  }\n  retainItem(opcode, item) {\n    let {\n      children\n    } = this;\n    (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.updateRef)(opcode.memo, item.memo);\n    (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.updateRef)(opcode.value, item.value);\n    opcode.retained = true;\n    opcode.index = children.length;\n    children.push(opcode);\n  }\n  insertItem(item, before) {\n    let {\n      opcodeMap,\n      bounds,\n      state,\n      runtime,\n      children\n    } = this;\n    let {\n      key\n    } = item;\n    let nextSibling = before === undefined ? this.marker : before.firstNode();\n    let elementStack = NewElementBuilder.forInitialRender(runtime.env, {\n      element: bounds.parentElement(),\n      nextSibling\n    });\n    let vm = state.resume(runtime, elementStack);\n    vm.execute(vm => {\n      vm.pushUpdating();\n      let opcode = vm.enterItem(item);\n      opcode.index = children.length;\n      children.push(opcode);\n      opcodeMap.set(key, opcode);\n      (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.associateDestroyableChild)(this, opcode);\n    });\n  }\n  moveItem(opcode, item, before) {\n    let {\n      children\n    } = this;\n    (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.updateRef)(opcode.memo, item.memo);\n    (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.updateRef)(opcode.value, item.value);\n    opcode.retained = true;\n    let currentSibling, nextSibling;\n    if (before === undefined) {\n      move(opcode, this.marker);\n    } else {\n      currentSibling = opcode.lastNode().nextSibling;\n      nextSibling = before.firstNode();\n\n      // Items are moved throughout the algorithm, so there are cases where the\n      // the items already happen to be siblings (e.g. an item in between was\n      // moved before this move happened). Check to see if they are siblings\n      // first before doing the move.\n      if (currentSibling !== nextSibling) {\n        move(opcode, nextSibling);\n      }\n    }\n    opcode.index = children.length;\n    children.push(opcode);\n  }\n  deleteItem(opcode) {\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.destroy)(opcode);\n    clear(opcode);\n    this.opcodeMap.delete(opcode.key);\n  }\n}\nclass UpdatingVMFrame {\n  constructor(ops, exceptionHandler) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"current\", 0);\n    this.ops = ops;\n    this.exceptionHandler = exceptionHandler;\n  }\n  goto(index) {\n    this.current = index;\n  }\n  nextStatement() {\n    return this.ops[this.current++];\n  }\n  handleException() {\n    if (this.exceptionHandler) {\n      this.exceptionHandler.handleException();\n    }\n  }\n}\nclass RenderResultImpl {\n  constructor(env, updating, bounds, drop) {\n    this.env = env;\n    this.updating = updating;\n    this.bounds = bounds;\n    this.drop = drop;\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.associateDestroyableChild)(this, drop);\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.registerDestructor)(this, () => clear(this.bounds));\n  }\n  rerender({\n    alwaysRevalidate = false\n  } = {\n    alwaysRevalidate: false\n  }) {\n    let {\n      env,\n      updating\n    } = this;\n    let vm = new UpdatingVM(env, {\n      alwaysRevalidate\n    });\n    vm.execute(updating, this);\n  }\n  parentElement() {\n    return this.bounds.parentElement();\n  }\n  firstNode() {\n    return this.bounds.firstNode();\n  }\n  lastNode() {\n    return this.bounds.lastNode();\n  }\n  handleException() {\n    throw 'this should never happen';\n  }\n}\nclass EvaluationStackImpl {\n  static restore(snapshot) {\n    return new this(snapshot.slice(), initializeRegistersWithSP(snapshot.length - 1));\n  }\n  // fp -> sp\n  constructor(stack = [], registers) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, REGISTERS, void 0);\n    this.stack = stack;\n    this[REGISTERS] = registers;\n  }\n  push(value) {\n    this.stack[++this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp]] = value;\n  }\n  dup(position = this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp]) {\n    this.stack[++this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp]] = this.stack[position];\n  }\n  copy(from, to) {\n    this.stack[to] = this.stack[from];\n  }\n  pop(n = 1) {\n    let top = this.stack[this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp]];\n    this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp] -= n;\n    return top;\n  }\n  peek(offset = 0) {\n    return this.stack[this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp] - offset];\n  }\n  get(offset, base = this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$fp]) {\n    return this.stack[base + offset];\n  }\n  set(value, offset, base = this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$fp]) {\n    this.stack[base + offset] = value;\n  }\n  slice(start, end) {\n    return this.stack.slice(start, end);\n  }\n  capture(items) {\n    let end = this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp] + 1;\n    let start = end - items;\n    return this.stack.slice(start, end);\n  }\n  reset() {\n    this.stack.length = 0;\n  }\n  toArray() {\n    return this.stack.slice(this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$fp], this[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp] + 1);\n  }\n}\n\n/**\n * This interface is used by internal opcodes, and is more stable than\n * the implementation of the Append VM itself.\n */\n\nclass Stacks {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"scope\", new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dynamicScope\", new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"updating\", new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"cache\", new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"list\", new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n  }\n}\nclass VM {\n  get stack() {\n    return this[INNER_VM].stack;\n  }\n\n  /* Registers */\n\n  get pc() {\n    return this[INNER_VM].fetchRegister(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$pc);\n  }\n  // Fetch a value from a register onto the stack\n  fetch(register) {\n    let value = this.fetchValue(register);\n    this.stack.push(value);\n  }\n\n  // Load a value from the stack into a register\n  load(register) {\n    let value = this.stack.pop();\n    this.loadValue(register, value);\n  }\n\n  // Fetch a value from a register\n\n  fetchValue(register) {\n    if ((0,_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.isLowLevelRegister)(register)) {\n      return this[INNER_VM].fetchRegister(register);\n    }\n    switch (register) {\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$s0:\n        return this.s0;\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$s1:\n        return this.s1;\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t0:\n        return this.t0;\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t1:\n        return this.t1;\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$v0:\n        return this.v0;\n    }\n  }\n\n  // Load a value into a register\n\n  loadValue(register, value) {\n    if ((0,_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.isLowLevelRegister)(register)) {\n      this[INNER_VM].loadRegister(register, value);\n    }\n    switch (register) {\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$s0:\n        this.s0 = value;\n        break;\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$s1:\n        this.s1 = value;\n        break;\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t0:\n        this.t0 = value;\n        break;\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$t1:\n        this.t1 = value;\n        break;\n      case _vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$v0:\n        this.v0 = value;\n        break;\n    }\n  }\n\n  /**\n   * Migrated to Inner\n   */\n\n  // Start a new frame and save $ra and $fp on the stack\n  pushFrame() {\n    this[INNER_VM].pushFrame();\n  }\n\n  // Restore $ra, $sp and $fp\n  popFrame() {\n    this[INNER_VM].popFrame();\n  }\n\n  // Jump to an address in `program`\n  goto(offset) {\n    this[INNER_VM].goto(offset);\n  }\n\n  // Save $pc into $ra, then jump to a new address in `program` (jal in MIPS)\n  call(handle) {\n    this[INNER_VM].call(handle);\n  }\n\n  // Put a specific `program` address in $ra\n  returnTo(offset) {\n    this[INNER_VM].returnTo(offset);\n  }\n\n  // Return to the `program` address stored in $ra\n  return() {\n    this[INNER_VM].return();\n  }\n\n  /**\n   * End of migrated.\n   */\n\n  constructor(runtime, {\n    pc,\n    scope,\n    dynamicScope,\n    stack\n  }, elementStack, context) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, STACKS, new Stacks());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, HEAP, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"destructor\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, DESTROYABLE_STACK, new _util_index_js__WEBPACK_IMPORTED_MODULE_3__.Stack());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, CONSTANTS, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ARGS$1, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, INNER_VM, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"s0\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"s1\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"t0\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"t1\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"v0\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"resume\", void 0);\n    this.runtime = runtime;\n    this.elementStack = elementStack;\n    this.context = context;\n    if (true) {\n      (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_6__.assertGlobalContextWasSet)();\n    }\n    this.resume = initVM(context);\n    let evalStack = EvaluationStackImpl.restore(stack);\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(typeof pc === 'number', 'pc is a number');\n    evalStack[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$pc] = pc;\n    evalStack[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$sp] = stack.length - 1;\n    evalStack[REGISTERS][_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$fp] = -1;\n    this[HEAP] = this.program.heap;\n    this[CONSTANTS] = this.program.constants;\n    this.elementStack = elementStack;\n    this[STACKS].scope.push(scope);\n    this[STACKS].dynamicScope.push(dynamicScope);\n    this[ARGS$1] = new VMArgumentsImpl();\n    this[INNER_VM] = new LowLevelVM(evalStack, this[HEAP], runtime.program, {\n      debugBefore: opcode => {\n        return APPEND_OPCODES.debugBefore(this, opcode);\n      },\n      debugAfter: state => {\n        APPEND_OPCODES.debugAfter(this, state);\n      }\n    }, evalStack[REGISTERS]);\n    this.destructor = {};\n    this[DESTROYABLE_STACK].push(this.destructor);\n  }\n  static initial(runtime, context, {\n    handle,\n    self,\n    dynamicScope,\n    treeBuilder,\n    numSymbols,\n    owner\n  }) {\n    let scope = PartialScopeImpl.root(self, numSymbols, owner);\n    let state = vmState(runtime.program.heap.getaddr(handle), scope, dynamicScope);\n    let vm = initVM(context)(runtime, state, treeBuilder);\n    vm.pushUpdating();\n    return vm;\n  }\n  static empty(runtime, {\n    handle,\n    treeBuilder,\n    dynamicScope,\n    owner\n  }, context) {\n    let vm = initVM(context)(runtime, vmState(runtime.program.heap.getaddr(handle), PartialScopeImpl.root(_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED_REFERENCE, 0, owner), dynamicScope), treeBuilder);\n    vm.pushUpdating();\n    return vm;\n  }\n  compile(block) {\n    let handle = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrapHandle)(block.compile(this.context));\n    return handle;\n  }\n  get program() {\n    return this.runtime.program;\n  }\n  get env() {\n    return this.runtime.env;\n  }\n  captureState(args, pc = this[INNER_VM].fetchRegister(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$pc)) {\n    return {\n      pc,\n      scope: this.scope(),\n      dynamicScope: this.dynamicScope(),\n      stack: this.stack.capture(args)\n    };\n  }\n  capture(args, pc = this[INNER_VM].fetchRegister(_vm_index_js__WEBPACK_IMPORTED_MODULE_4__.$pc)) {\n    return new ResumableVMStateImpl(this.captureState(args, pc), this.resume);\n  }\n  beginCacheGroup(name) {\n    let opcodes = this.updating();\n    let guard = new JumpIfNotModifiedOpcode();\n    opcodes.push(guard);\n    opcodes.push(new BeginTrackFrameOpcode(name));\n    this[STACKS].cache.push(guard);\n    (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.beginTrackFrame)(name);\n  }\n  commitCacheGroup() {\n    let opcodes = this.updating();\n    let guard = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this[STACKS].cache.pop(), 'VM BUG: Expected a cache group');\n    let tag = (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.endTrackFrame)();\n    opcodes.push(new EndTrackFrameOpcode(guard));\n    guard.finalize(tag, opcodes.length);\n  }\n  enter(args) {\n    let updating = [];\n    let state = this.capture(args);\n    let block = this.elements().pushUpdatableBlock();\n    let tryOpcode = new TryOpcode(state, this.runtime, block, updating);\n    this.didEnter(tryOpcode);\n  }\n  enterItem({\n    key,\n    value,\n    memo\n  }) {\n    let {\n      stack\n    } = this;\n    let valueRef = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createIteratorItemRef)(value);\n    let memoRef = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createIteratorItemRef)(memo);\n    stack.push(valueRef);\n    stack.push(memoRef);\n    let state = this.capture(2);\n    let block = this.elements().pushUpdatableBlock();\n    let opcode = new ListItemOpcode(state, this.runtime, block, key, memoRef, valueRef);\n    this.didEnter(opcode);\n    return opcode;\n  }\n  registerItem(opcode) {\n    this.listBlock().initializeChild(opcode);\n  }\n  enterList(iterableRef, offset) {\n    let updating = [];\n    let addr = this[INNER_VM].target(offset);\n    let state = this.capture(0, addr);\n    let list = this.elements().pushBlockList(updating);\n    let opcode = new ListBlockOpcode(state, this.runtime, list, updating, iterableRef);\n    this[STACKS].list.push(opcode);\n    this.didEnter(opcode);\n  }\n  didEnter(opcode) {\n    this.associateDestroyable(opcode);\n    this[DESTROYABLE_STACK].push(opcode);\n    this.updateWith(opcode);\n    this.pushUpdating(opcode.children);\n  }\n  exit() {\n    this[DESTROYABLE_STACK].pop();\n    this.elements().popBlock();\n    this.popUpdating();\n  }\n  exitList() {\n    this.exit();\n    this[STACKS].list.pop();\n  }\n  pushUpdating(list = []) {\n    this[STACKS].updating.push(list);\n  }\n  popUpdating() {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this[STACKS].updating.pop(), \"can't pop an empty stack\");\n  }\n  updateWith(opcode) {\n    this.updating().push(opcode);\n  }\n  listBlock() {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this[STACKS].list.current, 'expected a list block');\n  }\n  associateDestroyable(child) {\n    let parent = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this[DESTROYABLE_STACK].current, 'Expected destructor parent');\n    (0,_destroyable_index_js__WEBPACK_IMPORTED_MODULE_5__.associateDestroyableChild)(parent, child);\n  }\n  tryUpdating() {\n    return this[STACKS].updating.current;\n  }\n  updating() {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this[STACKS].updating.current, 'expected updating opcode on the updating opcode stack');\n  }\n  elements() {\n    return this.elementStack;\n  }\n  scope() {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this[STACKS].scope.current, 'expected scope on the scope stack');\n  }\n  dynamicScope() {\n    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(this[STACKS].dynamicScope.current, 'expected dynamic scope on the dynamic scope stack');\n  }\n  pushChildScope() {\n    this[STACKS].scope.push(this.scope().child());\n  }\n  pushDynamicScope() {\n    let child = this.dynamicScope().child();\n    this[STACKS].dynamicScope.push(child);\n    return child;\n  }\n  pushRootScope(size, owner) {\n    let scope = PartialScopeImpl.sized(size, owner);\n    this[STACKS].scope.push(scope);\n    return scope;\n  }\n  pushScope(scope) {\n    this[STACKS].scope.push(scope);\n  }\n  popScope() {\n    this[STACKS].scope.pop();\n  }\n  popDynamicScope() {\n    this[STACKS].dynamicScope.pop();\n  }\n\n  /// SCOPE HELPERS\n\n  getOwner() {\n    return this.scope().owner;\n  }\n  getSelf() {\n    return this.scope().getSelf();\n  }\n  referenceForSymbol(symbol) {\n    return this.scope().getSymbol(symbol);\n  }\n\n  /// EXECUTION\n\n  execute(initialize) {\n    if (true) {\n      let hasErrored = true;\n      try {\n        let value = this._execute(initialize);\n\n        // using a boolean here to avoid breaking ergonomics of \"pause on uncaught exceptions\"\n        // which would happen with a `catch` + `throw`\n        hasErrored = false;\n        return value;\n      } finally {\n        if (hasErrored) {\n          // If any existing blocks are open, due to an error or something like\n          // that, we need to close them all and clean things up properly.\n          let elements = this.elements();\n          while (elements.hasBlocks) {\n            elements.popBlock();\n          }\n\n          // eslint-disable-next-line no-console\n          console.error(`\\n\\nError occurred:\\n\\n${(0,_validator_index_js__WEBPACK_IMPORTED_MODULE_8__.resetTracking)()}\\n\\n`);\n        }\n      }\n    } else {}\n  }\n  _execute(initialize) {\n    if (initialize) initialize(this);\n    let result;\n    do result = this.next(); while (!result.done);\n    return result.value;\n  }\n  next() {\n    let {\n      env,\n      elementStack\n    } = this;\n    let opcode = this[INNER_VM].nextStatement();\n    let result;\n    if (opcode !== null) {\n      this[INNER_VM].evaluateOuter(opcode, this);\n      result = {\n        done: false,\n        value: null\n      };\n    } else {\n      // Unload the stack\n      this.stack.reset();\n      result = {\n        done: true,\n        value: new RenderResultImpl(env, this.popUpdating(), elementStack.popBlock(), this.destructor)\n      };\n    }\n    return result;\n  }\n  bindDynamicScope(names) {\n    let scope = this.dynamicScope();\n    for (const name of (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.reverse)(names)) {\n      scope.set(name, this.stack.pop());\n    }\n  }\n}\nfunction vmState(pc, scope, dynamicScope) {\n  return {\n    pc,\n    scope,\n    dynamicScope,\n    stack: []\n  };\n}\nfunction initVM(context) {\n  return (runtime, state, builder) => new VM(runtime, state, builder, context);\n}\nclass TemplateIteratorImpl {\n  constructor(vm) {\n    this.vm = vm;\n  }\n  next() {\n    return this.vm.next();\n  }\n  sync() {\n    if (true) {\n      return _validator_index_js__WEBPACK_IMPORTED_MODULE_8__.debug.runInTrackingTransaction(() => this.vm.execute(), '- While rendering:');\n    } else {}\n  }\n}\nfunction renderSync(env, iterator) {\n  let result;\n  inTransaction(env, () => result = iterator.sync());\n  return result;\n}\nfunction renderMain(runtime, context, owner, self, treeBuilder, layout, dynamicScope = new DynamicScopeImpl()) {\n  let handle = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrapHandle)(layout.compile(context));\n  let numSymbols = layout.symbolTable.symbols.length;\n  let vm = VM.initial(runtime, context, {\n    self,\n    dynamicScope,\n    treeBuilder,\n    handle,\n    numSymbols,\n    owner\n  });\n  return new TemplateIteratorImpl(vm);\n}\nfunction renderInvocation(vm, context, owner, definition, args) {\n  // Get a list of tuples of argument names and references, like\n  // [['title', reference], ['name', reference]]\n  const argList = Object.keys(args).map(key => [key, args[key]]);\n  const blockNames = ['main', 'else', 'attrs'];\n  // Prefix argument names with `@` symbol\n  const argNames = argList.map(([name]) => `@${name}`);\n  let reified = vm[CONSTANTS].component(definition, owner);\n  vm.pushFrame();\n\n  // Push blocks on to the stack, three stack values per block\n  for (let i = 0; i < 3 * blockNames.length; i++) {\n    vm.stack.push(null);\n  }\n  vm.stack.push(null);\n\n  // For each argument, push its backing reference on to the stack\n  argList.forEach(([, reference]) => {\n    vm.stack.push(reference);\n  });\n\n  // Configure VM based on blocks and args just pushed on to the stack.\n  vm[ARGS$1].setup(vm.stack, argNames, blockNames, 0, true);\n  const compilable = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(reified.compilable, 'BUG: Expected the root component rendered with renderComponent to have an associated template, set with setComponentTemplate');\n  const layoutHandle = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.unwrapHandle)(compilable.compile(context));\n  const invocation = {\n    handle: layoutHandle,\n    symbolTable: compilable.symbolTable\n  };\n\n  // Needed for the Op.Main opcode: arguments, component invocation object, and\n  // component definition.\n  vm.stack.push(vm[ARGS$1]);\n  vm.stack.push(invocation);\n  vm.stack.push(reified);\n  return new TemplateIteratorImpl(vm);\n}\nfunction renderComponent(runtime, treeBuilder, context, owner, definition, args = {}, dynamicScope = new DynamicScopeImpl()) {\n  let vm = VM.empty(runtime, {\n    treeBuilder,\n    handle: context.stdlib.main,\n    dynamicScope,\n    owner\n  }, context);\n  return renderInvocation(vm, context, owner, definition, recordToReference(args));\n}\nfunction recordToReference(record) {\n  const root = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.createConstRef)(record, 'args');\n  return Object.keys(record).reduce((acc, key) => {\n    acc[key] = (0,_reference_index_js__WEBPACK_IMPORTED_MODULE_2__.childRefFor)(root, key);\n    return acc;\n  }, {});\n}\nconst SERIALIZATION_FIRST_NODE_STRING = '%+b:0%';\nfunction isSerializationFirstNode(node) {\n  return node.nodeValue === SERIALIZATION_FIRST_NODE_STRING;\n}\nclass RehydratingCursor extends CursorImpl {\n  constructor(element, nextSibling, startingBlockDepth) {\n    super(element, nextSibling);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"candidate\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"openBlockDepth\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"injectedOmittedNode\", false);\n    this.startingBlockDepth = startingBlockDepth;\n    this.openBlockDepth = startingBlockDepth - 1;\n  }\n}\nclass RehydrateBuilder extends NewElementBuilder {\n  constructor(env, parentNode, nextSibling) {\n    super(env, parentNode, nextSibling);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"unmatchedAttributes\", null);\n    // Hides property on base class\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"blockDepth\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"startingBlockOffset\", void 0);\n    if (nextSibling) throw new Error('Rehydration with nextSibling not supported');\n    let node = this.currentCursor.element.firstChild;\n    while (node !== null) {\n      if (isOpenBlock(node)) {\n        break;\n      }\n      node = node.nextSibling;\n    }\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(node, 'Must have opening comment for rehydration.');\n    this.candidate = node;\n    const startingBlockOffset = getBlockDepth(node);\n    if (startingBlockOffset !== 0) {\n      // We are rehydrating from a partial tree and not the root component\n      // We need to add an extra block before the first block to rehydrate correctly\n      // The extra block is needed since the renderComponent API creates a synthetic component invocation which generates the extra block\n      const newBlockDepth = startingBlockOffset - 1;\n      const newCandidate = this.dom.createComment(`%+b:${newBlockDepth}%`);\n      node.parentNode.insertBefore(newCandidate, this.candidate);\n      let closingNode = node.nextSibling;\n      while (closingNode !== null) {\n        if (isCloseBlock(closingNode) && getBlockDepth(closingNode) === startingBlockOffset) {\n          break;\n        }\n        closingNode = closingNode.nextSibling;\n      }\n      (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(closingNode, 'Must have closing comment for starting block comment');\n      const newClosingBlock = this.dom.createComment(`%-b:${newBlockDepth}%`);\n      node.parentNode.insertBefore(newClosingBlock, closingNode.nextSibling);\n      this.candidate = newCandidate;\n      this.startingBlockOffset = newBlockDepth;\n    } else {\n      this.startingBlockOffset = 0;\n    }\n  }\n  get currentCursor() {\n    return this[CURSOR_STACK].current;\n  }\n  get candidate() {\n    if (this.currentCursor) {\n      return this.currentCursor.candidate;\n    }\n    return null;\n  }\n  set candidate(node) {\n    const currentCursor = this.currentCursor;\n    currentCursor.candidate = node;\n  }\n  disableRehydration(nextSibling) {\n    const currentCursor = this.currentCursor;\n\n    // rehydration will be disabled until we either:\n    // * hit popElement (and return to using the parent elements cursor)\n    // * hit closeBlock and the next sibling is a close block comment\n    //   matching the expected openBlockDepth\n    currentCursor.candidate = null;\n    currentCursor.nextSibling = nextSibling;\n  }\n  enableRehydration(candidate) {\n    const currentCursor = this.currentCursor;\n    currentCursor.candidate = candidate;\n    currentCursor.nextSibling = null;\n  }\n  pushElement(element, nextSibling = null) {\n    const cursor = new RehydratingCursor(element, nextSibling, this.blockDepth || 0);\n\n    /**\n     * <div>   <---------------  currentCursor.element\n     *   <!--%+b:1%--> <-------  would have been removed during openBlock\n     *   <div> <---------------  currentCursor.candidate -> cursor.element\n     *     <!--%+b:2%--> <-----  currentCursor.candidate.firstChild -> cursor.candidate\n     *     Foo\n     *     <!--%-b:2%-->\n     *   </div>\n     *   <!--%-b:1%-->  <------  becomes currentCursor.candidate\n     */\n    if (this.candidate !== null) {\n      cursor.candidate = element.firstChild;\n      this.candidate = element.nextSibling;\n    }\n    this[CURSOR_STACK].push(cursor);\n  }\n\n  // clears until the end of the current container\n  // either the current open block or higher\n  clearMismatch(candidate) {\n    let current = candidate;\n    const currentCursor = this.currentCursor;\n    if (currentCursor !== null) {\n      const openBlockDepth = currentCursor.openBlockDepth;\n      if (openBlockDepth >= currentCursor.startingBlockDepth) {\n        while (current) {\n          if (isCloseBlock(current)) {\n            const closeBlockDepth = getBlockDepthWithOffset(current, this.startingBlockOffset);\n            if (openBlockDepth >= closeBlockDepth) {\n              break;\n            }\n          }\n          current = this.remove(current);\n        }\n      } else {\n        while (current !== null) {\n          current = this.remove(current);\n        }\n      }\n      // current cursor parentNode should be openCandidate if element\n      // or openCandidate.parentNode if comment\n      this.disableRehydration(current);\n    }\n  }\n  __openBlock() {\n    const {\n      currentCursor\n    } = this;\n    if (currentCursor === null) return;\n    const blockDepth = this.blockDepth;\n    this.blockDepth++;\n    const {\n      candidate\n    } = currentCursor;\n    if (candidate === null) return;\n    const {\n      tagName\n    } = currentCursor.element;\n    if (isOpenBlock(candidate) && getBlockDepthWithOffset(candidate, this.startingBlockOffset) === blockDepth) {\n      this.candidate = this.remove(candidate);\n      currentCursor.openBlockDepth = blockDepth;\n    } else if (tagName !== 'TITLE' && tagName !== 'SCRIPT' && tagName !== 'STYLE') {\n      this.clearMismatch(candidate);\n    }\n  }\n  __closeBlock() {\n    const {\n      currentCursor\n    } = this;\n    if (currentCursor === null) return;\n\n    // openBlock is the last rehydrated open block\n    const openBlockDepth = currentCursor.openBlockDepth;\n\n    // this currently is the expected next open block depth\n    this.blockDepth--;\n    const {\n      candidate\n    } = currentCursor;\n    let isRehydrating = false;\n    if (candidate !== null) {\n      isRehydrating = true;\n      //assert(\n      //  openBlockDepth === this.blockDepth,\n      //  'when rehydrating, openBlockDepth should match this.blockDepth here'\n      //);\n\n      if (isCloseBlock(candidate) && getBlockDepthWithOffset(candidate, this.startingBlockOffset) === openBlockDepth) {\n        const nextSibling = this.remove(candidate);\n        this.candidate = nextSibling;\n        currentCursor.openBlockDepth--;\n      } else {\n        // close the block and clear mismatch in parent container\n        // we will be either at the end of the element\n        // or at the end of our containing block\n        this.clearMismatch(candidate);\n        isRehydrating = false;\n      }\n    }\n    if (isRehydrating === false) {\n      // check if nextSibling matches our expected close block\n      // if so, we remove the close block comment and\n      // restore rehydration after clearMismatch disabled\n      const nextSibling = currentCursor.nextSibling;\n      if (nextSibling !== null && isCloseBlock(nextSibling) && getBlockDepthWithOffset(nextSibling, this.startingBlockOffset) === this.blockDepth) {\n        // restore rehydration state\n        const candidate = this.remove(nextSibling);\n        this.enableRehydration(candidate);\n        currentCursor.openBlockDepth--;\n      }\n    }\n  }\n  __appendNode(node) {\n    const {\n      candidate\n    } = this;\n\n    // This code path is only used when inserting precisely one node. It needs more\n    // comparison logic, but we can probably lean on the cases where this code path\n    // is actually used.\n    if (candidate) {\n      return candidate;\n    } else {\n      return super.__appendNode(node);\n    }\n  }\n  __appendHTML(html) {\n    const candidateBounds = this.markerBounds();\n    if (candidateBounds) {\n      const first = candidateBounds.firstNode();\n      const last = candidateBounds.lastNode();\n      const newBounds = new ConcreteBounds(this.element, first.nextSibling, last.previousSibling);\n      const possibleEmptyMarker = this.remove(first);\n      this.remove(last);\n      if (possibleEmptyMarker !== null && isEmpty(possibleEmptyMarker)) {\n        this.candidate = this.remove(possibleEmptyMarker);\n        if (this.candidate !== null) {\n          this.clearMismatch(this.candidate);\n        }\n      }\n      return newBounds;\n    } else {\n      return super.__appendHTML(html);\n    }\n  }\n  remove(node) {\n    const element = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(node.parentNode, `cannot remove a detached node`);\n    const next = node.nextSibling;\n    element.removeChild(node);\n    return next;\n  }\n  markerBounds() {\n    const _candidate = this.candidate;\n    if (_candidate && isMarker(_candidate)) {\n      const first = _candidate;\n      let last = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(first.nextSibling, `BUG: serialization markers must be paired`);\n      while (last && !isMarker(last)) {\n        last = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.expect)(last.nextSibling, `BUG: serialization markers must be paired`);\n      }\n      return new ConcreteBounds(this.element, first, last);\n    } else {\n      return null;\n    }\n  }\n  __appendText(string) {\n    const {\n      candidate\n    } = this;\n    if (candidate) {\n      if (isTextNode(candidate)) {\n        if (candidate.nodeValue !== string) {\n          candidate.nodeValue = string;\n        }\n        this.candidate = candidate.nextSibling;\n        return candidate;\n      } else if (isSeparator(candidate)) {\n        this.candidate = this.remove(candidate);\n        return this.__appendText(string);\n      } else if (isEmpty(candidate) && string === '') {\n        this.candidate = this.remove(candidate);\n        return this.__appendText(string);\n      } else {\n        this.clearMismatch(candidate);\n        return super.__appendText(string);\n      }\n    } else {\n      return super.__appendText(string);\n    }\n  }\n  __appendComment(string) {\n    const _candidate = this.candidate;\n    if (_candidate && isComment(_candidate)) {\n      if (_candidate.nodeValue !== string) {\n        _candidate.nodeValue = string;\n      }\n      this.candidate = _candidate.nextSibling;\n      return _candidate;\n    } else if (_candidate) {\n      this.clearMismatch(_candidate);\n    }\n    return super.__appendComment(string);\n  }\n  __openElement(tag) {\n    const _candidate = this.candidate;\n    if (_candidate && isElement(_candidate) && isSameNodeType(_candidate, tag)) {\n      this.unmatchedAttributes = [].slice.call(_candidate.attributes);\n      return _candidate;\n    } else if (_candidate) {\n      if (isElement(_candidate) && _candidate.tagName === 'TBODY') {\n        this.pushElement(_candidate, null);\n        this.currentCursor.injectedOmittedNode = true;\n        return this.__openElement(tag);\n      }\n      this.clearMismatch(_candidate);\n    }\n    return super.__openElement(tag);\n  }\n  __setAttribute(name, value, namespace) {\n    const unmatched = this.unmatchedAttributes;\n    if (unmatched) {\n      const attr = findByName(unmatched, name);\n      if (attr) {\n        if (attr.value !== value) {\n          attr.value = value;\n        }\n        unmatched.splice(unmatched.indexOf(attr), 1);\n        return;\n      }\n    }\n    return super.__setAttribute(name, value, namespace);\n  }\n  __setProperty(name, value) {\n    const unmatched = this.unmatchedAttributes;\n    if (unmatched) {\n      const attr = findByName(unmatched, name);\n      if (attr) {\n        if (attr.value !== value) {\n          attr.value = value;\n        }\n        unmatched.splice(unmatched.indexOf(attr), 1);\n        return;\n      }\n    }\n    return super.__setProperty(name, value);\n  }\n  __flushElement(parent, constructing) {\n    const {\n      unmatchedAttributes: unmatched\n    } = this;\n    if (unmatched) {\n      for (const attr of unmatched) {\n        this.constructing.removeAttribute(attr.name);\n      }\n      this.unmatchedAttributes = null;\n    } else {\n      super.__flushElement(parent, constructing);\n    }\n  }\n  willCloseElement() {\n    const {\n      candidate,\n      currentCursor\n    } = this;\n    if (candidate !== null) {\n      this.clearMismatch(candidate);\n    }\n    if (currentCursor && currentCursor.injectedOmittedNode) {\n      this.popElement();\n    }\n    super.willCloseElement();\n  }\n  getMarker(element, guid) {\n    const marker = element.querySelector(`script[glmr=\"${guid}\"]`);\n    if (marker) {\n      return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.castToSimple)(marker);\n    }\n    return null;\n  }\n  __pushRemoteElement(element, cursorId, insertBefore) {\n    const marker = this.getMarker((0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.castToBrowser)(element, 'HTML'), cursorId);\n    (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.assert)(!marker || marker.parentNode === element, `expected remote element marker's parent node to match remote element`);\n\n    // when insertBefore is not present, we clear the element\n    if (insertBefore === undefined) {\n      while (element.firstChild !== null && element.firstChild !== marker) {\n        this.remove(element.firstChild);\n      }\n      insertBefore = null;\n    }\n    const cursor = new RehydratingCursor(element, null, this.blockDepth);\n    this[CURSOR_STACK].push(cursor);\n    if (marker === null) {\n      this.disableRehydration(insertBefore);\n    } else {\n      this.candidate = this.remove(marker);\n    }\n    const block = new RemoteLiveBlock(element);\n    return this.pushLiveBlock(block, true);\n  }\n  didAppendBounds(bounds) {\n    super.didAppendBounds(bounds);\n    if (this.candidate) {\n      const last = bounds.lastNode();\n      this.candidate = last && last.nextSibling;\n    }\n    return bounds;\n  }\n}\nfunction isTextNode(node) {\n  return node.nodeType === 3;\n}\nfunction isComment(node) {\n  return node.nodeType === 8;\n}\nfunction isOpenBlock(node) {\n  return node.nodeType === _util_index_js__WEBPACK_IMPORTED_MODULE_3__.COMMENT_NODE && node.nodeValue.lastIndexOf('%+b:', 0) === 0;\n}\nfunction isCloseBlock(node) {\n  return node.nodeType === _util_index_js__WEBPACK_IMPORTED_MODULE_3__.COMMENT_NODE && node.nodeValue.lastIndexOf('%-b:', 0) === 0;\n}\nfunction getBlockDepth(node) {\n  return parseInt(node.nodeValue.slice(4), 10);\n}\nfunction getBlockDepthWithOffset(node, offset) {\n  return getBlockDepth(node) - offset;\n}\nfunction isElement(node) {\n  return node.nodeType === 1;\n}\nfunction isMarker(node) {\n  return node.nodeType === 8 && node.nodeValue === '%glmr%';\n}\nfunction isSeparator(node) {\n  return node.nodeType === 8 && node.nodeValue === '%|%';\n}\nfunction isEmpty(node) {\n  return node.nodeType === 8 && node.nodeValue === '% %';\n}\nfunction isSameNodeType(candidate, tag) {\n  if (candidate.namespaceURI === _util_index_js__WEBPACK_IMPORTED_MODULE_3__.NS_SVG) {\n    return candidate.tagName === tag;\n  }\n  return candidate.tagName === tag.toUpperCase();\n}\nfunction findByName(array, name) {\n  for (const attr of array) {\n    if (attr.name === name) return attr;\n  }\n  return undefined;\n}\nfunction rehydrationBuilder(env, cursor) {\n  return RehydrateBuilder.forInitialRender(env, cursor);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/runtime/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/tracking/index.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/tracking/index.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cached: () => (/* binding */ cached),\n/* harmony export */   tracked: () => (/* reexport safe */ _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.a0)\n/* harmony export */ });\n/* harmony import */ var _ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@ember/-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _destroyable_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n\n\n\n\n\n\n\n// NOTE: copied from: https://github.com/glimmerjs/glimmer.js/pull/358\n// Both glimmerjs/glimmer.js and emberjs/ember.js have the exact same implementation\n// of @cached, so any changes made to one should also be made to the other\n\nconst cached = (...args) => {\n  const [target, key, descriptor] = args;\n\n  // Error on `@cached()`, `@cached(...args)`, and `@cached propName = value;`\n  if ( true && target === undefined) throwCachedExtraneousParens();\n  if ( true && (typeof target !== 'object' || typeof key !== 'string' || typeof descriptor !== 'object' || args.length !== 3)) {\n    throwCachedInvalidArgsError(args);\n  }\n  if ( true && (!('get' in descriptor) || typeof descriptor.get !== 'function')) {\n    throwCachedGetterOnlyError(key);\n  }\n  const caches = new WeakMap();\n  const getter = descriptor.get;\n  descriptor.get = function () {\n    if (!caches.has(this)) {\n      caches.set(this, (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.createCache)(getter.bind(this)));\n    }\n    return (0,_validator_index_js__WEBPACK_IMPORTED_MODULE_4__.getValue)(caches.get(this));\n  };\n};\nfunction throwCachedExtraneousParens() {\n  throw new Error('You attempted to use @cached(), which is not necessary nor supported. Remove the parentheses and you will be good to go!');\n}\nfunction throwCachedGetterOnlyError(key) {\n  throw new Error(`The @cached decorator must be applied to getters. '${key}' is not a getter.`);\n}\nfunction throwCachedInvalidArgsError(args = []) {\n  throw new Error(`You attempted to use @cached on with ${args.length > 1 ? 'arguments' : 'an argument'} ( @cached(${args.map(d => `'${d}'`).join(', ')}), which is not supported. Dependencies are automatically tracked, so you can just use ${'`@cached`'}`);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/tracking/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/tracking/primitives/cache.js":
/*!*******************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/tracking/primitives/cache.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCache: () => (/* reexport safe */ _validator_index_js__WEBPACK_IMPORTED_MODULE_4__.createCache),\n/* harmony export */   getValue: () => (/* reexport safe */ _validator_index_js__WEBPACK_IMPORTED_MODULE_4__.getValue),\n/* harmony export */   isConst: () => (/* reexport safe */ _validator_index_js__WEBPACK_IMPORTED_MODULE_4__.isConst)\n/* harmony export */ });\n/* harmony import */ var _ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../@ember/-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _destroyable_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _validator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/tracking/primitives/cache.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMMENT_NODE: () => (/* binding */ COMMENT_NODE),\n/* harmony export */   DOCUMENT_FRAGMENT_NODE: () => (/* binding */ DOCUMENT_FRAGMENT_NODE),\n/* harmony export */   DOCUMENT_NODE: () => (/* binding */ DOCUMENT_NODE),\n/* harmony export */   DOCUMENT_TYPE_NODE: () => (/* binding */ DOCUMENT_TYPE_NODE),\n/* harmony export */   ELEMENT_NODE: () => (/* binding */ ELEMENT_NODE),\n/* harmony export */   EMPTY_ARRAY: () => (/* binding */ EMPTY_ARRAY),\n/* harmony export */   EMPTY_NUMBER_ARRAY: () => (/* binding */ EMPTY_NUMBER_ARRAY),\n/* harmony export */   EMPTY_STRING_ARRAY: () => (/* binding */ EMPTY_STRING_ARRAY),\n/* harmony export */   INSERT_AFTER_BEGIN: () => (/* binding */ INSERT_AFTER_BEGIN),\n/* harmony export */   INSERT_AFTER_END: () => (/* binding */ INSERT_AFTER_END),\n/* harmony export */   INSERT_BEFORE_BEGIN: () => (/* binding */ INSERT_BEFORE_BEGIN),\n/* harmony export */   INSERT_BEFORE_END: () => (/* binding */ INSERT_BEFORE_END),\n/* harmony export */   ImmediateConstants: () => (/* binding */ ImmediateConstants),\n/* harmony export */   LOCAL_LOGGER: () => (/* binding */ LOCAL_LOGGER),\n/* harmony export */   LOGGER: () => (/* binding */ LOGGER),\n/* harmony export */   NS_HTML: () => (/* binding */ NS_HTML),\n/* harmony export */   NS_MATHML: () => (/* binding */ NS_MATHML),\n/* harmony export */   NS_SVG: () => (/* binding */ NS_SVG),\n/* harmony export */   NS_XLINK: () => (/* binding */ NS_XLINK),\n/* harmony export */   NS_XML: () => (/* binding */ NS_XML),\n/* harmony export */   NS_XMLNS: () => (/* binding */ NS_XMLNS),\n/* harmony export */   RAW_NODE: () => (/* binding */ RAW_NODE),\n/* harmony export */   SERIALIZATION_FIRST_NODE_STRING: () => (/* binding */ SERIALIZATION_FIRST_NODE_STRING),\n/* harmony export */   Stack: () => (/* binding */ StackImpl),\n/* harmony export */   TEXT_NODE: () => (/* binding */ TEXT_NODE),\n/* harmony export */   arrayToOption: () => (/* binding */ arrayToOption),\n/* harmony export */   asPresentArray: () => (/* binding */ asPresentArray),\n/* harmony export */   assert: () => (/* binding */ debugAssert),\n/* harmony export */   assertNever: () => (/* binding */ assertNever),\n/* harmony export */   assertPresent: () => (/* binding */ assertPresent),\n/* harmony export */   assertPresentArray: () => (/* binding */ assertPresentArray),\n/* harmony export */   assign: () => (/* binding */ assign),\n/* harmony export */   beginTestSteps: () => (/* binding */ beginTestSteps),\n/* harmony export */   buildUntouchableThis: () => (/* binding */ buildUntouchableThis),\n/* harmony export */   castToBrowser: () => (/* binding */ castToBrowser),\n/* harmony export */   castToSimple: () => (/* binding */ castToSimple),\n/* harmony export */   checkNode: () => (/* binding */ checkBrowserNode),\n/* harmony export */   clearElement: () => (/* binding */ clearElement),\n/* harmony export */   constants: () => (/* binding */ constants),\n/* harmony export */   debugToString: () => (/* binding */ debugToString$1),\n/* harmony export */   decodeHandle: () => (/* binding */ decodeHandle),\n/* harmony export */   decodeImmediate: () => (/* binding */ decodeImmediate),\n/* harmony export */   decodeNegative: () => (/* binding */ decodeNegative),\n/* harmony export */   decodePositive: () => (/* binding */ decodePositive),\n/* harmony export */   deprecate: () => (/* binding */ deprecate),\n/* harmony export */   dict: () => (/* binding */ dict),\n/* harmony export */   emptyArray: () => (/* binding */ emptyArray),\n/* harmony export */   encodeHandle: () => (/* binding */ encodeHandle),\n/* harmony export */   encodeImmediate: () => (/* binding */ encodeImmediate),\n/* harmony export */   encodeNegative: () => (/* binding */ encodeNegative),\n/* harmony export */   encodePositive: () => (/* binding */ encodePositive),\n/* harmony export */   endTestSteps: () => (/* binding */ endTestSteps),\n/* harmony export */   entries: () => (/* binding */ entries),\n/* harmony export */   enumerate: () => (/* binding */ enumerate),\n/* harmony export */   exhausted: () => (/* binding */ exhausted),\n/* harmony export */   expect: () => (/* binding */ expect),\n/* harmony export */   extractHandle: () => (/* binding */ extractHandle),\n/* harmony export */   getFirst: () => (/* binding */ getFirst),\n/* harmony export */   getLast: () => (/* binding */ getLast),\n/* harmony export */   ifPresent: () => (/* binding */ ifPresent),\n/* harmony export */   intern: () => (/* binding */ intern),\n/* harmony export */   isDict: () => (/* binding */ isDict),\n/* harmony export */   isElement: () => (/* binding */ isElement),\n/* harmony export */   isEmptyArray: () => (/* binding */ isEmptyArray),\n/* harmony export */   isErrHandle: () => (/* binding */ isErrHandle),\n/* harmony export */   isHandle: () => (/* binding */ isHandle),\n/* harmony export */   isNonPrimitiveHandle: () => (/* binding */ isNonPrimitiveHandle),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isOkHandle: () => (/* binding */ isOkHandle),\n/* harmony export */   isPresent: () => (/* binding */ isPresent),\n/* harmony export */   isPresentArray: () => (/* binding */ isPresentArray),\n/* harmony export */   isSerializationFirstNode: () => (/* binding */ isSerializationFirstNode),\n/* harmony export */   isSimpleElement: () => (/* binding */ isSimpleElement),\n/* harmony export */   isSmallInt: () => (/* binding */ isSmallInt),\n/* harmony export */   keys: () => (/* binding */ keys),\n/* harmony export */   logStep: () => (/* binding */ logStep),\n/* harmony export */   mapPresentArray: () => (/* binding */ mapPresentArray),\n/* harmony export */   reverse: () => (/* binding */ reverse),\n/* harmony export */   strip: () => (/* binding */ strip),\n/* harmony export */   tuple: () => (/* binding */ tuple),\n/* harmony export */   unreachable: () => (/* binding */ unreachable),\n/* harmony export */   unwrap: () => (/* binding */ unwrap),\n/* harmony export */   unwrapHandle: () => (/* binding */ unwrapHandle),\n/* harmony export */   unwrapTemplate: () => (/* binding */ unwrapTemplate),\n/* harmony export */   values: () => (/* binding */ values),\n/* harmony export */   verifySteps: () => (/* binding */ verifySteps)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nconst EMPTY_ARRAY = Object.freeze([]);\nfunction emptyArray() {\n  return EMPTY_ARRAY;\n}\nconst EMPTY_STRING_ARRAY = emptyArray();\nconst EMPTY_NUMBER_ARRAY = emptyArray();\n\n/**\n * This function returns `true` if the input array is the special empty array sentinel,\n * which is sometimes used for optimizations.\n */\nfunction isEmptyArray(input) {\n  return input === EMPTY_ARRAY;\n}\nfunction* reverse(input) {\n  for (let i = input.length - 1; i >= 0; i--) {\n    yield input[i];\n  }\n}\nfunction* enumerate(input) {\n  let i = 0;\n  for (const item of input) {\n    yield [i++, item];\n  }\n}\n\n// import Logger from './logger';\n\n// let alreadyWarned = false;\n\nfunction debugAssert(test, msg) {\n  // if (!alreadyWarned) {\n  //   alreadyWarned = true;\n  //   Logger.warn(\"Don't leave debug assertions on in public builds\");\n  // }\n\n  if (!test) {\n    throw new Error(msg || 'assertion failure');\n  }\n}\nfunction deprecate(desc) {\n  LOCAL_LOGGER.warn(`DEPRECATION: ${desc}`);\n}\nfunction keys(obj) {\n  return Object.keys(obj);\n}\nfunction unwrap(val) {\n  if (val === null || val === undefined) throw new Error(`Expected value to be present`);\n  return val;\n}\nfunction expect(val, message) {\n  if (val === null || val === undefined) throw new Error(message);\n  return val;\n}\nfunction unreachable(message = 'unreachable') {\n  return new Error(message);\n}\nfunction exhausted(value) {\n  throw new Error(`Exhausted ${String(value)}`);\n}\nconst tuple = (...args) => args;\nfunction isPresent(value) {\n  return value !== null && value !== undefined;\n}\nfunction assertPresent(value, message) {\n  if (!isPresent(value)) {\n    throw new Error(`Expected present, got ${typeof value === 'string' ? value : message}`);\n  }\n}\nfunction isPresentArray(list) {\n  return list.length > 0;\n}\nfunction ifPresent(list, ifPresent, otherwise) {\n  if (isPresentArray(list)) {\n    return ifPresent(list);\n  } else {\n    return otherwise();\n  }\n}\nfunction arrayToOption(list) {\n  if (isPresentArray(list)) {\n    return list;\n  } else {\n    return null;\n  }\n}\nfunction assertPresentArray(list, message = `unexpected empty list`) {\n  if (!isPresentArray(list)) {\n    throw new Error(message);\n  }\n}\nfunction asPresentArray(list, message = `unexpected empty list`) {\n  assertPresentArray(list, message);\n  return list;\n}\nfunction getLast(list) {\n  return list.length === 0 ? undefined : list[list.length - 1];\n}\nfunction getFirst(list) {\n  return list.length === 0 ? undefined : list[0];\n}\nfunction mapPresentArray(list, mapper) {\n  if (list === null) {\n    return null;\n  }\n  let out = [];\n  for (let item of list) {\n    out.push(mapper(item));\n  }\n  return out;\n}\nfunction dict() {\n  return Object.create(null);\n}\nfunction isDict(u) {\n  return u !== null && u !== undefined;\n}\nfunction isObject(u) {\n  return typeof u === 'function' || typeof u === 'object' && u !== null;\n}\nclass StackImpl {\n  constructor(values = []) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"stack\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"current\", null);\n    this.stack = values;\n  }\n  get size() {\n    return this.stack.length;\n  }\n  push(item) {\n    this.current = item;\n    this.stack.push(item);\n  }\n  pop() {\n    let item = this.stack.pop();\n    this.current = getLast(this.stack) ?? null;\n    return item === undefined ? null : item;\n  }\n  nth(from) {\n    let len = this.stack.length;\n    return len < from ? null : unwrap(this.stack[len - from]);\n  }\n  isEmpty() {\n    return this.stack.length === 0;\n  }\n  toArray() {\n    return this.stack;\n  }\n}\n\n/// <reference types=\"qunit\" />\n\nlet beginTestSteps;\nlet endTestSteps;\nlet verifySteps;\nlet logStep;\nlet debugToString;\nif (true) {\n  let getFunctionName = fn => {\n    let functionName = fn.name;\n    if (functionName === undefined) {\n      let match = /function (\\w+)\\s*\\(/u.exec(String(fn));\n      functionName = match && match[1] || '';\n    }\n    return functionName.replace(/^bound /u, '');\n  };\n  let getObjectName = obj => {\n    let name;\n    let className;\n    if (obj.constructor && typeof obj.constructor === 'function') {\n      className = getFunctionName(obj.constructor);\n    }\n    if ('toString' in obj && obj.toString !== Object.prototype.toString && obj.toString !== Function.prototype.toString) {\n      name = obj.toString();\n    }\n\n    // If the class has a decent looking name, and the `toString` is one of the\n    // default Ember toStrings, replace the constructor portion of the toString\n    // with the class name. We check the length of the class name to prevent doing\n    // this when the value is minified.\n    if (name && /<.*:ember\\d+>/u.test(name) && className && className[0] !== '_' && className.length > 2 && className !== 'Class') {\n      return name.replace(/<.*:/u, `<${className}:`);\n    }\n    return name || className;\n  };\n  let getPrimitiveName = value => {\n    return String(value);\n  };\n  debugToString = value => {\n    if (typeof value === 'function') {\n      return getFunctionName(value) || `(unknown function)`;\n    } else if (typeof value === 'object' && value !== null) {\n      return getObjectName(value) || `(unknown object)`;\n    } else {\n      return getPrimitiveName(value);\n    }\n  };\n}\nvar debugToString$1 = debugToString;\nfunction clearElement(parent) {\n  let current = parent.firstChild;\n  while (current) {\n    let next = current.nextSibling;\n    parent.removeChild(current);\n    current = next;\n  }\n}\nconst RAW_NODE = -1;\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NS_HTML = 'http://www.w3.org/1999/xhtml';\nconst NS_MATHML = 'http://www.w3.org/1998/Math/MathML';\nconst NS_SVG = 'http://www.w3.org/2000/svg';\nconst NS_XLINK = 'http://www.w3.org/1999/xlink';\nconst NS_XML = 'http://www.w3.org/XML/1998/namespace';\nconst NS_XMLNS = 'http://www.w3.org/2000/xmlns/';\nconst INSERT_BEFORE_BEGIN = 'beforebegin';\nconst INSERT_AFTER_BEGIN = 'afterbegin';\nconst INSERT_BEFORE_END = 'beforeend';\nconst INSERT_AFTER_END = 'afterend';\n\n/*\n  Encoding notes\n\n  We use 30 bit integers for encoding, so that we don't ever encode a non-SMI\n  integer to push on the stack.\n\n  Handles are >= 0\n  Immediates are < 0\n\n  True, False, Undefined and Null are pushed as handles into the symbol table,\n  with well known handles (0, 1, 2, 3)\n\n  The negative space is divided into positives and negatives. Positives are\n  higher numbers (-1, -2, -3, etc), negatives are lower.\n\n  We only encode immediates for two reasons:\n\n  1. To transfer over the wire, so they're smaller in general\n  2. When pushing values onto the stack from the low level/inner VM, which may\n     be converted into WASM one day.\n\n  This allows the low-level VM to always use SMIs, and to minimize using JS\n  values via handles for things like the stack pointer and frame pointer.\n  Externally, most code pushes values as JS values, except when being pulled\n  from the append byte code where it was already encoded.\n\n  Logically, this is because the low level VM doesn't really care about these\n  higher level values. For instance, the result of a userland helper may be a\n  number, or a boolean, or undefined/null, but it's extra work to figure that\n  out and push it correctly, vs. just pushing the value as a JS value with a\n  handle.\n\n  Note: The details could change here in the future, this is just the current\n  strategy.\n*/\n\nlet ImmediateConstants = /*#__PURE__*/function (ImmediateConstants) {\n  ImmediateConstants[ImmediateConstants[\"MAX_SMI\"] = 1073741823] = \"MAX_SMI\";\n  ImmediateConstants[ImmediateConstants[\"MIN_SMI\"] = -1073741824] = \"MIN_SMI\";\n  ImmediateConstants[ImmediateConstants[\"SIGN_BIT\"] = -536870913] = \"SIGN_BIT\";\n  ImmediateConstants[ImmediateConstants[\"MAX_INT\"] = 536870911] = \"MAX_INT\";\n  ImmediateConstants[ImmediateConstants[\"MIN_INT\"] = -536870912] = \"MIN_INT\";\n  ImmediateConstants[ImmediateConstants[\"FALSE_HANDLE\"] = 0] = \"FALSE_HANDLE\";\n  ImmediateConstants[ImmediateConstants[\"TRUE_HANDLE\"] = 1] = \"TRUE_HANDLE\";\n  ImmediateConstants[ImmediateConstants[\"NULL_HANDLE\"] = 2] = \"NULL_HANDLE\";\n  ImmediateConstants[ImmediateConstants[\"UNDEFINED_HANDLE\"] = 3] = \"UNDEFINED_HANDLE\";\n  ImmediateConstants[ImmediateConstants[\"ENCODED_FALSE_HANDLE\"] = 0] = \"ENCODED_FALSE_HANDLE\";\n  ImmediateConstants[ImmediateConstants[\"ENCODED_TRUE_HANDLE\"] = 1] = \"ENCODED_TRUE_HANDLE\";\n  ImmediateConstants[ImmediateConstants[\"ENCODED_NULL_HANDLE\"] = 2] = \"ENCODED_NULL_HANDLE\";\n  ImmediateConstants[ImmediateConstants[\"ENCODED_UNDEFINED_HANDLE\"] = 3] = \"ENCODED_UNDEFINED_HANDLE\";\n  return ImmediateConstants;\n}({});\nfunction isHandle(value) {\n  return value >= 0;\n}\nfunction isNonPrimitiveHandle(value) {\n  return value > ImmediateConstants.ENCODED_UNDEFINED_HANDLE;\n}\nfunction constants(...values) {\n  return [false, true, null, undefined, ...values];\n}\nfunction isSmallInt(value) {\n  return value % 1 === 0 && value <= ImmediateConstants.MAX_INT && value >= ImmediateConstants.MIN_INT;\n}\nfunction encodeNegative(num) {\n  return num & ImmediateConstants.SIGN_BIT;\n}\nfunction decodeNegative(num) {\n  return num | ~ImmediateConstants.SIGN_BIT;\n}\nfunction encodePositive(num) {\n  return ~num;\n}\nfunction decodePositive(num) {\n  return ~num;\n}\nfunction encodeHandle(num) {\n  return num;\n}\nfunction decodeHandle(num) {\n  return num;\n}\nfunction encodeImmediate(num) {\n  num |= 0;\n  return num < 0 ? encodeNegative(num) : encodePositive(num);\n}\nfunction decodeImmediate(num) {\n  num |= 0;\n  return num > ImmediateConstants.SIGN_BIT ? decodePositive(num) : decodeNegative(num);\n}\n[1, -1].forEach(x => decodeImmediate(encodeImmediate(x)));\n\n/**\n  Strongly hint runtimes to intern the provided string.\n\n  When do I need to use this function?\n\n  For the most part, never. Pre-mature optimization is bad, and often the\n  runtime does exactly what you need it to, and more often the trade-off isn't\n  worth it.\n\n  Why?\n\n  Runtimes store strings in at least 2 different representations:\n  Ropes and Symbols (interned strings). The Rope provides a memory efficient\n  data-structure for strings created from concatenation or some other string\n  manipulation like splitting.\n\n  Unfortunately checking equality of different ropes can be quite costly as\n  runtimes must resort to clever string comparison algorithms. These\n  algorithms typically cost in proportion to the length of the string.\n  Luckily, this is where the Symbols (interned strings) shine. As Symbols are\n  unique by their string content, equality checks can be done by pointer\n  comparison.\n\n  How do I know if my string is a rope or symbol?\n\n  Typically (warning general sweeping statement, but truthy in runtimes at\n  present) static strings created as part of the JS source are interned.\n  Strings often used for comparisons can be interned at runtime if some\n  criteria are met.  One of these criteria can be the size of the entire rope.\n  For example, in chrome 38 a rope longer then 12 characters will not\n  intern, nor will segments of that rope.\n\n  Some numbers: http://jsperf.com/eval-vs-keys/8\n\n  Known Trick™\n\n  @private\n  @return {String} interned version of the provided string\n*/\nfunction intern(str) {\n  let obj = {};\n  obj[str] = 1;\n  for (let key in obj) {\n    if (key === str) {\n      return key;\n    }\n  }\n  return str;\n}\nconst SERIALIZATION_FIRST_NODE_STRING = '%+b:0%';\nfunction isSerializationFirstNode(node) {\n  return node.nodeValue === SERIALIZATION_FIRST_NODE_STRING;\n}\nlet assign = Object.assign;\nfunction values(obj) {\n  return Object.values(obj);\n}\nfunction entries(dict) {\n  return Object.entries(dict);\n}\nfunction castToSimple(node) {\n  if (isDocument(node)) {\n    return node;\n  } else if (isSimpleElement(node)) {\n    return node;\n  } else {\n    return node;\n  }\n}\n\n// If passed a document, verify we're in the browser and return it as a Document\n\n// If we don't know what this is, but the check requires it to be an element,\n// the cast will mandate that it's a browser element\n\n// Finally, if it's a more generic check, the cast will mandate that it's a\n// browser node and return a BrowserNodeUtils corresponding to the check\n\nfunction castToBrowser(node, sugaryCheck) {\n  if (node === null || node === undefined) {\n    return null;\n  }\n  if (typeof document === undefined) {\n    throw new Error('Attempted to cast to a browser node in a non-browser context');\n  }\n  if (isDocument(node)) {\n    return node;\n  }\n  if (node.ownerDocument !== document) {\n    throw new Error('Attempted to cast to a browser node with a node that was not created from this document');\n  }\n  return checkBrowserNode(node, sugaryCheck);\n}\nfunction checkError(from, check) {\n  return new Error(`cannot cast a ${from} into ${String(check)}`);\n}\nfunction isDocument(node) {\n  return node.nodeType === DOCUMENT_NODE;\n}\nfunction isSimpleElement(node) {\n  return node?.nodeType === ELEMENT_NODE;\n}\nfunction isElement(node) {\n  return node?.nodeType === ELEMENT_NODE && node instanceof Element;\n}\nfunction checkBrowserNode(node, check) {\n  let isMatch = false;\n  if (node !== null) {\n    if (typeof check === 'string') {\n      isMatch = stringCheckNode(node, check);\n    } else if (Array.isArray(check)) {\n      isMatch = check.some(c => stringCheckNode(node, c));\n    } else {\n      throw unreachable();\n    }\n  }\n  if (isMatch && node instanceof Node) {\n    return node;\n  } else {\n    throw checkError(`SimpleElement(${node?.constructor?.name ?? 'null'})`, check);\n  }\n}\nfunction stringCheckNode(node, check) {\n  switch (check) {\n    case 'NODE':\n      return true;\n    case 'HTML':\n      return node instanceof HTMLElement;\n    case 'SVG':\n      return node instanceof SVGElement;\n    case 'ELEMENT':\n      return node instanceof Element;\n    default:\n      if (check.toUpperCase() === check) {\n        throw new Error(`BUG: this code is missing handling for a generic node type`);\n      }\n      return node instanceof Element && node.tagName.toLowerCase() === check;\n  }\n}\nfunction strip(strings, ...args) {\n  let out = '';\n  for (const [i, string] of enumerate(strings)) {\n    let dynamic = args[i] !== undefined ? String(args[i]) : '';\n    out += `${string}${dynamic}`;\n  }\n  let lines = out.split('\\n');\n  while (isPresentArray(lines) && /^\\s*$/u.test(getFirst(lines))) {\n    lines.shift();\n  }\n  while (isPresentArray(lines) && /^\\s*$/u.test(getLast(lines))) {\n    lines.pop();\n  }\n  let min = Infinity;\n  for (let line of lines) {\n    let leading = /^\\s*/u.exec(line)[0].length;\n    min = Math.min(min, leading);\n  }\n  let stripped = [];\n  for (let line of lines) {\n    stripped.push(line.slice(min));\n  }\n  return stripped.join('\\n');\n}\nfunction unwrapHandle(handle) {\n  if (typeof handle === 'number') {\n    return handle;\n  } else {\n    let error = handle.errors[0];\n    throw new Error(`Compile Error: ${error.problem} @ ${error.span.start}..${error.span.end}`);\n  }\n}\nfunction unwrapTemplate(template) {\n  if (template.result === 'error') {\n    throw new Error(`Compile Error: ${template.problem} @ ${template.span.start}..${template.span.end}`);\n  }\n  return template;\n}\nfunction extractHandle(handle) {\n  if (typeof handle === 'number') {\n    return handle;\n  } else {\n    return handle.handle;\n  }\n}\nfunction isOkHandle(handle) {\n  return typeof handle === 'number';\n}\nfunction isErrHandle(handle) {\n  return typeof handle === 'number';\n}\nfunction buildUntouchableThis(source) {\n  let context = null;\n  if (true) {\n    let assertOnProperty = property => {\n      let access = typeof property === 'symbol' || typeof property === 'number' ? `[${String(property)}]` : `.${property}`;\n      throw new Error(`You accessed \\`this${access}\\` from a function passed to the ${source}, but the function itself was not bound to a valid \\`this\\` context. Consider updating to use a bound function (for instance, use an arrow function, \\`() => {}\\`).`);\n    };\n    context = new Proxy({}, {\n      get(_target, property) {\n        assertOnProperty(property);\n      },\n      set(_target, property) {\n        assertOnProperty(property);\n        return false;\n      },\n      has(_target, property) {\n        assertOnProperty(property);\n        return false;\n      }\n    });\n  }\n  return context;\n}\n\n/**\n * This constant exists to make it easier to differentiate normal logs from\n * errant console.logs. LOCAL_LOGGER should only be used inside a\n * LOCAL_SHOULD_LOG check.\n *\n * It does not alleviate the need to check LOCAL_SHOULD_LOG, which is used\n * for stripping.\n */\nconst LOCAL_LOGGER = console;\n\n/**\n * This constant exists to make it easier to differentiate normal logs from\n * errant console.logs. LOGGER can be used outside of LOCAL_SHOULD_LOG checks,\n * and is meant to be used in the rare situation where a console.* call is\n * actually appropriate.\n */\nconst LOGGER = console;\nfunction assertNever(value, desc = 'unexpected unreachable branch') {\n  LOGGER.log('unreachable', value);\n  LOGGER.log(`${desc} :: ${JSON.stringify(value)} (${value})`);\n  throw new Error(`code reached unreachable`);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALLOW_CYCLES: () => (/* binding */ ALLOW_CYCLES),\n/* harmony export */   COMPUTE: () => (/* binding */ COMPUTE),\n/* harmony export */   CONSTANT: () => (/* binding */ CONSTANT),\n/* harmony export */   CONSTANT_TAG: () => (/* binding */ CONSTANT_TAG),\n/* harmony export */   CURRENT_TAG: () => (/* binding */ CURRENT_TAG),\n/* harmony export */   CurrentTag: () => (/* binding */ CurrentTag),\n/* harmony export */   INITIAL: () => (/* binding */ INITIAL),\n/* harmony export */   VOLATILE: () => (/* binding */ VOLATILE),\n/* harmony export */   VOLATILE_TAG: () => (/* binding */ VOLATILE_TAG),\n/* harmony export */   VolatileTag: () => (/* binding */ VolatileTag),\n/* harmony export */   beginTrackFrame: () => (/* binding */ beginTrackFrame),\n/* harmony export */   beginUntrackFrame: () => (/* binding */ beginUntrackFrame),\n/* harmony export */   bump: () => (/* binding */ bump),\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   consumeTag: () => (/* binding */ consumeTag),\n/* harmony export */   createCache: () => (/* binding */ createCache),\n/* harmony export */   createTag: () => (/* binding */ createTag),\n/* harmony export */   createUpdatableTag: () => (/* binding */ createUpdatableTag),\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   dirtyTag: () => (/* binding */ DIRTY_TAG),\n/* harmony export */   dirtyTagFor: () => (/* binding */ dirtyTagFor),\n/* harmony export */   endTrackFrame: () => (/* binding */ endTrackFrame),\n/* harmony export */   endUntrackFrame: () => (/* binding */ endUntrackFrame),\n/* harmony export */   getValue: () => (/* binding */ getValue),\n/* harmony export */   isConst: () => (/* binding */ isConst),\n/* harmony export */   isConstTag: () => (/* binding */ isConstTag),\n/* harmony export */   isTracking: () => (/* binding */ isTracking),\n/* harmony export */   resetTracking: () => (/* binding */ resetTracking),\n/* harmony export */   tagFor: () => (/* binding */ tagFor),\n/* harmony export */   tagMetaFor: () => (/* binding */ tagMetaFor),\n/* harmony export */   track: () => (/* binding */ track),\n/* harmony export */   trackedData: () => (/* binding */ trackedData),\n/* harmony export */   untrack: () => (/* binding */ untrack),\n/* harmony export */   updateTag: () => (/* binding */ UPDATE_TAG),\n/* harmony export */   validateTag: () => (/* binding */ validateTag),\n/* harmony export */   valueForTag: () => (/* binding */ valueForTag)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _global_context_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../global-context/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/global-context/index.js\");\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js\");\n\n\n\nfunction indexable(input) {\n  return input;\n}\nfunction getGlobal() {\n  if (typeof globalThis !== 'undefined') return indexable(globalThis);\n  if (typeof self !== 'undefined') return indexable(self);\n  if (typeof window !== 'undefined') return indexable(window);\n  if (typeof global !== 'undefined') return indexable(global);\n  throw new Error('unable to locate global object');\n}\nfunction unwrap(val) {\n  if (val === null || val === undefined) throw new Error(`Expected value to be present`);\n  return val;\n}\nconst debug = {};\nif (true) {\n  let CONSUMED_TAGS = null;\n  const TRANSACTION_STACK = [];\n\n  /////////\n\n  const TRANSACTION_ENV = {\n    debugMessage(obj, keyName) {\n      let objName;\n      if (typeof obj === 'function') {\n        objName = obj.name;\n      } else if (typeof obj === 'object' && obj !== null) {\n        let className = obj.constructor && obj.constructor.name || '(unknown class)';\n        objName = `(an instance of ${className})`;\n      } else if (obj === undefined) {\n        objName = '(an unknown tag)';\n      } else {\n        objName = String(obj);\n      }\n      let dirtyString = keyName ? `\\`${keyName}\\` on \\`${objName}\\`` : `\\`${objName}\\``;\n      return `You attempted to update ${dirtyString}, but it had already been used previously in the same computation.  Attempting to update a value after using it in a computation can cause logical errors, infinite revalidation bugs, and performance issues, and is not supported.`;\n    }\n  };\n  debug.setTrackingTransactionEnv = env => Object.assign(TRANSACTION_ENV, env);\n  debug.beginTrackingTransaction = _debugLabel => {\n    CONSUMED_TAGS = CONSUMED_TAGS || new WeakMap();\n    let debugLabel = _debugLabel || undefined;\n    let parent = TRANSACTION_STACK[TRANSACTION_STACK.length - 1] ?? null;\n    TRANSACTION_STACK.push({\n      parent,\n      debugLabel\n    });\n  };\n  debug.endTrackingTransaction = () => {\n    if (TRANSACTION_STACK.length === 0) {\n      throw new Error('attempted to close a tracking transaction, but one was not open');\n    }\n    TRANSACTION_STACK.pop();\n    if (TRANSACTION_STACK.length === 0) {\n      CONSUMED_TAGS = null;\n    }\n  };\n  debug.resetTrackingTransaction = () => {\n    let stack = '';\n    if (TRANSACTION_STACK.length > 0) {\n      stack = debug.logTrackingStack(TRANSACTION_STACK[TRANSACTION_STACK.length - 1]);\n    }\n    TRANSACTION_STACK.splice(0, TRANSACTION_STACK.length);\n    CONSUMED_TAGS = null;\n    return stack;\n  };\n\n  /**\n   * Creates a global autotracking transaction. This will prevent any backflow\n   * in any `track` calls within the transaction, even if they are not\n   * externally consumed.\n   *\n   * `runInAutotrackingTransaction` can be called within itself, and it will add\n   * onto the existing transaction if one exists.\n   *\n   * TODO: Only throw an error if the `track` is consumed.\n   */\n  debug.runInTrackingTransaction = (fn, debugLabel) => {\n    debug.beginTrackingTransaction(debugLabel);\n    let didError = true;\n    try {\n      let value = fn();\n      didError = false;\n      return value;\n    } finally {\n      if (didError !== true) {\n        debug.endTrackingTransaction();\n      }\n\n      // if (id !== TRANSACTION_STACK.length) {\n      //   throw new Error(\n      //     `attempted to close a tracking transaction (${id}), but it was not the last transaction (${TRANSACTION_STACK.length})`\n      //   );\n      // }\n    }\n  };\n  let nthIndex = (str, pattern, n, startingPos = -1) => {\n    let i = startingPos;\n    while (n-- > 0 && i++ < str.length) {\n      i = str.indexOf(pattern, i);\n      if (i < 0) break;\n    }\n    return i;\n  };\n  let makeTrackingErrorMessage = (transaction, obj, keyName) => {\n    let message = [TRANSACTION_ENV.debugMessage(obj, keyName && String(keyName))];\n    message.push(`\\`${String(keyName)}\\` was first used:`);\n    message.push(debug.logTrackingStack(transaction));\n    message.push(`Stack trace for the update:`);\n    return message.join('\\n\\n');\n  };\n  debug.logTrackingStack = transaction => {\n    let trackingStack = [];\n    let current = transaction || TRANSACTION_STACK[TRANSACTION_STACK.length - 1];\n    if (current === undefined) return '';\n    while (current) {\n      if (current.debugLabel) {\n        trackingStack.unshift(current.debugLabel);\n      }\n      current = current.parent;\n    }\n    return trackingStack.map((label, index) => ' '.repeat(2 * index) + label).join('\\n');\n  };\n  debug.markTagAsConsumed = _tag => {\n    if (!CONSUMED_TAGS || CONSUMED_TAGS.has(_tag)) return;\n    CONSUMED_TAGS.set(_tag, (0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.getLast)((0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.asPresentArray)(TRANSACTION_STACK)));\n\n    // We need to mark the tag and all of its subtags as consumed, so we need to\n    // cast it and access its internals. In the future this shouldn't be necessary,\n    // this is only for computed properties.\n    let subtag = _tag.subtag;\n    if (!subtag || !debug.markTagAsConsumed) return;\n    if (Array.isArray(subtag)) {\n      subtag.forEach(debug.markTagAsConsumed);\n    } else {\n      debug.markTagAsConsumed(subtag);\n    }\n  };\n  debug.assertTagNotConsumed = (tag, obj, keyName) => {\n    if (CONSUMED_TAGS === null) return;\n    let transaction = CONSUMED_TAGS.get(tag);\n    if (!transaction) return;\n\n    // This hack makes the assertion message nicer, we can cut off the first\n    // few lines of the stack trace and let users know where the actual error\n    // occurred.\n    try {\n      (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_1__.assert)(false, makeTrackingErrorMessage(transaction, obj, keyName));\n    } catch (e) {\n      if (hasStack(e)) {\n        let updateStackBegin = e.stack.indexOf('Stack trace for the update:');\n        if (updateStackBegin !== -1) {\n          let start = nthIndex(e.stack, '\\n', 1, updateStackBegin);\n          let end = nthIndex(e.stack, '\\n', 4, updateStackBegin);\n          e.stack = e.stack.substr(0, start) + e.stack.substr(end);\n        }\n      }\n      throw e;\n    }\n  };\n}\nfunction hasStack(error) {\n  return typeof error === 'object' && error !== null && 'stack' in error && typeof error.stack === 'string';\n}\n\n//////////\n\nconst CONSTANT = 0;\nconst INITIAL = 1;\nconst VOLATILE = NaN;\nlet $REVISION = INITIAL;\nfunction bump() {\n  $REVISION++;\n}\n\n//////////\n\nconst DIRYTABLE_TAG_ID = 0;\nconst UPDATABLE_TAG_ID = 1;\nconst COMBINATOR_TAG_ID = 2;\nconst CONSTANT_TAG_ID = 3;\n\n//////////\n\nconst COMPUTE = Symbol('TAG_COMPUTE');\n\n//////////\n\n/**\n * `value` receives a tag and returns an opaque Revision based on that tag. This\n * snapshot can then later be passed to `validate` with the same tag to\n * determine if the tag has changed at all since the time that `value` was\n * called.\n *\n * @param tag\n */\nfunction valueForTag(tag) {\n  return tag[COMPUTE]();\n}\n\n/**\n * `validate` receives a tag and a snapshot from a previous call to `value` with\n * the same tag, and determines if the tag is still valid compared to the\n * snapshot. If the tag's state has changed at all since then, `validate` will\n * return false, otherwise it will return true. This is used to determine if a\n * calculation related to the tags should be rerun.\n *\n * @param tag\n * @param snapshot\n */\nfunction validateTag(tag, snapshot) {\n  return snapshot >= tag[COMPUTE]();\n}\n\n//////////\n\nconst TYPE = Symbol('TAG_TYPE');\n\n// this is basically a const\nlet ALLOW_CYCLES;\nif (true) {\n  ALLOW_CYCLES = new WeakMap();\n}\nfunction allowsCycles(tag) {\n  if (ALLOW_CYCLES === undefined) {\n    return true;\n  } else {\n    return ALLOW_CYCLES.has(tag);\n  }\n}\nclass MonomorphicTagImpl {\n  static combine(tags) {\n    switch (tags.length) {\n      case 0:\n        return CONSTANT_TAG;\n      case 1:\n        return tags[0];\n      default:\n        {\n          let tag = new MonomorphicTagImpl(COMBINATOR_TAG_ID);\n          tag.subtag = tags;\n          return tag;\n        }\n    }\n  }\n  constructor(type) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"revision\", INITIAL);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastChecked\", INITIAL);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastValue\", INITIAL);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isUpdating\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"subtag\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"subtagBufferCache\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, TYPE, void 0);\n    this[TYPE] = type;\n  }\n  [COMPUTE]() {\n    let {\n      lastChecked\n    } = this;\n    if (this.isUpdating === true) {\n      if ( true && !allowsCycles(this)) {\n        throw new Error('Cycles in tags are not allowed');\n      }\n      this.lastChecked = ++$REVISION;\n    } else if (lastChecked !== $REVISION) {\n      this.isUpdating = true;\n      this.lastChecked = $REVISION;\n      try {\n        let {\n          subtag,\n          revision\n        } = this;\n        if (subtag !== null) {\n          if (Array.isArray(subtag)) {\n            for (const tag of subtag) {\n              let value = tag[COMPUTE]();\n              revision = Math.max(value, revision);\n            }\n          } else {\n            let subtagValue = subtag[COMPUTE]();\n            if (subtagValue === this.subtagBufferCache) {\n              revision = Math.max(revision, this.lastValue);\n            } else {\n              // Clear the temporary buffer cache\n              this.subtagBufferCache = null;\n              revision = Math.max(revision, subtagValue);\n            }\n          }\n        }\n        this.lastValue = revision;\n      } finally {\n        this.isUpdating = false;\n      }\n    }\n    return this.lastValue;\n  }\n  static updateTag(_tag, _subtag) {\n    if ( true && _tag[TYPE] !== UPDATABLE_TAG_ID) {\n      throw new Error('Attempted to update a tag that was not updatable');\n    }\n\n    // TODO: TS 3.7 should allow us to do this via assertion\n    let tag = _tag;\n    let subtag = _subtag;\n    if (subtag === CONSTANT_TAG) {\n      tag.subtag = null;\n    } else {\n      // There are two different possibilities when updating a subtag:\n      //\n      // 1. subtag[COMPUTE]() <= tag[COMPUTE]();\n      // 2. subtag[COMPUTE]() > tag[COMPUTE]();\n      //\n      // The first possibility is completely fine within our caching model, but\n      // the second possibility presents a problem. If the parent tag has\n      // already been read, then it's value is cached and will not update to\n      // reflect the subtag's greater value. Next time the cache is busted, the\n      // subtag's value _will_ be read, and it's value will be _greater_ than\n      // the saved snapshot of the parent, causing the resulting calculation to\n      // be rerun erroneously.\n      //\n      // In order to prevent this, when we first update to a new subtag we store\n      // its computed value, and then check against that computed value on\n      // subsequent updates. If its value hasn't changed, then we return the\n      // parent's previous value. Once the subtag changes for the first time,\n      // we clear the cache and everything is finally in sync with the parent.\n      tag.subtagBufferCache = subtag[COMPUTE]();\n      tag.subtag = subtag;\n    }\n  }\n  static dirtyTag(tag, disableConsumptionAssertion) {\n    if ( true && !(tag[TYPE] === UPDATABLE_TAG_ID || tag[TYPE] === DIRYTABLE_TAG_ID)) {\n      throw new Error('Attempted to dirty a tag that was not dirtyable');\n    }\n    if ( true && disableConsumptionAssertion !== true) {\n      // Usually by this point, we've already asserted with better error information,\n      // but this is our last line of defense.\n      unwrap(debug.assertTagNotConsumed)(tag);\n    }\n    tag.revision = ++$REVISION;\n    (0,_global_context_index_js__WEBPACK_IMPORTED_MODULE_1__.scheduleRevalidate)();\n  }\n}\nconst DIRTY_TAG = MonomorphicTagImpl.dirtyTag;\nconst UPDATE_TAG = MonomorphicTagImpl.updateTag;\n\n//////////\n\nfunction createTag() {\n  return new MonomorphicTagImpl(DIRYTABLE_TAG_ID);\n}\nfunction createUpdatableTag() {\n  return new MonomorphicTagImpl(UPDATABLE_TAG_ID);\n}\n\n//////////\n\nconst CONSTANT_TAG = new MonomorphicTagImpl(CONSTANT_TAG_ID);\nfunction isConstTag(tag) {\n  return tag === CONSTANT_TAG;\n}\n\n//////////\n\nconst VOLATILE_TAG_ID = 100;\nclass VolatileTag {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, TYPE, VOLATILE_TAG_ID);\n  }\n  [COMPUTE]() {\n    return VOLATILE;\n  }\n}\nconst VOLATILE_TAG = new VolatileTag();\n\n//////////\n\nconst CURRENT_TAG_ID = 101;\nclass CurrentTag {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, TYPE, CURRENT_TAG_ID);\n  }\n  [COMPUTE]() {\n    return $REVISION;\n  }\n}\nconst CURRENT_TAG = new CurrentTag();\n\n//////////\n\nconst combine = MonomorphicTagImpl.combine;\n\n// Warm\n\nlet tag1 = createUpdatableTag();\nlet tag2 = createUpdatableTag();\nlet tag3 = createUpdatableTag();\nvalueForTag(tag1);\nDIRTY_TAG(tag1);\nvalueForTag(tag1);\nUPDATE_TAG(tag1, combine([tag2, tag3]));\nvalueForTag(tag1);\nDIRTY_TAG(tag2);\nvalueForTag(tag1);\nDIRTY_TAG(tag3);\nvalueForTag(tag1);\nUPDATE_TAG(tag1, tag3);\nvalueForTag(tag1);\nDIRTY_TAG(tag3);\nvalueForTag(tag1);\nfunction isObjectLike(u) {\n  return typeof u === 'object' && u !== null || typeof u === 'function';\n}\n\n///////////\n\nconst TRACKED_TAGS = new WeakMap();\nfunction dirtyTagFor(obj, key, meta) {\n  if ( true && !isObjectLike(obj)) {\n    throw new Error(`BUG: Can't update a tag for a primitive`);\n  }\n  let tags = meta === undefined ? TRACKED_TAGS.get(obj) : meta;\n\n  // No tags have been setup for this object yet, return\n  if (tags === undefined) return;\n\n  // Dirty the tag for the specific property if it exists\n  let propertyTag = tags.get(key);\n  if (propertyTag !== undefined) {\n    if (true) {\n      unwrap(debug.assertTagNotConsumed)(propertyTag, obj, key);\n    }\n    DIRTY_TAG(propertyTag, true);\n  }\n}\nfunction tagMetaFor(obj) {\n  let tags = TRACKED_TAGS.get(obj);\n  if (tags === undefined) {\n    tags = new Map();\n    TRACKED_TAGS.set(obj, tags);\n  }\n  return tags;\n}\nfunction tagFor(obj, key, meta) {\n  let tags = meta === undefined ? tagMetaFor(obj) : meta;\n  let tag = tags.get(key);\n  if (tag === undefined) {\n    tag = createUpdatableTag();\n    tags.set(key, tag);\n  }\n  return tag;\n}\n\n/**\n * An object that that tracks @tracked properties that were consumed.\n */\nclass Tracker {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"tags\", new Set());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"last\", null);\n  }\n  add(tag) {\n    if (tag === CONSTANT_TAG) return;\n    this.tags.add(tag);\n    if (true) {\n      unwrap(debug.markTagAsConsumed)(tag);\n    }\n    this.last = tag;\n  }\n  combine() {\n    let {\n      tags\n    } = this;\n    if (tags.size === 0) {\n      return CONSTANT_TAG;\n    } else if (tags.size === 1) {\n      return this.last;\n    } else {\n      return combine(Array.from(this.tags));\n    }\n  }\n}\n\n/**\n * Whenever a tracked computed property is entered, the current tracker is\n * saved off and a new tracker is replaced.\n *\n * Any tracked properties consumed are added to the current tracker.\n *\n * When a tracked computed property is exited, the tracker's tags are\n * combined and added to the parent tracker.\n *\n * The consequence is that each tracked computed property has a tag\n * that corresponds to the tracked properties consumed inside of\n * itself, including child tracked computed properties.\n */\nlet CURRENT_TRACKER = null;\nconst OPEN_TRACK_FRAMES = [];\nfunction beginTrackFrame(debuggingContext) {\n  OPEN_TRACK_FRAMES.push(CURRENT_TRACKER);\n  CURRENT_TRACKER = new Tracker();\n  if (true) {\n    unwrap(debug.beginTrackingTransaction)(debuggingContext);\n  }\n}\nfunction endTrackFrame() {\n  let current = CURRENT_TRACKER;\n  if (true) {\n    if (OPEN_TRACK_FRAMES.length === 0) {\n      throw new Error('attempted to close a tracking frame, but one was not open');\n    }\n    unwrap(debug.endTrackingTransaction)();\n  }\n  CURRENT_TRACKER = OPEN_TRACK_FRAMES.pop() || null;\n  return unwrap(current).combine();\n}\nfunction beginUntrackFrame() {\n  OPEN_TRACK_FRAMES.push(CURRENT_TRACKER);\n  CURRENT_TRACKER = null;\n}\nfunction endUntrackFrame() {\n  if ( true && OPEN_TRACK_FRAMES.length === 0) {\n    throw new Error('attempted to close a tracking frame, but one was not open');\n  }\n  CURRENT_TRACKER = OPEN_TRACK_FRAMES.pop() || null;\n}\n\n// This function is only for handling errors and resetting to a valid state\nfunction resetTracking() {\n  while (OPEN_TRACK_FRAMES.length > 0) {\n    OPEN_TRACK_FRAMES.pop();\n  }\n  CURRENT_TRACKER = null;\n  if (true) {\n    return unwrap(debug.resetTrackingTransaction)();\n  }\n}\nfunction isTracking() {\n  return CURRENT_TRACKER !== null;\n}\nfunction consumeTag(tag) {\n  if (CURRENT_TRACKER !== null) {\n    CURRENT_TRACKER.add(tag);\n  }\n}\n\n// public interface\n\nconst FN = Symbol('FN');\nconst LAST_VALUE = Symbol('LAST_VALUE');\nconst TAG = Symbol('TAG');\nconst SNAPSHOT = Symbol('SNAPSHOT');\nconst DEBUG_LABEL = Symbol('DEBUG_LABEL');\nfunction createCache(fn, debuggingLabel) {\n  if ( true && !(typeof fn === 'function')) {\n    throw new Error(`createCache() must be passed a function as its first parameter. Called with: ${String(fn)}`);\n  }\n  let cache = {\n    [FN]: fn,\n    [LAST_VALUE]: undefined,\n    [TAG]: undefined,\n    [SNAPSHOT]: -1\n  };\n  if (true) {\n    cache[DEBUG_LABEL] = debuggingLabel;\n  }\n  return cache;\n}\nfunction getValue(cache) {\n  assertCache(cache, 'getValue');\n  let fn = cache[FN];\n  let tag = cache[TAG];\n  let snapshot = cache[SNAPSHOT];\n  if (tag === undefined || !validateTag(tag, snapshot)) {\n    beginTrackFrame();\n    try {\n      cache[LAST_VALUE] = fn();\n    } finally {\n      tag = endTrackFrame();\n      cache[TAG] = tag;\n      cache[SNAPSHOT] = valueForTag(tag);\n      consumeTag(tag);\n    }\n  } else {\n    consumeTag(tag);\n  }\n  return cache[LAST_VALUE];\n}\nfunction isConst(cache) {\n  assertCache(cache, 'isConst');\n  let tag = cache[TAG];\n  assertTag(tag, cache);\n  return isConstTag(tag);\n}\nfunction assertCache(value, fnName) {\n  if ( true && !(typeof value === 'object' && value !== null && FN in value)) {\n    throw new Error(`${fnName}() can only be used on an instance of a cache created with createCache(). Called with: ${String(value)}`);\n  }\n}\n\n// replace this with `expect` when we can\nfunction assertTag(tag, cache) {\n  if ( true && tag === undefined) {\n    throw new Error(`isConst() can only be used on a cache once getValue() has been called at least once. Called with cache function:\\n\\n${String(cache[FN])}`);\n  }\n}\n\n//////////\n\n// Legacy tracking APIs\n\n// track() shouldn't be necessary at all in the VM once the autotracking\n// refactors are merged, and we should generally be moving away from it. It may\n// be necessary in Ember for a while longer, but I think we'll be able to drop\n// it in favor of cache sooner rather than later.\nfunction track(block, debugLabel) {\n  beginTrackFrame(debugLabel);\n  let tag;\n  try {\n    block();\n  } finally {\n    tag = endTrackFrame();\n  }\n  return tag;\n}\n\n// untrack() is currently mainly used to handle places that were previously not\n// tracked, and that tracking now would cause backtracking rerender assertions.\n// I think once we move everyone forward onto modern APIs, we'll probably be\n// able to remove it, but I'm not sure yet.\nfunction untrack(callback) {\n  beginUntrackFrame();\n  try {\n    return callback();\n  } finally {\n    endUntrackFrame();\n  }\n}\nfunction trackedData(key, initializer) {\n  let values = new WeakMap();\n  let hasInitializer = typeof initializer === 'function';\n  function getter(self) {\n    consumeTag(tagFor(self, key));\n    let value;\n\n    // If the field has never been initialized, we should initialize it\n    if (hasInitializer && !values.has(self)) {\n      value = initializer.call(self);\n      values.set(self, value);\n    } else {\n      value = values.get(self);\n    }\n    return value;\n  }\n  function setter(self, value) {\n    dirtyTagFor(self, key);\n    values.set(self, value);\n  }\n  return {\n    getter,\n    setter\n  };\n}\nconst GLIMMER_VALIDATOR_REGISTRATION = Symbol('GLIMMER_VALIDATOR_REGISTRATION');\nconst globalObj = getGlobal();\nif (globalObj[GLIMMER_VALIDATOR_REGISTRATION] === true) {\n  throw new Error('The `@glimmer/validator` library has been included twice in this application. It could be different versions of the package, or the same version included twice by mistake. `@glimmer/validator` depends on having a single copy of the package in use at any time in an application, even if they are the same version. You must dedupe your build to remove the duplicate packages in order to prevent this error.');\n}\nglobalObj[GLIMMER_VALIDATOR_REGISTRATION] = true;\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/vm/index.js":
/*!**************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/vm/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $fp: () => (/* binding */ $fp),\n/* harmony export */   $pc: () => (/* binding */ $pc),\n/* harmony export */   $ra: () => (/* binding */ $ra),\n/* harmony export */   $s0: () => (/* binding */ $s0),\n/* harmony export */   $s1: () => (/* binding */ $s1),\n/* harmony export */   $sp: () => (/* binding */ $sp),\n/* harmony export */   $t0: () => (/* binding */ $t0),\n/* harmony export */   $t1: () => (/* binding */ $t1),\n/* harmony export */   $v0: () => (/* binding */ $v0),\n/* harmony export */   ARG_SHIFT: () => (/* binding */ ARG_SHIFT),\n/* harmony export */   ContentType: () => (/* binding */ ContentType),\n/* harmony export */   CurriedType: () => (/* binding */ CurriedTypes),\n/* harmony export */   CurriedTypes: () => (/* binding */ CurriedTypes),\n/* harmony export */   InternalComponentCapabilities: () => (/* binding */ InternalComponentCapabilities),\n/* harmony export */   InternalComponentCapability: () => (/* binding */ InternalComponentCapabilities),\n/* harmony export */   MACHINE_MASK: () => (/* binding */ MACHINE_MASK),\n/* harmony export */   MAX_SIZE: () => (/* binding */ MAX_SIZE),\n/* harmony export */   MachineOp: () => (/* binding */ MachineOp),\n/* harmony export */   MachineRegister: () => (/* binding */ MachineRegister),\n/* harmony export */   OPERAND_LEN_MASK: () => (/* binding */ OPERAND_LEN_MASK),\n/* harmony export */   Op: () => (/* binding */ Op),\n/* harmony export */   SavedRegister: () => (/* binding */ SavedRegister),\n/* harmony export */   TYPE_MASK: () => (/* binding */ TYPE_MASK),\n/* harmony export */   TYPE_SIZE: () => (/* binding */ TYPE_SIZE),\n/* harmony export */   TemporaryRegister: () => (/* binding */ TemporaryRegister),\n/* harmony export */   isLowLevelRegister: () => (/* binding */ isLowLevelRegister),\n/* harmony export */   isMachineOp: () => (/* binding */ isMachineOp),\n/* harmony export */   isOp: () => (/* binding */ isOp)\n/* harmony export */ });\nconst ContentType = {\n  Component: 0,\n  Helper: 1,\n  String: 2,\n  Empty: 3,\n  SafeString: 4,\n  Fragment: 5,\n  Node: 6,\n  Other: 8\n};\nconst CurriedTypes = {\n  Component: 0,\n  Helper: 1,\n  Modifier: 2\n};\nconst InternalComponentCapabilities = {\n  Empty: 0,\n  dynamicLayout: 0b0000000000001,\n  dynamicTag: 0b0000000000010,\n  prepareArgs: 0b0000000000100,\n  createArgs: 0b0000000001000,\n  attributeHook: 0b0000000010000,\n  elementHook: 0b0000000100000,\n  dynamicScope: 0b0000001000000,\n  createCaller: 0b0000010000000,\n  updateHook: 0b0000100000000,\n  createInstance: 0b0001000000000,\n  wrapped: 0b0010000000000,\n  willDestroy: 0b0100000000000,\n  hasSubOwner: 0b1000000000000\n};\nconst ARG_SHIFT = 8;\nconst MAX_SIZE = 0x7fffffff;\nconst TYPE_SIZE = 0b11111111;\nconst TYPE_MASK = 0b00000000000000000000000011111111;\nconst OPERAND_LEN_MASK = 0b00000000000000000000001100000000;\nconst MACHINE_MASK = 0b00000000000000000000010000000000;\nconst MachineOp = {\n  PushFrame: 0,\n  PopFrame: 1,\n  InvokeVirtual: 2,\n  InvokeStatic: 3,\n  Jump: 4,\n  Return: 5,\n  ReturnTo: 6,\n  Size: 7\n};\nconst Op = {\n  Helper: 16,\n  SetNamedVariables: 17,\n  SetBlocks: 18,\n  SetVariable: 19,\n  SetBlock: 20,\n  GetVariable: 21,\n  GetProperty: 22,\n  GetBlock: 23,\n  SpreadBlock: 24,\n  HasBlock: 25,\n  HasBlockParams: 26,\n  Concat: 27,\n  Constant: 28,\n  ConstantReference: 29,\n  Primitive: 30,\n  PrimitiveReference: 31,\n  ReifyU32: 32,\n  Dup: 33,\n  Pop: 34,\n  Load: 35,\n  Fetch: 36,\n  RootScope: 37,\n  VirtualRootScope: 38,\n  ChildScope: 39,\n  PopScope: 40,\n  Text: 41,\n  Comment: 42,\n  AppendHTML: 43,\n  AppendSafeHTML: 44,\n  AppendDocumentFragment: 45,\n  AppendNode: 46,\n  AppendText: 47,\n  OpenElement: 48,\n  OpenDynamicElement: 49,\n  PushRemoteElement: 50,\n  StaticAttr: 51,\n  DynamicAttr: 52,\n  ComponentAttr: 53,\n  FlushElement: 54,\n  CloseElement: 55,\n  PopRemoteElement: 56,\n  Modifier: 57,\n  BindDynamicScope: 58,\n  PushDynamicScope: 59,\n  PopDynamicScope: 60,\n  CompileBlock: 61,\n  PushBlockScope: 62,\n  PushSymbolTable: 63,\n  InvokeYield: 64,\n  JumpIf: 65,\n  JumpUnless: 66,\n  JumpEq: 67,\n  AssertSame: 68,\n  Enter: 69,\n  Exit: 70,\n  ToBoolean: 71,\n  EnterList: 72,\n  ExitList: 73,\n  Iterate: 74,\n  Main: 75,\n  ContentType: 76,\n  Curry: 77,\n  PushComponentDefinition: 78,\n  PushDynamicComponentInstance: 79,\n  ResolveDynamicComponent: 80,\n  ResolveCurriedComponent: 81,\n  PushArgs: 82,\n  PushEmptyArgs: 83,\n  PopArgs: 84,\n  PrepareArgs: 85,\n  CaptureArgs: 86,\n  CreateComponent: 87,\n  RegisterComponentDestructor: 88,\n  PutComponentOperations: 89,\n  GetComponentSelf: 90,\n  GetComponentTagName: 91,\n  GetComponentLayout: 92,\n  BindEvalScope: 93,\n  SetupForEval: 94,\n  PopulateLayout: 95,\n  InvokeComponentLayout: 96,\n  BeginComponentTransaction: 97,\n  CommitComponentTransaction: 98,\n  DidCreateElement: 99,\n  DidRenderLayout: 100,\n  ResolveMaybeLocal: 102,\n  Debugger: 103,\n  Size: 104,\n  StaticComponentAttr: 105,\n  DynamicContentType: 106,\n  DynamicHelper: 107,\n  DynamicModifier: 108,\n  IfInline: 109,\n  Not: 110,\n  GetDynamicVar: 111,\n  Log: 112\n};\nfunction isMachineOp(value) {\n  return value >= 0 && value <= 15;\n}\nfunction isOp(value) {\n  return value >= 16;\n}\n\n/**\n * Registers\n *\n * For the most part, these follows MIPS naming conventions, however the\n * register numbers are different.\n */\n\n// $0 or $pc (program counter): pointer into `program` for the next insturction; -1 means exit\nconst $pc = 0;\n// $1 or $ra (return address): pointer into `program` for the return\nconst $ra = 1;\n// $2 or $fp (frame pointer): pointer into the `evalStack` for the base of the stack\nconst $fp = 2;\n// $3 or $sp (stack pointer): pointer into the `evalStack` for the top of the stack\nconst $sp = 3;\n// $4-$5 or $s0-$s1 (saved): callee saved general-purpose registers\nconst $s0 = 4;\nconst $s1 = 5;\n// $6-$7 or $t0-$t1 (temporaries): caller saved general-purpose registers\nconst $t0 = 6;\nconst $t1 = 7;\n// $8 or $v0 (return value)\nconst $v0 = 8;\nlet MachineRegister = /*#__PURE__*/function (MachineRegister) {\n  MachineRegister[MachineRegister[\"pc\"] = 0] = \"pc\";\n  MachineRegister[MachineRegister[\"ra\"] = 1] = \"ra\";\n  MachineRegister[MachineRegister[\"fp\"] = 2] = \"fp\";\n  MachineRegister[MachineRegister[\"sp\"] = 3] = \"sp\";\n  return MachineRegister;\n}({});\nfunction isLowLevelRegister(register) {\n  return register <= $sp;\n}\nlet SavedRegister = /*#__PURE__*/function (SavedRegister) {\n  SavedRegister[SavedRegister[\"s0\"] = 4] = \"s0\";\n  SavedRegister[SavedRegister[\"s1\"] = 5] = \"s1\";\n  return SavedRegister;\n}({});\nlet TemporaryRegister = /*#__PURE__*/function (TemporaryRegister) {\n  TemporaryRegister[TemporaryRegister[\"t0\"] = 6] = \"t0\";\n  TemporaryRegister[TemporaryRegister[\"t1\"] = 7] = \"t1\";\n  return TemporaryRegister;\n}({});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/vm/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/wire-format/index.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/wire-format/index.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SexpOpcodes: () => (/* binding */ opcodes),\n/* harmony export */   VariableResolutionContext: () => (/* binding */ resolution),\n/* harmony export */   WellKnownAttrNames: () => (/* binding */ WellKnownAttrNames),\n/* harmony export */   WellKnownTagNames: () => (/* binding */ WellKnownTagNames),\n/* harmony export */   getStringFromValue: () => (/* binding */ getStringFromValue),\n/* harmony export */   is: () => (/* binding */ is),\n/* harmony export */   isArgument: () => (/* binding */ isArgument),\n/* harmony export */   isAttribute: () => (/* binding */ isAttribute),\n/* harmony export */   isFlushElement: () => (/* binding */ isFlushElement),\n/* harmony export */   isGet: () => (/* binding */ isGet),\n/* harmony export */   isHelper: () => (/* binding */ isHelper),\n/* harmony export */   isStringLiteral: () => (/* binding */ isStringLiteral)\n/* harmony export */ });\nconst opcodes = {\n  Append: 1,\n  TrustingAppend: 2,\n  Comment: 3,\n  Modifier: 4,\n  StrictModifier: 5,\n  Block: 6,\n  StrictBlock: 7,\n  Component: 8,\n  OpenElement: 10,\n  OpenElementWithSplat: 11,\n  FlushElement: 12,\n  CloseElement: 13,\n  StaticAttr: 14,\n  DynamicAttr: 15,\n  ComponentAttr: 16,\n  AttrSplat: 17,\n  Yield: 18,\n  DynamicArg: 20,\n  StaticArg: 21,\n  TrustingDynamicAttr: 22,\n  TrustingComponentAttr: 23,\n  StaticComponentAttr: 24,\n  Debugger: 26,\n  Undefined: 27,\n  Call: 28,\n  Concat: 29,\n  GetSymbol: 30,\n  GetLexicalSymbol: 32,\n  GetStrictKeyword: 31,\n  GetFreeAsComponentOrHelperHead: 35,\n  GetFreeAsHelperHead: 37,\n  GetFreeAsModifierHead: 38,\n  GetFreeAsComponentHead: 39,\n  InElement: 40,\n  If: 41,\n  Each: 42,\n  Let: 44,\n  WithDynamicVars: 45,\n  InvokeComponent: 46,\n  HasBlock: 48,\n  HasBlockParams: 49,\n  Curry: 50,\n  Not: 51,\n  IfInline: 52,\n  GetDynamicVar: 53,\n  Log: 54\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nconst resolution = {\n  Strict: 0,\n  ResolveAsComponentOrHelperHead: 1,\n  ResolveAsHelperHead: 5,\n  ResolveAsModifierHead: 6,\n  ResolveAsComponentHead: 7\n};\nconst WellKnownAttrNames = {\n  class: 0,\n  id: 1,\n  value: 2,\n  name: 3,\n  type: 4,\n  style: 5,\n  href: 6\n};\nconst WellKnownTagNames = {\n  div: 0,\n  span: 1,\n  p: 2,\n  a: 3\n};\nfunction is(variant) {\n  return function (value) {\n    return Array.isArray(value) && value[0] === variant;\n  };\n}\n\n// Statements\nconst isFlushElement = is(opcodes.FlushElement);\nfunction isAttribute(val) {\n  return val[0] === opcodes.StaticAttr || val[0] === opcodes.DynamicAttr || val[0] === opcodes.TrustingDynamicAttr || val[0] === opcodes.ComponentAttr || val[0] === opcodes.StaticComponentAttr || val[0] === opcodes.TrustingComponentAttr || val[0] === opcodes.AttrSplat || val[0] === opcodes.Modifier;\n}\nfunction isStringLiteral(expr) {\n  return typeof expr === 'string';\n}\nfunction getStringFromValue(expr) {\n  return expr;\n}\nfunction isArgument(val) {\n  return val[0] === opcodes.StaticArg || val[0] === opcodes.DynamicArg;\n}\nfunction isHelper(expr) {\n  return Array.isArray(expr) && expr[0] === opcodes.Call;\n}\n\n// Expressions\nconst isGet = is(opcodes.GetSymbol);\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/wire-format/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@simple-dom/document/index.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@simple-dom/document/index.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createHTMLDocument)\n/* harmony export */ });\nconst EMPTY_ATTRS = [];\nfunction indexOfAttribute(attributes, namespaceURI, localName) {\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    if (attr.namespaceURI === namespaceURI && attr.localName === localName) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction adjustAttrName(namespaceURI, localName) {\n  return namespaceURI === \"http://www.w3.org/1999/xhtml\" /* HTML */ ? localName.toLowerCase() : localName;\n}\nfunction getAttribute(attributes, namespaceURI, localName) {\n  const index = indexOfAttribute(attributes, namespaceURI, localName);\n  return index === -1 ? null : attributes[index].value;\n}\nfunction removeAttribute(attributes, namespaceURI, localName) {\n  const index = indexOfAttribute(attributes, namespaceURI, localName);\n  if (index !== -1) {\n    attributes.splice(index, 1);\n  }\n}\n// https://dom.spec.whatwg.org/#dom-element-setattributens\nfunction setAttribute(element, namespaceURI, prefix, localName, value) {\n  if (typeof value !== 'string') {\n    value = '' + value;\n  }\n  let {\n    attributes\n  } = element;\n  if (attributes === EMPTY_ATTRS) {\n    attributes = element.attributes = [];\n  } else {\n    const index = indexOfAttribute(attributes, namespaceURI, localName);\n    if (index !== -1) {\n      attributes[index].value = value;\n      return;\n    }\n  }\n  attributes.push({\n    localName,\n    name: prefix === null ? localName : prefix + ':' + localName,\n    namespaceURI,\n    prefix,\n    specified: true,\n    value\n  });\n}\nclass ChildNodes {\n  constructor(node) {\n    this.node = node;\n    this.stale = true;\n    this._length = 0;\n  }\n  get length() {\n    if (this.stale) {\n      this.stale = false;\n      let len = 0;\n      let child = this.node.firstChild;\n      for (; child !== null; len++) {\n        this[len] = child;\n        child = child.nextSibling;\n      }\n      const oldLen = this._length;\n      this._length = len;\n      for (; len < oldLen; len++) {\n        delete this[len];\n      }\n    }\n    return this._length;\n  }\n  item(index) {\n    return index < this.length ? this[index] : null;\n  }\n}\nfunction cloneNode(node, deep) {\n  const clone = nodeFrom(node);\n  if (deep) {\n    let child = node.firstChild;\n    let nextChild = child;\n    while (child !== null) {\n      nextChild = child.nextSibling;\n      clone.appendChild(child.cloneNode(true));\n      child = nextChild;\n    }\n  }\n  return clone;\n}\nfunction nodeFrom(node) {\n  let namespaceURI;\n  if (node.nodeType === 1 /* ELEMENT_NODE */) {\n    namespaceURI = node.namespaceURI;\n  }\n  const clone = new SimpleNodeImpl(node.ownerDocument, node.nodeType, node.nodeName, node.nodeValue, namespaceURI);\n  if (node.nodeType === 1 /* ELEMENT_NODE */) {\n    clone.attributes = copyAttrs(node.attributes);\n  }\n  return clone;\n}\nfunction copyAttrs(attrs) {\n  if (attrs === EMPTY_ATTRS) {\n    return EMPTY_ATTRS;\n  }\n  const copy = [];\n  for (let i = 0; i < attrs.length; i++) {\n    const attr = attrs[i];\n    copy.push({\n      localName: attr.localName,\n      name: attr.name,\n      namespaceURI: attr.namespaceURI,\n      prefix: attr.prefix,\n      specified: true,\n      value: attr.value\n    });\n  }\n  return copy;\n}\nfunction insertBefore(parentNode, newChild, refChild) {\n  invalidate(parentNode);\n  insertBetween(parentNode, newChild, refChild === null ? parentNode.lastChild : refChild.previousSibling, refChild);\n}\nfunction removeChild(parentNode, oldChild) {\n  invalidate(parentNode);\n  removeBetween(parentNode, oldChild, oldChild.previousSibling, oldChild.nextSibling);\n}\nfunction invalidate(parentNode) {\n  const childNodes = parentNode._childNodes;\n  if (childNodes !== undefined) {\n    childNodes.stale = true;\n  }\n}\nfunction insertBetween(parentNode, newChild, previousSibling, nextSibling) {\n  if (newChild.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n    insertFragment(newChild, parentNode, previousSibling, nextSibling);\n    return;\n  }\n  if (newChild.parentNode !== null) {\n    removeChild(newChild.parentNode, newChild);\n  }\n  newChild.parentNode = parentNode;\n  newChild.previousSibling = previousSibling;\n  newChild.nextSibling = nextSibling;\n  if (previousSibling === null) {\n    parentNode.firstChild = newChild;\n  } else {\n    previousSibling.nextSibling = newChild;\n  }\n  if (nextSibling === null) {\n    parentNode.lastChild = newChild;\n  } else {\n    nextSibling.previousSibling = newChild;\n  }\n}\nfunction removeBetween(parentNode, oldChild, previousSibling, nextSibling) {\n  oldChild.parentNode = null;\n  oldChild.previousSibling = null;\n  oldChild.nextSibling = null;\n  if (previousSibling === null) {\n    parentNode.firstChild = nextSibling;\n  } else {\n    previousSibling.nextSibling = nextSibling;\n  }\n  if (nextSibling === null) {\n    parentNode.lastChild = previousSibling;\n  } else {\n    nextSibling.previousSibling = previousSibling;\n  }\n}\nfunction insertFragment(fragment, parentNode, previousSibling, nextSibling) {\n  const firstChild = fragment.firstChild;\n  if (firstChild === null) {\n    return;\n  }\n  fragment.firstChild = null;\n  fragment.lastChild = null;\n  let lastChild = firstChild;\n  let newChild = firstChild;\n  firstChild.previousSibling = previousSibling;\n  if (previousSibling === null) {\n    parentNode.firstChild = firstChild;\n  } else {\n    previousSibling.nextSibling = firstChild;\n  }\n  while (newChild !== null) {\n    newChild.parentNode = parentNode;\n    lastChild = newChild;\n    newChild = newChild.nextSibling;\n  }\n  lastChild.nextSibling = nextSibling;\n  if (nextSibling === null) {\n    parentNode.lastChild = lastChild;\n  } else {\n    nextSibling.previousSibling = lastChild;\n  }\n}\nfunction parseQualifiedName(qualifiedName) {\n  let localName = qualifiedName;\n  let prefix = null;\n  const i = qualifiedName.indexOf(':');\n  if (i !== -1) {\n    prefix = qualifiedName.slice(0, i);\n    localName = qualifiedName.slice(i + 1);\n  }\n  return [prefix, localName];\n}\nclass SimpleNodeImpl {\n  constructor(ownerDocument, nodeType, nodeName, nodeValue, namespaceURI) {\n    this.ownerDocument = ownerDocument;\n    this.nodeType = nodeType;\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n    this.namespaceURI = namespaceURI;\n    this.parentNode = null;\n    this.previousSibling = null;\n    this.nextSibling = null;\n    this.firstChild = null;\n    this.lastChild = null;\n    this.attributes = EMPTY_ATTRS;\n    /**\n     * @internal\n     */\n    this._childNodes = undefined;\n  }\n  get tagName() {\n    return this.nodeName;\n  }\n  get childNodes() {\n    let children = this._childNodes;\n    if (children === undefined) {\n      children = this._childNodes = new ChildNodes(this);\n    }\n    return children;\n  }\n  cloneNode(deep) {\n    return cloneNode(this, deep === true);\n  }\n  appendChild(newChild) {\n    insertBefore(this, newChild, null);\n    return newChild;\n  }\n  insertBefore(newChild, refChild) {\n    insertBefore(this, newChild, refChild);\n    return newChild;\n  }\n  removeChild(oldChild) {\n    removeChild(this, oldChild);\n    return oldChild;\n  }\n  insertAdjacentHTML(position, html) {\n    const raw = new SimpleNodeImpl(this.ownerDocument, -1 /* RAW_NODE */, '#raw', html, void 0);\n    let parentNode;\n    let nextSibling;\n    switch (position) {\n      case 'beforebegin':\n        parentNode = this.parentNode;\n        nextSibling = this;\n        break;\n      case 'afterbegin':\n        parentNode = this;\n        nextSibling = this.firstChild;\n        break;\n      case 'beforeend':\n        parentNode = this;\n        nextSibling = null;\n        break;\n      case 'afterend':\n        parentNode = this.parentNode;\n        nextSibling = this.nextSibling;\n        break;\n      default:\n        throw new Error('invalid position');\n    }\n    if (parentNode === null) {\n      throw new Error(`${position} requires a parentNode`);\n    }\n    insertBefore(parentNode, raw, nextSibling);\n  }\n  getAttribute(name) {\n    const localName = adjustAttrName(this.namespaceURI, name);\n    return getAttribute(this.attributes, null, localName);\n  }\n  getAttributeNS(namespaceURI, localName) {\n    return getAttribute(this.attributes, namespaceURI, localName);\n  }\n  setAttribute(name, value) {\n    const localName = adjustAttrName(this.namespaceURI, name);\n    setAttribute(this, null, null, localName, value);\n  }\n  setAttributeNS(namespaceURI, qualifiedName, value) {\n    const [prefix, localName] = parseQualifiedName(qualifiedName);\n    setAttribute(this, namespaceURI, prefix, localName, value);\n  }\n  removeAttribute(name) {\n    const localName = adjustAttrName(this.namespaceURI, name);\n    removeAttribute(this.attributes, null, localName);\n  }\n  removeAttributeNS(namespaceURI, localName) {\n    removeAttribute(this.attributes, namespaceURI, localName);\n  }\n  get doctype() {\n    return this.firstChild;\n  }\n  get documentElement() {\n    return this.lastChild;\n  }\n  get head() {\n    return this.documentElement.firstChild;\n  }\n  get body() {\n    return this.documentElement.lastChild;\n  }\n  createElement(name) {\n    return new SimpleNodeImpl(this, 1 /* ELEMENT_NODE */, name.toUpperCase(), null, \"http://www.w3.org/1999/xhtml\" /* HTML */);\n  }\n  createElementNS(namespace, qualifiedName) {\n    // Node name is case-preserving in XML contexts, but returns canonical uppercase form in HTML contexts\n    // https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-104682815\n    const nodeName = namespace === \"http://www.w3.org/1999/xhtml\" /* HTML */ ? qualifiedName.toUpperCase() : qualifiedName;\n    // we don't care to parse the qualified name because we only support HTML documents\n    // which don't support prefixed elements\n    return new SimpleNodeImpl(this, 1 /* ELEMENT_NODE */, nodeName, null, namespace);\n  }\n  createTextNode(text) {\n    return new SimpleNodeImpl(this, 3 /* TEXT_NODE */, '#text', text, void 0);\n  }\n  createComment(text) {\n    return new SimpleNodeImpl(this, 8 /* COMMENT_NODE */, '#comment', text, void 0);\n  }\n  /**\n   * Backwards compat\n   * @deprecated\n   */\n  createRawHTMLSection(text) {\n    return new SimpleNodeImpl(this, -1 /* RAW_NODE */, '#raw', text, void 0);\n  }\n  createDocumentFragment() {\n    return new SimpleNodeImpl(this, 11 /* DOCUMENT_FRAGMENT_NODE */, '#document-fragment', null, void 0);\n  }\n}\nfunction createHTMLDocument() {\n  // dom.d.ts types ownerDocument as Document but for a document ownerDocument is null\n  const document = new SimpleNodeImpl(null, 9 /* DOCUMENT_NODE */, '#document', null, \"http://www.w3.org/1999/xhtml\" /* HTML */);\n  const doctype = new SimpleNodeImpl(document, 10 /* DOCUMENT_TYPE_NODE */, 'html', null, \"http://www.w3.org/1999/xhtml\" /* HTML */);\n  const html = new SimpleNodeImpl(document, 1 /* ELEMENT_NODE */, 'HTML', null, \"http://www.w3.org/1999/xhtml\" /* HTML */);\n  const head = new SimpleNodeImpl(document, 1 /* ELEMENT_NODE */, 'HEAD', null, \"http://www.w3.org/1999/xhtml\" /* HTML */);\n  const body = new SimpleNodeImpl(document, 1 /* ELEMENT_NODE */, 'BODY', null, \"http://www.w3.org/1999/xhtml\" /* HTML */);\n  html.appendChild(head);\n  html.appendChild(body);\n  document.appendChild(doctype);\n  document.appendChild(html);\n  return document;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@simple-dom/document/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/backburner.js/index.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/backburner.js/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPlatform: () => (/* binding */ buildPlatform),\n/* harmony export */   \"default\": () => (/* binding */ Backburner)\n/* harmony export */ });\nconst SET_TIMEOUT = setTimeout;\nconst NOOP = () => {};\nfunction buildNext(flush) {\n  // Using \"promises first\" here to:\n  //\n  // 1) Ensure more consistent experience on browsers that\n  //    have differently queued microtasks (separate queues for\n  //    MutationObserver vs Promises).\n  // 2) Ensure better debugging experiences (it shows up in Chrome\n  //    call stack as \"Promise.then (async)\") which is more consistent\n  //    with user expectations\n  //\n  // When Promise is unavailable use MutationObserver (mostly so that we\n  // still get microtasks on IE11), and when neither MutationObserver and\n  // Promise are present use a plain old setTimeout.\n  if (typeof Promise === 'function') {\n    const autorunPromise = Promise.resolve();\n    return () => autorunPromise.then(flush);\n  } else if (typeof MutationObserver === 'function') {\n    let iterations = 0;\n    let observer = new MutationObserver(flush);\n    let node = document.createTextNode('');\n    observer.observe(node, {\n      characterData: true\n    });\n    return () => {\n      iterations = ++iterations % 2;\n      node.data = '' + iterations;\n      return iterations;\n    };\n  } else {\n    return () => SET_TIMEOUT(flush, 0);\n  }\n}\nfunction buildPlatform(flush) {\n  let clearNext = NOOP;\n  return {\n    setTimeout(fn, ms) {\n      return setTimeout(fn, ms);\n    },\n    clearTimeout(timerId) {\n      return clearTimeout(timerId);\n    },\n    now() {\n      return Date.now();\n    },\n    next: buildNext(flush),\n    clearNext\n  };\n}\nconst NUMBER = /\\d+/;\nconst TIMERS_OFFSET = 6;\nfunction isCoercableNumber(suspect) {\n  let type = typeof suspect;\n  return type === 'number' && suspect === suspect || type === 'string' && NUMBER.test(suspect);\n}\nfunction getOnError(options) {\n  return options.onError || options.onErrorTarget && options.onErrorTarget[options.onErrorMethod];\n}\nfunction findItem(target, method, collection) {\n  let index = -1;\n  for (let i = 0, l = collection.length; i < l; i += 4) {\n    if (collection[i] === target && collection[i + 1] === method) {\n      index = i;\n      break;\n    }\n  }\n  return index;\n}\nfunction findTimerItem(target, method, collection) {\n  let index = -1;\n  for (let i = 2, l = collection.length; i < l; i += 6) {\n    if (collection[i] === target && collection[i + 1] === method) {\n      index = i - 2;\n      break;\n    }\n  }\n  return index;\n}\nfunction getQueueItems(items, queueItemLength, queueItemPositionOffset = 0) {\n  let queueItems = [];\n  for (let i = 0; i < items.length; i += queueItemLength) {\n    let maybeError = items[i + 3 /* stack */ + queueItemPositionOffset];\n    let queueItem = {\n      target: items[i + 0 /* target */ + queueItemPositionOffset],\n      method: items[i + 1 /* method */ + queueItemPositionOffset],\n      args: items[i + 2 /* args */ + queueItemPositionOffset],\n      stack: maybeError !== undefined && 'stack' in maybeError ? maybeError.stack : ''\n    };\n    queueItems.push(queueItem);\n  }\n  return queueItems;\n}\nfunction binarySearch(time, timers) {\n  let start = 0;\n  let end = timers.length - TIMERS_OFFSET;\n  let middle;\n  let l;\n  while (start < end) {\n    // since timers is an array of pairs 'l' will always\n    // be an integer\n    l = (end - start) / TIMERS_OFFSET;\n    // compensate for the index in case even number\n    // of pairs inside timers\n    middle = start + l - l % TIMERS_OFFSET;\n    if (time >= timers[middle]) {\n      start = middle + TIMERS_OFFSET;\n    } else {\n      end = middle;\n    }\n  }\n  return time >= timers[start] ? start + TIMERS_OFFSET : start;\n}\nconst QUEUE_ITEM_LENGTH = 4;\nclass Queue {\n  constructor(name, options = {}, globalOptions = {}) {\n    this._queueBeingFlushed = [];\n    this.targetQueues = new Map();\n    this.index = 0;\n    this._queue = [];\n    this.name = name;\n    this.options = options;\n    this.globalOptions = globalOptions;\n  }\n  stackFor(index) {\n    if (index < this._queue.length) {\n      let entry = this._queue[index * 3 + QUEUE_ITEM_LENGTH];\n      if (entry) {\n        return entry.stack;\n      } else {\n        return null;\n      }\n    }\n  }\n  flush(sync) {\n    let {\n      before,\n      after\n    } = this.options;\n    let target;\n    let method;\n    let args;\n    let errorRecordedForStack;\n    this.targetQueues.clear();\n    if (this._queueBeingFlushed.length === 0) {\n      this._queueBeingFlushed = this._queue;\n      this._queue = [];\n    }\n    if (before !== undefined) {\n      before();\n    }\n    let invoke;\n    let queueItems = this._queueBeingFlushed;\n    if (queueItems.length > 0) {\n      let onError = getOnError(this.globalOptions);\n      invoke = onError ? this.invokeWithOnError : this.invoke;\n      for (let i = this.index; i < queueItems.length; i += QUEUE_ITEM_LENGTH) {\n        this.index += QUEUE_ITEM_LENGTH;\n        method = queueItems[i + 1];\n        // method could have been nullified / canceled during flush\n        if (method !== null) {\n          //\n          //    ** Attention intrepid developer **\n          //\n          //    To find out the stack of this task when it was scheduled onto\n          //    the run loop, add the following to your app.js:\n          //\n          //    Ember.run.backburner.DEBUG = true; // NOTE: This slows your app, don't leave it on in production.\n          //\n          //    Once that is in place, when you are at a breakpoint and navigate\n          //    here in the stack explorer, you can look at `errorRecordedForStack.stack`,\n          //    which will be the captured stack when this job was scheduled.\n          //\n          //    One possible long-term solution is the following Chrome issue:\n          //       https://bugs.chromium.org/p/chromium/issues/detail?id=332624\n          //\n          target = queueItems[i];\n          args = queueItems[i + 2];\n          errorRecordedForStack = queueItems[i + 3]; // Debugging assistance\n          invoke(target, method, args, onError, errorRecordedForStack);\n        }\n        if (this.index !== this._queueBeingFlushed.length && this.globalOptions.mustYield && this.globalOptions.mustYield()) {\n          return 1 /* Pause */;\n        }\n      }\n    }\n    if (after !== undefined) {\n      after();\n    }\n    this._queueBeingFlushed.length = 0;\n    this.index = 0;\n    if (sync !== false && this._queue.length > 0) {\n      // check if new items have been added\n      this.flush(true);\n    }\n  }\n  hasWork() {\n    return this._queueBeingFlushed.length > 0 || this._queue.length > 0;\n  }\n  cancel({\n    target,\n    method\n  }) {\n    let queue = this._queue;\n    let targetQueueMap = this.targetQueues.get(target);\n    if (targetQueueMap !== undefined) {\n      targetQueueMap.delete(method);\n    }\n    let index = findItem(target, method, queue);\n    if (index > -1) {\n      queue[index + 1] = null;\n      return true;\n    }\n    // if not found in current queue\n    // could be in the queue that is being flushed\n    queue = this._queueBeingFlushed;\n    index = findItem(target, method, queue);\n    if (index > -1) {\n      queue[index + 1] = null;\n      return true;\n    }\n    return false;\n  }\n  push(target, method, args, stack) {\n    this._queue.push(target, method, args, stack);\n    return {\n      queue: this,\n      target,\n      method\n    };\n  }\n  pushUnique(target, method, args, stack) {\n    let localQueueMap = this.targetQueues.get(target);\n    if (localQueueMap === undefined) {\n      localQueueMap = new Map();\n      this.targetQueues.set(target, localQueueMap);\n    }\n    let index = localQueueMap.get(method);\n    if (index === undefined) {\n      let queueIndex = this._queue.push(target, method, args, stack) - QUEUE_ITEM_LENGTH;\n      localQueueMap.set(method, queueIndex);\n    } else {\n      let queue = this._queue;\n      queue[index + 2] = args; // replace args\n      queue[index + 3] = stack; // replace stack\n    }\n    return {\n      queue: this,\n      target,\n      method\n    };\n  }\n  _getDebugInfo(debugEnabled) {\n    if (debugEnabled) {\n      let debugInfo = getQueueItems(this._queue, QUEUE_ITEM_LENGTH);\n      return debugInfo;\n    }\n    return undefined;\n  }\n  invoke(target, method, args /*, onError, errorRecordedForStack */) {\n    if (args === undefined) {\n      method.call(target);\n    } else {\n      method.apply(target, args);\n    }\n  }\n  invokeWithOnError(target, method, args, onError, errorRecordedForStack) {\n    try {\n      if (args === undefined) {\n        method.call(target);\n      } else {\n        method.apply(target, args);\n      }\n    } catch (error) {\n      onError(error, errorRecordedForStack);\n    }\n  }\n}\nclass DeferredActionQueues {\n  constructor(queueNames = [], options) {\n    this.queues = {};\n    this.queueNameIndex = 0;\n    this.queueNames = queueNames;\n    queueNames.reduce(function (queues, queueName) {\n      queues[queueName] = new Queue(queueName, options[queueName], options);\n      return queues;\n    }, this.queues);\n  }\n  /**\n   * @method schedule\n   * @param {String} queueName\n   * @param {Any} target\n   * @param {Any} method\n   * @param {Any} args\n   * @param {Boolean} onceFlag\n   * @param {Any} stack\n   * @return queue\n   */\n  schedule(queueName, target, method, args, onceFlag, stack) {\n    let queues = this.queues;\n    let queue = queues[queueName];\n    if (queue === undefined) {\n      throw new Error(`You attempted to schedule an action in a queue (${queueName}) that doesn\\'t exist`);\n    }\n    if (method === undefined || method === null) {\n      throw new Error(`You attempted to schedule an action in a queue (${queueName}) for a method that doesn\\'t exist`);\n    }\n    this.queueNameIndex = 0;\n    if (onceFlag) {\n      return queue.pushUnique(target, method, args, stack);\n    } else {\n      return queue.push(target, method, args, stack);\n    }\n  }\n  /**\n   * DeferredActionQueues.flush() calls Queue.flush()\n   *\n   * @method flush\n   * @param {Boolean} fromAutorun\n   */\n  flush(fromAutorun = false) {\n    let queue;\n    let queueName;\n    let numberOfQueues = this.queueNames.length;\n    while (this.queueNameIndex < numberOfQueues) {\n      queueName = this.queueNames[this.queueNameIndex];\n      queue = this.queues[queueName];\n      if (queue.hasWork() === false) {\n        this.queueNameIndex++;\n        if (fromAutorun && this.queueNameIndex < numberOfQueues) {\n          return 1 /* Pause */;\n        }\n      } else {\n        if (queue.flush(false /* async */) === 1 /* Pause */) {\n          return 1 /* Pause */;\n        }\n      }\n    }\n  }\n  /**\n   * Returns debug information for the current queues.\n   *\n   * @method _getDebugInfo\n   * @param {Boolean} debugEnabled\n   * @returns {IDebugInfo | undefined}\n   */\n  _getDebugInfo(debugEnabled) {\n    if (debugEnabled) {\n      let debugInfo = {};\n      let queue;\n      let queueName;\n      let numberOfQueues = this.queueNames.length;\n      let i = 0;\n      while (i < numberOfQueues) {\n        queueName = this.queueNames[i];\n        queue = this.queues[queueName];\n        debugInfo[queueName] = queue._getDebugInfo(debugEnabled);\n        i++;\n      }\n      return debugInfo;\n    }\n    return;\n  }\n}\nfunction iteratorDrain(fn) {\n  let iterator = fn();\n  let result = iterator.next();\n  while (result.done === false) {\n    result.value();\n    result = iterator.next();\n  }\n}\nconst noop = function () {};\nconst DISABLE_SCHEDULE = Object.freeze([]);\nfunction parseArgs() {\n  let length = arguments.length;\n  let args;\n  let method;\n  let target;\n  if (length === 0) ;else if (length === 1) {\n    target = null;\n    method = arguments[0];\n  } else {\n    let argsIndex = 2;\n    let methodOrTarget = arguments[0];\n    let methodOrArgs = arguments[1];\n    let type = typeof methodOrArgs;\n    if (type === 'function') {\n      target = methodOrTarget;\n      method = methodOrArgs;\n    } else if (methodOrTarget !== null && type === 'string' && methodOrArgs in methodOrTarget) {\n      target = methodOrTarget;\n      method = target[methodOrArgs];\n    } else if (typeof methodOrTarget === 'function') {\n      argsIndex = 1;\n      target = null;\n      method = methodOrTarget;\n    }\n    if (length > argsIndex) {\n      let len = length - argsIndex;\n      args = new Array(len);\n      for (let i = 0; i < len; i++) {\n        args[i] = arguments[i + argsIndex];\n      }\n    }\n  }\n  return [target, method, args];\n}\nfunction parseTimerArgs() {\n  let [target, method, args] = parseArgs(...arguments);\n  let wait = 0;\n  let length = args !== undefined ? args.length : 0;\n  if (length > 0) {\n    let last = args[length - 1];\n    if (isCoercableNumber(last)) {\n      wait = parseInt(args.pop(), 10);\n    }\n  }\n  return [target, method, args, wait];\n}\nfunction parseDebounceArgs() {\n  let target;\n  let method;\n  let isImmediate;\n  let args;\n  let wait;\n  if (arguments.length === 2) {\n    method = arguments[0];\n    wait = arguments[1];\n    target = null;\n  } else {\n    [target, method, args] = parseArgs(...arguments);\n    if (args === undefined) {\n      wait = 0;\n    } else {\n      wait = args.pop();\n      if (!isCoercableNumber(wait)) {\n        isImmediate = wait === true;\n        wait = args.pop();\n      }\n    }\n  }\n  wait = parseInt(wait, 10);\n  return [target, method, args, wait, isImmediate];\n}\nlet UUID = 0;\nlet beginCount = 0;\nlet endCount = 0;\nlet beginEventCount = 0;\nlet endEventCount = 0;\nlet runCount = 0;\nlet joinCount = 0;\nlet deferCount = 0;\nlet scheduleCount = 0;\nlet scheduleIterableCount = 0;\nlet deferOnceCount = 0;\nlet scheduleOnceCount = 0;\nlet setTimeoutCount = 0;\nlet laterCount = 0;\nlet throttleCount = 0;\nlet debounceCount = 0;\nlet cancelTimersCount = 0;\nlet cancelCount = 0;\nlet autorunsCreatedCount = 0;\nlet autorunsCompletedCount = 0;\nlet deferredActionQueuesCreatedCount = 0;\nlet nestedDeferredActionQueuesCreated = 0;\nclass Backburner {\n  constructor(queueNames, options) {\n    this.DEBUG = false;\n    this.currentInstance = null;\n    this.instanceStack = [];\n    this._eventCallbacks = {\n      end: [],\n      begin: []\n    };\n    this._timerTimeoutId = null;\n    this._timers = [];\n    this._autorun = false;\n    this._autorunStack = null;\n    this.queueNames = queueNames;\n    this.options = options || {};\n    if (typeof this.options.defaultQueue === 'string') {\n      this._defaultQueue = this.options.defaultQueue;\n    } else {\n      this._defaultQueue = this.queueNames[0];\n    }\n    this._onBegin = this.options.onBegin || noop;\n    this._onEnd = this.options.onEnd || noop;\n    this._boundRunExpiredTimers = this._runExpiredTimers.bind(this);\n    this._boundAutorunEnd = () => {\n      autorunsCompletedCount++;\n      // if the autorun was already flushed, do nothing\n      if (this._autorun === false) {\n        return;\n      }\n      this._autorun = false;\n      this._autorunStack = null;\n      this._end(true /* fromAutorun */);\n    };\n    let builder = this.options._buildPlatform || buildPlatform;\n    this._platform = builder(this._boundAutorunEnd);\n  }\n  get counters() {\n    return {\n      begin: beginCount,\n      end: endCount,\n      events: {\n        begin: beginEventCount,\n        end: endEventCount\n      },\n      autoruns: {\n        created: autorunsCreatedCount,\n        completed: autorunsCompletedCount\n      },\n      run: runCount,\n      join: joinCount,\n      defer: deferCount,\n      schedule: scheduleCount,\n      scheduleIterable: scheduleIterableCount,\n      deferOnce: deferOnceCount,\n      scheduleOnce: scheduleOnceCount,\n      setTimeout: setTimeoutCount,\n      later: laterCount,\n      throttle: throttleCount,\n      debounce: debounceCount,\n      cancelTimers: cancelTimersCount,\n      cancel: cancelCount,\n      loops: {\n        total: deferredActionQueuesCreatedCount,\n        nested: nestedDeferredActionQueuesCreated\n      }\n    };\n  }\n  get defaultQueue() {\n    return this._defaultQueue;\n  }\n  /*\n    @method begin\n    @return instantiated class DeferredActionQueues\n  */\n  begin() {\n    beginCount++;\n    let options = this.options;\n    let previousInstance = this.currentInstance;\n    let current;\n    if (this._autorun !== false) {\n      current = previousInstance;\n      this._cancelAutorun();\n    } else {\n      if (previousInstance !== null) {\n        nestedDeferredActionQueuesCreated++;\n        this.instanceStack.push(previousInstance);\n      }\n      deferredActionQueuesCreatedCount++;\n      current = this.currentInstance = new DeferredActionQueues(this.queueNames, options);\n      beginEventCount++;\n      this._trigger('begin', current, previousInstance);\n    }\n    this._onBegin(current, previousInstance);\n    return current;\n  }\n  end() {\n    endCount++;\n    this._end(false);\n  }\n  on(eventName, callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError(`Callback must be a function`);\n    }\n    let callbacks = this._eventCallbacks[eventName];\n    if (callbacks !== undefined) {\n      callbacks.push(callback);\n    } else {\n      throw new TypeError(`Cannot on() event ${eventName} because it does not exist`);\n    }\n  }\n  off(eventName, callback) {\n    let callbacks = this._eventCallbacks[eventName];\n    if (!eventName || callbacks === undefined) {\n      throw new TypeError(`Cannot off() event ${eventName} because it does not exist`);\n    }\n    let callbackFound = false;\n    if (callback) {\n      for (let i = 0; i < callbacks.length; i++) {\n        if (callbacks[i] === callback) {\n          callbackFound = true;\n          callbacks.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    if (!callbackFound) {\n      throw new TypeError(`Cannot off() callback that does not exist`);\n    }\n  }\n  run() {\n    runCount++;\n    let [target, method, args] = parseArgs(...arguments);\n    return this._run(target, method, args);\n  }\n  join() {\n    joinCount++;\n    let [target, method, args] = parseArgs(...arguments);\n    return this._join(target, method, args);\n  }\n  /**\n   * @deprecated please use schedule instead.\n   */\n  defer(queueName, target, method, ...args) {\n    deferCount++;\n    return this.schedule(queueName, target, method, ...args);\n  }\n  schedule(queueName, ..._args) {\n    scheduleCount++;\n    let [target, method, args] = parseArgs(..._args);\n    let stack = this.DEBUG ? new Error() : undefined;\n    return this._ensureInstance().schedule(queueName, target, method, args, false, stack);\n  }\n  /*\n    Defer the passed iterable of functions to run inside the specified queue.\n       @method scheduleIterable\n    @param {String} queueName\n    @param {Iterable} an iterable of functions to execute\n    @return method result\n  */\n  scheduleIterable(queueName, iterable) {\n    scheduleIterableCount++;\n    let stack = this.DEBUG ? new Error() : undefined;\n    return this._ensureInstance().schedule(queueName, null, iteratorDrain, [iterable], false, stack);\n  }\n  /**\n   * @deprecated please use scheduleOnce instead.\n   */\n  deferOnce(queueName, target, method, ...args) {\n    deferOnceCount++;\n    return this.scheduleOnce(queueName, target, method, ...args);\n  }\n  scheduleOnce(queueName, ..._args) {\n    scheduleOnceCount++;\n    let [target, method, args] = parseArgs(..._args);\n    let stack = this.DEBUG ? new Error() : undefined;\n    return this._ensureInstance().schedule(queueName, target, method, args, true, stack);\n  }\n  setTimeout() {\n    setTimeoutCount++;\n    return this.later(...arguments);\n  }\n  later() {\n    laterCount++;\n    let [target, method, args, wait] = parseTimerArgs(...arguments);\n    return this._later(target, method, args, wait);\n  }\n  throttle() {\n    throttleCount++;\n    let [target, method, args, wait, isImmediate = true] = parseDebounceArgs(...arguments);\n    let index = findTimerItem(target, method, this._timers);\n    let timerId;\n    if (index === -1) {\n      timerId = this._later(target, method, isImmediate ? DISABLE_SCHEDULE : args, wait);\n      if (isImmediate) {\n        this._join(target, method, args);\n      }\n    } else {\n      timerId = this._timers[index + 1];\n      let argIndex = index + 4;\n      if (this._timers[argIndex] !== DISABLE_SCHEDULE) {\n        this._timers[argIndex] = args;\n      }\n    }\n    return timerId;\n  }\n  debounce() {\n    debounceCount++;\n    let [target, method, args, wait, isImmediate = false] = parseDebounceArgs(...arguments);\n    let _timers = this._timers;\n    let index = findTimerItem(target, method, _timers);\n    let timerId;\n    if (index === -1) {\n      timerId = this._later(target, method, isImmediate ? DISABLE_SCHEDULE : args, wait);\n      if (isImmediate) {\n        this._join(target, method, args);\n      }\n    } else {\n      let executeAt = this._platform.now() + wait;\n      let argIndex = index + 4;\n      if (_timers[argIndex] === DISABLE_SCHEDULE) {\n        args = DISABLE_SCHEDULE;\n      }\n      timerId = _timers[index + 1];\n      let i = binarySearch(executeAt, _timers);\n      if (index + TIMERS_OFFSET === i) {\n        _timers[index] = executeAt;\n        _timers[argIndex] = args;\n      } else {\n        let stack = this._timers[index + 5];\n        this._timers.splice(i, 0, executeAt, timerId, target, method, args, stack);\n        this._timers.splice(index, TIMERS_OFFSET);\n      }\n      if (index === 0) {\n        this._reinstallTimerTimeout();\n      }\n    }\n    return timerId;\n  }\n  cancelTimers() {\n    cancelTimersCount++;\n    this._clearTimerTimeout();\n    this._timers = [];\n    this._cancelAutorun();\n  }\n  hasTimers() {\n    return this._timers.length > 0 || this._autorun;\n  }\n  cancel(timer) {\n    cancelCount++;\n    if (timer === null || timer === undefined) {\n      return false;\n    }\n    let timerType = typeof timer;\n    if (timerType === 'number') {\n      // we're cancelling a setTimeout or throttle or debounce\n      return this._cancelLaterTimer(timer);\n    } else if (timerType === 'object' && timer.queue && timer.method) {\n      // we're cancelling a deferOnce\n      return timer.queue.cancel(timer);\n    }\n    return false;\n  }\n  ensureInstance() {\n    this._ensureInstance();\n  }\n  /**\n   * Returns debug information related to the current instance of Backburner\n   *\n   * @method getDebugInfo\n   * @returns {Object | undefined} Will return and Object containing debug information if\n   * the DEBUG flag is set to true on the current instance of Backburner, else undefined.\n   */\n  getDebugInfo() {\n    if (this.DEBUG) {\n      return {\n        autorun: this._autorunStack,\n        counters: this.counters,\n        timers: getQueueItems(this._timers, TIMERS_OFFSET, 2),\n        instanceStack: [this.currentInstance, ...this.instanceStack].map(deferredActionQueue => deferredActionQueue && deferredActionQueue._getDebugInfo(this.DEBUG))\n      };\n    }\n    return undefined;\n  }\n  _end(fromAutorun) {\n    let currentInstance = this.currentInstance;\n    let nextInstance = null;\n    if (currentInstance === null) {\n      throw new Error(`end called without begin`);\n    }\n    // Prevent double-finally bug in Safari 6.0.2 and iOS 6\n    // This bug appears to be resolved in Safari 6.0.5 and iOS 7\n    let finallyAlreadyCalled = false;\n    let result;\n    try {\n      result = currentInstance.flush(fromAutorun);\n    } finally {\n      if (!finallyAlreadyCalled) {\n        finallyAlreadyCalled = true;\n        if (result === 1 /* Pause */) {\n          const plannedNextQueue = this.queueNames[currentInstance.queueNameIndex];\n          this._scheduleAutorun(plannedNextQueue);\n        } else {\n          this.currentInstance = null;\n          if (this.instanceStack.length > 0) {\n            nextInstance = this.instanceStack.pop();\n            this.currentInstance = nextInstance;\n          }\n          this._trigger('end', currentInstance, nextInstance);\n          this._onEnd(currentInstance, nextInstance);\n        }\n      }\n    }\n  }\n  _join(target, method, args) {\n    if (this.currentInstance === null) {\n      return this._run(target, method, args);\n    }\n    if (target === undefined && args === undefined) {\n      return method();\n    } else {\n      return method.apply(target, args);\n    }\n  }\n  _run(target, method, args) {\n    let onError = getOnError(this.options);\n    this.begin();\n    if (onError) {\n      try {\n        return method.apply(target, args);\n      } catch (error) {\n        onError(error);\n      } finally {\n        this.end();\n      }\n    } else {\n      try {\n        return method.apply(target, args);\n      } finally {\n        this.end();\n      }\n    }\n  }\n  _cancelAutorun() {\n    if (this._autorun) {\n      this._platform.clearNext();\n      this._autorun = false;\n      this._autorunStack = null;\n    }\n  }\n  _later(target, method, args, wait) {\n    let stack = this.DEBUG ? new Error() : undefined;\n    let executeAt = this._platform.now() + wait;\n    let id = UUID++;\n    if (this._timers.length === 0) {\n      this._timers.push(executeAt, id, target, method, args, stack);\n      this._installTimerTimeout();\n    } else {\n      // find position to insert\n      let i = binarySearch(executeAt, this._timers);\n      this._timers.splice(i, 0, executeAt, id, target, method, args, stack);\n      // always reinstall since it could be out of sync\n      this._reinstallTimerTimeout();\n    }\n    return id;\n  }\n  _cancelLaterTimer(timer) {\n    for (let i = 1; i < this._timers.length; i += TIMERS_OFFSET) {\n      if (this._timers[i] === timer) {\n        this._timers.splice(i - 1, TIMERS_OFFSET);\n        if (i === 1) {\n          this._reinstallTimerTimeout();\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   Trigger an event. Supports up to two arguments. Designed around\n   triggering transition events from one run loop instance to the\n   next, which requires an argument for the  instance and then\n   an argument for the next instance.\n      @private\n   @method _trigger\n   @param {String} eventName\n   @param {any} arg1\n   @param {any} arg2\n   */\n  _trigger(eventName, arg1, arg2) {\n    let callbacks = this._eventCallbacks[eventName];\n    if (callbacks !== undefined) {\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](arg1, arg2);\n      }\n    }\n  }\n  _runExpiredTimers() {\n    this._timerTimeoutId = null;\n    if (this._timers.length > 0) {\n      this.begin();\n      this._scheduleExpiredTimers();\n      this.end();\n    }\n  }\n  _scheduleExpiredTimers() {\n    let timers = this._timers;\n    let i = 0;\n    let l = timers.length;\n    let defaultQueue = this._defaultQueue;\n    let n = this._platform.now();\n    for (; i < l; i += TIMERS_OFFSET) {\n      let executeAt = timers[i];\n      if (executeAt > n) {\n        break;\n      }\n      let args = timers[i + 4];\n      if (args !== DISABLE_SCHEDULE) {\n        let target = timers[i + 2];\n        let method = timers[i + 3];\n        let stack = timers[i + 5];\n        this.currentInstance.schedule(defaultQueue, target, method, args, false, stack);\n      }\n    }\n    timers.splice(0, i);\n    this._installTimerTimeout();\n  }\n  _reinstallTimerTimeout() {\n    this._clearTimerTimeout();\n    this._installTimerTimeout();\n  }\n  _clearTimerTimeout() {\n    if (this._timerTimeoutId === null) {\n      return;\n    }\n    this._platform.clearTimeout(this._timerTimeoutId);\n    this._timerTimeoutId = null;\n  }\n  _installTimerTimeout() {\n    if (this._timers.length === 0) {\n      return;\n    }\n    let minExpiresAt = this._timers[0];\n    let n = this._platform.now();\n    let wait = Math.max(0, minExpiresAt - n);\n    this._timerTimeoutId = this._platform.setTimeout(this._boundRunExpiredTimers, wait);\n  }\n  _ensureInstance() {\n    let currentInstance = this.currentInstance;\n    if (currentInstance === null) {\n      this._autorunStack = this.DEBUG ? new Error() : undefined;\n      currentInstance = this.begin();\n      this._scheduleAutorun(this.queueNames[0]);\n    }\n    return currentInstance;\n  }\n  _scheduleAutorun(plannedNextQueue) {\n    autorunsCreatedCount++;\n    const next = this._platform.next;\n    const flush = this.options.flush;\n    if (flush) {\n      flush(plannedNextQueue, next);\n    } else {\n      next();\n    }\n    this._autorun = true;\n  }\n}\nBackburner.Queue = Queue;\nBackburner.buildPlatform = buildPlatform;\nBackburner.buildNext = buildNext;\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/backburner.js/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/dag-map/index.js":
/*!**********************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/dag-map/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DAG)\n/* harmony export */ });\n/**\n * A topologically ordered map of key/value pairs with a simple API for adding constraints.\n *\n * Edges can forward reference keys that have not been added yet (the forward reference will\n * map the key to undefined).\n */\nvar DAG = function () {\n  function DAG() {\n    this._vertices = new Vertices();\n  }\n  /**\n   * Adds a key/value pair with dependencies on other key/value pairs.\n   *\n   * @public\n   * @param key    The key of the vertex to be added.\n   * @param value  The value of that vertex.\n   * @param before A key or array of keys of the vertices that must\n   *               be visited before this vertex.\n   * @param after  An string or array of strings with the keys of the\n   *               vertices that must be after this vertex is visited.\n   */\n  DAG.prototype.add = function (key, value, before, after) {\n    if (!key) throw new Error('argument `key` is required');\n    var vertices = this._vertices;\n    var v = vertices.add(key);\n    v.val = value;\n    if (before) {\n      if (typeof before === \"string\") {\n        vertices.addEdge(v, vertices.add(before));\n      } else {\n        for (var i = 0; i < before.length; i++) {\n          vertices.addEdge(v, vertices.add(before[i]));\n        }\n      }\n    }\n    if (after) {\n      if (typeof after === \"string\") {\n        vertices.addEdge(vertices.add(after), v);\n      } else {\n        for (var i = 0; i < after.length; i++) {\n          vertices.addEdge(vertices.add(after[i]), v);\n        }\n      }\n    }\n  };\n  /**\n   * @deprecated please use add.\n   */\n  DAG.prototype.addEdges = function (key, value, before, after) {\n    this.add(key, value, before, after);\n  };\n  /**\n   * Visits key/value pairs in topological order.\n   *\n   * @public\n   * @param callback The function to be invoked with each key/value.\n   */\n  DAG.prototype.each = function (callback) {\n    this._vertices.walk(callback);\n  };\n  /**\n   * @deprecated please use each.\n   */\n  DAG.prototype.topsort = function (callback) {\n    this.each(callback);\n  };\n  return DAG;\n}();\n/** @private */\nvar Vertices = function () {\n  function Vertices() {\n    this.length = 0;\n    this.stack = new IntStack();\n    this.path = new IntStack();\n    this.result = new IntStack();\n  }\n  Vertices.prototype.add = function (key) {\n    if (!key) throw new Error(\"missing key\");\n    var l = this.length | 0;\n    var vertex;\n    for (var i = 0; i < l; i++) {\n      vertex = this[i];\n      if (vertex.key === key) return vertex;\n    }\n    this.length = l + 1;\n    return this[l] = {\n      idx: l,\n      key: key,\n      val: undefined,\n      out: false,\n      flag: false,\n      length: 0\n    };\n  };\n  Vertices.prototype.addEdge = function (v, w) {\n    this.check(v, w.key);\n    var l = w.length | 0;\n    for (var i = 0; i < l; i++) {\n      if (w[i] === v.idx) return;\n    }\n    w.length = l + 1;\n    w[l] = v.idx;\n    v.out = true;\n  };\n  Vertices.prototype.walk = function (cb) {\n    this.reset();\n    for (var i = 0; i < this.length; i++) {\n      var vertex = this[i];\n      if (vertex.out) continue;\n      this.visit(vertex, \"\");\n    }\n    this.each(this.result, cb);\n  };\n  Vertices.prototype.check = function (v, w) {\n    if (v.key === w) {\n      throw new Error(\"cycle detected: \" + w + \" <- \" + w);\n    }\n    // quick check\n    if (v.length === 0) return;\n    // shallow check\n    for (var i = 0; i < v.length; i++) {\n      var key = this[v[i]].key;\n      if (key === w) {\n        throw new Error(\"cycle detected: \" + w + \" <- \" + v.key + \" <- \" + w);\n      }\n    }\n    // deep check\n    this.reset();\n    this.visit(v, w);\n    if (this.path.length > 0) {\n      var msg_1 = \"cycle detected: \" + w;\n      this.each(this.path, function (key) {\n        msg_1 += \" <- \" + key;\n      });\n      throw new Error(msg_1);\n    }\n  };\n  Vertices.prototype.reset = function () {\n    this.stack.length = 0;\n    this.path.length = 0;\n    this.result.length = 0;\n    for (var i = 0, l = this.length; i < l; i++) {\n      this[i].flag = false;\n    }\n  };\n  Vertices.prototype.visit = function (start, search) {\n    var _a = this,\n      stack = _a.stack,\n      path = _a.path,\n      result = _a.result;\n    stack.push(start.idx);\n    while (stack.length) {\n      var index = stack.pop() | 0;\n      if (index >= 0) {\n        // enter\n        var vertex = this[index];\n        if (vertex.flag) continue;\n        vertex.flag = true;\n        path.push(index);\n        if (search === vertex.key) break;\n        // push exit\n        stack.push(~index);\n        this.pushIncoming(vertex);\n      } else {\n        // exit\n        path.pop();\n        result.push(~index);\n      }\n    }\n  };\n  Vertices.prototype.pushIncoming = function (incomming) {\n    var stack = this.stack;\n    for (var i = incomming.length - 1; i >= 0; i--) {\n      var index = incomming[i];\n      if (!this[index].flag) {\n        stack.push(index);\n      }\n    }\n  };\n  Vertices.prototype.each = function (indices, cb) {\n    for (var i = 0, l = indices.length; i < l; i++) {\n      var vertex = this[indices[i]];\n      cb(vertex.key, vertex.val);\n    }\n  };\n  return Vertices;\n}();\n/** @private */\nvar IntStack = function () {\n  function IntStack() {\n    this.length = 0;\n  }\n  IntStack.prototype.push = function (n) {\n    this[this.length++] = n | 0;\n  };\n  IntStack.prototype.pop = function () {\n    return this[--this.length] | 0;\n  };\n  return IntStack;\n}();\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/dag-map/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/barrel.js":
/*!*********************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/barrel.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ doNotUseThis)\n/* harmony export */ });\n/* harmony import */ var _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared-chunks/env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared-chunks/mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _shared_chunks_invoke_BjRgvK2V_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared-chunks/invoke-BjRgvK2V.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/invoke-BjRgvK2V.js\");\n/* harmony import */ var _shared_chunks_cache_qDyqAcpg_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared-chunks/cache-qDyqAcpg.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-qDyqAcpg.js\");\n/* harmony import */ var _shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shared-chunks/registry-DzfcDwii.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js\");\n/* harmony import */ var _ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../@ember/instrumentation/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/instrumentation/index.js\");\n/* harmony import */ var _ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../@ember/-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared-chunks/cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _shared_chunks_computed_cache_DmYKevAP_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared-chunks/computed_cache-DmYKevAP.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/computed_cache-DmYKevAP.js\");\n/* harmony import */ var _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared-chunks/index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../shared-chunks/property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../shared-chunks/set_properties-DvalyQdu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/set_properties-DvalyQdu.js\");\n/* harmony import */ var _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../shared-chunks/namespace_search-CBgHTkDh.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/namespace_search-CBgHTkDh.js\");\n/* harmony import */ var _ember_canary_features_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../@ember/canary-features/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/canary-features/index.js\");\n/* harmony import */ var _backburner_js_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../backburner.js/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/backburner.js/index.js\");\n/* harmony import */ var _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../@ember/controller/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/controller/index.js\");\n/* harmony import */ var _ember_service_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../@ember/service/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/service/index.js\");\n/* harmony import */ var _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../shared-chunks/index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _ember_object_internals_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../@ember/object/-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/-internals.js\");\n/* harmony import */ var _ember_object_compat_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../@ember/object/compat.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/compat.js\");\n/* harmony import */ var _ember_utils_lib_is_none_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../@ember/utils/lib/is_none.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_none.js\");\n/* harmony import */ var _ember_utils_lib_is_blank_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../@ember/utils/lib/is_blank.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_blank.js\");\n/* harmony import */ var _ember_utils_lib_is_empty_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../@ember/utils/lib/is_empty.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_empty.js\");\n/* harmony import */ var _ember_utils_lib_is_present_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../@ember/utils/lib/is_present.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is_present.js\");\n/* harmony import */ var _ember_utils_lib_is_equal_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../@ember/utils/lib/is-equal.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/lib/is-equal.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/registry_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/container_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/comparable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/action_handler.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/-proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js\");\n/* harmony import */ var _ember_enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../@ember/enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/target_action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js\");\n/* harmony import */ var _ember_internals_runtime_lib_ext_rsvp_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/ext/rsvp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js\");\n/* harmony import */ var _glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../@glimmer/opcode-compiler/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js\");\n/* harmony import */ var _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../shared-chunks/index-BXPoca1S.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BXPoca1S.js\");\n/* harmony import */ var _shared_chunks_template_registry_DigcUg9m_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../shared-chunks/template_registry-DigcUg9m.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/template_registry-DigcUg9m.js\");\n/* harmony import */ var _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../@glimmer/runtime/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/runtime/index.js\");\n/* harmony import */ var _glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../@glimmer/reference/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js\");\n/* harmony import */ var _shared_chunks_managers_CbMgnSoo_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../shared-chunks/managers-CbMgnSoo.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/managers-CbMgnSoo.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./version.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/version.js\");\n/* harmony import */ var _ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../@ember/-internals/views/lib/system/utils.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/utils.js\");\n/* harmony import */ var _ember_internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../@ember/-internals/views/lib/system/event_dispatcher.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/event_dispatcher.js\");\n/* harmony import */ var _ember_internals_views_lib_component_lookup_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../@ember/-internals/views/lib/component_lookup.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/component_lookup.js\");\n/* harmony import */ var _shared_chunks_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../shared-chunks/core_view-Cxne2_wu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/core_view-Cxne2_wu.js\");\n/* harmony import */ var _ember_internals_views_lib_mixins_class_names_support_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../@ember/-internals/views/lib/mixins/class_names_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/class_names_support.js\");\n/* harmony import */ var _ember_internals_views_lib_mixins_child_views_support_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../@ember/-internals/views/lib/mixins/child_views_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/child_views_support.js\");\n/* harmony import */ var _ember_internals_views_lib_mixins_view_state_support_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../@ember/-internals/views/lib/mixins/view_state_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_state_support.js\");\n/* harmony import */ var _ember_internals_views_lib_mixins_view_support_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../@ember/-internals/views/lib/mixins/view_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_support.js\");\n/* harmony import */ var _ember_internals_views_lib_mixins_action_support_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../@ember/-internals/views/lib/mixins/action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/action_support.js\");\n/* harmony import */ var _ember_internals_views_lib_system_action_manager_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../@ember/-internals/views/lib/system/action_manager.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/action_manager.js\");\n/* harmony import */ var _ember_debug_container_debug_adapter_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../@ember/debug/container-debug-adapter.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/container-debug-adapter.js\");\n/* harmony import */ var _ember_debug_data_adapter_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../@ember/debug/data-adapter.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/data-adapter.js\");\n/* harmony import */ var _ember_internals_error_handling_index_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../@ember/-internals/error-handling/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/error-handling/index.js\");\n/* harmony import */ var _ember_array_proxy_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../@ember/array/proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/proxy.js\");\n/* harmony import */ var _ember_application_index_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../@ember/application/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js\");\n/* harmony import */ var _ember_application_instance_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../@ember/application/instance.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/instance.js\");\n/* harmony import */ var _ember_application_namespace_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../@ember/application/namespace.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/namespace.js\");\n/* harmony import */ var _ember_enumerable_index_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../@ember/enumerable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/index.js\");\n/* harmony import */ var _ember_object_evented_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../@ember/object/evented.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/evented.js\");\n/* harmony import */ var _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../@ember/object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n/* harmony import */ var _ember_object_proxy_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../@ember/object/proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/proxy.js\");\n/* harmony import */ var _ember_object_promise_proxy_mixin_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../@ember/object/promise-proxy-mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/promise-proxy-mixin.js\");\n/* harmony import */ var _ember_routing_hash_location_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../@ember/routing/hash-location.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/hash-location.js\");\n/* harmony import */ var _ember_routing_history_location_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../@ember/routing/history-location.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/history-location.js\");\n/* harmony import */ var _ember_routing_none_location_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../@ember/routing/none-location.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/none-location.js\");\n/* harmony import */ var _route_recognizer_index_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../route-recognizer/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/route-recognizer/index.js\");\n/* harmony import */ var _shared_chunks_rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ../shared-chunks/rsvp-DaQAFb0W.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/rsvp-DaQAFb0W.js\");\n/* harmony import */ var _shared_chunks_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../shared-chunks/router-B-Q1aYBn.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/router-B-Q1aYBn.js\");\n/* harmony import */ var _ember_routing_lib_generate_controller_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../@ember/routing/lib/generate_controller.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/generate_controller.js\");\n/* harmony import */ var _ember_routing_lib_dsl_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ../@ember/routing/lib/dsl.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/dsl.js\");\n/* harmony import */ var _ember_routing_lib_controller_for_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ../@ember/routing/lib/controller_for.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/controller_for.js\");\n/* harmony import */ var _ember_destroyable_index_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ../@ember/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/destroyable/index.js\");\n/* harmony import */ var _ember_test_index_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ../@ember/test/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/test/index.js\");\n/* harmony import */ var _ember_template_compilation_index_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ../@ember/template-compilation/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/template-compilation/index.js\");\n/* harmony import */ var _ember_application_lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ../@ember/application/lib/lazy_load.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/lib/lazy_load.js\");\n/* harmony import */ var _ember_array_lib_make_array_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ../@ember/array/lib/make-array.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/lib/make-array.js\");\n/* harmony import */ var _ember_debug_lib_capture_render_tree_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ../@ember/debug/lib/capture-render-tree.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/capture-render-tree.js\");\n/* harmony import */ var _ember_debug_lib_testing_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ../@ember/debug/lib/testing.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/testing.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module ember\n*/\n\nlet Ember;\n(function (_Ember) {\n  _Ember.isNamespace = true;\n  function toString() {\n    return 'Ember';\n  }\n  _Ember.toString = toString;\n  _Ember.Container = _shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_4__.C;\n  _Ember.Registry = _shared_chunks_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_4__.R;\n  // ****@ember/-internals/glimmer****\n  // Partially re-exported from @glimmer/manager\n  _Ember._setComponentManager = _shared_chunks_managers_CbMgnSoo_js__WEBPACK_IMPORTED_MODULE_41__.s;\n  _Ember._componentManagerCapabilities = _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_12__.componentCapabilities;\n  _Ember._modifierManagerCapabilities = _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_12__.modifierCapabilities;\n  _Ember.meta = _ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_6__.meta;\n  _Ember._createCache = _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_10__.createCache;\n  _Ember._cacheGetValue = _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_10__.getValue;\n  _Ember._cacheIsConst = _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_10__.isConst;\n  _Ember._descriptor = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.q;\n  _Ember._getPath = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.m;\n  _Ember._setClassicDecorator = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.L;\n  _Ember._tracked = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.a0;\n  _Ember.beginPropertyChanges = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.a1;\n  _Ember.changeProperties = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.a2;\n  _Ember.endPropertyChanges = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.a3;\n  _Ember.hasListeners = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.J;\n  _Ember.libraries = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.M;\n  _Ember._ContainerProxyMixin = _ember_internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_29__[\"default\"];\n  _Ember._ProxyMixin = _ember_internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_32__[\"default\"];\n  _Ember._RegistryProxyMixin = _ember_internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_28__[\"default\"];\n  _Ember.ActionHandler = _ember_internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_31__[\"default\"];\n  _Ember.Comparable = _ember_internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_30__[\"default\"];\n  _Ember.ComponentLookup = _ember_internals_views_lib_component_lookup_js__WEBPACK_IMPORTED_MODULE_45__[\"default\"];\n  _Ember.EventDispatcher = _ember_internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_44__[\"default\"];\n  _Ember._Cache = _shared_chunks_cache_qDyqAcpg_js__WEBPACK_IMPORTED_MODULE_3__.C;\n  _Ember.GUID_KEY = _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__.G;\n  _Ember.canInvoke = _shared_chunks_invoke_BjRgvK2V_js__WEBPACK_IMPORTED_MODULE_2__.c;\n  _Ember.generateGuid = _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__.b;\n  _Ember.guidFor = _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__.g;\n  _Ember.uuid = _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__.u;\n  _Ember.wrap = _shared_chunks_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__.w;\n  _Ember.getOwner = _ember_application_index_js__WEBPACK_IMPORTED_MODULE_57__.getOwner;\n  _Ember.onLoad = _ember_application_lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_77__.onLoad;\n  _Ember.runLoadHooks = _ember_application_lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_77__.runLoadHooks;\n  _Ember.setOwner = _ember_application_index_js__WEBPACK_IMPORTED_MODULE_57__.setOwner;\n  _Ember.Application = _ember_application_index_js__WEBPACK_IMPORTED_MODULE_57__[\"default\"];\n  // ****@ember/application/instance****\n  _Ember.ApplicationInstance = _ember_application_instance_js__WEBPACK_IMPORTED_MODULE_58__[\"default\"];\n  // // ****@ember/application/namespace****\n  _Ember.Namespace = _ember_application_namespace_js__WEBPACK_IMPORTED_MODULE_59__[\"default\"];\n  // ****@ember/array****\n  _Ember.A = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.A;\n  _Ember.Array = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.a;\n  _Ember.NativeArray = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.N;\n  _Ember.isArray = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.i;\n  _Ember.makeArray = _ember_array_lib_make_array_js__WEBPACK_IMPORTED_MODULE_78__[\"default\"];\n  _Ember.MutableArray = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.M;\n  // ****@ember/array/proxy****\n  _Ember.ArrayProxy = _ember_array_proxy_js__WEBPACK_IMPORTED_MODULE_56__[\"default\"];\n  // ****@ember/canary-features****\n  _Ember.FEATURES = {\n    isEnabled: _ember_canary_features_index_js__WEBPACK_IMPORTED_MODULE_16__.isEnabled,\n    ..._ember_canary_features_index_js__WEBPACK_IMPORTED_MODULE_16__.FEATURES\n  };\n  _Ember._Input = _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_37__.I;\n  _Ember.Component = _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_37__.C;\n  // // ****@ember/component/helper****\n  _Ember.Helper = _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_37__.H;\n  // ****@ember/controller****\n  _Ember.Controller = _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"];\n  _Ember.ControllerMixin = _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_18__.ControllerMixin;\n  // ****@ember/debug****\n  _Ember._captureRenderTree = _ember_debug_lib_capture_render_tree_js__WEBPACK_IMPORTED_MODULE_79__[\"default\"];\n  _Ember.assert = _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__.a;\n  _Ember.warn = _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__.w;\n  _Ember.debug = _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__.c;\n  _Ember.deprecate = _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__.d;\n  _Ember.deprecateFunc = _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__.e;\n  _Ember.runInDebug = _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__.r;\n  _Ember.inspect = _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__.b;\n  _Ember.Debug = {\n    registerDeprecationHandler: _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__.f,\n    registerWarnHandler: _shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__.g,\n    // ****@ember/-internals/metal****\n    isComputed: _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.a4\n  };\n  _Ember.ContainerDebugAdapter = _ember_debug_container_debug_adapter_js__WEBPACK_IMPORTED_MODULE_53__[\"default\"];\n  // ****@ember/debug/data-adapter****\n  _Ember.DataAdapter = _ember_debug_data_adapter_js__WEBPACK_IMPORTED_MODULE_54__[\"default\"];\n  // ****@ember/destroyable****\n  _Ember._assertDestroyablesDestroyed = _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_11__.assertDestroyablesDestroyed;\n  _Ember._associateDestroyableChild = _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_11__.associateDestroyableChild;\n  _Ember._enableDestroyableTracking = _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_11__.enableDestroyableTracking;\n  _Ember._isDestroying = _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_11__.isDestroying;\n  _Ember._isDestroyed = _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_11__.isDestroyed;\n  _Ember._registerDestructor = _ember_destroyable_index_js__WEBPACK_IMPORTED_MODULE_74__.registerDestructor;\n  _Ember._unregisterDestructor = _ember_destroyable_index_js__WEBPACK_IMPORTED_MODULE_74__.unregisterDestructor;\n  _Ember.destroy = _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_11__.destroy;\n  _Ember.Engine = _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_37__.E;\n  // ****@ember/engine/instance****\n  _Ember.EngineInstance = _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_37__.m;\n  // ****@ember/enumerable****\n  _Ember.Enumerable = _ember_enumerable_index_js__WEBPACK_IMPORTED_MODULE_60__[\"default\"];\n  // ****@ember/enumerable/mutable****\n  _Ember.MutableEnumerable = _ember_enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_33__[\"default\"];\n  // ****@ember/instrumentation****\n  /** @private */\n  _Ember.instrument = _ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_5__.instrument;\n  _Ember.subscribe = _ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_5__.subscribe;\n  _Ember.Instrumentation = {\n    instrument: _ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_5__.instrument,\n    subscribe: _ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_5__.subscribe,\n    unsubscribe: _ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_5__.unsubscribe,\n    reset: _ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_5__.reset\n  };\n  _Ember.Object = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.E;\n  _Ember._action = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.b;\n  _Ember.computed = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.c;\n  _Ember.defineProperty = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.d;\n  _Ember.get = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.g;\n  _Ember.getProperties = _shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_14__.g;\n  _Ember.notifyPropertyChange = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.n;\n  _Ember.observer = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.o;\n  _Ember.set = _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_13__.s;\n  _Ember.trySet = _shared_chunks_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_13__.t;\n  _Ember.setProperties = _shared_chunks_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_14__.s;\n  _Ember.cacheFor = _shared_chunks_computed_cache_DmYKevAP_js__WEBPACK_IMPORTED_MODULE_8__.g;\n  _Ember._dependentKeyCompat = _ember_object_compat_js__WEBPACK_IMPORTED_MODULE_22__.dependentKeyCompat;\n  _Ember.ComputedProperty = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.C;\n  _Ember.expandProperties = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.e;\n  _Ember.CoreObject = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.d;\n  // ****@ember/object/evented****\n  _Ember.Evented = _ember_object_evented_js__WEBPACK_IMPORTED_MODULE_61__[\"default\"];\n  _Ember.on = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.K;\n  _Ember.addListener = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.z;\n  _Ember.removeListener = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.A;\n  _Ember.sendEvent = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.I;\n  _Ember.Mixin = _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_62__[\"default\"];\n  _Ember.mixin = _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_62__.mixin;\n  _Ember.Observable = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.O;\n  // ****@ember/object/observers****\n  _Ember.addObserver = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.x;\n  _Ember.removeObserver = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.y;\n  _Ember.PromiseProxyMixin = _ember_object_promise_proxy_mixin_js__WEBPACK_IMPORTED_MODULE_64__[\"default\"];\n  // ****@ember/object/proxy****\n  _Ember.ObjectProxy = _ember_object_proxy_js__WEBPACK_IMPORTED_MODULE_63__[\"default\"];\n  // ****@ember/routing/-internals****\n  _Ember.RouterDSL = _ember_routing_lib_dsl_js__WEBPACK_IMPORTED_MODULE_72__[\"default\"];\n  _Ember.controllerFor = _ember_routing_lib_controller_for_js__WEBPACK_IMPORTED_MODULE_73__[\"default\"];\n  _Ember.generateController = _ember_routing_lib_generate_controller_js__WEBPACK_IMPORTED_MODULE_71__[\"default\"];\n  _Ember.generateControllerFactory = _ember_routing_lib_generate_controller_js__WEBPACK_IMPORTED_MODULE_71__.generateControllerFactory;\n  _Ember.HashLocation = _ember_routing_hash_location_js__WEBPACK_IMPORTED_MODULE_65__[\"default\"];\n  // ****@ember/routing/history-location****\n  _Ember.HistoryLocation = _ember_routing_history_location_js__WEBPACK_IMPORTED_MODULE_66__[\"default\"];\n  // ****@ember/routing/none-location****\n  _Ember.NoneLocation = _ember_routing_none_location_js__WEBPACK_IMPORTED_MODULE_67__[\"default\"];\n  // ****@ember/routing/route****\n  _Ember.Route = _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_37__.k;\n  // ****@ember/routing/router****\n  _Ember.Router = _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_37__.j;\n  // // ****@ember/runloop****\n  _Ember.run = _shared_chunks_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_7__.O;\n  _Ember.Service = _ember_service_index_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"];\n  // ****@ember/utils****\n  _Ember.compare = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.c;\n  _Ember.isBlank = _ember_utils_lib_is_blank_js__WEBPACK_IMPORTED_MODULE_24__[\"default\"];\n  _Ember.isEmpty = _ember_utils_lib_is_empty_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"];\n  _Ember.isEqual = _ember_utils_lib_is_equal_js__WEBPACK_IMPORTED_MODULE_27__[\"default\"];\n  _Ember.isNone = _ember_utils_lib_is_none_js__WEBPACK_IMPORTED_MODULE_23__[\"default\"];\n  _Ember.isPresent = _ember_utils_lib_is_present_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"];\n  _Ember.typeOf = _shared_chunks_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_20__.t;\n  _Ember.VERSION = _version_js__WEBPACK_IMPORTED_MODULE_42__[\"default\"];\n  _Ember.ViewUtils = {\n    // ****@ember/-internals/views****\n    getChildViews: _ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_43__.getChildViews,\n    getElementView: _ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_43__.getElementView,\n    getRootViews: _ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_43__.getRootViews,\n    getViewBounds: _ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_43__.getViewBounds,\n    getViewBoundingClientRect: _ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_43__.getViewBoundingClientRect,\n    getViewClientRects: _ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_43__.getViewClientRects,\n    getViewElement: _ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_43__.getViewElement,\n    isSimpleClick: _ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_43__.isSimpleClick,\n    // ****@ember/-internals/glimmer****\n    isSerializationFirstNode: _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_39__.isSerializationFirstNode\n  };\n  _Ember._getComponentTemplate = _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_12__.getComponentTemplate;\n  _Ember._helperManagerCapabilities = _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_12__.helperCapabilities;\n  _Ember._setComponentTemplate = _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_12__.setComponentTemplate;\n  _Ember._setHelperManager = _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_12__.setHelperManager;\n  _Ember._setModifierManager = _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_12__.setModifierManager;\n  _Ember._templateOnlyComponent = _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_39__.templateOnlyComponent;\n  _Ember._invokeHelper = _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_39__.invokeHelper;\n  _Ember._hash = _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_39__.hash;\n  _Ember._array = _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_39__.array;\n  _Ember._concat = _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_39__.concat;\n  _Ember._get = _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_39__.get;\n  _Ember._on = _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_39__.on;\n  _Ember._fn = _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_39__.fn;\n  _Ember._Backburner = _backburner_js_index_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"];\n  // // ****@ember/controller, @ember/service****\n  /**\n    Namespace for injection helper methods.\n     @class inject\n    @namespace Ember\n    @static\n    @public\n  */\n  function inject$1() {\n    // uses `globalThis` to avoid clobbering with `Ember.Object` in TS namespace\n     true && (0,_shared_chunks_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_9__.a)(`Injected properties must be created through helpers, see '${globalThis.Object.keys(inject$1).map(k => `'inject.${k}'`).join(' or ')}'`);\n  }\n  _Ember.inject = inject$1;\n  // ****@ember/controller****\n  inject$1.controller = _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_18__.inject;\n  // ****@ember/service****\n  inject$1.service = _ember_service_index_js__WEBPACK_IMPORTED_MODULE_19__.service;\n  _Ember.__loader = {\n    get require() {\n      return globalThis.require;\n    },\n    get define() {\n      return globalThis.define;\n    },\n    get registry() {\n      let g = globalThis;\n      return g.requirejs?.entries ?? g.require.entries;\n    }\n  };\n\n  // ------------------------------------------------------------------------ //\n  // These properties are assigned to the namespace with getters (and, in some\n  // cases setters) with `Object.defineProperty` below.\n  // ------------------------------------------------------------------------ //\n\n  // ****@ember/-internals/environment****\n\n  /**\n    A function may be assigned to `Ember.onerror` to be called when Ember\n    internals encounter an error. This is useful for specialized error handling\n    and reporting code.\n     ```javascript\n     Ember.onerror = function(error) {\n      const payload = {\n        stack: error.stack,\n        otherInformation: 'whatever app state you want to provide'\n      };\n       fetch('/report-error', {\n        method: 'POST',\n        body: JSON.stringify(payload)\n      });\n    };\n    ```\n     Internally, `Ember.onerror` is used as Backburner's error handler.\n     @event onerror\n    @for Ember\n    @param {Error} error the error object\n    @public\n  */\n  // ****@ember/-internals/error-handling****\n\n  /**\n    Whether searching on the global for new Namespace instances is enabled.\n     This is only exported here as to not break any addons.  Given the new\n    visit API, you will have issues if you treat this as a indicator of\n    booted.\n     Internally this is only exposing a flag in Namespace.\n     @property BOOTED\n    @for Ember\n    @type Boolean\n    @private\n  */\n\n  /**\n    Global hash of shared templates. This will automatically be populated\n    by the build tools so that you can store your Handlebars templates in\n    separate files that get loaded into JavaScript at buildtime.\n     @property TEMPLATES\n    @for Ember\n    @type Object\n    @private\n  */\n})(Ember || (Ember = {}));\nObject.defineProperty(Ember, 'ENV', {\n  get: _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.b,\n  enumerable: false\n});\nObject.defineProperty(Ember, 'lookup', {\n  get: _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.a,\n  set: _shared_chunks_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.s,\n  enumerable: false\n});\nObject.defineProperty(Ember, 'onerror', {\n  get: _ember_internals_error_handling_index_js__WEBPACK_IMPORTED_MODULE_55__.getOnerror,\n  set: _ember_internals_error_handling_index_js__WEBPACK_IMPORTED_MODULE_55__.setOnerror,\n  enumerable: false\n});\nObject.defineProperty(Ember, 'testing', {\n  get: _ember_debug_lib_testing_js__WEBPACK_IMPORTED_MODULE_80__.isTesting,\n  set: _ember_debug_lib_testing_js__WEBPACK_IMPORTED_MODULE_80__.setTesting,\n  enumerable: false\n});\nObject.defineProperty(Ember, 'BOOTED', {\n  configurable: false,\n  enumerable: false,\n  get: _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_15__.i,\n  set: _shared_chunks_namespace_search_CBgHTkDh_js__WEBPACK_IMPORTED_MODULE_15__.e\n});\nObject.defineProperty(Ember, 'TEMPLATES', {\n  get: _shared_chunks_template_registry_DigcUg9m_js__WEBPACK_IMPORTED_MODULE_38__.a,\n  set: _shared_chunks_template_registry_DigcUg9m_js__WEBPACK_IMPORTED_MODULE_38__.b,\n  configurable: false,\n  enumerable: false\n});\nObject.defineProperty(Ember, 'TEMPLATES', {\n  get: _shared_chunks_template_registry_DigcUg9m_js__WEBPACK_IMPORTED_MODULE_38__.a,\n  set: _shared_chunks_template_registry_DigcUg9m_js__WEBPACK_IMPORTED_MODULE_38__.b,\n  configurable: false,\n  enumerable: false\n});\n\n// ****@ember/debug****\nObject.defineProperty(Ember, 'testing', {\n  get: _ember_debug_lib_testing_js__WEBPACK_IMPORTED_MODULE_80__.isTesting,\n  set: _ember_debug_lib_testing_js__WEBPACK_IMPORTED_MODULE_80__.setTesting,\n  enumerable: false\n});\n(0,_ember_application_lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_77__.runLoadHooks)('Ember.Application', _ember_application_index_js__WEBPACK_IMPORTED_MODULE_57__[\"default\"]);\nlet EmberHandlebars = {\n  template: _glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_36__.templateFactory,\n  Utils: {\n    escapeExpression: _shared_chunks_index_BXPoca1S_js__WEBPACK_IMPORTED_MODULE_37__.e\n  }\n};\nlet EmberHTMLBars = {\n  template: _glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_36__.templateFactory\n};\nfunction defineEmberTemplateCompilerLazyLoad(key) {\n  Object.defineProperty(Ember, key, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      if (_ember_template_compilation_index_js__WEBPACK_IMPORTED_MODULE_76__.__emberTemplateCompiler) {\n        EmberHTMLBars.precompile = EmberHandlebars.precompile = _ember_template_compilation_index_js__WEBPACK_IMPORTED_MODULE_76__.__emberTemplateCompiler.precompile;\n        EmberHTMLBars.compile = EmberHandlebars.compile = _ember_template_compilation_index_js__WEBPACK_IMPORTED_MODULE_76__.compileTemplate;\n        Object.defineProperty(Ember, 'HTMLBars', {\n          configurable: true,\n          writable: true,\n          enumerable: true,\n          value: EmberHTMLBars\n        });\n        Object.defineProperty(Ember, 'Handlebars', {\n          configurable: true,\n          writable: true,\n          enumerable: true,\n          value: EmberHandlebars\n        });\n      }\n      return key === 'Handlebars' ? EmberHandlebars : EmberHTMLBars;\n    }\n  });\n}\ndefineEmberTemplateCompilerLazyLoad('HTMLBars');\ndefineEmberTemplateCompilerLazyLoad('Handlebars');\n\n// do this to ensure that Ember.Test is defined properly on the global\n// if it is present.\nfunction defineEmberTestingLazyLoad(key) {\n  Object.defineProperty(Ember, key, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      if (_ember_test_index_js__WEBPACK_IMPORTED_MODULE_75__._impl) {\n        let {\n          Test,\n          Adapter,\n          QUnitAdapter,\n          setupForTesting\n        } = _ember_test_index_js__WEBPACK_IMPORTED_MODULE_75__._impl;\n\n        // @ts-expect-error We should not do this\n        Test.Adapter = Adapter;\n        // @ts-expect-error We should not do this\n        Test.QUnitAdapter = QUnitAdapter;\n        Object.defineProperty(Ember, 'Test', {\n          configurable: true,\n          writable: true,\n          enumerable: true,\n          value: Test\n        });\n        Object.defineProperty(Ember, 'setupForTesting', {\n          configurable: true,\n          writable: true,\n          enumerable: true,\n          value: setupForTesting\n        });\n        return key === 'Test' ? Test : setupForTesting;\n      }\n      return undefined;\n    }\n  });\n}\ndefineEmberTestingLazyLoad('Test');\ndefineEmberTestingLazyLoad('setupForTesting');\n\n// @ts-expect-error Per types, runLoadHooks requires a second parameter. Should we loosen types?\n(0,_ember_application_lib_lazy_load_js__WEBPACK_IMPORTED_MODULE_77__.runLoadHooks)('Ember');\n\n// the special \"export import\" syntax above doesn't actually transpile correctly\n// under all build configurations. It seems to work if you're simultaneously\n// transpiling ESM to AMD but breaks when keeping ESM output.\n//\n// This is a workaround to ensure that the runtime is actually included.\nEmber.RSVP = _shared_chunks_rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_69__.R;\nconst doNotUseThis = Ember;\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/barrel.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/index.js":
/*!********************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ index)\n/* harmony export */ });\n/* harmony import */ var _ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../@ember/-internals/deprecations/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/deprecations/index.js\");\n/* harmony import */ var _barrel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./barrel.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/barrel.js\");\n\n\nconst index = new Proxy(_barrel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n  get(target, key, receiver) {\n    // We don't have symbol exports, so this is probably fine.\n    if (typeof key === 'string') {\n      (0,_ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_0__.deprecateUntil)(`importing ${key} from the 'ember' barrel file is deprecated.`, _ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_0__.DEPRECATIONS.DEPRECATE_IMPORT_EMBER(key));\n    }\n    return Reflect.get(target, key, receiver);\n  },\n  getOwnPropertyDescriptor(target, key) {\n    if (typeof key === 'string') {\n      (0,_ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_0__.deprecateUntil)(`importing ${key} from the 'ember' barrel file is deprecated.`, _ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_0__.DEPRECATIONS.DEPRECATE_IMPORT_EMBER(key));\n    }\n    return Object.getOwnPropertyDescriptor(target, key);\n  }\n});\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/version.js":
/*!**********************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/version.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Version)\n/* harmony export */ });\n// this file gets replaced with the real value during the build\nconst Version = '5.10.0';\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/version.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/route-recognizer/index.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/route-recognizer/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RouteRecognizer)\n/* harmony export */ });\nvar createObject = Object.create;\nfunction createMap() {\n  var map = createObject(null);\n  map[\"__\"] = undefined;\n  delete map[\"__\"];\n  return map;\n}\nvar Target = function Target(path, matcher, delegate) {\n  this.path = path;\n  this.matcher = matcher;\n  this.delegate = delegate;\n};\nTarget.prototype.to = function to(target, callback) {\n  var delegate = this.delegate;\n  if (delegate && delegate.willAddRoute) {\n    target = delegate.willAddRoute(this.matcher.target, target);\n  }\n  this.matcher.add(this.path, target);\n  if (callback) {\n    if (callback.length === 0) {\n      throw new Error(\"You must have an argument in the function passed to `to`\");\n    }\n    this.matcher.addChild(this.path, target, callback, this.delegate);\n  }\n};\nvar Matcher = function Matcher(target) {\n  this.routes = createMap();\n  this.children = createMap();\n  this.target = target;\n};\nMatcher.prototype.add = function add(path, target) {\n  this.routes[path] = target;\n};\nMatcher.prototype.addChild = function addChild(path, target, callback, delegate) {\n  var matcher = new Matcher(target);\n  this.children[path] = matcher;\n  var match = generateMatch(path, matcher, delegate);\n  if (delegate && delegate.contextEntered) {\n    delegate.contextEntered(target, match);\n  }\n  callback(match);\n};\nfunction generateMatch(startingPath, matcher, delegate) {\n  function match(path, callback) {\n    var fullPath = startingPath + path;\n    if (callback) {\n      callback(generateMatch(fullPath, matcher, delegate));\n    } else {\n      return new Target(fullPath, matcher, delegate);\n    }\n  }\n  return match;\n}\nfunction addRoute(routeArray, path, handler) {\n  var len = 0;\n  for (var i = 0; i < routeArray.length; i++) {\n    len += routeArray[i].path.length;\n  }\n  path = path.substr(len);\n  var route = {\n    path: path,\n    handler: handler\n  };\n  routeArray.push(route);\n}\nfunction eachRoute(baseRoute, matcher, callback, binding) {\n  var routes = matcher.routes;\n  var paths = Object.keys(routes);\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    var routeArray = baseRoute.slice();\n    addRoute(routeArray, path, routes[path]);\n    var nested = matcher.children[path];\n    if (nested) {\n      eachRoute(routeArray, nested, callback, binding);\n    } else {\n      callback.call(binding, routeArray);\n    }\n  }\n}\nvar map = function (callback, addRouteCallback) {\n  var matcher = new Matcher();\n  callback(generateMatch(\"\", matcher, this.delegate));\n  eachRoute([], matcher, function (routes) {\n    if (addRouteCallback) {\n      addRouteCallback(this, routes);\n    } else {\n      this.add(routes);\n    }\n  }, this);\n};\n\n// Normalizes percent-encoded values in `path` to upper-case and decodes percent-encoded\n// values that are not reserved (i.e., unicode characters, emoji, etc). The reserved\n// chars are \"/\" and \"%\".\n// Safe to call multiple times on the same path.\n// Normalizes percent-encoded values in `path` to upper-case and decodes percent-encoded\nfunction normalizePath(path) {\n  return path.split(\"/\").map(normalizeSegment).join(\"/\");\n}\n// We want to ensure the characters \"%\" and \"/\" remain in percent-encoded\n// form when normalizing paths, so replace them with their encoded form after\n// decoding the rest of the path\nvar SEGMENT_RESERVED_CHARS = /%|\\//g;\nfunction normalizeSegment(segment) {\n  if (segment.length < 3 || segment.indexOf(\"%\") === -1) {\n    return segment;\n  }\n  return decodeURIComponent(segment).replace(SEGMENT_RESERVED_CHARS, encodeURIComponent);\n}\n// We do not want to encode these characters when generating dynamic path segments\n// See https://tools.ietf.org/html/rfc3986#section-3.3\n// sub-delims: \"!\", \"$\", \"&\", \"'\", \"(\", \")\", \"*\", \"+\", \",\", \";\", \"=\"\n// others allowed by RFC 3986: \":\", \"@\"\n//\n// First encode the entire path segment, then decode any of the encoded special chars.\n//\n// The chars \"!\", \"'\", \"(\", \")\", \"*\" do not get changed by `encodeURIComponent`,\n// so the possible encoded chars are:\n// ['%24', '%26', '%2B', '%2C', '%3B', '%3D', '%3A', '%40'].\nvar PATH_SEGMENT_ENCODINGS = /%(?:2(?:4|6|B|C)|3(?:B|D|A)|40)/g;\nfunction encodePathSegment(str) {\n  return encodeURIComponent(str).replace(PATH_SEGMENT_ENCODINGS, decodeURIComponent);\n}\nvar escapeRegex = /(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\)/g;\nvar isArray = Array.isArray;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction getParam(params, key) {\n  if (typeof params !== \"object\" || params === null) {\n    throw new Error(\"You must pass an object as the second argument to `generate`.\");\n  }\n  if (!hasOwnProperty.call(params, key)) {\n    throw new Error(\"You must provide param `\" + key + \"` to `generate`.\");\n  }\n  var value = params[key];\n  var str = typeof value === \"string\" ? value : \"\" + value;\n  if (str.length === 0) {\n    throw new Error(\"You must provide a param `\" + key + \"`.\");\n  }\n  return str;\n}\nvar eachChar = [];\neachChar[0 /* Static */] = function (segment, currentState) {\n  var state = currentState;\n  var value = segment.value;\n  for (var i = 0; i < value.length; i++) {\n    var ch = value.charCodeAt(i);\n    state = state.put(ch, false, false);\n  }\n  return state;\n};\neachChar[1 /* Dynamic */] = function (_, currentState) {\n  return currentState.put(47 /* SLASH */, true, true);\n};\neachChar[2 /* Star */] = function (_, currentState) {\n  return currentState.put(-1 /* ANY */, false, true);\n};\neachChar[4 /* Epsilon */] = function (_, currentState) {\n  return currentState;\n};\nvar regex = [];\nregex[0 /* Static */] = function (segment) {\n  return segment.value.replace(escapeRegex, \"\\\\$1\");\n};\nregex[1 /* Dynamic */] = function () {\n  return \"([^/]+)\";\n};\nregex[2 /* Star */] = function () {\n  return \"(.+)\";\n};\nregex[4 /* Epsilon */] = function () {\n  return \"\";\n};\nvar generate = [];\ngenerate[0 /* Static */] = function (segment) {\n  return segment.value;\n};\ngenerate[1 /* Dynamic */] = function (segment, params) {\n  var value = getParam(params, segment.value);\n  if (RouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS) {\n    return encodePathSegment(value);\n  } else {\n    return value;\n  }\n};\ngenerate[2 /* Star */] = function (segment, params) {\n  return getParam(params, segment.value);\n};\ngenerate[4 /* Epsilon */] = function () {\n  return \"\";\n};\nvar EmptyObject = Object.freeze({});\nvar EmptyArray = Object.freeze([]);\n// The `names` will be populated with the paramter name for each dynamic/star\n// segment. `shouldDecodes` will be populated with a boolean for each dyanamic/star\n// segment, indicating whether it should be decoded during recognition.\nfunction parse(segments, route, types) {\n  // normalize route as not starting with a \"/\". Recognition will\n  // also normalize.\n  if (route.length > 0 && route.charCodeAt(0) === 47 /* SLASH */) {\n    route = route.substr(1);\n  }\n  var parts = route.split(\"/\");\n  var names = undefined;\n  var shouldDecodes = undefined;\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i];\n    var flags = 0;\n    var type = 0;\n    if (part === \"\") {\n      type = 4 /* Epsilon */;\n    } else if (part.charCodeAt(0) === 58 /* COLON */) {\n      type = 1 /* Dynamic */;\n    } else if (part.charCodeAt(0) === 42 /* STAR */) {\n      type = 2 /* Star */;\n    } else {\n      type = 0 /* Static */;\n    }\n    flags = 2 << type;\n    if (flags & 12 /* Named */) {\n      part = part.slice(1);\n      names = names || [];\n      names.push(part);\n      shouldDecodes = shouldDecodes || [];\n      shouldDecodes.push((flags & 4 /* Decoded */) !== 0);\n    }\n    if (flags & 14 /* Counted */) {\n      types[type]++;\n    }\n    segments.push({\n      type: type,\n      value: normalizeSegment(part)\n    });\n  }\n  return {\n    names: names || EmptyArray,\n    shouldDecodes: shouldDecodes || EmptyArray\n  };\n}\nfunction isEqualCharSpec(spec, char, negate) {\n  return spec.char === char && spec.negate === negate;\n}\n// A State has a character specification and (`charSpec`) and a list of possible\n// subsequent states (`nextStates`).\n//\n// If a State is an accepting state, it will also have several additional\n// properties:\n//\n// * `regex`: A regular expression that is used to extract parameters from paths\n//   that reached this accepting state.\n// * `handlers`: Information on how to convert the list of captures into calls\n//   to registered handlers with the specified parameters\n// * `types`: How many static, dynamic or star segments in this route. Used to\n//   decide which route to use if multiple registered routes match a path.\n//\n// Currently, State is implemented naively by looping over `nextStates` and\n// comparing a character specification against a character. A more efficient\n// implementation would use a hash of keys pointing at one or more next states.\nvar State = function State(states, id, char, negate, repeat) {\n  this.states = states;\n  this.id = id;\n  this.char = char;\n  this.negate = negate;\n  this.nextStates = repeat ? id : null;\n  this.pattern = \"\";\n  this._regex = undefined;\n  this.handlers = undefined;\n  this.types = undefined;\n};\nState.prototype.regex = function regex$1() {\n  if (!this._regex) {\n    this._regex = new RegExp(this.pattern);\n  }\n  return this._regex;\n};\nState.prototype.get = function get(char, negate) {\n  var this$1$1 = this;\n  var nextStates = this.nextStates;\n  if (nextStates === null) {\n    return;\n  }\n  if (isArray(nextStates)) {\n    for (var i = 0; i < nextStates.length; i++) {\n      var child = this$1$1.states[nextStates[i]];\n      if (isEqualCharSpec(child, char, negate)) {\n        return child;\n      }\n    }\n  } else {\n    var child$1 = this.states[nextStates];\n    if (isEqualCharSpec(child$1, char, negate)) {\n      return child$1;\n    }\n  }\n};\nState.prototype.put = function put(char, negate, repeat) {\n  var state;\n  // If the character specification already exists in a child of the current\n  // state, just return that state.\n  if (state = this.get(char, negate)) {\n    return state;\n  }\n  // Make a new state for the character spec\n  var states = this.states;\n  state = new State(states, states.length, char, negate, repeat);\n  states[states.length] = state;\n  // Insert the new state as a child of the current state\n  if (this.nextStates == null) {\n    this.nextStates = state.id;\n  } else if (isArray(this.nextStates)) {\n    this.nextStates.push(state.id);\n  } else {\n    this.nextStates = [this.nextStates, state.id];\n  }\n  // Return the new state\n  return state;\n};\n// Find a list of child states matching the next character\nState.prototype.match = function match(ch) {\n  var this$1$1 = this;\n  var nextStates = this.nextStates;\n  if (!nextStates) {\n    return [];\n  }\n  var returned = [];\n  if (isArray(nextStates)) {\n    for (var i = 0; i < nextStates.length; i++) {\n      var child = this$1$1.states[nextStates[i]];\n      if (isMatch(child, ch)) {\n        returned.push(child);\n      }\n    }\n  } else {\n    var child$1 = this.states[nextStates];\n    if (isMatch(child$1, ch)) {\n      returned.push(child$1);\n    }\n  }\n  return returned;\n};\nfunction isMatch(spec, char) {\n  return spec.negate ? spec.char !== char && spec.char !== -1 /* ANY */ : spec.char === char || spec.char === -1 /* ANY */;\n}\n// This is a somewhat naive strategy, but should work in a lot of cases\n// A better strategy would properly resolve /posts/:id/new and /posts/edit/:id.\n//\n// This strategy generally prefers more static and less dynamic matching.\n// Specifically, it\n//\n//  * prefers fewer stars to more, then\n//  * prefers using stars for less of the match to more, then\n//  * prefers fewer dynamic segments to more, then\n//  * prefers more static segments to more\nfunction sortSolutions(states) {\n  return states.sort(function (a, b) {\n    var ref = a.types || [0, 0, 0];\n    var astatics = ref[0];\n    var adynamics = ref[1];\n    var astars = ref[2];\n    var ref$1 = b.types || [0, 0, 0];\n    var bstatics = ref$1[0];\n    var bdynamics = ref$1[1];\n    var bstars = ref$1[2];\n    if (astars !== bstars) {\n      return astars - bstars;\n    }\n    if (astars) {\n      if (astatics !== bstatics) {\n        return bstatics - astatics;\n      }\n      if (adynamics !== bdynamics) {\n        return bdynamics - adynamics;\n      }\n    }\n    if (adynamics !== bdynamics) {\n      return adynamics - bdynamics;\n    }\n    if (astatics !== bstatics) {\n      return bstatics - astatics;\n    }\n    return 0;\n  });\n}\nfunction recognizeChar(states, ch) {\n  var nextStates = [];\n  for (var i = 0, l = states.length; i < l; i++) {\n    var state = states[i];\n    nextStates = nextStates.concat(state.match(ch));\n  }\n  return nextStates;\n}\nvar RecognizeResults = function RecognizeResults(queryParams) {\n  this.length = 0;\n  this.queryParams = queryParams || {};\n};\nRecognizeResults.prototype.splice = Array.prototype.splice;\nRecognizeResults.prototype.slice = Array.prototype.slice;\nRecognizeResults.prototype.push = Array.prototype.push;\nfunction findHandler(state, originalPath, queryParams) {\n  var handlers = state.handlers;\n  var regex = state.regex();\n  if (!regex || !handlers) {\n    throw new Error(\"state not initialized\");\n  }\n  var captures = originalPath.match(regex);\n  var currentCapture = 1;\n  var result = new RecognizeResults(queryParams);\n  result.length = handlers.length;\n  for (var i = 0; i < handlers.length; i++) {\n    var handler = handlers[i];\n    var names = handler.names;\n    var shouldDecodes = handler.shouldDecodes;\n    var params = EmptyObject;\n    var isDynamic = false;\n    if (names !== EmptyArray && shouldDecodes !== EmptyArray) {\n      for (var j = 0; j < names.length; j++) {\n        isDynamic = true;\n        var name = names[j];\n        var capture = captures && captures[currentCapture++];\n        if (params === EmptyObject) {\n          params = {};\n        }\n        if (RouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS && shouldDecodes[j]) {\n          params[name] = capture && decodeURIComponent(capture);\n        } else {\n          params[name] = capture;\n        }\n      }\n    }\n    result[i] = {\n      handler: handler.handler,\n      params: params,\n      isDynamic: isDynamic\n    };\n  }\n  return result;\n}\nfunction decodeQueryParamPart(part) {\n  // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n  part = part.replace(/\\+/gm, \"%20\");\n  var result;\n  try {\n    result = decodeURIComponent(part);\n  } catch (error) {\n    result = \"\";\n  }\n  return result;\n}\nvar RouteRecognizer = function RouteRecognizer() {\n  this.names = createMap();\n  var states = [];\n  var state = new State(states, 0, -1 /* ANY */, true, false);\n  states[0] = state;\n  this.states = states;\n  this.rootState = state;\n};\nRouteRecognizer.prototype.add = function add(routes, options) {\n  var currentState = this.rootState;\n  var pattern = \"^\";\n  var types = [0, 0, 0];\n  var handlers = new Array(routes.length);\n  var allSegments = [];\n  var isEmpty = true;\n  var j = 0;\n  for (var i = 0; i < routes.length; i++) {\n    var route = routes[i];\n    var ref = parse(allSegments, route.path, types);\n    var names = ref.names;\n    var shouldDecodes = ref.shouldDecodes;\n    // preserve j so it points to the start of newly added segments\n    for (; j < allSegments.length; j++) {\n      var segment = allSegments[j];\n      if (segment.type === 4 /* Epsilon */) {\n        continue;\n      }\n      isEmpty = false;\n      // Add a \"/\" for the new segment\n      currentState = currentState.put(47 /* SLASH */, false, false);\n      pattern += \"/\";\n      // Add a representation of the segment to the NFA and regex\n      currentState = eachChar[segment.type](segment, currentState);\n      pattern += regex[segment.type](segment);\n    }\n    handlers[i] = {\n      handler: route.handler,\n      names: names,\n      shouldDecodes: shouldDecodes\n    };\n  }\n  if (isEmpty) {\n    currentState = currentState.put(47 /* SLASH */, false, false);\n    pattern += \"/\";\n  }\n  currentState.handlers = handlers;\n  currentState.pattern = pattern + \"$\";\n  currentState.types = types;\n  var name;\n  if (typeof options === \"object\" && options !== null && options.as) {\n    name = options.as;\n  }\n  if (name) {\n    // if (this.names[name]) {\n    //   throw new Error(\"You may not add a duplicate route named `\" + name + \"`.\");\n    // }\n    this.names[name] = {\n      segments: allSegments,\n      handlers: handlers\n    };\n  }\n};\nRouteRecognizer.prototype.handlersFor = function handlersFor(name) {\n  var route = this.names[name];\n  if (!route) {\n    throw new Error(\"There is no route named \" + name);\n  }\n  var result = new Array(route.handlers.length);\n  for (var i = 0; i < route.handlers.length; i++) {\n    var handler = route.handlers[i];\n    result[i] = handler;\n  }\n  return result;\n};\nRouteRecognizer.prototype.hasRoute = function hasRoute(name) {\n  return !!this.names[name];\n};\nRouteRecognizer.prototype.generate = function generate$1(name, params) {\n  var route = this.names[name];\n  var output = \"\";\n  if (!route) {\n    throw new Error(\"There is no route named \" + name);\n  }\n  var segments = route.segments;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment.type === 4 /* Epsilon */) {\n      continue;\n    }\n    output += \"/\";\n    output += generate[segment.type](segment, params);\n  }\n  if (output.charAt(0) !== \"/\") {\n    output = \"/\" + output;\n  }\n  if (params && params.queryParams) {\n    output += this.generateQueryString(params.queryParams);\n  }\n  return output;\n};\nRouteRecognizer.prototype.generateQueryString = function generateQueryString(params) {\n  var pairs = [];\n  var keys = Object.keys(params);\n  keys.sort();\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = params[key];\n    if (value == null) {\n      continue;\n    }\n    var pair = encodeURIComponent(key);\n    if (isArray(value)) {\n      for (var j = 0; j < value.length; j++) {\n        var arrayPair = key + \"[]\" + \"=\" + encodeURIComponent(value[j]);\n        pairs.push(arrayPair);\n      }\n    } else {\n      pair += \"=\" + encodeURIComponent(value);\n      pairs.push(pair);\n    }\n  }\n  if (pairs.length === 0) {\n    return \"\";\n  }\n  return \"?\" + pairs.join(\"&\");\n};\nRouteRecognizer.prototype.parseQueryString = function parseQueryString(queryString) {\n  var pairs = queryString.split(\"&\");\n  var queryParams = {};\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\"),\n      key = decodeQueryParamPart(pair[0]),\n      keyLength = key.length,\n      isArray = false,\n      value = void 0;\n    if (pair.length === 1) {\n      value = \"true\";\n    } else {\n      // Handle arrays\n      if (keyLength > 2 && key.slice(keyLength - 2) === \"[]\") {\n        isArray = true;\n        key = key.slice(0, keyLength - 2);\n        if (!queryParams[key]) {\n          queryParams[key] = [];\n        }\n      }\n      value = pair[1] ? decodeQueryParamPart(pair[1]) : \"\";\n    }\n    if (isArray) {\n      queryParams[key].push(value);\n    } else {\n      queryParams[key] = value;\n    }\n  }\n  return queryParams;\n};\nRouteRecognizer.prototype.recognize = function recognize(path) {\n  var results;\n  var states = [this.rootState];\n  var queryParams = {};\n  var isSlashDropped = false;\n  var hashStart = path.indexOf(\"#\");\n  if (hashStart !== -1) {\n    path = path.substr(0, hashStart);\n  }\n  var queryStart = path.indexOf(\"?\");\n  if (queryStart !== -1) {\n    var queryString = path.substr(queryStart + 1, path.length);\n    path = path.substr(0, queryStart);\n    queryParams = this.parseQueryString(queryString);\n  }\n  if (path.charAt(0) !== \"/\") {\n    path = \"/\" + path;\n  }\n  var originalPath = path;\n  if (RouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS) {\n    path = normalizePath(path);\n  } else {\n    path = decodeURI(path);\n    originalPath = decodeURI(originalPath);\n  }\n  var pathLen = path.length;\n  if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n    path = path.substr(0, pathLen - 1);\n    originalPath = originalPath.substr(0, originalPath.length - 1);\n    isSlashDropped = true;\n  }\n  for (var i = 0; i < path.length; i++) {\n    states = recognizeChar(states, path.charCodeAt(i));\n    if (!states.length) {\n      break;\n    }\n  }\n  var solutions = [];\n  for (var i$1 = 0; i$1 < states.length; i$1++) {\n    if (states[i$1].handlers) {\n      solutions.push(states[i$1]);\n    }\n  }\n  states = sortSolutions(solutions);\n  var state = solutions[0];\n  if (state && state.handlers) {\n    // if a trailing slash was dropped and a star segment is the last segment\n    // specified, put the trailing slash back\n    if (isSlashDropped && state.pattern && state.pattern.slice(-5) === \"(.+)$\") {\n      originalPath = originalPath + \"/\";\n    }\n    results = findHandler(state, originalPath, queryParams);\n  }\n  return results;\n};\nRouteRecognizer.VERSION = \"0.3.4\";\n// Set to false to opt-out of encoding and decoding path segments.\n// See https://github.com/tildeio/route-recognizer/pull/55\nRouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS = true;\nRouteRecognizer.Normalizer = {\n  normalizeSegment: normalizeSegment,\n  normalizePath: normalizePath,\n  encodePathSegment: encodePathSegment\n};\nRouteRecognizer.prototype.map = map;\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/route-recognizer/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/alias-By_2yu5c.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/alias-By_2yu5c.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ alias)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../@ember/-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n\n\n\n\n\n\nfunction alias(altKey) {\n   true && !!(0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.i)(Array.prototype.slice.call(arguments)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('You attempted to use @alias as a decorator directly, but it requires a `altKey` parameter', !(0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.i)(Array.prototype.slice.call(arguments))); // SAFETY: We passed in the impl for this class\n  return (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.w)(new AliasedProperty(altKey), AliasDecoratorImpl);\n}\n\n// TODO: This class can be svelted once `meta` has been deprecated\nclass AliasDecoratorImpl extends Function {\n  readOnly() {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.v)(this).readOnly();\n    return this;\n  }\n  oneWay() {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.v)(this).oneWay();\n    return this;\n  }\n  meta(meta) {\n    let prop = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.v)(this);\n    if (arguments.length === 0) {\n      return prop._meta || {};\n    } else {\n      prop._meta = meta;\n    }\n  }\n}\nclass AliasedProperty extends _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.D {\n  constructor(altKey) {\n    super();\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"altKey\", void 0);\n    this.altKey = altKey;\n  }\n  setup(obj, keyName, propertyDesc, meta) {\n     true && !(this.altKey !== keyName) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`Setting alias '${keyName}' on self`, this.altKey !== keyName);\n    super.setup(obj, keyName, propertyDesc, meta);\n    _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.E.add(this);\n  }\n  get(obj, keyName) {\n    let ret;\n    let meta$1 = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.meta)(obj);\n    let tagMeta = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.tagMetaFor)(obj);\n    let propertyTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.tagFor)(obj, keyName, tagMeta);\n\n    // We don't use the tag since CPs are not automatic, we just want to avoid\n    // anything tracking while we get the altKey\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.untrack)(() => {\n      ret = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.g)(obj, this.altKey);\n    });\n    let lastRevision = meta$1.revisionFor(keyName);\n    if (lastRevision === undefined || !(0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.validateTag)(propertyTag, lastRevision)) {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.updateTag)(propertyTag, (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.F)(obj, this.altKey, tagMeta, meta$1));\n      meta$1.setRevisionFor(keyName, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.valueForTag)(propertyTag));\n      (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.G)(meta$1, keyName, ret);\n    }\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_3__.consumeTag)(propertyTag);\n    return ret;\n  }\n  set(obj, _keyName, value) {\n    return (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_5__.s)(obj, this.altKey, value);\n  }\n  readOnly() {\n    this.set = AliasedProperty_readOnlySet;\n  }\n  oneWay() {\n    this.set = AliasedProperty_oneWaySet;\n  }\n}\nfunction AliasedProperty_readOnlySet(obj, keyName) {\n  throw new Error(`Cannot set read-only property '${keyName}' on object: ${(0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.b)(obj)}`);\n}\nfunction AliasedProperty_oneWaySet(obj, keyName, value) {\n  (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_4__.d)(obj, keyName, null);\n  return (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_5__.s)(obj, keyName, value);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/alias-By_2yu5c.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: () => (/* binding */ _hasScheduledTimers),\n/* harmony export */   A: () => (/* binding */ removeListener),\n/* harmony export */   B: () => (/* binding */ descriptorForProperty),\n/* harmony export */   C: () => (/* binding */ ComputedProperty),\n/* harmony export */   D: () => (/* binding */ ComputedDescriptor),\n/* harmony export */   E: () => (/* binding */ CHAIN_PASS_THROUGH),\n/* harmony export */   F: () => (/* binding */ getChainTagsForKey),\n/* harmony export */   G: () => (/* binding */ finishLazyChains),\n/* harmony export */   H: () => (/* binding */ hasUnknownProperty),\n/* harmony export */   I: () => (/* binding */ sendEvent),\n/* harmony export */   J: () => (/* binding */ hasListeners),\n/* harmony export */   K: () => (/* binding */ on),\n/* harmony export */   L: () => (/* binding */ setClassicDecorator),\n/* harmony export */   M: () => (/* binding */ LIBRARIES),\n/* harmony export */   N: () => (/* binding */ once),\n/* harmony export */   O: () => (/* binding */ run),\n/* harmony export */   P: () => (/* binding */ bind),\n/* harmony export */   Q: () => (/* binding */ PROPERTY_DID_CHANGE),\n/* harmony export */   R: () => (/* binding */ objectAt),\n/* harmony export */   S: () => (/* binding */ replace),\n/* harmony export */   T: () => (/* binding */ arrayContentWillChange),\n/* harmony export */   U: () => (/* binding */ arrayContentDidChange),\n/* harmony export */   V: () => (/* binding */ addArrayObserver),\n/* harmony export */   W: () => (/* binding */ removeArrayObserver),\n/* harmony export */   X: () => (/* binding */ next),\n/* harmony export */   Y: () => (/* binding */ autoComputed),\n/* harmony export */   Z: () => (/* binding */ _getCurrentRunLoop),\n/* harmony export */   _: () => (/* binding */ _backburner),\n/* harmony export */   a: () => (/* binding */ tagForProperty),\n/* harmony export */   a0: () => (/* binding */ tracked),\n/* harmony export */   a1: () => (/* binding */ beginPropertyChanges),\n/* harmony export */   a2: () => (/* binding */ changeProperties),\n/* harmony export */   a3: () => (/* binding */ endPropertyChanges),\n/* harmony export */   a4: () => (/* binding */ isComputed),\n/* harmony export */   a5: () => (/* binding */ PROXY_CONTENT),\n/* harmony export */   a6: () => (/* binding */ _getProp),\n/* harmony export */   a7: () => (/* binding */ replaceInNativeArray),\n/* harmony export */   a8: () => (/* binding */ Libraries),\n/* harmony export */   a9: () => (/* binding */ ASYNC_OBSERVERS),\n/* harmony export */   aa: () => (/* binding */ SYNC_OBSERVERS),\n/* harmony export */   ab: () => (/* binding */ activateObserver),\n/* harmony export */   ac: () => (/* binding */ flushAsyncObservers),\n/* harmony export */   ad: () => (/* binding */ DEBUG_INJECTION_FUNCTIONS),\n/* harmony export */   ae: () => (/* binding */ markObjectAsDirty),\n/* harmony export */   af: () => (/* binding */ TrackedDescriptor),\n/* harmony export */   ag: () => (/* binding */ scheduleOnce),\n/* harmony export */   ah: () => (/* binding */ cancel),\n/* harmony export */   ai: () => (/* binding */ _queues),\n/* harmony export */   aj: () => (/* binding */ begin),\n/* harmony export */   ak: () => (/* binding */ end),\n/* harmony export */   al: () => (/* binding */ _cancelTimers),\n/* harmony export */   am: () => (/* binding */ later),\n/* harmony export */   an: () => (/* binding */ debounce),\n/* harmony export */   ao: () => (/* binding */ throttle),\n/* harmony export */   b: () => (/* binding */ _rsvpErrorQueue),\n/* harmony export */   c: () => (/* binding */ computed),\n/* harmony export */   d: () => (/* binding */ defineProperty),\n/* harmony export */   e: () => (/* binding */ expandProperties),\n/* harmony export */   f: () => (/* binding */ inject),\n/* harmony export */   g: () => (/* binding */ get),\n/* harmony export */   h: () => (/* binding */ isPath),\n/* harmony export */   i: () => (/* binding */ isElementDescriptor),\n/* harmony export */   j: () => (/* binding */ join),\n/* harmony export */   k: () => (/* binding */ COMPUTED_SETTERS),\n/* harmony export */   l: () => (/* binding */ getPossibleMandatoryProxyValue),\n/* harmony export */   m: () => (/* binding */ _getPath),\n/* harmony export */   n: () => (/* binding */ notifyPropertyChange),\n/* harmony export */   o: () => (/* binding */ defineValue),\n/* harmony export */   p: () => (/* binding */ defineDecorator),\n/* harmony export */   q: () => (/* binding */ nativeDescDecorator),\n/* harmony export */   r: () => (/* binding */ revalidateObservers),\n/* harmony export */   s: () => (/* binding */ schedule),\n/* harmony export */   t: () => (/* binding */ tagForObject),\n/* harmony export */   u: () => (/* binding */ isClassicDecorator),\n/* harmony export */   v: () => (/* binding */ descriptorForDecorator),\n/* harmony export */   w: () => (/* binding */ makeComputedDecorator),\n/* harmony export */   x: () => (/* binding */ addObserver),\n/* harmony export */   y: () => (/* binding */ removeObserver),\n/* harmony export */   z: () => (/* binding */ addListener)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../@ember/-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _ember_internals_error_handling_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../@ember/-internals/error-handling/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/error-handling/index.js\");\n/* harmony import */ var _to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./to-string-D8i3mjEU.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/to-string-D8i3mjEU.js\");\n/* harmony import */ var _is_proxy_Dmis_70B_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./is_proxy-Dmis-70B.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/is_proxy-Dmis-70B.js\");\n/* harmony import */ var _ember_array_internals_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../@ember/array/-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/-internals.js\");\n/* harmony import */ var _cache_qDyqAcpg_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cache-qDyqAcpg.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-qDyqAcpg.js\");\n/* harmony import */ var _ember_version_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ember/version.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/ember/version.js\");\n/* harmony import */ var _ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../@ember/-internals/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n/* harmony import */ var _backburner_js_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../backburner.js/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/backburner.js/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n@module @ember/object\n*/\n\nfunction addListener(obj, eventName, target, method, once, sync = true) {\n   true && !(Boolean(obj) && Boolean(eventName)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You must pass at least an object and event name to addListener', Boolean(obj) && Boolean(eventName));\n  if (!method && 'function' === typeof target) {\n    method = target;\n    target = null;\n  }\n  (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.meta)(obj).addToListeners(eventName, target, method, once === true, sync);\n}\n\n/**\n  Remove an event listener\n\n  Arguments should match those passed to `addListener`.\n\n  @method removeListener\n  @static\n  @for @ember/object/events\n  @param obj\n  @param {String} eventName\n  @param {Object|Function} target A target object or a function\n  @param {Function|String} method A function or the name of a function to be called on `target`\n  @public\n*/\nfunction removeListener(obj, eventName, targetOrFunction, functionOrName) {\n   true && !(Boolean(obj) && Boolean(eventName) && (typeof targetOrFunction === 'function' || typeof targetOrFunction === 'object' && Boolean(functionOrName))) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You must pass at least an object, event name, and method or target and method/method name to removeListener', Boolean(obj) && Boolean(eventName) && (typeof targetOrFunction === 'function' || typeof targetOrFunction === 'object' && Boolean(functionOrName)));\n  let target, method;\n  if (typeof targetOrFunction === 'object') {\n    target = targetOrFunction;\n    method = functionOrName;\n  } else {\n    target = null;\n    method = targetOrFunction;\n  }\n  let m = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.meta)(obj);\n  m.removeFromListeners(eventName, target, method);\n}\n\n/**\n  Send an event. The execution of suspended listeners\n  is skipped, and once listeners are removed. A listener without\n  a target is executed on the passed object. If an array of actions\n  is not passed, the actions stored on the passed object are invoked.\n\n  @method sendEvent\n  @static\n  @for @ember/object/events\n  @param obj\n  @param {String} eventName\n  @param {Array} params Optional parameters for each listener.\n  @return {Boolean} if the event was delivered to one or more actions\n  @public\n*/\nfunction sendEvent(obj, eventName, params, actions, _meta) {\n  if (actions === undefined) {\n    let meta = _meta === undefined ? (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(obj) : _meta;\n    actions = meta !== null ? meta.matchingListeners(eventName) : undefined;\n  }\n  if (actions === undefined || actions.length === 0) {\n    return false;\n  }\n  for (let i = actions.length - 3; i >= 0; i -= 3) {\n    // looping in reverse for once listeners\n    let target = actions[i];\n    let method = actions[i + 1];\n    let once = actions[i + 2];\n    if (!method) {\n      continue;\n    }\n    if (once) {\n      removeListener(obj, eventName, target, method);\n    }\n    if (!target) {\n      target = obj;\n    }\n    let type = typeof method;\n    if (type === 'string' || type === 'symbol') {\n      method = target[method];\n    }\n    method.apply(target, params);\n  }\n  return true;\n}\n\n/**\n  @public\n  @method hasListeners\n  @static\n  @for @ember/object/events\n  @param obj\n  @param {String} eventName\n  @return {Boolean} if `obj` has listeners for event `eventName`\n*/\nfunction hasListeners(obj, eventName) {\n  let meta = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(obj);\n  if (meta === null) {\n    return false;\n  }\n  let matched = meta.matchingListeners(eventName);\n  return matched !== undefined && matched.length > 0;\n}\n\n/**\n  Define a property as a function that should be executed when\n  a specified event or events are triggered.\n\n  ``` javascript\n  import EmberObject from '@ember/object';\n  import { on } from '@ember/object/evented';\n  import { sendEvent } from '@ember/object/events';\n\n  let Job = EmberObject.extend({\n    logCompleted: on('completed', function() {\n      console.log('Job completed!');\n    })\n  });\n\n  let job = Job.create();\n\n  sendEvent(job, 'completed'); // Logs 'Job completed!'\n ```\n\n  @method on\n  @static\n  @for @ember/object/evented\n  @param {String} eventNames*\n  @param {Function} func\n  @return {Function} the listener function, passed as last argument to on(...)\n  @public\n*/\nfunction on(...args) {\n  let func = args.pop();\n  let events = args;\n   true && !(typeof func === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('on expects function as last argument', typeof func === 'function');\n   true && !(events.length > 0 && events.every(p => typeof p === 'string' && p.length > 0)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('on called without valid event names', events.length > 0 && events.every(p => typeof p === 'string' && p.length > 0));\n  (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__.d)(func, events);\n  return func;\n}\nlet currentRunLoop = null;\nfunction _getCurrentRunLoop() {\n  return currentRunLoop;\n}\nfunction onBegin(current) {\n  currentRunLoop = current;\n}\nfunction onEnd(_current, next) {\n  currentRunLoop = next;\n  flushAsyncObservers();\n}\nfunction flush(queueName, next) {\n  if (queueName === 'render' || queueName === _rsvpErrorQueue) {\n    flushAsyncObservers();\n  }\n  next();\n}\nconst _rsvpErrorQueue = `${Math.random()}${Date.now()}`.replace('.', '');\n\n/**\n  Array of named queues. This array determines the order in which queues\n  are flushed at the end of the RunLoop. You can define your own queues by\n  simply adding the queue name to this array. Normally you should not need\n  to inspect or modify this property.\n\n  @property queues\n  @type Array\n  @default ['actions', 'destroy']\n  @private\n*/\nconst _queues = ['actions',\n// used in router transitions to prevent unnecessary loading state entry\n// if all context promises resolve on the 'actions' queue first\n'routerTransitions', 'render', 'afterRender', 'destroy',\n// used to re-throw unhandled RSVP rejection errors specifically in this\n// position to avoid breaking anything rendered in the other sections\n_rsvpErrorQueue];\n\n/**\n * @internal\n * @private\n */\nconst _backburner = new _backburner_js_index_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"](_queues, {\n  defaultQueue: 'actions',\n  onBegin,\n  onEnd,\n  onErrorTarget: _ember_internals_error_handling_index_js__WEBPACK_IMPORTED_MODULE_8__.onErrorTarget,\n  onErrorMethod: 'onerror',\n  flush\n});\n\n/**\n @module @ember/runloop\n*/\n// ..........................................................\n// run - this is ideally the only public API the dev sees\n//\n\n/**\n  Runs the passed target and method inside of a RunLoop, ensuring any\n  deferred actions including bindings and views updates are flushed at the\n  end.\n\n  Normally you should not need to invoke this method yourself. However if\n  you are implementing raw event handlers when interfacing with other\n  libraries or plugins, you should probably wrap all of your code inside this\n  call.\n\n  ```javascript\n  import { run } from '@ember/runloop';\n\n  run(function() {\n    // code to be executed within a RunLoop\n  });\n  ```\n  @method run\n  @for @ember/runloop\n  @static\n  @param {Object} [target] target of method to call\n  @param {Function|String} method Method to invoke.\n    May be a function or a string. If you pass a string\n    then it will be looked up on the passed target.\n  @param {Object} [args*] Any additional arguments you wish to pass to the method.\n  @return {Object} return value from invoking the passed function.\n  @public\n*/\n\nfunction run(...args) {\n  // @ts-expect-error TS doesn't like our spread args\n  return _backburner.run(...args);\n}\n\n/**\n  If no run-loop is present, it creates a new one. If a run loop is\n  present it will queue itself to run on the existing run-loops action\n  queue.\n\n  Please note: This is not for normal usage, and should be used sparingly.\n\n  If invoked when not within a run loop:\n\n  ```javascript\n  import { join } from '@ember/runloop';\n\n  join(function() {\n    // creates a new run-loop\n  });\n  ```\n\n  Alternatively, if called within an existing run loop:\n\n  ```javascript\n  import { run, join } from '@ember/runloop';\n\n  run(function() {\n    // creates a new run-loop\n\n    join(function() {\n      // joins with the existing run-loop, and queues for invocation on\n      // the existing run-loops action queue.\n    });\n  });\n  ```\n\n  @method join\n  @static\n  @for @ember/runloop\n  @param {Object} [target] target of method to call\n  @param {Function|String} method Method to invoke.\n    May be a function or a string. If you pass a string\n    then it will be looked up on the passed target.\n  @param {Object} [args*] Any additional arguments you wish to pass to the method.\n  @return {Object} Return value from invoking the passed function. Please note,\n  when called within an existing loop, no return value is possible.\n  @public\n*/\n\nfunction join(methodOrTarget, methodOrArg, ...additionalArgs) {\n  return _backburner.join(methodOrTarget, methodOrArg, ...additionalArgs);\n}\n\n/**\n  Allows you to specify which context to call the specified function in while\n  adding the execution of that function to the Ember run loop. This ability\n  makes this method a great way to asynchronously integrate third-party libraries\n  into your Ember application.\n\n  `bind` takes two main arguments, the desired context and the function to\n  invoke in that context. Any additional arguments will be supplied as arguments\n  to the function that is passed in.\n\n  Let's use the creation of a TinyMCE component as an example. Currently,\n  TinyMCE provides a setup configuration option we can use to do some processing\n  after the TinyMCE instance is initialized but before it is actually rendered.\n  We can use that setup option to do some additional setup for our component.\n  The component itself could look something like the following:\n\n  ```app/components/rich-text-editor.js\n  import Component from '@ember/component';\n  import { on } from '@ember/object/evented';\n  import { bind } from '@ember/runloop';\n\n  export default Component.extend({\n    initializeTinyMCE: on('didInsertElement', function() {\n      tinymce.init({\n        selector: '#' + this.$().prop('id'),\n        setup: bind(this, this.setupEditor)\n      });\n    }),\n\n    didInsertElement() {\n      tinymce.init({\n        selector: '#' + this.$().prop('id'),\n        setup: bind(this, this.setupEditor)\n      });\n    }\n\n    setupEditor(editor) {\n      this.set('editor', editor);\n\n      editor.on('change', function() {\n        console.log('content changed!');\n      });\n    }\n  });\n  ```\n\n  In this example, we use `bind` to bind the setupEditor method to the\n  context of the RichTextEditor component and to have the invocation of that\n  method be safely handled and executed by the Ember run loop.\n\n  @method bind\n  @static\n  @for @ember/runloop\n  @param {Object} [target] target of method to call\n  @param {Function|String} method Method to invoke.\n    May be a function or a string. If you pass a string\n    then it will be looked up on the passed target.\n  @param {Object} [args*] Any additional arguments you wish to pass to the method.\n  @return {Function} returns a new function that will always have a particular context\n  @since 1.4.0\n  @public\n*/\n\n// This final fallback is the equivalent of the (quite unsafe!) type for `bind`\n// from TS' defs for `Function.prototype.bind`. In general, it means we have a\n// loss of safety if we do not\n\nfunction bind(...curried) {\n   true && !function (methodOrTarget, methodOrArg) {\n    // Applies the same logic as backburner parseArgs for detecting if a method\n    // is actually being passed.\n    let length = arguments.length;\n    if (length === 0) {\n      return false;\n    } else if (length === 1) {\n      return typeof methodOrTarget === 'function';\n    } else {\n      return typeof methodOrArg === 'function' ||\n      // second argument is a function\n      methodOrTarget !== null && typeof methodOrArg === 'string' && methodOrArg in methodOrTarget ||\n      // second argument is the name of a method in first argument\n      typeof methodOrTarget === 'function' //first argument is a function\n      ;\n    }\n    // @ts-expect-error TS doesn't like our spread args\n  }(...curried) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('could not find a suitable method to bind', function (methodOrTarget, methodOrArg) {\n    let length = arguments.length;\n    if (length === 0) {\n      return false;\n    } else if (length === 1) {\n      return typeof methodOrTarget === 'function';\n    } else {\n      return typeof methodOrArg === 'function' || methodOrTarget !== null && typeof methodOrArg === 'string' && methodOrArg in methodOrTarget || typeof methodOrTarget === 'function';\n    }\n  }(...curried)); // @ts-expect-error TS doesn't like our spread args\n  return (...args) => join(...curried.concat(args));\n}\n\n/**\n  Begins a new RunLoop. Any deferred actions invoked after the begin will\n  be buffered until you invoke a matching call to `end()`. This is\n  a lower-level way to use a RunLoop instead of using `run()`.\n\n  ```javascript\n  import { begin, end } from '@ember/runloop';\n\n  begin();\n  // code to be executed within a RunLoop\n  end();\n  ```\n\n  @method begin\n  @static\n  @for @ember/runloop\n  @return {void}\n  @public\n*/\nfunction begin() {\n  _backburner.begin();\n}\n\n/**\n  Ends a RunLoop. This must be called sometime after you call\n  `begin()` to flush any deferred actions. This is a lower-level way\n  to use a RunLoop instead of using `run()`.\n\n  ```javascript\n  import { begin, end } from '@ember/runloop';\n\n  begin();\n  // code to be executed within a RunLoop\n  end();\n  ```\n\n  @method end\n  @static\n  @for @ember/runloop\n  @return {void}\n  @public\n*/\nfunction end() {\n  _backburner.end();\n}\n\n/**\n  Adds the passed target/method and any optional arguments to the named\n  queue to be executed at the end of the RunLoop. If you have not already\n  started a RunLoop when calling this method one will be started for you\n  automatically.\n\n  At the end of a RunLoop, any methods scheduled in this way will be invoked.\n  Methods will be invoked in an order matching the named queues defined in\n  the `queues` property.\n\n  ```javascript\n  import { schedule } from '@ember/runloop';\n\n  schedule('afterRender', this, function() {\n    // this will be executed in the 'afterRender' queue\n    console.log('scheduled on afterRender queue');\n  });\n\n  schedule('actions', this, function() {\n    // this will be executed in the 'actions' queue\n    console.log('scheduled on actions queue');\n  });\n\n  // Note the functions will be run in order based on the run queues order.\n  // Output would be:\n  //   scheduled on actions queue\n  //   scheduled on afterRender queue\n  ```\n\n  @method schedule\n  @static\n  @for @ember/runloop\n  @param {String} queue The name of the queue to schedule against. Default queues is 'actions'\n  @param {Object} [target] target object to use as the context when invoking a method.\n  @param {String|Function} method The method to invoke. If you pass a string it\n    will be resolved on the target object at the time the scheduled item is\n    invoked allowing you to change the target function.\n  @param {Object} [arguments*] Optional arguments to be passed to the queued method.\n  @return {*} Timer information for use in canceling, see `cancel`.\n  @public\n*/\n\nfunction schedule(...args) {\n  // @ts-expect-error TS doesn't like the rest args here\n  return _backburner.schedule(...args);\n}\n\n// Used by global test teardown\nfunction _hasScheduledTimers() {\n  return _backburner.hasTimers();\n}\n\n// Used by global test teardown\nfunction _cancelTimers() {\n  _backburner.cancelTimers();\n}\n\n/**\n  Invokes the passed target/method and optional arguments after a specified\n  period of time. The last parameter of this method must always be a number\n  of milliseconds.\n\n  You should use this method whenever you need to run some action after a\n  period of time instead of using `setTimeout()`. This method will ensure that\n  items that expire during the same script execution cycle all execute\n  together, which is often more efficient than using a real setTimeout.\n\n  ```javascript\n  import { later } from '@ember/runloop';\n\n  later(myContext, function() {\n    // code here will execute within a RunLoop in about 500ms with this == myContext\n  }, 500);\n  ```\n\n  @method later\n  @static\n  @for @ember/runloop\n  @param {Object} [target] target of method to invoke\n  @param {Function|String} method The method to invoke.\n    If you pass a string it will be resolved on the\n    target at the time the method is invoked.\n  @param {Object} [args*] Optional arguments to pass to the timeout.\n  @param {Number} wait Number of milliseconds to wait.\n  @return {*} Timer information for use in canceling, see `cancel`.\n  @public\n*/\n\nfunction later(...args) {\n  return _backburner.later(...args);\n}\n\n/**\n Schedule a function to run one time during the current RunLoop. This is equivalent\n  to calling `scheduleOnce` with the \"actions\" queue.\n\n  @method once\n  @static\n  @for @ember/runloop\n  @param {Object} [target] The target of the method to invoke.\n  @param {Function|String} method The method to invoke.\n    If you pass a string it will be resolved on the\n    target at the time the method is invoked.\n  @param {Object} [args*] Optional arguments to pass to the timeout.\n  @return {Object} Timer information for use in canceling, see `cancel`.\n  @public\n*/\n\nfunction once(...args) {\n  // @ts-expect-error TS doesn't like the rest args here\n  return _backburner.scheduleOnce('actions', ...args);\n}\n\n/**\n  Schedules a function to run one time in a given queue of the current RunLoop.\n  Calling this method with the same queue/target/method combination will have\n  no effect (past the initial call).\n\n  Note that although you can pass optional arguments these will not be\n  considered when looking for duplicates. New arguments will replace previous\n  calls.\n\n  ```javascript\n  import { run, scheduleOnce } from '@ember/runloop';\n\n  function sayHi() {\n    console.log('hi');\n  }\n\n  run(function() {\n    scheduleOnce('afterRender', myContext, sayHi);\n    scheduleOnce('afterRender', myContext, sayHi);\n    // sayHi will only be executed once, in the afterRender queue of the RunLoop\n  });\n  ```\n\n  Also note that for `scheduleOnce` to prevent additional calls, you need to\n  pass the same function instance. The following case works as expected:\n\n  ```javascript\n  function log() {\n    console.log('Logging only once');\n  }\n\n  function scheduleIt() {\n    scheduleOnce('actions', myContext, log);\n  }\n\n  scheduleIt();\n  scheduleIt();\n  ```\n\n  But this other case will schedule the function multiple times:\n\n  ```javascript\n  import { scheduleOnce } from '@ember/runloop';\n\n  function scheduleIt() {\n    scheduleOnce('actions', myContext, function() {\n      console.log('Closure');\n    });\n  }\n\n  scheduleIt();\n  scheduleIt();\n\n  // \"Closure\" will print twice, even though we're using `scheduleOnce`,\n  // because the function we pass to it won't match the\n  // previously scheduled operation.\n  ```\n\n  Available queues, and their order, can be found at `queues`\n\n  @method scheduleOnce\n  @static\n  @for @ember/runloop\n  @param {String} [queue] The name of the queue to schedule against. Default queues is 'actions'.\n  @param {Object} [target] The target of the method to invoke.\n  @param {Function|String} method The method to invoke.\n    If you pass a string it will be resolved on the\n    target at the time the method is invoked.\n  @param {Object} [args*] Optional arguments to pass to the timeout.\n  @return {Object} Timer information for use in canceling, see `cancel`.\n  @public\n*/\n\nfunction scheduleOnce(...args) {\n  // @ts-expect-error TS doesn't like the rest args here\n  return _backburner.scheduleOnce(...args);\n}\n\n/**\n  Schedules an item to run from within a separate run loop, after\n  control has been returned to the system. This is equivalent to calling\n  `later` with a wait time of 1ms.\n\n  ```javascript\n  import { next } from '@ember/runloop';\n\n  next(myContext, function() {\n    // code to be executed in the next run loop,\n    // which will be scheduled after the current one\n  });\n  ```\n\n  Multiple operations scheduled with `next` will coalesce\n  into the same later run loop, along with any other operations\n  scheduled by `later` that expire right around the same\n  time that `next` operations will fire.\n\n  Note that there are often alternatives to using `next`.\n  For instance, if you'd like to schedule an operation to happen\n  after all DOM element operations have completed within the current\n  run loop, you can make use of the `afterRender` run loop queue (added\n  by the `ember-views` package, along with the preceding `render` queue\n  where all the DOM element operations happen).\n\n  Example:\n\n  ```app/components/my-component.js\n  import Component from '@ember/component';\n  import { scheduleOnce } from '@ember/runloop';\n\n  export Component.extend({\n    didInsertElement() {\n      this._super(...arguments);\n      scheduleOnce('afterRender', this, 'processChildElements');\n    },\n\n    processChildElements() {\n      // ... do something with component's child component\n      // elements after they've finished rendering, which\n      // can't be done within this component's\n      // `didInsertElement` hook because that gets run\n      // before the child elements have been added to the DOM.\n    }\n  });\n  ```\n\n  One benefit of the above approach compared to using `next` is\n  that you will be able to perform DOM/CSS operations before unprocessed\n  elements are rendered to the screen, which may prevent flickering or\n  other artifacts caused by delaying processing until after rendering.\n\n  The other major benefit to the above approach is that `next`\n  introduces an element of non-determinism, which can make things much\n  harder to test, due to its reliance on `setTimeout`; it's much harder\n  to guarantee the order of scheduled operations when they are scheduled\n  outside of the current run loop, i.e. with `next`.\n\n  @method next\n  @static\n  @for @ember/runloop\n  @param {Object} [target] target of method to invoke\n  @param {Function|String} method The method to invoke.\n    If you pass a string it will be resolved on the\n    target at the time the method is invoked.\n  @param {Object} [args*] Optional arguments to pass to the timeout.\n  @return {Object} Timer information for use in canceling, see `cancel`.\n  @public\n*/\n\nfunction next(...args) {\n  return _backburner.later(...args, 1);\n}\n\n/**\n  Cancels a scheduled item. Must be a value returned by `later()`,\n  `once()`, `scheduleOnce()`, `next()`, `debounce()`, or\n  `throttle()`.\n\n  ```javascript\n  import {\n    next,\n    cancel,\n    later,\n    scheduleOnce,\n    once,\n    throttle,\n    debounce\n  } from '@ember/runloop';\n\n  let runNext = next(myContext, function() {\n    // will not be executed\n  });\n\n  cancel(runNext);\n\n  let runLater = later(myContext, function() {\n    // will not be executed\n  }, 500);\n\n  cancel(runLater);\n\n  let runScheduleOnce = scheduleOnce('afterRender', myContext, function() {\n    // will not be executed\n  });\n\n  cancel(runScheduleOnce);\n\n  let runOnce = once(myContext, function() {\n    // will not be executed\n  });\n\n  cancel(runOnce);\n\n  let throttle = throttle(myContext, function() {\n    // will not be executed\n  }, 1, false);\n\n  cancel(throttle);\n\n  let debounce = debounce(myContext, function() {\n    // will not be executed\n  }, 1);\n\n  cancel(debounce);\n\n  let debounceImmediate = debounce(myContext, function() {\n    // will be executed since we passed in true (immediate)\n  }, 100, true);\n\n  // the 100ms delay until this method can be called again will be canceled\n  cancel(debounceImmediate);\n  ```\n\n  @method cancel\n  @static\n  @for @ember/runloop\n  @param {Object} [timer] Timer object to cancel\n  @return {Boolean} true if canceled or false/undefined if it wasn't found\n  @public\n*/\nfunction cancel(timer) {\n  return _backburner.cancel(timer);\n}\n\n/**\n  Delay calling the target method until the debounce period has elapsed\n  with no additional debounce calls. If `debounce` is called again before\n  the specified time has elapsed, the timer is reset and the entire period\n  must pass again before the target method is called.\n\n  This method should be used when an event may be called multiple times\n  but the action should only be called once when the event is done firing.\n  A common example is for scroll events where you only want updates to\n  happen once scrolling has ceased.\n\n  ```javascript\n  import { debounce } from '@ember/runloop';\n\n  function whoRan() {\n    console.log(this.name + ' ran.');\n  }\n\n  let myContext = { name: 'debounce' };\n\n  debounce(myContext, whoRan, 150);\n\n  // less than 150ms passes\n  debounce(myContext, whoRan, 150);\n\n  // 150ms passes\n  // whoRan is invoked with context myContext\n  // console logs 'debounce ran.' one time.\n  ```\n\n  Immediate allows you to run the function immediately, but debounce\n  other calls for this function until the wait time has elapsed. If\n  `debounce` is called again before the specified time has elapsed,\n  the timer is reset and the entire period must pass again before\n  the method can be called again.\n\n  ```javascript\n  import { debounce } from '@ember/runloop';\n\n  function whoRan() {\n    console.log(this.name + ' ran.');\n  }\n\n  let myContext = { name: 'debounce' };\n\n  debounce(myContext, whoRan, 150, true);\n\n  // console logs 'debounce ran.' one time immediately.\n  // 100ms passes\n  debounce(myContext, whoRan, 150, true);\n\n  // 150ms passes and nothing else is logged to the console and\n  // the debouncee is no longer being watched\n  debounce(myContext, whoRan, 150, true);\n\n  // console logs 'debounce ran.' one time immediately.\n  // 150ms passes and nothing else is logged to the console and\n  // the debouncee is no longer being watched\n  ```\n\n  @method debounce\n  @static\n  @for @ember/runloop\n  @param {Object} [target] target of method to invoke\n  @param {Function|String} method The method to invoke.\n    May be a function or a string. If you pass a string\n    then it will be looked up on the passed target.\n  @param {Object} [args*] Optional arguments to pass to the timeout.\n  @param {Number} wait Number of milliseconds to wait.\n  @param {Boolean} immediate Trigger the function on the leading instead\n    of the trailing edge of the wait interval. Defaults to false.\n  @return {Array} Timer information for use in canceling, see `cancel`.\n  @public\n*/\n\nfunction debounce(...args) {\n  // @ts-expect-error TS doesn't like the rest args here\n  return _backburner.debounce(...args);\n}\n\n/**\n  Ensure that the target method is never called more frequently than\n  the specified spacing period. The target method is called immediately.\n\n  ```javascript\n  import { throttle } from '@ember/runloop';\n\n  function whoRan() {\n    console.log(this.name + ' ran.');\n  }\n\n  let myContext = { name: 'throttle' };\n\n  throttle(myContext, whoRan, 150);\n  // whoRan is invoked with context myContext\n  // console logs 'throttle ran.'\n\n  // 50ms passes\n  throttle(myContext, whoRan, 150);\n\n  // 50ms passes\n  throttle(myContext, whoRan, 150);\n\n  // 150ms passes\n  throttle(myContext, whoRan, 150);\n  // whoRan is invoked with context myContext\n  // console logs 'throttle ran.'\n  ```\n\n  @method throttle\n  @static\n  @for @ember/runloop\n  @param {Object} [target] target of method to invoke\n  @param {Function|String} method The method to invoke.\n    May be a function or a string. If you pass a string\n    then it will be looked up on the passed target.\n  @param {Object} [args*] Optional arguments to pass to the timeout.\n  @param {Number} spacing Number of milliseconds to space out requests.\n  @param {Boolean} immediate Trigger the function on the leading instead\n    of the trailing edge of the wait interval. Defaults to true.\n  @return {Array} Timer information for use in canceling, see `cancel`.\n  @public\n*/\n\nfunction throttle(...args) {\n  // @ts-expect-error TS doesn't like the rest args here\n  return _backburner.throttle(...args);\n}\nconst AFTER_OBSERVERS = ':change';\nfunction changeEvent(keyName) {\n  return keyName + AFTER_OBSERVERS;\n}\nconst SYNC_DEFAULT = !_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_7__.E._DEFAULT_ASYNC_OBSERVERS;\nconst SYNC_OBSERVERS = new Map();\nconst ASYNC_OBSERVERS = new Map();\n\n/**\n@module @ember/object\n*/\n\n/**\n  @method addObserver\n  @static\n  @for @ember/object/observers\n  @param obj\n  @param {String} path\n  @param {Object|Function} target\n  @param {Function|String} [method]\n  @public\n*/\nfunction addObserver(obj, path, target, method, sync = SYNC_DEFAULT) {\n  let eventName = changeEvent(path);\n  addListener(obj, eventName, target, method, false, sync);\n  let meta = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(obj);\n  if (meta === null || !(meta.isPrototypeMeta(obj) || meta.isInitializing())) {\n    activateObserver(obj, eventName, sync);\n  }\n}\n\n/**\n  @method removeObserver\n  @static\n  @for @ember/object/observers\n  @param obj\n  @param {String} path\n  @param {Object|Function} target\n  @param {Function|String} [method]\n  @public\n*/\nfunction removeObserver(obj, path, target, method, sync = SYNC_DEFAULT) {\n  let eventName = changeEvent(path);\n  let meta = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(obj);\n  if (meta === null || !(meta.isPrototypeMeta(obj) || meta.isInitializing())) {\n    deactivateObserver(obj, eventName, sync);\n  }\n  removeListener(obj, eventName, target, method);\n}\nfunction getOrCreateActiveObserversFor(target, sync) {\n  let observerMap = sync === true ? SYNC_OBSERVERS : ASYNC_OBSERVERS;\n  if (!observerMap.has(target)) {\n    observerMap.set(target, new Map());\n    (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.registerDestructor)(target, () => destroyObservers(target), true);\n  }\n  return observerMap.get(target);\n}\nfunction activateObserver(target, eventName, sync = false) {\n  let activeObservers = getOrCreateActiveObserversFor(target, sync);\n  if (activeObservers.has(eventName)) {\n    activeObservers.get(eventName).count++;\n  } else {\n    let path = eventName.substring(0, eventName.lastIndexOf(':'));\n    let tag = getChainTagsForKey(target, path, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagMetaFor)(target), (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(target));\n    activeObservers.set(eventName, {\n      count: 1,\n      path,\n      tag,\n      lastRevision: (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.valueForTag)(tag),\n      suspended: false\n    });\n  }\n}\nlet DEACTIVATE_SUSPENDED = false;\nlet SCHEDULED_DEACTIVATE = [];\nfunction deactivateObserver(target, eventName, sync = false) {\n  if (DEACTIVATE_SUSPENDED === true) {\n    SCHEDULED_DEACTIVATE.push([target, eventName, sync]);\n    return;\n  }\n  let observerMap = sync === true ? SYNC_OBSERVERS : ASYNC_OBSERVERS;\n  let activeObservers = observerMap.get(target);\n  if (activeObservers !== undefined) {\n    let observer = activeObservers.get(eventName);\n    observer.count--;\n    if (observer.count === 0) {\n      activeObservers.delete(eventName);\n      if (activeObservers.size === 0) {\n        observerMap.delete(target);\n      }\n    }\n  }\n}\nfunction suspendedObserverDeactivation() {\n  DEACTIVATE_SUSPENDED = true;\n}\nfunction resumeObserverDeactivation() {\n  DEACTIVATE_SUSPENDED = false;\n  for (let [target, eventName, sync] of SCHEDULED_DEACTIVATE) {\n    deactivateObserver(target, eventName, sync);\n  }\n  SCHEDULED_DEACTIVATE = [];\n}\n\n/**\n * Primarily used for cases where we are redefining a class, e.g. mixins/reopen\n * being applied later. Revalidates all the observers, resetting their tags.\n *\n * @private\n * @param target\n */\nfunction revalidateObservers(target) {\n  if (ASYNC_OBSERVERS.has(target)) {\n    ASYNC_OBSERVERS.get(target).forEach(observer => {\n      observer.tag = getChainTagsForKey(target, observer.path, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagMetaFor)(target), (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(target));\n      observer.lastRevision = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.valueForTag)(observer.tag);\n    });\n  }\n  if (SYNC_OBSERVERS.has(target)) {\n    SYNC_OBSERVERS.get(target).forEach(observer => {\n      observer.tag = getChainTagsForKey(target, observer.path, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagMetaFor)(target), (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(target));\n      observer.lastRevision = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.valueForTag)(observer.tag);\n    });\n  }\n}\nlet lastKnownRevision = 0;\nfunction flushAsyncObservers(shouldSchedule = true) {\n  let currentRevision = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.valueForTag)(_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.CURRENT_TAG);\n  if (lastKnownRevision === currentRevision) {\n    return;\n  }\n  lastKnownRevision = currentRevision;\n  ASYNC_OBSERVERS.forEach((activeObservers, target) => {\n    let meta = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(target);\n    activeObservers.forEach((observer, eventName) => {\n      if (!(0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.validateTag)(observer.tag, observer.lastRevision)) {\n        let sendObserver = () => {\n          try {\n            sendEvent(target, eventName, [target, observer.path], undefined, meta);\n          } finally {\n            observer.tag = getChainTagsForKey(target, observer.path, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagMetaFor)(target), (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(target));\n            observer.lastRevision = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.valueForTag)(observer.tag);\n          }\n        };\n        if (shouldSchedule) {\n          schedule('actions', sendObserver);\n        } else {\n          sendObserver();\n        }\n      }\n    });\n  });\n}\nfunction flushSyncObservers() {\n  // When flushing synchronous observers, we know that something has changed (we\n  // only do this during a notifyPropertyChange), so there's no reason to check\n  // a global revision.\n\n  SYNC_OBSERVERS.forEach((activeObservers, target) => {\n    let meta = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(target);\n    activeObservers.forEach((observer, eventName) => {\n      if (!observer.suspended && !(0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.validateTag)(observer.tag, observer.lastRevision)) {\n        try {\n          observer.suspended = true;\n          sendEvent(target, eventName, [target, observer.path], undefined, meta);\n        } finally {\n          observer.tag = getChainTagsForKey(target, observer.path, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagMetaFor)(target), (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(target));\n          observer.lastRevision = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.valueForTag)(observer.tag);\n          observer.suspended = false;\n        }\n      }\n    });\n  });\n}\nfunction setObserverSuspended(target, property, suspended) {\n  let activeObservers = SYNC_OBSERVERS.get(target);\n  if (!activeObservers) {\n    return;\n  }\n  let observer = activeObservers.get(changeEvent(property));\n  if (observer) {\n    observer.suspended = suspended;\n  }\n}\nfunction destroyObservers(target) {\n  if (SYNC_OBSERVERS.size > 0) SYNC_OBSERVERS.delete(target);\n  if (ASYNC_OBSERVERS.size > 0) ASYNC_OBSERVERS.delete(target);\n}\n\n// This is exported for `@tracked`, but should otherwise be avoided. Use `tagForObject`.\nconst SELF_TAG = (0,_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_9__.s)('SELF_TAG');\nfunction tagForProperty(obj, propertyKey, addMandatorySetter = false, meta) {\n  let customTagFor = (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_6__.getCustomTagFor)(obj);\n  if (customTagFor !== undefined) {\n    return customTagFor(obj, propertyKey, addMandatorySetter);\n  }\n  let tag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(obj, propertyKey, meta);\n  if ( true && addMandatorySetter) {\n    (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__.f)(tag, obj, propertyKey);\n  }\n  return tag;\n}\nfunction tagForObject(obj) {\n  if ((0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__.e)(obj)) {\n    if (true) {\n       true && !!(0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(obj) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)((0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(obj) ? `Cannot create a new tag for \\`${(0,_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_9__.t)(obj)}\\` after it has been destroyed.` : '', !(0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(obj));\n    }\n    return (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(obj, SELF_TAG);\n  }\n  return _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.CONSTANT_TAG;\n}\nfunction markObjectAsDirty(obj, propertyKey) {\n  (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.dirtyTagFor)(obj, propertyKey);\n  (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.dirtyTagFor)(obj, SELF_TAG);\n}\nconst PROPERTY_DID_CHANGE = Symbol('PROPERTY_DID_CHANGE');\nfunction hasPropertyDidChange(obj) {\n  return obj != null && typeof obj === 'object' && typeof obj[PROPERTY_DID_CHANGE] === 'function';\n}\nlet deferred = 0;\n\n/**\n  This function is called just after an object property has changed.\n  It will notify any observers and clear caches among other things.\n\n  Normally you will not need to call this method directly but if for some\n  reason you can't directly watch a property you can invoke this method\n  manually.\n\n  @method notifyPropertyChange\n  @for @ember/object\n  @param {Object} obj The object with the property that will change\n  @param {String} keyName The property key (or path) that will change.\n  @param {Meta} [_meta] The objects meta.\n  @param {unknown} [value] The new value to set for the property\n  @return {void}\n  @since 3.1.0\n  @public\n*/\nfunction notifyPropertyChange(obj, keyName, _meta, value) {\n  let meta = _meta === undefined ? (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(obj) : _meta;\n  if (meta !== null && (meta.isInitializing() || meta.isPrototypeMeta(obj))) {\n    return;\n  }\n  markObjectAsDirty(obj, keyName);\n  if (deferred <= 0) {\n    flushSyncObservers();\n  }\n  if (PROPERTY_DID_CHANGE in obj) {\n    // It's redundant to do this here, but we don't want to check above so we can avoid an extra function call in prod.\n     true && !hasPropertyDidChange(obj) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('property did change hook is invalid', hasPropertyDidChange(obj)); // we need to check the arguments length here; there's a check in Component's `PROPERTY_DID_CHANGE`\n    // that checks its arguments length, so we have to explicitly not call this with `value`\n    // if it is not passed to `notifyPropertyChange`\n    if (arguments.length === 4) {\n      obj[PROPERTY_DID_CHANGE](keyName, value);\n    } else {\n      obj[PROPERTY_DID_CHANGE](keyName);\n    }\n  }\n}\n\n/**\n  @method beginPropertyChanges\n  @chainable\n  @private\n*/\nfunction beginPropertyChanges() {\n  deferred++;\n  suspendedObserverDeactivation();\n}\n\n/**\n  @method endPropertyChanges\n  @private\n*/\nfunction endPropertyChanges() {\n  deferred--;\n  if (deferred <= 0) {\n    flushSyncObservers();\n    resumeObserverDeactivation();\n  }\n}\n\n/**\n  Make a series of property changes together in an\n  exception-safe way.\n\n  ```javascript\n  Ember.changeProperties(function() {\n    obj1.set('foo', mayBlowUpWhenSet);\n    obj2.set('bar', baz);\n  });\n  ```\n\n  @method changeProperties\n  @param {Function} callback\n  @private\n*/\nfunction changeProperties(callback) {\n  beginPropertyChanges();\n  try {\n    callback();\n  } finally {\n    endPropertyChanges();\n  }\n}\nfunction arrayContentWillChange(array, startIdx, removeAmt, addAmt) {\n  // if no args are passed assume everything changes\n  if (startIdx === undefined) {\n    startIdx = 0;\n    removeAmt = addAmt = -1;\n  } else {\n    if (removeAmt === undefined) {\n      removeAmt = -1;\n    }\n    if (addAmt === undefined) {\n      addAmt = -1;\n    }\n  }\n  sendEvent(array, '@array:before', [array, startIdx, removeAmt, addAmt]);\n  return array;\n}\nfunction arrayContentDidChange(array, startIdx, removeAmt, addAmt, notify = true) {\n  // if no args are passed assume everything changes\n  if (startIdx === undefined) {\n    startIdx = 0;\n    removeAmt = addAmt = -1;\n  } else {\n    if (removeAmt === undefined) {\n      removeAmt = -1;\n    }\n    if (addAmt === undefined) {\n      addAmt = -1;\n    }\n  }\n  let meta = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(array);\n  if (notify) {\n    if (addAmt < 0 || removeAmt < 0 || addAmt - removeAmt !== 0) {\n      notifyPropertyChange(array, 'length', meta);\n    }\n    notifyPropertyChange(array, '[]', meta);\n  }\n  sendEvent(array, '@array:change', [array, startIdx, removeAmt, addAmt]);\n  if (meta !== null) {\n    let length = array.length;\n    let addedAmount = addAmt === -1 ? 0 : addAmt;\n    let removedAmount = removeAmt === -1 ? 0 : removeAmt;\n    let delta = addedAmount - removedAmount;\n    let previousLength = length - delta;\n    let normalStartIdx = startIdx < 0 ? previousLength + startIdx : startIdx;\n    if (meta.revisionFor('firstObject') !== undefined && normalStartIdx === 0) {\n      notifyPropertyChange(array, 'firstObject', meta);\n    }\n    if (meta.revisionFor('lastObject') !== undefined) {\n      let previousLastIndex = previousLength - 1;\n      let lastAffectedIndex = normalStartIdx + removedAmount;\n      if (previousLastIndex < lastAffectedIndex) {\n        notifyPropertyChange(array, 'lastObject', meta);\n      }\n    }\n  }\n  return array;\n}\nconst EMPTY_ARRAY = Object.freeze([]);\nfunction objectAt(array, index) {\n  if (Array.isArray(array)) {\n    return array[index];\n  } else {\n    return array.objectAt(index);\n  }\n}\n\n// Ideally, we'd use MutableArray.detect but for unknown reasons this causes\n// the node tests to fail strangely.\nfunction isMutableArray(obj) {\n  return obj != null && typeof obj.replace === 'function';\n}\nfunction replace(array, start, deleteCount, items = EMPTY_ARRAY) {\n  if (isMutableArray(array)) {\n    array.replace(start, deleteCount, items);\n  } else {\n     true && !Array.isArray(array) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Can only replace content of a native array or MutableArray', Array.isArray(array));\n    replaceInNativeArray(array, start, deleteCount, items);\n  }\n}\nconst CHUNK_SIZE = 60000;\n\n// To avoid overflowing the stack, we splice up to CHUNK_SIZE items at a time.\n// See https://code.google.com/p/chromium/issues/detail?id=56588 for more details.\nfunction replaceInNativeArray(array, start, deleteCount, items) {\n  arrayContentWillChange(array, start, deleteCount, items.length);\n  if (items.length <= CHUNK_SIZE) {\n    array.splice(start, deleteCount, ...items);\n  } else {\n    array.splice(start, deleteCount);\n    for (let i = 0; i < items.length; i += CHUNK_SIZE) {\n      let chunk = items.slice(i, i + CHUNK_SIZE);\n      array.splice(start + i, 0, ...chunk);\n    }\n  }\n  arrayContentDidChange(array, start, deleteCount, items.length);\n}\nfunction arrayObserversHelper(obj, target, opts, operation) {\n  let {\n    willChange,\n    didChange\n  } = opts;\n  operation(obj, '@array:before', target, willChange);\n  operation(obj, '@array:change', target, didChange);\n\n  /*\n   * Array proxies have a `_revalidate` method which must be called to set\n   * up their internal array observation systems.\n   */\n  obj._revalidate?.();\n  return obj;\n}\nfunction addArrayObserver(array, target, opts) {\n  return arrayObserversHelper(array, target, opts, addListener);\n}\nfunction removeArrayObserver(array, target, opts) {\n  return arrayObserversHelper(array, target, opts, removeListener);\n}\nconst CHAIN_PASS_THROUGH = new WeakSet();\nfunction finishLazyChains(meta, key, value) {\n  let lazyTags = meta.readableLazyChainsFor(key);\n  if (lazyTags === undefined) {\n    return;\n  }\n  if ((0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__.e)(value)) {\n    for (let [tag, deps] of lazyTags) {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.updateTag)(tag, getChainTagsForKey(value, deps, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagMetaFor)(value), (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(value)));\n    }\n  }\n  lazyTags.length = 0;\n}\nfunction getChainTagsForKeys(obj, keys, tagMeta, meta) {\n  let tags = [];\n  for (let key of keys) {\n    getChainTags(tags, obj, key, tagMeta, meta);\n  }\n  return (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.combine)(tags);\n}\nfunction getChainTagsForKey(obj, key, tagMeta, meta) {\n  return (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.combine)(getChainTags([], obj, key, tagMeta, meta));\n}\nfunction getChainTags(chainTags, obj, path, tagMeta, meta$1) {\n  let current = obj;\n  let currentTagMeta = tagMeta;\n  let currentMeta = meta$1;\n  let pathLength = path.length;\n  let segmentEnd = -1;\n  // prevent closures\n  let segment, descriptor;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let lastSegmentEnd = segmentEnd + 1;\n    segmentEnd = path.indexOf('.', lastSegmentEnd);\n    if (segmentEnd === -1) {\n      segmentEnd = pathLength;\n    }\n    segment = path.slice(lastSegmentEnd, segmentEnd);\n\n    // If the segment is an @each, we can process it and then break\n    if (segment === '@each' && segmentEnd !== pathLength) {\n      lastSegmentEnd = segmentEnd + 1;\n      segmentEnd = path.indexOf('.', lastSegmentEnd);\n      let arrLength = current.length;\n      if (typeof arrLength !== 'number' ||\n      // TODO: should the second test be `isEmberArray` instead?\n      !(Array.isArray(current) || 'objectAt' in current)) {\n        // If the current object isn't an array, there's nothing else to do,\n        // we don't watch individual properties. Break out of the loop.\n        break;\n      } else if (arrLength === 0) {\n        // Fast path for empty arrays\n        chainTags.push(tagForProperty(current, '[]'));\n        break;\n      }\n      if (segmentEnd === -1) {\n        segment = path.slice(lastSegmentEnd);\n      } else {\n        // Deprecated, remove once we turn the deprecation into an assertion\n        segment = path.slice(lastSegmentEnd, segmentEnd);\n      }\n\n      // Push the tags for each item's property\n      for (let i = 0; i < arrLength; i++) {\n        let item = objectAt(current, i);\n        if (item) {\n           true && !(typeof item === 'object') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`When using @each to observe the array \\`${current.toString()}\\`, the items in the array must be objects`, typeof item === 'object');\n          chainTags.push(tagForProperty(item, segment, true));\n          currentMeta = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(item);\n          descriptor = currentMeta !== null ? currentMeta.peekDescriptors(segment) : undefined;\n\n          // If the key is an alias, we need to bootstrap it\n          if (descriptor !== undefined && typeof descriptor.altKey === 'string') {\n            item[segment];\n          }\n        }\n      }\n\n      // Push the tag for the array length itself\n      chainTags.push(tagForProperty(current, '[]', true, currentTagMeta));\n      break;\n    }\n    let propertyTag = tagForProperty(current, segment, true, currentTagMeta);\n    descriptor = currentMeta !== null ? currentMeta.peekDescriptors(segment) : undefined;\n    chainTags.push(propertyTag);\n\n    // If we're at the end of the path, processing the last segment, and it's\n    // not an alias, we should _not_ get the last value, since we already have\n    // its tag. There's no reason to access it and do more work.\n    if (segmentEnd === pathLength) {\n      // If the key was an alias, we should always get the next value in order to\n      // bootstrap the alias. This is because aliases, unlike other CPs, should\n      // always be in sync with the aliased value.\n      if (CHAIN_PASS_THROUGH.has(descriptor)) {\n        current[segment];\n      }\n      break;\n    }\n    if (descriptor === undefined) {\n      // If the descriptor is undefined, then its a normal property, so we should\n      // lookup the value to chain off of like normal.\n\n      if (!(segment in current) && typeof current.unknownProperty === 'function') {\n        current = current.unknownProperty(segment);\n      } else {\n        current = current[segment];\n      }\n    } else if (CHAIN_PASS_THROUGH.has(descriptor)) {\n      current = current[segment];\n    } else {\n      // If the descriptor is defined, then its a normal CP (not an alias, which\n      // would have been handled earlier). We get the last revision to check if\n      // the CP is still valid, and if so we use the cached value. If not, then\n      // we create a lazy chain lookup, and the next time the CP is calculated,\n      // it will update that lazy chain.\n      let instanceMeta = currentMeta.source === current ? currentMeta : (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.meta)(current);\n      let lastRevision = instanceMeta.revisionFor(segment);\n      if (lastRevision !== undefined && (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.validateTag)(propertyTag, lastRevision)) {\n        current = instanceMeta.valueFor(segment);\n      } else {\n        // use metaFor here to ensure we have the meta for the instance\n        let lazyChains = instanceMeta.writableLazyChainsFor(segment);\n        let rest = path.substring(segmentEnd + 1);\n        let placeholderTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.createUpdatableTag)();\n        lazyChains.push([placeholderTag, rest]);\n        chainTags.push(placeholderTag);\n        break;\n      }\n    }\n    if (!(0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__.e)(current)) {\n      // we've hit the end of the chain for now, break out\n      break;\n    }\n    currentTagMeta = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagMetaFor)(current);\n    currentMeta = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(current);\n  }\n  return chainTags;\n}\nfunction isElementDescriptor(args) {\n  let [maybeTarget, maybeKey, maybeDesc] = args;\n  return (\n    // Ensure we have the right number of args\n    args.length === 3 && (\n    // Make sure the target is a class or object (prototype)\n    typeof maybeTarget === 'function' || typeof maybeTarget === 'object' && maybeTarget !== null) &&\n    // Make sure the key is a string\n    typeof maybeKey === 'string' && (\n    // Make sure the descriptor is the right shape\n    typeof maybeDesc === 'object' && maybeDesc !== null || maybeDesc === undefined)\n  );\n}\nfunction nativeDescDecorator(propertyDesc) {\n  let decorator = function () {\n    return propertyDesc;\n  };\n  setClassicDecorator(decorator);\n  return decorator;\n}\n\n/**\n  Objects of this type can implement an interface to respond to requests to\n  get and set. The default implementation handles simple properties.\n\n  @class Descriptor\n  @private\n*/\nclass ComputedDescriptor {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"enumerable\", true);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"configurable\", true);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_dependentKeys\", undefined);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_meta\", undefined);\n  }\n  setup(_obj, keyName, _propertyDesc, meta) {\n    meta.writeDescriptors(keyName, this);\n  }\n  teardown(_obj, keyName, meta) {\n    meta.removeDescriptors(keyName);\n  }\n}\nlet COMPUTED_GETTERS;\nif (true) {\n  COMPUTED_GETTERS = new WeakSet();\n}\nfunction DESCRIPTOR_GETTER_FUNCTION(name, descriptor) {\n  function getter() {\n    return descriptor.get(this, name);\n  }\n  if (true) {\n    COMPUTED_GETTERS.add(getter);\n  }\n  return getter;\n}\nfunction DESCRIPTOR_SETTER_FUNCTION(name, descriptor) {\n  let set = function CPSETTER_FUNCTION(value) {\n    return descriptor.set(this, name, value);\n  };\n  COMPUTED_SETTERS.add(set);\n  return set;\n}\nconst COMPUTED_SETTERS = new WeakSet();\nfunction makeComputedDecorator(desc, DecoratorClass) {\n  let decorator = function COMPUTED_DECORATOR(target, key, propertyDesc, maybeMeta, isClassicDecorator) {\n     true && !(isClassicDecorator || !propertyDesc || !propertyDesc.get || !COMPUTED_GETTERS.has(propertyDesc.get)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Only one computed property decorator can be applied to a class field or accessor, but '${key}' was decorated twice. You may have added the decorator to both a getter and setter, which is unnecessary.`, isClassicDecorator || !propertyDesc || !propertyDesc.get || !COMPUTED_GETTERS.has(propertyDesc.get));\n    let meta$1 = arguments.length === 3 ? (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.meta)(target) : maybeMeta;\n    desc.setup(target, key, propertyDesc, meta$1);\n    let computedDesc = {\n      enumerable: desc.enumerable,\n      configurable: desc.configurable,\n      get: DESCRIPTOR_GETTER_FUNCTION(key, desc),\n      set: DESCRIPTOR_SETTER_FUNCTION(key, desc)\n    };\n    return computedDesc;\n  };\n  setClassicDecorator(decorator, desc);\n  Object.setPrototypeOf(decorator, DecoratorClass.prototype);\n  return decorator;\n}\n\n/////////////\n\nconst DECORATOR_DESCRIPTOR_MAP = new WeakMap();\n\n/**\n  Returns the CP descriptor associated with `obj` and `keyName`, if any.\n\n  @method descriptorForProperty\n  @param {Object} obj the object to check\n  @param {String} keyName the key to check\n  @return {Descriptor}\n  @private\n*/\nfunction descriptorForProperty(obj, keyName, _meta) {\n   true && !(obj !== null) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Cannot call `descriptorForProperty` on null', obj !== null);\n   true && !(obj !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Cannot call `descriptorForProperty` on undefined', obj !== undefined);\n   true && !(typeof obj === 'object' || typeof obj === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Cannot call \\`descriptorForProperty\\` on ${typeof obj}`, typeof obj === 'object' || typeof obj === 'function');\n  let meta = _meta === undefined ? (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.peekMeta)(obj) : _meta;\n  if (meta !== null) {\n    return meta.peekDescriptors(keyName);\n  }\n}\nfunction descriptorForDecorator(dec) {\n  return DECORATOR_DESCRIPTOR_MAP.get(dec);\n}\n\n/**\n  Check whether a value is a decorator\n\n  @method isClassicDecorator\n  @param {any} possibleDesc the value to check\n  @return {boolean}\n  @private\n*/\nfunction isClassicDecorator(dec) {\n  return typeof dec === 'function' && DECORATOR_DESCRIPTOR_MAP.has(dec);\n}\n\n/**\n  Set a value as a decorator\n\n  @method setClassicDecorator\n  @param {function} decorator the value to mark as a decorator\n  @private\n*/\nfunction setClassicDecorator(dec, value = true) {\n  DECORATOR_DESCRIPTOR_MAP.set(dec, value);\n}\nconst END_WITH_EACH_REGEX = /\\.@each$/;\n\n/**\n  Expands `pattern`, invoking `callback` for each expansion.\n\n  The only pattern supported is brace-expansion, anything else will be passed\n  once to `callback` directly.\n\n  Example\n\n  ```js\n  import { expandProperties } from '@ember/object/computed';\n\n  function echo(arg){ console.log(arg); }\n\n  expandProperties('foo.bar', echo);              //=> 'foo.bar'\n  expandProperties('{foo,bar}', echo);            //=> 'foo', 'bar'\n  expandProperties('foo.{bar,baz}', echo);        //=> 'foo.bar', 'foo.baz'\n  expandProperties('{foo,bar}.baz', echo);        //=> 'foo.baz', 'bar.baz'\n  expandProperties('foo.{bar,baz}.[]', echo)      //=> 'foo.bar.[]', 'foo.baz.[]'\n  expandProperties('{foo,bar}.{spam,eggs}', echo) //=> 'foo.spam', 'foo.eggs', 'bar.spam', 'bar.eggs'\n  expandProperties('{foo}.bar.{baz}')             //=> 'foo.bar.baz'\n  ```\n\n  @method expandProperties\n  @static\n  @for @ember/object/computed\n  @public\n  @param {String} pattern The property pattern to expand.\n  @param {Function} callback The callback to invoke.  It is invoked once per\n  expansion, and is passed the expansion.\n*/\nfunction expandProperties(pattern, callback) {\n   true && !(typeof pattern === 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`A computed property key must be a string, you passed ${typeof pattern} ${pattern}`, typeof pattern === 'string');\n   true && !(pattern.indexOf(' ') === -1) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Brace expanded properties cannot contain spaces, e.g. \"user.{firstName, lastName}\" should be \"user.{firstName,lastName}\"', pattern.indexOf(' ') === -1); // regex to look for double open, double close, or unclosed braces\n   true && !(pattern.match(/\\{[^}{]*\\{|\\}[^}{]*\\}|\\{[^}]*$/g) === null) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Brace expanded properties have to be balanced and cannot be nested, pattern: ${pattern}`, pattern.match(/\\{[^}{]*\\{|\\}[^}{]*\\}|\\{[^}]*$/g) === null);\n  let start = pattern.indexOf('{');\n  if (start < 0) {\n    callback(pattern.replace(END_WITH_EACH_REGEX, '.[]'));\n  } else {\n    dive('', pattern, start, callback);\n  }\n}\nfunction dive(prefix, pattern, start, callback) {\n  let end = pattern.indexOf('}'),\n    i = 0,\n    newStart,\n    arrayLength;\n  let tempArr = pattern.substring(start + 1, end).split(',');\n  let after = pattern.substring(end + 1);\n  prefix = prefix + pattern.substring(0, start);\n  arrayLength = tempArr.length;\n  while (i < arrayLength) {\n    newStart = after.indexOf('{');\n    if (newStart < 0) {\n      callback((prefix + tempArr[i++] + after).replace(END_WITH_EACH_REGEX, '.[]'));\n    } else {\n      dive(prefix + tempArr[i++], after, newStart, callback);\n    }\n  }\n}\n\n/**\n@module @ember/object\n*/\n\nconst DEEP_EACH_REGEX = /\\.@each\\.[^.]+\\./;\nfunction noop() {}\n/**\n  `@computed` is a decorator that turns a JavaScript getter and setter into a\n  computed property, which is a _cached, trackable value_. By default the getter\n  will only be called once and the result will be cached. You can specify\n  various properties that your computed property depends on. This will force the\n  cached result to be cleared if the dependencies are modified, and lazily recomputed the next time something asks for it.\n\n  In the following example we decorate a getter - `fullName` -  by calling\n  `computed` with the property dependencies (`firstName` and `lastName`) as\n  arguments. The `fullName` getter will be called once (regardless of how many\n  times it is accessed) as long as its dependencies do not change. Once\n  `firstName` or `lastName` are updated any future calls to `fullName` will\n  incorporate the new values, and any watchers of the value such as templates\n  will be updated:\n\n  ```javascript\n  import { computed, set } from '@ember/object';\n\n  class Person {\n    constructor(firstName, lastName) {\n      set(this, 'firstName', firstName);\n      set(this, 'lastName', lastName);\n    }\n\n    @computed('firstName', 'lastName')\n    get fullName() {\n      return `${this.firstName} ${this.lastName}`;\n    }\n  });\n\n  let tom = new Person('Tom', 'Dale');\n\n  tom.fullName; // 'Tom Dale'\n  ```\n\n  You can also provide a setter, which will be used when updating the computed\n  property. Ember's `set` function must be used to update the property\n  since it will also notify observers of the property:\n\n  ```javascript\n  import { computed, set } from '@ember/object';\n\n  class Person {\n    constructor(firstName, lastName) {\n      set(this, 'firstName', firstName);\n      set(this, 'lastName', lastName);\n    }\n\n    @computed('firstName', 'lastName')\n    get fullName() {\n      return `${this.firstName} ${this.lastName}`;\n    }\n\n    set fullName(value) {\n      let [firstName, lastName] = value.split(' ');\n\n      set(this, 'firstName', firstName);\n      set(this, 'lastName', lastName);\n    }\n  });\n\n  let person = new Person();\n\n  set(person, 'fullName', 'Peter Wagenet');\n  person.firstName; // 'Peter'\n  person.lastName;  // 'Wagenet'\n  ```\n\n  You can also pass a getter function or object with `get` and `set` functions\n  as the last argument to the computed decorator. This allows you to define\n  computed property _macros_:\n\n  ```js\n  import { computed } from '@ember/object';\n\n  function join(...keys) {\n    return computed(...keys, function() {\n      return keys.map(key => this[key]).join(' ');\n    });\n  }\n\n  class Person {\n    @join('firstName', 'lastName')\n    fullName;\n  }\n  ```\n\n  Note that when defined this way, getters and setters receive the _key_ of the\n  property they are decorating as the first argument. Setters receive the value\n  they are setting to as the second argument instead. Additionally, setters must\n  _return_ the value that should be cached:\n\n  ```javascript\n  import { computed, set } from '@ember/object';\n\n  function fullNameMacro(firstNameKey, lastNameKey) {\n    return computed(firstNameKey, lastNameKey, {\n      get() {\n        return `${this[firstNameKey]} ${this[lastNameKey]}`;\n      }\n\n      set(key, value) {\n        let [firstName, lastName] = value.split(' ');\n\n        set(this, firstNameKey, firstName);\n        set(this, lastNameKey, lastName);\n\n        return value;\n      }\n    });\n  }\n\n  class Person {\n    constructor(firstName, lastName) {\n      set(this, 'firstName', firstName);\n      set(this, 'lastName', lastName);\n    }\n\n    @fullNameMacro('firstName', 'lastName') fullName;\n  });\n\n  let person = new Person();\n\n  set(person, 'fullName', 'Peter Wagenet');\n  person.firstName; // 'Peter'\n  person.lastName;  // 'Wagenet'\n  ```\n\n  Computed properties can also be used in classic classes. To do this, we\n  provide the getter and setter as the last argument like we would for a macro,\n  and we assign it to a property on the class definition. This is an _anonymous_\n  computed macro:\n\n  ```javascript\n  import EmberObject, { computed, set } from '@ember/object';\n\n  let Person = EmberObject.extend({\n    // these will be supplied by `create`\n    firstName: null,\n    lastName: null,\n\n    fullName: computed('firstName', 'lastName', {\n      get() {\n        return `${this.firstName} ${this.lastName}`;\n      }\n\n      set(key, value) {\n        let [firstName, lastName] = value.split(' ');\n\n        set(this, 'firstName', firstName);\n        set(this, 'lastName', lastName);\n\n        return value;\n      }\n    })\n  });\n\n  let tom = Person.create({\n    firstName: 'Tom',\n    lastName: 'Dale'\n  });\n\n  tom.get('fullName') // 'Tom Dale'\n  ```\n\n  You can overwrite computed property without setters with a normal property (no\n  longer computed) that won't change if dependencies change. You can also mark\n  computed property as `.readOnly()` and block all attempts to set it.\n\n  ```javascript\n  import { computed, set } from '@ember/object';\n\n  class Person {\n    constructor(firstName, lastName) {\n      set(this, 'firstName', firstName);\n      set(this, 'lastName', lastName);\n    }\n\n    @computed('firstName', 'lastName').readOnly()\n    get fullName() {\n      return `${this.firstName} ${this.lastName}`;\n    }\n  });\n\n  let person = new Person();\n  person.set('fullName', 'Peter Wagenet'); // Uncaught Error: Cannot set read-only property \"fullName\" on object: <(...):emberXXX>\n  ```\n\n  Additional resources:\n  - [Decorators RFC](https://github.com/emberjs/rfcs/blob/master/text/0408-decorators.md)\n  - [New CP syntax RFC](https://github.com/emberjs/rfcs/blob/master/text/0011-improved-cp-syntax.md)\n  - [New computed syntax explained in \"Ember 1.12 released\" ](https://emberjs.com/blog/2015/05/13/ember-1-12-released.html#toc_new-computed-syntax)\n\n  @class ComputedProperty\n  @public\n*/\nclass ComputedProperty extends ComputedDescriptor {\n  constructor(args) {\n    super();\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_readOnly\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_hasConfig\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_getter\", undefined);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_setter\", undefined);\n    let maybeConfig = args[args.length - 1];\n    if (typeof maybeConfig === 'function' || maybeConfig !== null && typeof maybeConfig === 'object') {\n      this._hasConfig = true;\n      let config = args.pop();\n      if (typeof config === 'function') {\n         true && !!isClassicDecorator(config) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You attempted to pass a computed property instance to computed(). Computed property instances are decorator functions, and cannot be passed to computed() because they cannot be turned into decorators twice`, !isClassicDecorator(config));\n        this._getter = config;\n      } else {\n        const objectConfig = config;\n         true && !(typeof objectConfig === 'object' && !Array.isArray(objectConfig)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('computed expects a function or an object as last argument.', typeof objectConfig === 'object' && !Array.isArray(objectConfig));\n         true && !Object.keys(objectConfig).every(key => key === 'get' || key === 'set') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Config object passed to computed can only contain `get` and `set` keys.', Object.keys(objectConfig).every(key => key === 'get' || key === 'set'));\n         true && !(Boolean(objectConfig.get) || Boolean(objectConfig.set)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Computed properties must receive a getter or a setter, you passed none.', Boolean(objectConfig.get) || Boolean(objectConfig.set));\n        this._getter = objectConfig.get || noop;\n        this._setter = objectConfig.set;\n      }\n    }\n    if (args.length > 0) {\n      this._property(...args);\n    }\n  }\n  setup(obj, keyName, propertyDesc, meta) {\n    super.setup(obj, keyName, propertyDesc, meta);\n     true && !!(propertyDesc && typeof propertyDesc.value === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`@computed can only be used on accessors or fields, attempted to use it with ${keyName} but that was a method. Try converting it to a getter (e.g. \\`get ${keyName}() {}\\`)`, !(propertyDesc && typeof propertyDesc.value === 'function'));\n     true && !(!propertyDesc || !propertyDesc.initializer) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`@computed can only be used on empty fields. ${keyName} has an initial value (e.g. \\`${keyName} = someValue\\`)`, !propertyDesc || !propertyDesc.initializer);\n     true && !!(this._hasConfig && propertyDesc && (typeof propertyDesc.get === 'function' || typeof propertyDesc.set === 'function')) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Attempted to apply a computed property that already has a getter/setter to a ${keyName}, but it is a method or an accessor. If you passed @computed a function or getter/setter (e.g. \\`@computed({ get() { ... } })\\`), then it must be applied to a field`, !(this._hasConfig && propertyDesc && (typeof propertyDesc.get === 'function' || typeof propertyDesc.set === 'function')));\n    if (this._hasConfig === false) {\n       true && !(propertyDesc && (typeof propertyDesc.get === 'function' || typeof propertyDesc.set === 'function')) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Attempted to use @computed on ${keyName}, but it did not have a getter or a setter. You must either pass a get a function or getter/setter to @computed directly (e.g. \\`@computed({ get() { ... } })\\`) or apply @computed directly to a getter/setter`, propertyDesc && (typeof propertyDesc.get === 'function' || typeof propertyDesc.set === 'function'));\n      let {\n        get,\n        set\n      } = propertyDesc;\n      if (get !== undefined) {\n        this._getter = get;\n      }\n      if (set !== undefined) {\n        this._setter = function setterWrapper(_key, value) {\n          let ret = set.call(this, value);\n          if (get !== undefined) {\n            return typeof ret === 'undefined' ? get.call(this) : ret;\n          }\n          return ret;\n        };\n      }\n    }\n  }\n  _property(...passedArgs) {\n    let args = [];\n    function addArg(property) {\n       true && !(DEEP_EACH_REGEX.test(property) === false) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Dependent keys containing @each only work one level deep. ` + `You used the key \"${property}\" which is invalid. ` + `Please create an intermediary computed property or ` + `switch to using tracked properties.`, DEEP_EACH_REGEX.test(property) === false);\n      args.push(property);\n    }\n    for (let arg of passedArgs) {\n      expandProperties(arg, addArg);\n    }\n    this._dependentKeys = args;\n  }\n  get(obj, keyName) {\n    let meta$1 = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.meta)(obj);\n    let tagMeta = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagMetaFor)(obj);\n    let propertyTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(obj, keyName, tagMeta);\n    let ret;\n    let revision = meta$1.revisionFor(keyName);\n    if (revision !== undefined && (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.validateTag)(propertyTag, revision)) {\n      ret = meta$1.valueFor(keyName);\n    } else {\n      // For backwards compatibility, we only throw if the CP has any dependencies. CPs without dependencies\n      // should be allowed, even after the object has been destroyed, which is why we check _dependentKeys.\n       true && !(this._dependentKeys === undefined || !(0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(obj)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Attempted to access the computed ${obj}.${keyName} on a destroyed object, which is not allowed`, this._dependentKeys === undefined || !(0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(obj));\n      let {\n        _getter,\n        _dependentKeys\n      } = this;\n\n      // Create a tracker that absorbs any trackable actions inside the CP\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.untrack)(() => {\n        ret = _getter.call(obj, keyName);\n      });\n      if (_dependentKeys !== undefined) {\n        (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.updateTag)(propertyTag, getChainTagsForKeys(obj, _dependentKeys, tagMeta, meta$1));\n        if (true) {\n          _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.ALLOW_CYCLES.set(propertyTag, true);\n        }\n      }\n      meta$1.setValueFor(keyName, ret);\n      meta$1.setRevisionFor(keyName, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.valueForTag)(propertyTag));\n      finishLazyChains(meta$1, keyName, ret);\n    }\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.consumeTag)(propertyTag);\n\n    // Add the tag of the returned value if it is an array, since arrays\n    // should always cause updates if they are consumed and then changed\n    if (Array.isArray(ret)) {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(ret, '[]'));\n    }\n    return ret;\n  }\n  set(obj, keyName, value) {\n    if (this._readOnly) {\n      this._throwReadOnlyError(obj, keyName);\n    }\n     true && !(this._setter !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Cannot override the computed property \\`${keyName}\\` on ${(0,_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_9__.t)(obj)}.`, this._setter !== undefined);\n    let meta$1 = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.meta)(obj);\n\n    // ensure two way binding works when the component has defined a computed\n    // property with both a setter and dependent keys, in that scenario without\n    // the sync observer added below the caller's value will never be updated\n    //\n    // See GH#18147 / GH#19028 for details.\n    if (\n    // ensure that we only run this once, while the component is being instantiated\n    meta$1.isInitializing() && this._dependentKeys !== undefined && this._dependentKeys.length > 0 && typeof obj[PROPERTY_DID_CHANGE] === 'function' && obj.isComponent) {\n      // It's redundant to do this here, but we don't want to check above so we can avoid an extra function call in prod.\n       true && !hasPropertyDidChange(obj) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('property did change hook is invalid', hasPropertyDidChange(obj));\n      addObserver(obj, keyName, () => {\n        obj[PROPERTY_DID_CHANGE](keyName);\n      }, undefined, true);\n    }\n    let ret;\n    try {\n      beginPropertyChanges();\n      ret = this._set(obj, keyName, value, meta$1);\n      finishLazyChains(meta$1, keyName, ret);\n      let tagMeta = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagMetaFor)(obj);\n      let propertyTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(obj, keyName, tagMeta);\n      let {\n        _dependentKeys\n      } = this;\n      if (_dependentKeys !== undefined) {\n        (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.updateTag)(propertyTag, getChainTagsForKeys(obj, _dependentKeys, tagMeta, meta$1));\n        if (true) {\n          _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.ALLOW_CYCLES.set(propertyTag, true);\n        }\n      }\n      meta$1.setRevisionFor(keyName, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.valueForTag)(propertyTag));\n    } finally {\n      endPropertyChanges();\n    }\n    return ret;\n  }\n  _throwReadOnlyError(obj, keyName) {\n    throw new Error(`Cannot set read-only property \"${keyName}\" on object: ${(0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.b)(obj)}`);\n  }\n  _set(obj, keyName, value, meta) {\n    let hadCachedValue = meta.revisionFor(keyName) !== undefined;\n    let cachedValue = meta.valueFor(keyName);\n    let ret;\n    let {\n      _setter\n    } = this;\n    setObserverSuspended(obj, keyName, true);\n    try {\n      ret = _setter.call(obj, keyName, value, cachedValue);\n    } finally {\n      setObserverSuspended(obj, keyName, false);\n    }\n\n    // allows setter to return the same value that is cached already\n    if (hadCachedValue && cachedValue === ret) {\n      return ret;\n    }\n    meta.setValueFor(keyName, ret);\n    notifyPropertyChange(obj, keyName, meta, value);\n    return ret;\n  }\n\n  /* called before property is overridden */\n  teardown(obj, keyName, meta) {\n    if (meta.revisionFor(keyName) !== undefined) {\n      meta.setRevisionFor(keyName, undefined);\n      meta.setValueFor(keyName, undefined);\n    }\n    super.teardown(obj, keyName, meta);\n  }\n}\nclass AutoComputedProperty extends ComputedProperty {\n  get(obj, keyName) {\n    let meta$1 = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.meta)(obj);\n    let tagMeta = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagMetaFor)(obj);\n    let propertyTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(obj, keyName, tagMeta);\n    let ret;\n    let revision = meta$1.revisionFor(keyName);\n    if (revision !== undefined && (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.validateTag)(propertyTag, revision)) {\n      ret = meta$1.valueFor(keyName);\n    } else {\n       true && !!(0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(obj) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Attempted to access the computed ${obj}.${keyName} on a destroyed object, which is not allowed`, !(0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__.isDestroyed)(obj));\n      let {\n        _getter\n      } = this;\n\n      // Create a tracker that absorbs any trackable actions inside the CP\n      let tag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.track)(() => {\n        ret = _getter.call(obj, keyName);\n      });\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.updateTag)(propertyTag, tag);\n      meta$1.setValueFor(keyName, ret);\n      meta$1.setRevisionFor(keyName, (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.valueForTag)(propertyTag));\n      finishLazyChains(meta$1, keyName, ret);\n    }\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.consumeTag)(propertyTag);\n\n    // Add the tag of the returned value if it is an array, since arrays\n    // should always cause updates if they are consumed and then changed\n    if (Array.isArray(ret)) {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(ret, '[]', tagMeta));\n    }\n    return ret;\n  }\n}\n// TODO: This class can be svelted once `meta` has been deprecated\nclass ComputedDecoratorImpl extends Function {\n  /**\n    Call on a computed property to set it into read-only mode. When in this\n    mode the computed property will throw an error when set.\n     Example:\n     ```javascript\n    import { computed, set } from '@ember/object';\n     class Person {\n      @computed().readOnly()\n      get guid() {\n        return 'guid-guid-guid';\n      }\n    }\n     let person = new Person();\n    set(person, 'guid', 'new-guid'); // will throw an exception\n    ```\n     Classic Class Example:\n     ```javascript\n    import EmberObject, { computed } from '@ember/object';\n     let Person = EmberObject.extend({\n      guid: computed(function() {\n        return 'guid-guid-guid';\n      }).readOnly()\n    });\n     let person = Person.create();\n    person.set('guid', 'new-guid'); // will throw an exception\n    ```\n     @method readOnly\n    @return {ComputedProperty} this\n    @chainable\n    @public\n  */\n  readOnly() {\n    let desc = descriptorForDecorator(this);\n     true && !!(desc._setter && desc._setter !== desc._getter) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Computed properties that define a setter using the new syntax cannot be read-only', !(desc._setter && desc._setter !== desc._getter));\n    desc._readOnly = true;\n    return this;\n  }\n\n  /**\n    In some cases, you may want to annotate computed properties with additional\n    metadata about how they function or what values they operate on. For example,\n    computed property functions may close over variables that are then no longer\n    available for introspection. You can pass a hash of these values to a\n    computed property.\n     Example:\n     ```javascript\n    import { computed } from '@ember/object';\n    import Person from 'my-app/utils/person';\n     class Store {\n      @computed().meta({ type: Person })\n      get person() {\n        let personId = this.personId;\n        return Person.create({ id: personId });\n      }\n    }\n    ```\n     Classic Class Example:\n     ```javascript\n    import { computed } from '@ember/object';\n    import Person from 'my-app/utils/person';\n     const Store = EmberObject.extend({\n      person: computed(function() {\n        let personId = this.get('personId');\n        return Person.create({ id: personId });\n      }).meta({ type: Person })\n    });\n    ```\n     The hash that you pass to the `meta()` function will be saved on the\n    computed property descriptor under the `_meta` key. Ember runtime\n    exposes a public API for retrieving these values from classes,\n    via the `metaForProperty()` function.\n     @method meta\n    @param {Object} meta\n    @chainable\n    @public\n  */\n\n  meta(meta) {\n    let prop = descriptorForDecorator(this);\n    if (arguments.length === 0) {\n      return prop._meta || {};\n    } else {\n      prop._meta = meta;\n      return this;\n    }\n  }\n\n  // TODO: Remove this when we can provide alternatives in the ecosystem to\n  // addons such as ember-macro-helpers that use it.\n  /** @internal */\n  get _getter() {\n    return descriptorForDecorator(this)._getter;\n  }\n\n  // TODO: Refactor this, this is an internal API only\n  /** @internal */\n  set enumerable(value) {\n    descriptorForDecorator(this).enumerable = value;\n  }\n}\n\n/**\n  This helper returns a new property descriptor that wraps the passed\n  computed property function. You can use this helper to define properties with\n  native decorator syntax, mixins, or via `defineProperty()`.\n\n  Example:\n\n  ```js\n  import { computed, set } from '@ember/object';\n\n  class Person {\n    constructor() {\n      this.firstName = 'Betty';\n      this.lastName = 'Jones';\n    },\n\n    @computed('firstName', 'lastName')\n    get fullName() {\n      return `${this.firstName} ${this.lastName}`;\n    }\n  }\n\n  let client = new Person();\n\n  client.fullName; // 'Betty Jones'\n\n  set(client, 'lastName', 'Fuller');\n  client.fullName; // 'Betty Fuller'\n  ```\n\n  Classic Class Example:\n\n  ```js\n  import EmberObject, { computed } from '@ember/object';\n\n  let Person = EmberObject.extend({\n    init() {\n      this._super(...arguments);\n\n      this.firstName = 'Betty';\n      this.lastName = 'Jones';\n    },\n\n    fullName: computed('firstName', 'lastName', function() {\n      return `${this.get('firstName')} ${this.get('lastName')}`;\n    })\n  });\n\n  let client = Person.create();\n\n  client.get('fullName'); // 'Betty Jones'\n\n  client.set('lastName', 'Fuller');\n  client.get('fullName'); // 'Betty Fuller'\n  ```\n\n  You can also provide a setter, either directly on the class using native class\n  syntax, or by passing a hash with `get` and `set` functions.\n\n  Example:\n\n  ```js\n  import { computed, set } from '@ember/object';\n\n  class Person {\n    constructor() {\n      this.firstName = 'Betty';\n      this.lastName = 'Jones';\n    },\n\n    @computed('firstName', 'lastName')\n    get fullName() {\n      return `${this.firstName} ${this.lastName}`;\n    }\n\n    set fullName(value) {\n      let [firstName, lastName] = value.split(/\\s+/);\n\n      set(this, 'firstName', firstName);\n      set(this, 'lastName', lastName);\n\n      return value;\n    }\n  }\n\n  let client = new Person();\n\n  client.fullName; // 'Betty Jones'\n\n  set(client, 'lastName', 'Fuller');\n  client.fullName; // 'Betty Fuller'\n  ```\n\n  Classic Class Example:\n\n  ```js\n  import EmberObject, { computed } from '@ember/object';\n\n  let Person = EmberObject.extend({\n    init() {\n      this._super(...arguments);\n\n      this.firstName = 'Betty';\n      this.lastName = 'Jones';\n    },\n\n    fullName: computed('firstName', 'lastName', {\n      get(key) {\n        return `${this.get('firstName')} ${this.get('lastName')}`;\n      },\n      set(key, value) {\n        let [firstName, lastName] = value.split(/\\s+/);\n        this.setProperties({ firstName, lastName });\n        return value;\n      }\n    })\n  });\n\n  let client = Person.create();\n  client.get('firstName'); // 'Betty'\n\n  client.set('fullName', 'Carroll Fuller');\n  client.get('firstName'); // 'Carroll'\n  ```\n\n  When passed as an argument, the `set` function should accept two parameters,\n  `key` and `value`. The value returned from `set` will be the new value of the\n  property.\n\n  _Note: This is the preferred way to define computed properties when writing third-party\n  libraries that depend on or use Ember, since there is no guarantee that the user\n  will have [prototype Extensions](https://guides.emberjs.com/release/configuring-ember/disabling-prototype-extensions/) enabled._\n\n  @method computed\n  @for @ember/object\n  @static\n  @param {String} [dependentKeys*] Optional dependent keys that trigger this computed property.\n  @param {Function} func The computed property function.\n  @return {ComputedDecorator} property decorator instance\n  @public\n*/\n// @computed without parens or computed with descriptor args\n\n// @computed with keys only\n\n// @computed with keys and config\n\n// @computed with config only\n\nfunction computed(...args) {\n   true && !!(isElementDescriptor(args.slice(0, 3)) && args.length === 5 && args[4] === true) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`@computed can only be used directly as a native decorator. If you're using tracked in classic classes, add parenthesis to call it like a function: computed()`, !(isElementDescriptor(args.slice(0, 3)) && args.length === 5 && args[4] === true));\n  if (isElementDescriptor(args)) {\n    // SAFETY: We passed in the impl for this class\n    let decorator = makeComputedDecorator(new ComputedProperty([]), ComputedDecoratorImpl);\n    return decorator(args[0], args[1], args[2]);\n  }\n\n  // SAFETY: We passed in the impl for this class\n  return makeComputedDecorator(new ComputedProperty(args), ComputedDecoratorImpl);\n}\nfunction autoComputed(...config) {\n  // SAFETY: We passed in the impl for this class\n  return makeComputedDecorator(new AutoComputedProperty(config), ComputedDecoratorImpl);\n}\n\n/**\n  Allows checking if a given property on an object is a computed property. For the most part,\n  this doesn't matter (you would normally just access the property directly and use its value),\n  but for some tooling specific scenarios (e.g. the ember-inspector) it is important to\n  differentiate if a property is a computed property or a \"normal\" property.\n\n  This will work on either a class's prototype or an instance itself.\n\n  @static\n  @method isComputed\n  @for @ember/debug\n  @private\n */\nfunction isComputed(obj, key) {\n  return Boolean(descriptorForProperty(obj, key));\n}\n\n/**\n@module @ember/object\n*/\n\nfunction defineProperty(obj, keyName, desc, data, _meta) {\n  let meta$1 = _meta === undefined ? (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.meta)(obj) : _meta;\n  let previousDesc = descriptorForProperty(obj, keyName, meta$1);\n  let wasDescriptor = previousDesc !== undefined;\n  if (wasDescriptor) {\n    previousDesc.teardown(obj, keyName, meta$1);\n  }\n  if (isClassicDecorator(desc)) {\n    defineDecorator(obj, keyName, desc, meta$1);\n  } else if (desc === null || desc === undefined) {\n    defineValue(obj, keyName, data, wasDescriptor, true);\n  } else {\n    // fallback to ES5\n    Object.defineProperty(obj, keyName, desc);\n  }\n\n  // if key is being watched, override chains that\n  // were initialized with the prototype\n  if (!meta$1.isPrototypeMeta(obj)) {\n    revalidateObservers(obj);\n  }\n}\nfunction defineDecorator(obj, keyName, desc, meta) {\n  let propertyDesc;\n  if (true) {\n    propertyDesc = desc(obj, keyName, undefined, meta, true);\n  } else {}\n  Object.defineProperty(obj, keyName, propertyDesc);\n\n  // pass the decorator function forward for backwards compat\n  return desc;\n}\nfunction defineValue(obj, keyName, value, wasDescriptor, enumerable = true) {\n  if (wasDescriptor === true || enumerable === false) {\n    Object.defineProperty(obj, keyName, {\n      configurable: true,\n      enumerable,\n      writable: true,\n      value\n    });\n  } else {\n    if (true) {\n      (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__.h)(obj, keyName, value);\n    } else {}\n  }\n  return value;\n}\nconst firstDotIndexCache = new _cache_qDyqAcpg_js__WEBPACK_IMPORTED_MODULE_12__.C(1000, key => key.indexOf('.'));\nfunction isPath(path) {\n  return typeof path === 'string' && firstDotIndexCache.get(path) !== -1;\n}\n\n/**\n@module @ember/object\n*/\n\nconst PROXY_CONTENT = (0,_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_9__.s)('PROXY_CONTENT');\nlet getPossibleMandatoryProxyValue;\nif (true) {\n  getPossibleMandatoryProxyValue = function getPossibleMandatoryProxyValue(obj, keyName) {\n    let content = obj[PROXY_CONTENT];\n    if (content === undefined) {\n      return obj[keyName];\n    } else {\n      /* global Reflect */\n      return Reflect.get(content, keyName, obj);\n    }\n  };\n}\nfunction hasUnknownProperty(val) {\n  return typeof val === 'object' && val !== null && typeof val.unknownProperty === 'function';\n}\n\n// ..........................................................\n// GET AND SET\n//\n// If we are on a platform that supports accessors we can use those.\n// Otherwise simulate accessors by looking up the property directly on the\n// object.\n\n/**\n  Gets the value of a property on an object. If the property is computed,\n  the function will be invoked. If the property is not defined but the\n  object implements the `unknownProperty` method then that will be invoked.\n\n  ```javascript\n  import { get } from '@ember/object';\n  get(obj, \"name\");\n  ```\n\n  If you plan to run on IE8 and older browsers then you should use this\n  method anytime you want to retrieve a property on an object that you don't\n  know for sure is private. (Properties beginning with an underscore '_'\n  are considered private.)\n\n  On all newer browsers, you only need to use this method to retrieve\n  properties if the property might not be defined on the object and you want\n  to respect the `unknownProperty` handler. Otherwise you can ignore this\n  method.\n\n  Note that if the object itself is `undefined`, this method will throw\n  an error.\n\n  @method get\n  @for @ember/object\n  @static\n  @param {Object} obj The object to retrieve from.\n  @param {String} keyName The property key to retrieve\n  @return {Object} the property value or `null`.\n  @public\n*/\n\nfunction get(obj, keyName) {\n   true && !(arguments.length === 2) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Get must be called with two arguments; an object and a property key`, arguments.length === 2);\n   true && !(obj !== undefined && obj !== null) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Cannot call get with '${keyName}' on an undefined object.`, obj !== undefined && obj !== null);\n   true && !(typeof keyName === 'string' || typeof keyName === 'number' && !isNaN(keyName)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The key provided to get must be a string or number, you passed ${keyName}`, typeof keyName === 'string' || typeof keyName === 'number' && !isNaN(keyName));\n   true && !(typeof keyName !== 'string' || keyName.lastIndexOf('this.', 0) !== 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`'this' in paths is not supported`, typeof keyName !== 'string' || keyName.lastIndexOf('this.', 0) !== 0);\n  return isPath(keyName) ? _getPath(obj, keyName) : _getProp(obj, keyName);\n}\nfunction _getProp(obj, keyName) {\n  if (obj == null) {\n    return;\n  }\n  let value;\n  if (typeof obj === 'object' || typeof obj === 'function') {\n    if (true) {\n      value = getPossibleMandatoryProxyValue(obj, keyName);\n    } else {}\n    if (value === undefined && typeof obj === 'object' && !(keyName in obj) && hasUnknownProperty(obj)) {\n      value = obj.unknownProperty(keyName);\n    }\n    if ((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.isTracking)()) {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(obj, keyName));\n      if (Array.isArray(value) || (0,_ember_array_internals_js__WEBPACK_IMPORTED_MODULE_11__.isEmberArray)(value)) {\n        // Add the tag of the returned value if it is an array, since arrays\n        // should always cause updates if they are consumed and then changed\n        (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(value, '[]'));\n      }\n    }\n  } else {\n    // SAFETY: It should be ok to access properties on any non-nullish value\n    value = obj[keyName];\n  }\n  return value;\n}\nfunction _getPath(obj, path, forSet) {\n  let parts = typeof path === 'string' ? path.split('.') : path;\n  for (let part of parts) {\n    if (obj === undefined || obj === null || obj.isDestroyed) {\n      return undefined;\n    }\n    if (forSet && (part === '__proto__' || part === 'constructor')) {\n      return;\n    }\n    obj = _getProp(obj, part);\n  }\n  return obj;\n}\n\n// Warm it up\n_getProp('foo', 'a');\n_getProp('foo', 1);\n_getProp({}, 'a');\n_getProp({}, 1);\n_getProp({\n  unknownProperty() {}\n}, 'a');\n_getProp({\n  unknownProperty() {}\n}, 1);\nget({}, 'foo');\nget({}, 'foo.bar');\nlet fakeProxy = {};\n(0,_is_proxy_Dmis_70B_js__WEBPACK_IMPORTED_MODULE_10__.s)(fakeProxy);\n(0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.track)(() => _getProp({}, 'a'));\n(0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.track)(() => _getProp({}, 1));\n(0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.track)(() => _getProp({\n  a: []\n}, 'a'));\n(0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.track)(() => _getProp({\n  a: fakeProxy\n}, 'a'));\n\n/**\n @module ember\n*/\n/**\n  Helper class that allows you to register your library with Ember.\n\n  Singleton created at `Ember.libraries`.\n\n  @class Libraries\n  @constructor\n  @private\n*/\nclass Libraries {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_registry\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_coreLibIndex\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isRegistered\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"logVersions\", void 0);\n    this._registry = [];\n    this._coreLibIndex = 0;\n  }\n  _getLibraryByName(name) {\n    let libs = this._registry;\n    for (let lib of libs) {\n      if (lib.name === name) {\n        return lib;\n      }\n    }\n    return undefined;\n  }\n  register(name, version, isCoreLibrary) {\n    let index = this._registry.length;\n    if (!this._getLibraryByName(name)) {\n      if (isCoreLibrary) {\n        index = this._coreLibIndex++;\n      }\n      this._registry.splice(index, 0, {\n        name,\n        version\n      });\n    } else {\n       true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.w)(`Library \"${name}\" is already registered with Ember.`, false, {\n        id: 'ember-metal.libraries-register'\n      });\n    }\n  }\n  registerCoreLibrary(name, version) {\n    this.register(name, version, true);\n  }\n  deRegister(name) {\n    let lib = this._getLibraryByName(name);\n    let index;\n    if (lib) {\n      index = this._registry.indexOf(lib);\n      this._registry.splice(index, 1);\n    }\n  }\n}\nif (true) {\n  Libraries.prototype.logVersions = function () {\n    let libs = this._registry;\n    let nameLengths = libs.map(item => get(item, 'name.length'));\n     true && !(nameLengths instanceof Array && nameLengths.every(n => typeof n === 'number')) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('nameLengths is number array', nameLengths instanceof Array && nameLengths.every(n => typeof n === 'number'));\n    let maxNameLength = Math.max.apply(null, nameLengths);\n    (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.c)('-------------------------------');\n    for (let lib of libs) {\n      let spaces = new Array(maxNameLength - lib.name.length + 1).join(' ');\n      (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.c)([lib.name, spaces, ' : ', lib.version].join(''));\n    }\n    (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.c)('-------------------------------');\n  };\n}\nconst LIBRARIES = new Libraries();\nLIBRARIES.registerCoreLibrary('Ember', _ember_version_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]);\nlet DEBUG_INJECTION_FUNCTIONS;\nif (true) {\n  DEBUG_INJECTION_FUNCTIONS = new WeakMap();\n}\n\n/**\n @module ember\n @private\n */\n\n/**\n  Read-only property that returns the result of a container lookup.\n\n  @class InjectedProperty\n  @namespace Ember\n  @constructor\n  @param {String} type The container type the property will lookup\n  @param {String} nameOrDesc (optional) The name the property will lookup, defaults\n         to the property's name\n  @private\n*/\n// Decorator factory (with args)\n// (Also matches non-decorator form, types may be incorrect for this.)\n\n// Non-decorator\n\n// Decorator (without args)\n\n// Catch-all for service and controller injections\n\nfunction inject(type, ...args) {\n   true && !(typeof type === 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('a string type must be provided to inject', typeof type === 'string');\n  let elementDescriptor;\n  let name;\n  if (isElementDescriptor(args)) {\n    elementDescriptor = args;\n  } else if (typeof args[0] === 'string') {\n    name = args[0];\n  }\n  let getInjection = function (propertyName) {\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_14__.getOwner)(this) || this.container; // fallback to `container` for backwards compat\n     true && !Boolean(owner) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Attempting to lookup an injected property on an object without a container, ensure that the object was instantiated via a container.`, Boolean(owner));\n    return owner.lookup(`${type}:${name || propertyName}`);\n  };\n  if (true) {\n    DEBUG_INJECTION_FUNCTIONS.set(getInjection, {\n      type,\n      name\n    });\n  }\n  let decorator = computed({\n    get: getInjection,\n    set(keyName, value) {\n      defineProperty(this, keyName, null, value);\n    }\n  });\n  if (elementDescriptor) {\n    return decorator(elementDescriptor[0], elementDescriptor[1], elementDescriptor[2]);\n  } else {\n    return decorator;\n  }\n}\nfunction tracked(...args) {\n   true && !!(isElementDescriptor(args.slice(0, 3)) && args.length === 5 && args[4] === true) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`@tracked can only be used directly as a native decorator. If you're using tracked in classic classes, add parenthesis to call it like a function: tracked()`, !(isElementDescriptor(args.slice(0, 3)) && args.length === 5 && args[4] === true));\n  if (!isElementDescriptor(args)) {\n    let propertyDesc = args[0];\n     true && !(args.length === 0 || typeof propertyDesc === 'object' && propertyDesc !== null) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`tracked() may only receive an options object containing 'value' or 'initializer', received ${propertyDesc}`, args.length === 0 || typeof propertyDesc === 'object' && propertyDesc !== null);\n    if ( true && propertyDesc) {\n      let keys = Object.keys(propertyDesc);\n       true && !(keys.length <= 1 && (keys[0] === undefined || keys[0] === 'value' || keys[0] === 'initializer')) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The options object passed to tracked() may only contain a 'value' or 'initializer' property, not both. Received: [${keys}]`, keys.length <= 1 && (keys[0] === undefined || keys[0] === 'value' || keys[0] === 'initializer'));\n       true && !(!('initializer' in propertyDesc) || typeof propertyDesc.initializer === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The initializer passed to tracked must be a function. Received ${propertyDesc.initializer}`, !('initializer' in propertyDesc) || typeof propertyDesc.initializer === 'function');\n    }\n    let initializer = propertyDesc ? propertyDesc.initializer : undefined;\n    let value = propertyDesc ? propertyDesc.value : undefined;\n    let decorator = function (target, key, _desc, _meta, isClassicDecorator) {\n       true && !isClassicDecorator && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You attempted to set a default value for ${key} with the @tracked({ value: 'default' }) syntax. You can only use this syntax with classic classes. For native classes, you can use class initializers: @tracked field = 'default';`, isClassicDecorator);\n      let fieldDesc = {\n        initializer: initializer || (() => value)\n      };\n      return descriptorForField([target, key, fieldDesc]);\n    };\n    setClassicDecorator(decorator);\n    return decorator;\n  }\n  return descriptorForField(args);\n}\nif (true) {\n  // Normally this isn't a classic decorator, but we want to throw a helpful\n  // error in development so we need it to treat it like one\n  setClassicDecorator(tracked);\n}\nfunction descriptorForField([target, key, desc]) {\n   true && !(!desc || !desc.value && !desc.get && !desc.set) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You attempted to use @tracked on ${key}, but that element is not a class field. @tracked is only usable on class fields. Native getters and setters will autotrack add any tracked fields they encounter, so there is no need mark getters and setters with @tracked.`, !desc || !desc.value && !desc.get && !desc.set);\n  let {\n    getter,\n    setter\n  } = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.trackedData)(key, desc ? desc.initializer : undefined);\n  function get() {\n    let value = getter(this);\n\n    // Add the tag of the returned value if it is an array, since arrays\n    // should always cause updates if they are consumed and then changed\n    if (Array.isArray(value) || (0,_ember_array_internals_js__WEBPACK_IMPORTED_MODULE_11__.isEmberArray)(value)) {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.tagFor)(value, '[]'));\n    }\n    return value;\n  }\n  function set(newValue) {\n    setter(this, newValue);\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__.dirtyTagFor)(this, SELF_TAG);\n  }\n  let newDesc = {\n    enumerable: true,\n    configurable: true,\n    isTracked: true,\n    get,\n    set\n  };\n  COMPUTED_SETTERS.add(set);\n  (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__.meta)(target).writeDescriptors(key, new TrackedDescriptor(get, set));\n  return newDesc;\n}\nclass TrackedDescriptor {\n  constructor(_get, _set) {\n    this._get = _get;\n    this._set = _set;\n    CHAIN_PASS_THROUGH.add(this);\n  }\n  get(obj) {\n    return this._get.call(obj);\n  }\n  set(obj, _key, value) {\n    this._set.call(obj, value);\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-qDyqAcpg.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-qDyqAcpg.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ Cache)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nclass Cache {\n  constructor(limit, func, store = new Map()) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"size\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"misses\", 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"hits\", 0);\n    this.limit = limit;\n    this.func = func;\n    this.store = store;\n  }\n  get(key) {\n    if (this.store.has(key)) {\n      this.hits++;\n      // SAFETY: we know the value is present because `.has(key)` was `true`.\n      return this.store.get(key);\n    } else {\n      this.misses++;\n      return this.set(key, this.func(key));\n    }\n  }\n  set(key, value) {\n    if (this.limit > this.size) {\n      this.size++;\n      this.store.set(key, value);\n    }\n    return value;\n  }\n  purge() {\n    this.store.clear();\n    this.size = 0;\n    this.hits = 0;\n    this.misses = 0;\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-qDyqAcpg.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/computed_cache-DmYKevAP.js":
/*!**********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/computed_cache-DmYKevAP.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getCachedValueFor)\n/* harmony export */ });\n/* harmony import */ var _ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../@ember/-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n\nfunction getCachedValueFor(obj, key) {\n  let meta = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_0__.peekMeta)(obj);\n  if (meta) {\n    return meta.valueFor(key);\n  } else {\n    return undefined;\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/computed_cache-DmYKevAP.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/core_view-Cxne2_wu.js":
/*!*****************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/core_view-Cxne2_wu.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ CoreView),\n/* harmony export */   a: () => (/* binding */ decorateMethodV2),\n/* harmony export */   d: () => (/* binding */ decorateFieldV2),\n/* harmony export */   i: () => (/* binding */ initializeDeferredDecorator)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../@ember/-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/registry_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/container_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/comparable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/action_handler.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/-proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js\");\n/* harmony import */ var _ember_enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../@ember/enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/target_action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js\");\n/* harmony import */ var _ember_internals_runtime_lib_ext_rsvp_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/ext/rsvp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js\");\n/* harmony import */ var _ember_object_evented_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../@ember/object/evented.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/evented.js\");\n/* harmony import */ var _ember_object_internals_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../@ember/object/-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/-internals.js\");\n/* harmony import */ var _ember_internals_views_lib_views_states_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../@ember/-internals/views/lib/views/states.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/views/states.js\");\n\nvar _CoreView;\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\n// src/runtime.ts\nvar runtime_exports = {};\n__export(runtime_exports, {\n  c: () => decorateClass,\n  f: () => decorateFieldV1,\n  g: () => decorateFieldV2,\n  i: () => initializeDeferredDecorator,\n  m: () => decorateMethodV1,\n  n: () => decorateMethodV2,\n  p: () => decoratePOJO\n});\nvar deferred = /* @__PURE__ */new WeakMap();\nfunction deferDecorator(proto, prop, desc) {\n  let map = deferred.get(proto);\n  if (!map) {\n    map = /* @__PURE__ */new Map();\n    deferred.set(proto, map);\n  }\n  map.set(prop, desc);\n}\nfunction findDeferredDecorator(target, prop) {\n  let cursor = target.prototype;\n  while (cursor) {\n    let desc = deferred.get(cursor)?.get(prop);\n    if (desc) {\n      return desc;\n    }\n    cursor = cursor.prototype;\n  }\n}\nfunction decorateFieldV1(target, prop, decorators, initializer) {\n  return decorateFieldV2(target.prototype, prop, decorators, initializer);\n}\nfunction decorateFieldV2(prototype, prop, decorators, initializer) {\n  let desc = {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    initializer: null\n  };\n  if (initializer) {\n    desc.initializer = initializer;\n  }\n  for (let decorator of decorators) {\n    desc = decorator(prototype, prop, desc) || desc;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(prototype, prop, desc);\n  } else {\n    deferDecorator(prototype, prop, desc);\n  }\n}\nfunction decorateMethodV1({\n  prototype\n}, prop, decorators) {\n  return decorateMethodV2(prototype, prop, decorators);\n}\nfunction decorateMethodV2(prototype, prop, decorators) {\n  const origDesc = Object.getOwnPropertyDescriptor(prototype, prop);\n  let desc = {\n    ...origDesc\n  };\n  for (let decorator of decorators) {\n    desc = decorator(prototype, prop, desc) || desc;\n  }\n  if (desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(prototype) : void 0;\n    desc.initializer = void 0;\n  }\n  Object.defineProperty(prototype, prop, desc);\n}\nfunction initializeDeferredDecorator(target, prop) {\n  let desc = findDeferredDecorator(target.constructor, prop);\n  if (desc) {\n    Object.defineProperty(target, prop, {\n      enumerable: desc.enumerable,\n      configurable: desc.configurable,\n      writable: desc.writable,\n      value: desc.initializer ? desc.initializer.call(target) : void 0\n    });\n  }\n}\nfunction decorateClass(target, decorators) {\n  return decorators.reduce((accum, decorator) => decorator(accum) || accum, target);\n}\nfunction decoratePOJO(pojo, decorated) {\n  for (let [type, prop, decorators] of decorated) {\n    if (type === \"field\") {\n      decoratePojoField(pojo, prop, decorators);\n    } else {\n      decorateMethodV2(pojo, prop, decorators);\n    }\n  }\n  return pojo;\n}\nfunction decoratePojoField(pojo, prop, decorators) {\n  let desc = {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    initializer: () => Object.getOwnPropertyDescriptor(pojo, prop)?.value\n  };\n  for (let decorator of decorators) {\n    desc = decorator(pojo, prop, desc) || desc;\n  }\n  if (desc.initializer) {\n    desc.value = desc.initializer.call(pojo);\n    delete desc.initializer;\n  }\n  Object.defineProperty(pojo, prop, desc);\n}\nvar _renderer = /*#__PURE__*/new WeakMap();\nclass CoreView extends _ember_object_internals_js__WEBPACK_IMPORTED_MODULE_18__.FrameworkObject.extend(_ember_object_evented_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"], _ember_internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]) {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isView\", true);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_superTrigger\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_superHas\", void 0);\n    _classPrivateFieldInitSpec(this, _renderer, (initializeDeferredDecorator(this, \"renderer\"), void 0));\n  }\n  /**\n    If the view is currently inserted into the DOM of a parent view, this\n    property will point to the parent of the view.\n     @property parentView\n    @type Ember.View\n    @default null\n    @private\n  */\n\n  init(properties) {\n    super.init(properties);\n\n    // Handle methods from Evented\n    // The native class inheritance will not work for mixins. To work around this,\n    // we copy the existing trigger and has methods provided by the mixin and swap in the\n    // new ones from our class.\n    this._superTrigger = this.trigger;\n    this.trigger = this._trigger;\n    this._superHas = this.has;\n    this.has = this._has;\n    this.parentView ??= null;\n    this._state = 'preRender';\n    this._currentState = this._states.preRender;\n  }\n  instrumentDetails(hash) {\n    hash['object'] = this.toString();\n    hash['containerKey'] = this._debugContainerKey;\n    hash['view'] = this;\n    return hash;\n  }\n\n  /**\n    Override the default event firing from `Evented` to\n    also call methods with the given name.\n     @method trigger\n    @param name {String}\n    @private\n  */\n  // Changed to `trigger` on init\n  _trigger(name, ...args) {\n    this._superTrigger(name, ...args);\n    let method = this[name];\n    if (typeof method === 'function') {\n      return method.apply(this, args);\n    }\n  }\n\n  // Changed to `has` on init\n  _has(name) {\n    return typeof this[name] === 'function' || this._superHas(name);\n  }\n}\n\n// Declare on the prototype to have a single shared value.\n_CoreView = CoreView;\ndecorateFieldV2(_CoreView.prototype, \"renderer\", [(0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_6__.f)('renderer', '-dom')]);\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(CoreView, \"isViewFactory\", true);\nCoreView.prototype._states = _ember_internals_views_lib_views_states_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"];\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/core_view-Cxne2_wu.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/dictionary-gc5gpyOG.js":
/*!******************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/dictionary-gc5gpyOG.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   m: () => (/* binding */ makeDictionary)\n/* harmony export */ });\n// the delete is meant to hint at runtimes that this object should remain in\n// dictionary mode. This is clearly a runtime specific hack, but currently it\n// appears worthwhile in some usecases. Please note, these deletes do increase\n// the cost of creation dramatically over a plain Object.create. And as this\n// only makes sense for long-lived dictionaries that aren't instantiated often.\nfunction makeDictionary(parent) {\n  let dict = Object.create(parent);\n  dict['_dict'] = null;\n  delete dict['_dict'];\n  return dict;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/dictionary-gc5gpyOG.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   E: () => (/* binding */ ENV),\n/* harmony export */   a: () => (/* binding */ getLookup),\n/* harmony export */   b: () => (/* binding */ getENV),\n/* harmony export */   c: () => (/* binding */ context),\n/* harmony export */   g: () => (/* binding */ global$1),\n/* harmony export */   s: () => (/* binding */ setLookup)\n/* harmony export */ });\n/* globals window, self */\n\n// from lodash to catch fake globals\nfunction checkGlobal(value) {\n  return value && value.Object === Object ? value : undefined;\n}\n\n// element ids can ruin global miss checks\nfunction checkElementIdShadowing(value) {\n  return value && value.nodeType === undefined ? value : undefined;\n}\n// export real global\nconst global$1 = checkGlobal(checkElementIdShadowing(typeof global === 'object' && global)) || checkGlobal(typeof self === 'object' && self) || checkGlobal(typeof window === 'object' && window) || typeof mainContext !== 'undefined' && mainContext ||\n// set before strict mode in Ember loader/wrapper\nnew Function('return this')(); // eval outside of strict mode\n\n// legacy imports/exports/lookup stuff (should we keep this??)\nconst context = function (global, Ember) {\n  return Ember === undefined ? {\n    imports: global,\n    exports: global,\n    lookup: global\n  } : {\n    // import jQuery\n    imports: Ember.imports || global,\n    // export Ember\n    exports: Ember.exports || global,\n    // search for Namespaces\n    lookup: Ember.lookup || global\n  };\n}(global$1, global$1.Ember);\nfunction getLookup() {\n  return context.lookup;\n}\nfunction setLookup(value) {\n  context.lookup = value;\n}\nconst ENV = {\n  ENABLE_OPTIONAL_FEATURES: false,\n  /**\n    Determines whether Ember should add to `Array`\n    native object prototypes, a few extra methods in order to provide a more\n    friendly API.\n     We generally recommend leaving this option set to true however, if you need\n    to turn it off, you can add the configuration property\n    `EXTEND_PROTOTYPES` to `EmberENV` and set it to `false`.\n     Note, when disabled (the default configuration for Ember Addons), you will\n    instead have to access all methods and functions from the Ember\n    namespace.\n     @property EXTEND_PROTOTYPES\n    @type Boolean\n    @default true\n    @for EmberENV\n    @public\n  */\n  EXTEND_PROTOTYPES: {\n    Array: true\n  },\n  /**\n    The `LOG_STACKTRACE_ON_DEPRECATION` property, when true, tells Ember to log\n    a full stack trace during deprecation warnings.\n     @property LOG_STACKTRACE_ON_DEPRECATION\n    @type Boolean\n    @default true\n    @for EmberENV\n    @public\n  */\n  LOG_STACKTRACE_ON_DEPRECATION: true,\n  /**\n    The `LOG_VERSION` property, when true, tells Ember to log versions of all\n    dependent libraries in use.\n     @property LOG_VERSION\n    @type Boolean\n    @default true\n    @for EmberENV\n    @public\n  */\n  LOG_VERSION: true,\n  RAISE_ON_DEPRECATION: false,\n  STRUCTURED_PROFILE: false,\n  /**\n    Whether to perform extra bookkeeping needed to make the `captureRenderTree`\n    API work.\n     This has to be set before the ember JavaScript code is evaluated. This is\n    usually done by setting `window.EmberENV = { _DEBUG_RENDER_TREE: true };`\n    before the \"vendor\" `<script>` tag in `index.html`.\n     Setting the flag after Ember is already loaded will not work correctly. It\n    may appear to work somewhat, but fundamentally broken.\n     This is not intended to be set directly. Ember Inspector will enable the\n    flag on behalf of the user as needed.\n     This flag is always on in development mode.\n     The flag is off by default in production mode, due to the cost associated\n    with the the bookkeeping work.\n     The expected flow is that Ember Inspector will ask the user to refresh the\n    page after enabling the feature. It could also offer a feature where the\n    user add some domains to the \"always on\" list. In either case, Ember\n    Inspector will inject the code on the page to set the flag if needed.\n     @property _DEBUG_RENDER_TREE\n    @for EmberENV\n    @type Boolean\n    @default false\n    @private\n  */\n  _DEBUG_RENDER_TREE: true,\n  /**\n   Whether to force all deprecations to be enabled. This is used internally by\n   Ember to enable deprecations in tests. It is not intended to be set in\n   projects.\n    @property _ALL_DEPRECATIONS_ENABLED\n   @for EmberENV\n   @type Boolean\n   @default false\n   @private\n   */\n  _ALL_DEPRECATIONS_ENABLED: false,\n  /**\n   Override the version of ember-source used to determine when deprecations \"break\".\n   This is used internally by Ember to test with deprecated features \"removed\".\n   This is never intended to be set by projects.\n   @property _OVERRIDE_DEPRECATION_VERSION\n   @for EmberENV\n   @type string | null\n   @default null\n   @private\n   */\n  _OVERRIDE_DEPRECATION_VERSION: null,\n  /**\n    Whether the app defaults to using async observers.\n     This is not intended to be set directly, as the implementation may change in\n    the future. Use `@ember/optional-features` instead.\n     @property _DEFAULT_ASYNC_OBSERVERS\n    @for EmberENV\n    @type Boolean\n    @default false\n    @private\n  */\n  _DEFAULT_ASYNC_OBSERVERS: false,\n  /**\n   Whether the app still has default record-loading behavior in the model\n   hook from RFC https://rfcs.emberjs.com/id/0774-implicit-record-route-loading\n   This will also remove the default store property from the route.\n    This is not intended to be set directly, as the implementation may change in\n   the future. Use `@ember/optional-features` instead.\n    @property _NO_IMPLICIT_ROUTE_MODEL\n   @for EmberENV\n   @type Boolean\n   @default false\n   @private\n   */\n  _NO_IMPLICIT_ROUTE_MODEL: false,\n  /**\n    Controls the maximum number of scheduled rerenders without \"settling\". In general,\n    applications should not need to modify this environment variable, but please\n    open an issue so that we can determine if a better default value is needed.\n     @property _RERENDER_LOOP_LIMIT\n    @for EmberENV\n    @type number\n    @default 1000\n    @private\n   */\n  _RERENDER_LOOP_LIMIT: 1000,\n  EMBER_LOAD_HOOKS: {},\n  FEATURES: {}\n};\n(EmberENV => {\n  if (typeof EmberENV !== 'object' || EmberENV === null) return;\n  for (let flag in EmberENV) {\n    if (!Object.prototype.hasOwnProperty.call(EmberENV, flag) || flag === 'EXTEND_PROTOTYPES' || flag === 'EMBER_LOAD_HOOKS') continue;\n    let defaultValue = ENV[flag];\n    if (defaultValue === true) {\n      ENV[flag] = EmberENV[flag] !== false;\n    } else if (defaultValue === false) {\n      ENV[flag] = EmberENV[flag] === true;\n    } else {\n      ENV[flag] = EmberENV[flag];\n    }\n  }\n  let {\n    EXTEND_PROTOTYPES\n  } = EmberENV;\n  if (EXTEND_PROTOTYPES !== undefined) {\n    if (typeof EXTEND_PROTOTYPES === 'object' && EXTEND_PROTOTYPES !== null) {\n      ENV.EXTEND_PROTOTYPES.Array = EXTEND_PROTOTYPES.Array !== false;\n    } else {\n      ENV.EXTEND_PROTOTYPES.Array = EXTEND_PROTOTYPES !== false;\n    }\n  }\n\n  // TODO this does not seem to be used by anything,\n  //      can we remove it? do we need to deprecate it?\n  let {\n    EMBER_LOAD_HOOKS\n  } = EmberENV;\n  if (typeof EMBER_LOAD_HOOKS === 'object' && EMBER_LOAD_HOOKS !== null) {\n    for (let hookName in EMBER_LOAD_HOOKS) {\n      if (!Object.prototype.hasOwnProperty.call(EMBER_LOAD_HOOKS, hookName)) continue;\n      let hooks = EMBER_LOAD_HOOKS[hookName];\n      if (Array.isArray(hooks)) {\n        ENV.EMBER_LOAD_HOOKS[hookName] = hooks.filter(hook => typeof hook === 'function');\n      }\n    }\n  }\n  let {\n    FEATURES\n  } = EmberENV;\n  if (typeof FEATURES === 'object' && FEATURES !== null) {\n    for (let feature in FEATURES) {\n      if (!Object.prototype.hasOwnProperty.call(FEATURES, feature)) continue;\n      ENV.FEATURES[feature] = FEATURES[feature] === true;\n    }\n  }\n  if (true) {\n    ENV._DEBUG_RENDER_TREE = true;\n  }\n})(global$1.EmberENV);\nfunction getENV() {\n  return ENV;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BGP1rw3B.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BGP1rw3B.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ isChrome),\n/* harmony export */   b: () => (/* binding */ history$1),\n/* harmony export */   e: () => (/* binding */ environment),\n/* harmony export */   h: () => (/* binding */ hasDOM),\n/* harmony export */   i: () => (/* binding */ isFirefox),\n/* harmony export */   l: () => (/* binding */ location$1),\n/* harmony export */   u: () => (/* binding */ userAgent),\n/* harmony export */   w: () => (/* binding */ window)\n/* harmony export */ });\n// check if window exists and actually is the global\nconst hasDOM = typeof self === 'object' && self !== null && self.Object === Object && typeof Window !== 'undefined' && self.constructor === Window && typeof document === 'object' && document !== null && self.document === document && typeof location === 'object' && location !== null && self.location === location && typeof history === 'object' && history !== null && self.history === history && typeof navigator === 'object' && navigator !== null && self.navigator === navigator && typeof navigator.userAgent === 'string';\nconst window = hasDOM ? self : null;\nconst location$1 = hasDOM ? self.location : null;\nconst history$1 = hasDOM ? self.history : null;\nconst userAgent = hasDOM ? self.navigator.userAgent : 'Lynx (textmode)';\nconst isChrome = hasDOM ? typeof chrome === 'object' && !(typeof opera === 'object') : false;\nconst isFirefox = hasDOM ? /Firefox|FxiOS/.test(userAgent) : false;\nconst environment = /*#__PURE__*/Object.freeze( /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  hasDOM,\n  history: history$1,\n  isChrome,\n  isFirefox,\n  location: location$1,\n  userAgent,\n  window\n}, Symbol.toStringTag, {\n  value: 'Module'\n}));\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BGP1rw3B.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BXPoca1S.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BXPoca1S.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ getRenderState),\n/* harmony export */   B: () => (/* binding */ getFullQueryParams),\n/* harmony export */   C: () => (/* binding */ Component),\n/* harmony export */   D: () => (/* binding */ defaultSerialize),\n/* harmony export */   E: () => (/* binding */ Engine),\n/* harmony export */   F: () => (/* binding */ hasDefaultSerialize),\n/* harmony export */   G: () => (/* binding */ triggerEvent),\n/* harmony export */   H: () => (/* binding */ Helper),\n/* harmony export */   I: () => (/* binding */ Input),\n/* harmony export */   J: () => (/* binding */ ROUTER),\n/* harmony export */   L: () => (/* binding */ LinkTo),\n/* harmony export */   O: () => (/* binding */ OutletView),\n/* harmony export */   R: () => (/* binding */ RouterState),\n/* harmony export */   S: () => (/* binding */ SafeString),\n/* harmony export */   T: () => (/* binding */ Textarea),\n/* harmony export */   _: () => (/* binding */ _resetRenderers),\n/* harmony export */   a: () => (/* binding */ RoutingService),\n/* harmony export */   b: () => (/* binding */ RootTemplate),\n/* harmony export */   c: () => (/* binding */ htmlSafe),\n/* harmony export */   d: () => (/* binding */ Renderer),\n/* harmony export */   e: () => (/* binding */ escapeExpression),\n/* harmony export */   f: () => (/* binding */ setupApplicationRegistry),\n/* harmony export */   g: () => (/* binding */ buildInitializerMethod),\n/* harmony export */   h: () => (/* binding */ helper$1),\n/* harmony export */   i: () => (/* binding */ isHTMLSafe),\n/* harmony export */   j: () => (/* binding */ EmberRouter$1),\n/* harmony export */   k: () => (/* binding */ Route),\n/* harmony export */   l: () => (/* binding */ RouterService),\n/* harmony export */   m: () => (/* binding */ EmberEngineInstance),\n/* harmony export */   n: () => (/* binding */ setModifierManager),\n/* harmony export */   o: () => (/* binding */ on),\n/* harmony export */   p: () => (/* binding */ prefixRouteNameArg),\n/* harmony export */   q: () => (/* binding */ extractRouteArgs),\n/* harmony export */   r: () => (/* binding */ renderSettled),\n/* harmony export */   s: () => (/* binding */ setupEngineRegistry),\n/* harmony export */   t: () => (/* binding */ getActiveTargetName),\n/* harmony export */   u: () => (/* binding */ uniqueId$1),\n/* harmony export */   v: () => (/* binding */ stashParamNames),\n/* harmony export */   w: () => (/* binding */ calculateCacheKey),\n/* harmony export */   x: () => (/* binding */ normalizeControllerQueryParams),\n/* harmony export */   y: () => (/* binding */ resemblesURL),\n/* harmony export */   z: () => (/* binding */ shallowEqual)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../@glimmer/opcode-compiler/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/opcode-compiler/index.js\");\n/* harmony import */ var _registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./registry-DzfcDwii.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js\");\n/* harmony import */ var _index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../@glimmer/runtime/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/runtime/index.js\");\n/* harmony import */ var _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../@glimmer/reference/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/reference/index.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./index-BGP1rw3B.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BGP1rw3B.js\");\n/* harmony import */ var _index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./index-PYiGj1jp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js\");\n/* harmony import */ var _ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../@ember/-internals/views/lib/system/utils.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/utils.js\");\n/* harmony import */ var _ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../@ember/-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _ember_internals_views_lib_system_action_manager_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../@ember/-internals/views/lib/system/action_manager.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/action_manager.js\");\n/* harmony import */ var _ember_internals_views_lib_component_lookup_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../@ember/-internals/views/lib/component_lookup.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/component_lookup.js\");\n/* harmony import */ var _core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./core_view-Cxne2_wu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/core_view-Cxne2_wu.js\");\n/* harmony import */ var _ember_internals_views_lib_mixins_class_names_support_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../@ember/-internals/views/lib/mixins/class_names_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/class_names_support.js\");\n/* harmony import */ var _ember_internals_views_lib_mixins_child_views_support_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../@ember/-internals/views/lib/mixins/child_views_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/child_views_support.js\");\n/* harmony import */ var _ember_internals_views_lib_mixins_view_state_support_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../@ember/-internals/views/lib/mixins/view_state_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_state_support.js\");\n/* harmony import */ var _ember_internals_views_lib_mixins_view_support_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../@ember/-internals/views/lib/mixins/view_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/view_support.js\");\n/* harmony import */ var _ember_internals_views_lib_mixins_action_support_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../@ember/-internals/views/lib/mixins/action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/mixins/action_support.js\");\n/* harmony import */ var _ember_engine_lib_engine_parent_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../@ember/engine/lib/engine-parent.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/engine/lib/engine-parent.js\");\n/* harmony import */ var _invoke_BjRgvK2V_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./invoke-BjRgvK2V.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/invoke-BjRgvK2V.js\");\n/* harmony import */ var _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../@ember/controller/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/controller/index.js\");\n/* harmony import */ var _ember_application_namespace_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../@ember/application/namespace.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/namespace.js\");\n/* harmony import */ var _dag_map_index_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../dag-map/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/dag-map/index.js\");\n/* harmony import */ var _ember_debug_container_debug_adapter_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../@ember/debug/container-debug-adapter.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/container-debug-adapter.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/registry_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/container_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/comparable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/action_handler.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/-proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js\");\n/* harmony import */ var _ember_enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../@ember/enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/target_action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js\");\n/* harmony import */ var _ember_internals_runtime_lib_ext_rsvp_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/ext/rsvp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js\");\n/* harmony import */ var _ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../@ember/-internals/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n/* harmony import */ var _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./rsvp-DaQAFb0W.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/rsvp-DaQAFb0W.js\");\n/* harmony import */ var _property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _route_recognizer_index_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../route-recognizer/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/route-recognizer/index.js\");\n/* harmony import */ var _router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./router-B-Q1aYBn.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/router-B-Q1aYBn.js\");\n/* harmony import */ var _ember_object_lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../@ember/object/lib/computed/computed_macros.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/lib/computed/computed_macros.js\");\n/* harmony import */ var _ember_service_index_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../@ember/service/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/service/index.js\");\n/* harmony import */ var _ember_owner_index_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../@ember/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/owner/index.js\");\n/* harmony import */ var _ember_routing_lib_cache_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../@ember/routing/lib/cache.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/cache.js\");\n/* harmony import */ var _ember_routing_lib_dsl_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../@ember/routing/lib/dsl.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/dsl.js\");\n/* harmony import */ var _ember_object_evented_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../@ember/object/evented.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/evented.js\");\n/* harmony import */ var _is_proxy_Dmis_70B_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./is_proxy-Dmis-70B.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/is_proxy-Dmis-70B.js\");\n/* harmony import */ var _set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./set_properties-DvalyQdu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/set_properties-DvalyQdu.js\");\n/* harmony import */ var _ember_routing_lib_generate_controller_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../@ember/routing/lib/generate_controller.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/routing/lib/generate_controller.js\");\n/* harmony import */ var _ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../@ember/-internals/deprecations/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/deprecations/index.js\");\n/* harmony import */ var _ember_object_compat_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../@ember/object/compat.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/compat.js\");\n/* harmony import */ var _ember_debug_lib_testing_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../@ember/debug/lib/testing.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/testing.js\");\n/* harmony import */ var _ember_internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../@ember/-internals/views/lib/system/event_dispatcher.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/system/event_dispatcher.js\");\n/* harmony import */ var _to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./to-string-D8i3mjEU.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/to-string-D8i3mjEU.js\");\n/* harmony import */ var _ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../@ember/instrumentation/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/instrumentation/index.js\");\n/* harmony import */ var _glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../@glimmer/util/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/util/index.js\");\n/* harmony import */ var _ember_internals_string_index_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../@ember/-internals/string/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/string/index.js\");\n/* harmony import */ var _ember_internals_views_lib_compat_attrs_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../@ember/-internals/views/lib/compat/attrs.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/views/lib/compat/attrs.js\");\n/* harmony import */ var _ember_object_internals_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../@ember/object/-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/-internals.js\");\n/* harmony import */ var _glimmer_vm_index_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../@glimmer/vm/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/vm/index.js\");\n/* harmony import */ var _glimmer_program_index_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../@glimmer/program/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/program/index.js\");\n/* harmony import */ var _glimmer_node_index_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../@glimmer/node/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/node/index.js\");\n/* harmony import */ var _glimmer_global_context_index_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../@glimmer/global-context/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/global-context/index.js\");\n/* harmony import */ var _ember_array_internals_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../@ember/array/-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/-internals.js\");\n\nvar _LocalValue, _AbstractInput, _Input2, _LinkTo2, _Textarea2, _Route, _RouterService;\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst RootTemplate = (0,_glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_1__.templateFactory)(\n/*\n  {{component this}}\n*/\n{\n  \"id\": \"tjANIXCV\",\n  \"block\": \"[[[46,[30,0],null,null,null]],[],false,[\\\"component\\\"]]\",\n  \"moduleName\": \"packages/@ember/-internals/glimmer/lib/templates/root.hbs\",\n  \"isStrictMode\": true\n});\n\n// In normal TypeScript, this modifier is essentially an opaque token that just\n// needs to be importable. Declaring it with a unique interface like this,\n// however, gives tools like Glint (that *do* have a richer notion of what it\n// is) a place to install more detailed type information.\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\n// SAFETY: at the time of writing, the cast here is from `{}` to `OnModifier`,\n// which makes it strictly safer to use outside this module because it is not\n// usable as \"any non-null item\", which is what `{}` means, without loss of any\n// information from the type itself.\nconst on = _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.on;\n\n// NOTE: this uses assignment to *require* that the `glimmerSetModifierManager`\n// is legally assignable to this type, i.e. that variance is properly upheld.\nconst setModifierManager = _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.setModifierManager;\nconst InputTemplate = (0,_glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_1__.templateFactory)(\n/*\n  <input\n  {{!-- for compatibility --}}\n  id={{this.id}}\n  class={{this.class}}\n\n  ...attributes\n\n  type={{this.type}}\n  checked={{this.checked}}\n  value={{this.value}}\n\n  {{on \"change\" this.change}}\n  {{on \"input\" this.input}}\n  {{on \"keyup\" this.keyUp}}\n  {{on \"paste\" this.valueDidChange}}\n  {{on \"cut\" this.valueDidChange}}\n/>\n*/\n{\n  \"id\": \"4z3DuGQ3\",\n  \"block\": \"[[[11,\\\"input\\\"],[16,1,[30,0,[\\\"id\\\"]]],[16,0,[30,0,[\\\"class\\\"]]],[17,1],[16,4,[30,0,[\\\"type\\\"]]],[16,\\\"checked\\\",[30,0,[\\\"checked\\\"]]],[16,2,[30,0,[\\\"value\\\"]]],[4,[32,0],[\\\"change\\\",[30,0,[\\\"change\\\"]]],null],[4,[32,0],[\\\"input\\\",[30,0,[\\\"input\\\"]]],null],[4,[32,0],[\\\"keyup\\\",[30,0,[\\\"keyUp\\\"]]],null],[4,[32,0],[\\\"paste\\\",[30,0,[\\\"valueDidChange\\\"]]],null],[4,[32,0],[\\\"cut\\\",[30,0,[\\\"valueDidChange\\\"]]],null],[12],[13]],[\\\"&attrs\\\"],false,[]]\",\n  \"moduleName\": \"packages/@ember/-internals/glimmer/lib/templates/input.hbs\",\n  \"scope\": () => [on],\n  \"isStrictMode\": true\n});\nfunction NOOP$2() {}\nclass InternalComponent {\n  // Override this\n  static toString() {\n    return 'internal component';\n  }\n  constructor(owner, args, caller) {\n    this.owner = owner;\n    this.args = args;\n    this.caller = caller;\n    (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.setOwner)(this, owner);\n  }\n\n  /**\n   * The default HTML id attribute. We don't really _need_ one, this is just\n   * added for compatibility as it's hard to tell if people rely on it being\n   * present, and it doens't really hurt.\n   *\n   * However, don't rely on this internally, like passing it to `getElementId`.\n   * This can be (and often is) overriden by passing an `id` attribute on the\n   * invocation, which shadows this default id via `...attributes`.\n   */\n  get id() {\n    return (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.g)(this);\n  }\n\n  /**\n   * The default HTML class attribute. Similar to the above, we don't _need_\n   * them, they are just added for compatibility as it's similarly hard to tell\n   * if people rely on it in their CSS etc, and it doens't really hurt.\n   */\n  get class() {\n    return 'ember-view';\n  }\n  validateArguments() {\n    for (let name of Object.keys(this.args.named)) {\n      if (!this.isSupportedArgument(name)) {\n        this.onUnsupportedArgument(name);\n      }\n    }\n  }\n  named(name) {\n    let ref = this.args.named[name];\n    return ref ? (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(ref) : undefined;\n  }\n  positional(index) {\n    let ref = this.args.positional[index];\n    return ref ? (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(ref) : undefined;\n  }\n  listenerFor(name) {\n    let listener = this.named(name);\n    if (listener) {\n       true && !(typeof listener === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The \\`@${name}\\` argument to the <${this.constructor}> component must be a function`, typeof listener === 'function');\n      return listener;\n    } else {\n      return NOOP$2;\n    }\n  }\n  isSupportedArgument(_name) {\n    return false;\n  }\n  onUnsupportedArgument(_name) {}\n  toString() {\n    return `<${this.constructor}:${(0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.g)(this)}>`;\n  }\n}\nconst OPAQUE_CONSTRUCTOR_MAP = new WeakMap();\nfunction opaquify(constructor, template) {\n  let _opaque = {\n    // Factory interface\n    create() {\n      throw (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Use constructor instead of create');\n    },\n    toString() {\n      return constructor.toString();\n    }\n  };\n  let opaque = _opaque;\n  OPAQUE_CONSTRUCTOR_MAP.set(opaque, constructor);\n  (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.setInternalComponentManager)(INTERNAL_COMPONENT_MANAGER, opaque);\n  (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.setComponentTemplate)(template, opaque);\n  return opaque;\n}\nfunction deopaquify(opaque) {\n  let constructor = OPAQUE_CONSTRUCTOR_MAP.get(opaque);\n   true && !constructor && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`[BUG] Invalid internal component constructor: ${opaque}`, constructor);\n  return constructor;\n}\nconst CAPABILITIES$2 = {\n  dynamicLayout: false,\n  dynamicTag: false,\n  prepareArgs: false,\n  createArgs: true,\n  attributeHook: false,\n  elementHook: false,\n  createCaller: true,\n  dynamicScope: false,\n  updateHook: false,\n  createInstance: true,\n  wrapped: false,\n  willDestroy: false,\n  hasSubOwner: false\n};\nclass InternalManager {\n  getCapabilities() {\n    return CAPABILITIES$2;\n  }\n  create(owner, definition, args, _env, _dynamicScope, caller) {\n     true && !(0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isConstRef)(caller) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('caller must be const', (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isConstRef)(caller));\n    let ComponentClass = deopaquify(definition);\n    let instance = new ComponentClass(owner, args.capture(), (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(caller));\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.untrack)(instance['validateArguments'].bind(instance));\n    return instance;\n  }\n  didCreate() {}\n  didUpdate() {}\n  didRenderLayout() {}\n  didUpdateLayout() {}\n  getDebugName(definition) {\n    return definition.toString();\n  }\n  getSelf(instance) {\n    return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createConstRef)(instance, 'this');\n  }\n  getDestroyable(instance) {\n    return instance;\n  }\n}\nconst INTERNAL_COMPONENT_MANAGER = new InternalManager();\nconst UNINITIALIZED = Object.freeze({});\nfunction elementForEvent(event) {\n   true && !(event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] event target must be an <input> or <textarea> element', event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement);\n  return event.target;\n}\nfunction valueForEvent(event) {\n  return elementForEvent(event).value;\n}\nfunction devirtualize(callback) {\n  return event => callback(valueForEvent(event), event);\n}\nfunction valueFrom(reference) {\n  if (reference === undefined) {\n    return new LocalValue(undefined);\n  } else if ((0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isConstRef)(reference)) {\n    return new LocalValue((0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(reference));\n  } else if ((0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isUpdatableRef)(reference)) {\n    return new UpstreamValue(reference);\n  } else {\n    return new ForkedValue(reference);\n  }\n}\nvar _value = /*#__PURE__*/new WeakMap();\nclass LocalValue {\n  constructor(value) {\n    _classPrivateFieldInitSpec(this, _value, ((0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.i)(this, \"value\"), void 0));\n    this.value = value;\n  }\n  get() {\n    return this.value;\n  }\n  set(value) {\n    this.value = value;\n  }\n}\n_LocalValue = LocalValue;\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.d)(_LocalValue.prototype, \"value\", [_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.a0]);\nclass UpstreamValue {\n  constructor(reference) {\n    this.reference = reference;\n  }\n  get() {\n    return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(this.reference);\n  }\n  set(value) {\n    (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.updateRef)(this.reference, value);\n  }\n}\nclass ForkedValue {\n  constructor(reference) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"local\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"upstream\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastUpstreamValue\", UNINITIALIZED);\n    this.upstream = new UpstreamValue(reference);\n  }\n  get() {\n    let upstreamValue = this.upstream.get();\n    if (upstreamValue !== this.lastUpstreamValue) {\n      this.lastUpstreamValue = upstreamValue;\n      this.local = new LocalValue(upstreamValue);\n    }\n     true && !this.local && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] this.local must have been initialized at this point', this.local);\n    return this.local.get();\n  }\n  set(value) {\n     true && !this.local && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] this.local must have been initialized at this point', this.local);\n    this.local.set(value);\n  }\n}\nclass AbstractInput extends InternalComponent {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_value\", valueFrom(this.args.named['value']));\n  }\n  validateArguments() {\n     true && !(this.args.positional.length === 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The ${this.constructor} component does not take any positional arguments`, this.args.positional.length === 0);\n    super.validateArguments();\n  }\n  get value() {\n    return this._value.get();\n  }\n  set value(value) {\n    this._value.set(value);\n  }\n  valueDidChange(event) {\n    this.value = valueForEvent(event);\n  }\n\n  /**\n   * The `change` and `input` actions need to be overridden in the `Input`\n   * subclass. Unfortunately, some ember-source builds currently uses babel\n   * loose mode to transpile its classes. Having the `@action` decorator on the\n   * super class creates a getter on the prototype, and when the subclass\n   * overrides the method, the loose mode transpilation would emit something\n   * like `Subclass.prototype['change'] = function change() { ... }`, which\n   * fails because `prototype['change']` is getter-only/readonly. The correct\n   * solution is to use `Object.defineProperty(prototype, 'change', ...)` but\n   * that requires disabling loose mode. For now, the workaround is to add the\n   * decorator only on the subclass. This is more of a configuration issue on\n   * our own builds and doesn't really affect apps.\n   */\n\n  /* @action */\n\n  change(event) {\n    this.valueDidChange(event);\n  }\n\n  /* @action */\n  input(event) {\n    this.valueDidChange(event);\n  }\n  keyUp(event) {\n    switch (event.key) {\n      case 'Enter':\n        this.listenerFor('enter')(event);\n        this.listenerFor('insert-newline')(event);\n        break;\n      case 'Escape':\n        this.listenerFor('escape-press')(event);\n        break;\n    }\n  }\n  listenerFor(name) {\n    let listener = super.listenerFor(name);\n    if (this.isVirtualEventListener(name, listener)) {\n      return devirtualize(listener);\n    } else {\n      return listener;\n    }\n  }\n  isVirtualEventListener(name, _listener) {\n    let virtualEvents = ['enter', 'insert-newline', 'escape-press'];\n    return virtualEvents.indexOf(name) !== -1;\n  }\n}\n\n/**\n@module @ember/component\n*/\n_AbstractInput = AbstractInput;\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.a)(_AbstractInput.prototype, \"valueDidChange\", [_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.b]);\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.a)(_AbstractInput.prototype, \"keyUp\", [_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.b]);\nlet isValidInputType;\nif (_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_9__.h) {\n  const INPUT_TYPES = Object.create(null);\n  const INPUT_ELEMENT = document.createElement('input');\n  INPUT_TYPES[''] = false;\n  INPUT_TYPES['text'] = true;\n  INPUT_TYPES['checkbox'] = true;\n  isValidInputType = type => {\n    let isValid = INPUT_TYPES[type];\n    if (isValid === undefined) {\n      try {\n        INPUT_ELEMENT.type = type;\n        isValid = INPUT_ELEMENT.type === type;\n      } catch (_e) {\n        isValid = false;\n      } finally {\n        INPUT_ELEMENT.type = 'text';\n      }\n      INPUT_TYPES[type] = isValid;\n    }\n    return isValid;\n  };\n} else {\n  isValidInputType = type => type !== '';\n}\n\n/**\n  See [Ember.Templates.components.Input](/ember/release/classes/Ember.Templates.components/methods/Input?anchor=Input).\n\n  @method input\n  @for Ember.Templates.helpers\n  @param {Hash} options\n  @public\n  */\n\n/**\n  An opaque interface which can be imported and used in strict-mode\n  templates to call <Input>.\n\n  See [Ember.Templates.components.Input](/ember/release/classes/Ember.Templates.components/methods/Input?anchor=Input).\n\n  @for @ember/component\n  @method Input\n  @see {Ember.Templates.components.Input}\n  @public\n**/\n\n/**\n  The `Input` component lets you create an HTML `<input>` element.\n\n  ```handlebars\n  <Input @value=\"987\" />\n  ```\n\n  creates an `<input>` element with `type=\"text\"` and value set to 987.\n\n  ### Text field\n\n  If no `type` argument is specified, a default of type 'text' is used.\n\n  ```handlebars\n  Search:\n  <Input @value={{this.searchWord}} />\n  ```\n\n  In this example, the initial value in the `<input>` will be set to the value of\n  `this.searchWord`. If the user changes the text, the value of `this.searchWord` will also be\n  updated.\n\n  ### Actions\n\n  The `Input` component takes a number of arguments with callbacks that are invoked in response to\n  user events.\n\n  * `enter`\n  * `insert-newline`\n  * `escape-press`\n  * `focus-in`\n  * `focus-out`\n  * `key-down`\n  * `key-press`\n  * `key-up`\n\n  These callbacks are passed to `Input` like this:\n\n  ```handlebars\n  <Input @value={{this.searchWord}} @enter={{this.query}} />\n  ```\n\n  Starting with Ember Octane, we recommend using the `{{on}}` modifier to call actions\n  on specific events, such as the input event.\n\n  ```handlebars\n  <label for=\"input-name\">Name:</label>\n  <Input\n    @id=\"input-name\"\n    @value={{this.name}}\n    {{on \"input\" this.validateName}}\n  />\n  ```\n\n  The event name (e.g. `focusout`, `input`, `keydown`) always follows the casing\n  that the HTML standard uses.\n\n  ### `<input>` HTML Attributes to Avoid\n\n  In most cases, if you want to pass an attribute to the underlying HTML `<input>` element, you\n  can pass the attribute directly, just like any other Ember component.\n\n  ```handlebars\n  <Input @type=\"text\" size=\"10\" />\n  ```\n\n  In this example, the `size` attribute will be applied to the underlying `<input>` element in the\n  outputted HTML.\n\n  However, there are a few attributes where you **must** use the `@` version.\n\n  * `@type`: This argument is used to control which Ember component is used under the hood\n  * `@value`: The `@value` argument installs a two-way binding onto the element. If you wanted a\n    one-way binding, use `<input>` with the `value` property and the `input` event instead.\n  * `@checked` (for checkboxes): like `@value`, the `@checked` argument installs a two-way binding\n    onto the element. If you wanted a one-way binding, use `<input type=\"checkbox\">` with\n    `checked` and the `input` event instead.\n\n  ### Checkbox\n\n  To create an `<input type=\"checkbox\">`:\n\n  ```handlebars\n  Emberize Everything:\n  <Input @type=\"checkbox\" @checked={{this.isEmberized}} name=\"isEmberized\" />\n  ```\n\n  This will bind the checked state of this checkbox to the value of `isEmberized` -- if either one\n  changes, it will be reflected in the other.\n\n  @method Input\n  @for Ember.Templates.components\n  @param {Hash} options\n  @public\n*/\nclass _Input extends AbstractInput {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_checked\", valueFrom(this.args.named['checked']));\n  }\n  static toString() {\n    return 'Input';\n  }\n\n  /**\n   * The HTML class attribute.\n   */\n  get class() {\n    if (this.isCheckbox) {\n      return 'ember-checkbox ember-view';\n    } else {\n      return 'ember-text-field ember-view';\n    }\n  }\n\n  /**\n   * The HTML type attribute.\n   */\n  get type() {\n    let type = this.named('type');\n    if (type === null || type === undefined) {\n      return 'text';\n    }\n     true && !(typeof type === 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('The `@type` argument to the <Input> component must be a string', typeof type === 'string');\n    return isValidInputType(type) ? type : 'text';\n  }\n  get isCheckbox() {\n    return this.named('type') === 'checkbox';\n  }\n  get checked() {\n    if (this.isCheckbox) {\n       true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.w)('`<Input @type=\"checkbox\" />` reflects its checked state via the `@checked` argument. ' + 'You wrote `<Input @type=\"checkbox\" @value={{...}} />` which is likely not what you intended. ' + 'Did you mean `<Input @type=\"checkbox\" @checked={{...}} />`?', (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.untrack)(() => this.args.named['checked'] !== undefined || this.args.named['value'] === undefined || typeof (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(this.args.named['value']) === 'string'), {\n        id: 'ember.built-in-components.input-checkbox-value'\n      });\n      return this._checked.get();\n    } else {\n      return undefined;\n    }\n  }\n  set checked(checked) {\n     true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.w)('`<Input @type=\"checkbox\" />` reflects its checked state via the `@checked` argument. ' + 'You wrote `<Input @type=\"checkbox\" @value={{...}} />` which is likely not what you intended. ' + 'Did you mean `<Input @type=\"checkbox\" @checked={{...}} />`?', (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.untrack)(() => this.args.named['checked'] !== undefined || this.args.named['value'] === undefined || typeof (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(this.args.named['value']) === 'string'), {\n      id: 'ember.built-in-components.input-checkbox-value'\n    });\n    this._checked.set(checked);\n  }\n  change(event) {\n    if (this.isCheckbox) {\n      this.checkedDidChange(event);\n    } else {\n      super.change(event);\n    }\n  }\n  input(event) {\n    if (!this.isCheckbox) {\n      super.input(event);\n    }\n  }\n  checkedDidChange(event) {\n    let element = event.target;\n     true && !(element instanceof HTMLInputElement) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] element must be an <input>', element instanceof HTMLInputElement);\n    this.checked = element.checked;\n  }\n  isSupportedArgument(name) {\n    let supportedArguments = ['type', 'value', 'checked', 'enter', 'insert-newline', 'escape-press'];\n    return supportedArguments.indexOf(name) !== -1 || super.isSupportedArgument(name);\n  }\n}\n_Input2 = _Input;\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.a)(_Input2.prototype, \"change\", [_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.b]);\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.a)(_Input2.prototype, \"input\", [_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.b]);\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.a)(_Input2.prototype, \"checkedDidChange\", [_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.b]);\nconst Input = opaquify(_Input, InputTemplate);\nconst LinkToTemplate = (0,_glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_1__.templateFactory)(\n/*\n  <a\n  {{!-- for compatibility --}}\n  id={{this.id}}\n  class={{this.class}}\n\n  {{!-- deprecated attribute bindings --}}\n  role={{this.role}}\n  title={{this.title}}\n  rel={{this.rel}}\n  tabindex={{this.tabindex}}\n  target={{this.target}}\n\n  ...attributes\n\n  href={{this.href}}\n\n  {{on 'click' this.click}}\n>{{yield}}</a>\n*/\n{\n  \"id\": \"Ub0nir+H\",\n  \"block\": \"[[[11,3],[16,1,[30,0,[\\\"id\\\"]]],[16,0,[30,0,[\\\"class\\\"]]],[16,\\\"role\\\",[30,0,[\\\"role\\\"]]],[16,\\\"title\\\",[30,0,[\\\"title\\\"]]],[16,\\\"rel\\\",[30,0,[\\\"rel\\\"]]],[16,\\\"tabindex\\\",[30,0,[\\\"tabindex\\\"]]],[16,\\\"target\\\",[30,0,[\\\"target\\\"]]],[17,1],[16,6,[30,0,[\\\"href\\\"]]],[4,[32,0],[\\\"click\\\",[30,0,[\\\"click\\\"]]],null],[12],[18,2,null],[13]],[\\\"&attrs\\\",\\\"&default\\\"],false,[\\\"yield\\\"]]\",\n  \"moduleName\": \"packages/@ember/-internals/glimmer/lib/templates/link-to.hbs\",\n  \"scope\": () => [on],\n  \"isStrictMode\": true\n});\nconst EMPTY_ARRAY = [];\nconst EMPTY_QUERY_PARAMS = {};\n(0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.h)(EMPTY_ARRAY);\n(0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.h)(EMPTY_QUERY_PARAMS);\nfunction isMissing(value) {\n  return value === null || value === undefined;\n}\nfunction isPresent(value) {\n  return !isMissing(value);\n}\nfunction isQueryParams(value) {\n  return typeof value === 'object' && value !== null && value['isQueryParams'] === true;\n}\n\n/**\n  The `LinkTo` component renders a link to the supplied `routeName` passing an optionally\n  supplied model to the route as its `model` context of the route. The block for `LinkTo`\n  becomes the contents of the rendered element:\n\n  ```handlebars\n  <LinkTo @route='photoGallery'>\n    Great Hamster Photos\n  </LinkTo>\n  ```\n\n  This will result in:\n\n  ```html\n  <a href=\"/hamster-photos\">\n    Great Hamster Photos\n  </a>\n  ```\n\n  ### Disabling the `LinkTo` component\n\n  The `LinkTo` component can be disabled by using the `disabled` argument. A disabled link\n  doesn't result in a transition when activated, and adds the `disabled` class to the `<a>`\n  element.\n\n  (The class name to apply to the element can be overridden by using the `disabledClass`\n  argument)\n\n  ```handlebars\n  <LinkTo @route='photoGallery' @disabled={{true}}>\n    Great Hamster Photos\n  </LinkTo>\n  ```\n\n  ### Handling `href`\n\n  `<LinkTo>` will use your application's Router to fill the element's `href` property with a URL\n  that matches the path to the supplied `routeName`.\n\n  ### Handling current route\n\n  The `LinkTo` component will apply a CSS class name of 'active' when the application's current\n  route matches the supplied routeName. For example, if the application's current route is\n  'photoGallery.recent', then the following invocation of `LinkTo`:\n\n  ```handlebars\n  <LinkTo @route='photoGallery.recent'>\n    Great Hamster Photos\n  </LinkTo>\n  ```\n\n  will result in\n\n  ```html\n  <a href=\"/hamster-photos/this-week\" class=\"active\">\n    Great Hamster Photos\n  </a>\n  ```\n\n  The CSS class used for active classes can be customized by passing an `activeClass` argument:\n\n  ```handlebars\n  <LinkTo @route='photoGallery.recent' @activeClass=\"current-url\">\n    Great Hamster Photos\n  </LinkTo>\n  ```\n\n  ```html\n  <a href=\"/hamster-photos/this-week\" class=\"current-url\">\n    Great Hamster Photos\n  </a>\n  ```\n\n  ### Keeping a link active for other routes\n\n  If you need a link to be 'active' even when it doesn't match the current route, you can use the\n  `current-when` argument.\n\n  ```handlebars\n  <LinkTo @route='photoGallery' @current-when='photos'>\n    Photo Gallery\n  </LinkTo>\n  ```\n\n  This may be helpful for keeping links active for:\n\n  * non-nested routes that are logically related\n  * some secondary menu approaches\n  * 'top navigation' with 'sub navigation' scenarios\n\n  A link will be active if `current-when` is `true` or the current\n  route is the route this link would transition to.\n\n  To match multiple routes 'space-separate' the routes:\n\n  ```handlebars\n  <LinkTo @route='gallery' @current-when='photos drawings paintings'>\n    Art Gallery\n  </LinkTo>\n  ```\n\n  ### Supplying a model\n\n  An optional `model` argument can be used for routes whose\n  paths contain dynamic segments. This argument will become\n  the model context of the linked route:\n\n  ```javascript\n  Router.map(function() {\n    this.route(\"photoGallery\", {path: \"hamster-photos/:photo_id\"});\n  });\n  ```\n\n  ```handlebars\n  <LinkTo @route='photoGallery' @model={{this.aPhoto}}>\n    {{aPhoto.title}}\n  </LinkTo>\n  ```\n\n  ```html\n  <a href=\"/hamster-photos/42\">\n    Tomster\n  </a>\n  ```\n\n  ### Supplying multiple models\n\n  For deep-linking to route paths that contain multiple\n  dynamic segments, the `models` argument can be used.\n\n  As the router transitions through the route path, each\n  supplied model argument will become the context for the\n  route with the dynamic segments:\n\n  ```javascript\n  Router.map(function() {\n    this.route(\"photoGallery\", { path: \"hamster-photos/:photo_id\" }, function() {\n      this.route(\"comment\", {path: \"comments/:comment_id\"});\n    });\n  });\n  ```\n\n  This argument will become the model context of the linked route:\n\n  ```handlebars\n  <LinkTo @route='photoGallery.comment' @models={{array this.aPhoto this.comment}}>\n    {{comment.body}}\n  </LinkTo>\n  ```\n\n  ```html\n  <a href=\"/hamster-photos/42/comments/718\">\n    A+++ would snuggle again.\n  </a>\n  ```\n\n  ### Supplying an explicit dynamic segment value\n\n  If you don't have a model object available to pass to `LinkTo`,\n  an optional string or integer argument can be passed for routes whose\n  paths contain dynamic segments. This argument will become the value\n  of the dynamic segment:\n\n  ```javascript\n  Router.map(function() {\n    this.route(\"photoGallery\", { path: \"hamster-photos/:photo_id\" });\n  });\n  ```\n\n  ```handlebars\n  <LinkTo @route='photoGallery' @model={{aPhotoId}}>\n    {{this.aPhoto.title}}\n  </LinkTo>\n  ```\n\n  ```html\n  <a href=\"/hamster-photos/42\">\n    Tomster\n  </a>\n  ```\n\n  When transitioning into the linked route, the `model` hook will\n  be triggered with parameters including this passed identifier.\n\n  ### Supplying query parameters\n\n  If you need to add optional key-value pairs that appear to the right of the ? in a URL,\n  you can use the `query` argument.\n\n  ```handlebars\n  <LinkTo @route='photoGallery' @query={{hash page=1 per_page=20}}>\n    Great Hamster Photos\n  </LinkTo>\n  ```\n\n  This will result in:\n\n  ```html\n  <a href=\"/hamster-photos?page=1&per_page=20\">\n    Great Hamster Photos\n  </a>\n  ```\n\n  @for Ember.Templates.components\n  @method LinkTo\n  @public\n*/\n\n/**\n  @module @ember/routing\n*/\n\n/**\n  See [Ember.Templates.components.LinkTo](/ember/release/classes/Ember.Templates.components/methods/input?anchor=LinkTo).\n\n  @for Ember.Templates.helpers\n  @method link-to\n  @see {Ember.Templates.components.LinkTo}\n  @public\n**/\n\n/**\n  An opaque interface which can be imported and used in strict-mode\n  templates to call <LinkTo>.\n\n  See [Ember.Templates.components.LinkTo](/ember/release/classes/Ember.Templates.components/methods/input?anchor=LinkTo).\n\n  @for @ember/routing\n  @method LinkTo\n  @see {Ember.Templates.components.LinkTo}\n  @public\n**/\nvar _routing = /*#__PURE__*/new WeakMap();\nclass _LinkTo extends InternalComponent {\n  constructor(...args) {\n    super(...args);\n    _classPrivateFieldInitSpec(this, _routing, ((0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.i)(this, \"routing\"), void 0));\n    // GH #17963\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentRouteCache\", (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(() => {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.tagFor)(this.routing, 'currentState'));\n      return (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.untrack)(() => this.routing.currentRouteName);\n    }));\n  }\n  static toString() {\n    return 'LinkTo';\n  }\n  validateArguments() {\n     true && !(!this.isEngine || this.engineMountPoint !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to use the <LinkTo> component within a routeless engine, this is not supported. ' + 'If you are using the ember-engines addon, use the <LinkToExternal> component instead. ' + 'See https://ember-engines.com/docs/links for more info.', !this.isEngine || this.engineMountPoint !== undefined);\n     true && !('route' in this.args.named || 'model' in this.args.named || 'models' in this.args.named || 'query' in this.args.named) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You must provide at least one of the `@route`, `@model`, `@models` or `@query` arguments to `<LinkTo>`.', 'route' in this.args.named || 'model' in this.args.named || 'models' in this.args.named || 'query' in this.args.named);\n     true && !!('model' in this.args.named && 'models' in this.args.named) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You cannot provide both the `@model` and `@models` arguments to the <LinkTo> component.', !('model' in this.args.named && 'models' in this.args.named));\n    super.validateArguments();\n  }\n  get class() {\n    let classes = 'ember-view';\n    if (this.isActive) {\n      classes += this.classFor('active');\n      if (this.willBeActive === false) {\n        classes += ' ember-transitioning-out';\n      }\n    } else if (this.willBeActive) {\n      classes += ' ember-transitioning-in';\n    }\n    if (this.isLoading) {\n      classes += this.classFor('loading');\n    }\n    if (this.isDisabled) {\n      classes += this.classFor('disabled');\n    }\n    return classes;\n  }\n  get href() {\n    if (this.isLoading) {\n      return '#';\n    }\n    let {\n      routing,\n      route,\n      models,\n      query\n    } = this;\n     true && !isPresent(route) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] route can only be missing if isLoading is true', isPresent(route)); // consume the current router state so we invalidate when QP changes\n    // TODO: can we narrow this down to QP changes only?\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.tagFor)(routing, 'currentState'));\n    if (true) {\n      try {\n        return routing.generateURL(route, models, query);\n      } catch (e) {\n        let details = e instanceof Error ? e.message : (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.b)(e);\n        let message = `While generating link to route \"${route}\": ${details}`;\n        if (e instanceof Error) {\n          e.message = message;\n          throw e;\n        } else {\n          throw message;\n        }\n      }\n    } else {}\n  }\n  click(event) {\n    if (!(0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.isSimpleClick)(event)) {\n      return;\n    }\n    let element = event.currentTarget;\n     true && !(element instanceof HTMLAnchorElement) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] must be an <a> element', element instanceof HTMLAnchorElement);\n    let isSelf = element.target === '' || element.target === '_self';\n    if (isSelf) {\n      this.preventDefault(event);\n    } else {\n      return;\n    }\n    if (this.isDisabled) {\n      return;\n    }\n    if (this.isLoading) {\n       true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.w)('This link is in an inactive loading state because at least one of its models ' + 'currently has a null/undefined value, or the provided route name is invalid.', false, {\n        id: 'ember-glimmer.link-to.inactive-loading-state'\n      });\n      return;\n    }\n    let {\n      routing,\n      route,\n      models,\n      query,\n      replace\n    } = this;\n    let payload = {\n      routeName: route,\n      queryParams: query,\n      transition: undefined\n    };\n    (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__.flaggedInstrument)('interaction.link-to', payload, () => {\n       true && !isPresent(route) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] route can only be missing if isLoading is true', isPresent(route));\n      payload.transition = routing.transitionTo(route, models, query, replace);\n    });\n  }\n  get route() {\n    if ('route' in this.args.named) {\n      let route = this.named('route');\n       true && !(isMissing(route) || typeof route === 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('The `@route` argument to the <LinkTo> component must be a string', isMissing(route) || typeof route === 'string');\n      return route && this.namespaceRoute(route);\n    } else {\n      return this.currentRoute;\n    }\n  }\n  get currentRoute() {\n    return (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.getValue)(this.currentRouteCache);\n  }\n\n  // TODO: not sure why generateURL takes {}[] instead of unknown[]\n  get models() {\n    if ('models' in this.args.named) {\n      let models = this.named('models');\n       true && !Array.isArray(models) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('The `@models` argument to the <LinkTo> component must be an array.', Array.isArray(models));\n      return models;\n    } else if ('model' in this.args.named) {\n      return [this.named('model')];\n    } else {\n      return EMPTY_ARRAY;\n    }\n  }\n  get query() {\n    if ('query' in this.args.named) {\n      let query = this.named('query');\n       true && !(query !== null && typeof query === 'object') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('The `@query` argument to the <LinkTo> component must be an object.', query !== null && typeof query === 'object');\n      return {\n        ...query\n      };\n    } else {\n      return EMPTY_QUERY_PARAMS;\n    }\n  }\n  get replace() {\n    return this.named('replace') === true;\n  }\n  get isActive() {\n    return this.isActiveForState(this.routing.currentState);\n  }\n  get willBeActive() {\n    let current = this.routing.currentState;\n    let target = this.routing.targetState;\n    if (current === target) {\n      return null;\n    } else {\n      return this.isActiveForState(target);\n    }\n  }\n  get isLoading() {\n    return isMissing(this.route) || this.models.some(model => isMissing(model));\n  }\n  get isDisabled() {\n    return Boolean(this.named('disabled'));\n  }\n  get isEngine() {\n    let owner = this.owner;\n    return owner instanceof EmberEngineInstance && (0,_ember_engine_lib_engine_parent_js__WEBPACK_IMPORTED_MODULE_24__.getEngineParent)(owner) !== undefined;\n  }\n  get engineMountPoint() {\n    let owner = this.owner;\n    return owner instanceof EmberEngineInstance ? owner.mountPoint : undefined;\n  }\n  classFor(state) {\n    let className = this.named(`${state}Class`);\n     true && !(isMissing(className) || typeof className === 'string' || typeof className === 'boolean') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The \\`@${state}Class\\` argument to the <LinkTo> component must be a string or boolean`, isMissing(className) || typeof className === 'string' || typeof className === 'boolean');\n    if (className === true || isMissing(className)) {\n      return ` ${state}`;\n    } else if (className) {\n      return ` ${className}`;\n    } else {\n      return '';\n    }\n  }\n  namespaceRoute(route) {\n    let {\n      engineMountPoint\n    } = this;\n    if (engineMountPoint === undefined) {\n      return route;\n    } else if (route === 'application') {\n      return engineMountPoint;\n    } else {\n      return `${engineMountPoint}.${route}`;\n    }\n  }\n  isActiveForState(state) {\n    if (!isPresent(state)) {\n      return false;\n    }\n    if (this.isLoading) {\n      return false;\n    }\n    let currentWhen = this.named('current-when');\n    if (typeof currentWhen === 'boolean') {\n      return currentWhen;\n    } else if (typeof currentWhen === 'string') {\n      let {\n        models,\n        routing\n      } = this;\n      return currentWhen.split(' ').some(route => routing.isActiveForRoute(models, undefined, this.namespaceRoute(route), state));\n    } else {\n      let {\n        route,\n        models,\n        query,\n        routing\n      } = this;\n       true && !isPresent(route) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] route can only be missing if isLoading is true', isPresent(route));\n      return routing.isActiveForRoute(models, query, route, state);\n    }\n  }\n  preventDefault(event) {\n    event.preventDefault();\n  }\n  isSupportedArgument(name) {\n    let supportedArguments = ['route', 'model', 'models', 'query', 'replace', 'disabled', 'current-when', 'activeClass', 'loadingClass', 'disabledClass'];\n    return supportedArguments.indexOf(name) !== -1 || super.isSupportedArgument(name);\n  }\n}\n_LinkTo2 = _LinkTo;\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.d)(_LinkTo2.prototype, \"routing\", [(0,_ember_service_index_js__WEBPACK_IMPORTED_MODULE_44__.service)('-routing')]);\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.a)(_LinkTo2.prototype, \"click\", [_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.b]);\nlet {\n  prototype\n} = _LinkTo;\nlet descriptorFor = (target, property) => {\n  if (target) {\n    return Object.getOwnPropertyDescriptor(target, property) || descriptorFor(Object.getPrototypeOf(target), property);\n  } else {\n    return null;\n  }\n};\n\n// @href\n{\n  let superOnUnsupportedArgument = prototype['onUnsupportedArgument'];\n  Object.defineProperty(prototype, 'onUnsupportedArgument', {\n    configurable: true,\n    enumerable: false,\n    value: function onUnsupportedArgument(name) {\n      if (name === 'href') {\n         true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Passing the \\`@href\\` argument to <LinkTo> is not supported.`);\n      } else {\n        superOnUnsupportedArgument.call(this, name);\n      }\n    }\n  });\n}\n\n// QP\n{\n  let superModelsDescriptor = descriptorFor(prototype, 'models');\n   true && !(superModelsDescriptor && typeof superModelsDescriptor.get === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`[BUG] expecting models to be a getter on <LinkTo>`, superModelsDescriptor && typeof superModelsDescriptor.get === 'function');\n  let superModelsGetter = superModelsDescriptor.get;\n  Object.defineProperty(prototype, 'models', {\n    configurable: true,\n    enumerable: false,\n    get: function models() {\n      let models = superModelsGetter.call(this);\n      if (models.length > 0 && !('query' in this.args.named)) {\n        if (isQueryParams(models[models.length - 1])) {\n          models = models.slice(0, -1);\n        }\n      }\n      return models;\n    }\n  });\n  let superQueryDescriptor = descriptorFor(prototype, 'query');\n   true && !(superQueryDescriptor && typeof superQueryDescriptor.get === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`[BUG] expecting query to be a getter on <LinkTo>`, superQueryDescriptor && typeof superQueryDescriptor.get === 'function');\n  let superQueryGetter = superQueryDescriptor.get;\n  Object.defineProperty(prototype, 'query', {\n    configurable: true,\n    enumerable: false,\n    get: function query() {\n      if ('query' in this.args.named) {\n        let qp = superQueryGetter.call(this);\n        if (isQueryParams(qp)) {\n          return qp.values ?? EMPTY_QUERY_PARAMS;\n        } else {\n          return qp;\n        }\n      } else {\n        let models = superModelsGetter.call(this);\n        if (models.length > 0) {\n          let qp = models[models.length - 1];\n          if (isQueryParams(qp) && qp.values !== null) {\n            return qp.values;\n          }\n        }\n        return EMPTY_QUERY_PARAMS;\n      }\n    }\n  });\n}\n\n// Positional Arguments\n{\n  let superOnUnsupportedArgument = prototype['onUnsupportedArgument'];\n  Object.defineProperty(prototype, 'onUnsupportedArgument', {\n    configurable: true,\n    enumerable: false,\n    value: function onUnsupportedArgument(name) {\n      if (name !== 'params') {\n        superOnUnsupportedArgument.call(this, name);\n      }\n    }\n  });\n}\nconst LinkTo = opaquify(_LinkTo, LinkToTemplate);\nconst TextareaTemplate = (0,_glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_1__.templateFactory)(\n/*\n  <textarea\n  {{!-- for compatibility --}}\n  id={{this.id}}\n  class={{this.class}}\n\n  ...attributes\n\n  value={{this.value}}\n\n  {{on \"change\" this.change}}\n  {{on \"input\" this.input}}\n  {{on \"keyup\" this.keyUp}}\n  {{on \"paste\" this.valueDidChange}}\n  {{on \"cut\" this.valueDidChange}}\n/>\n*/\n{\n  \"id\": \"112WKCh2\",\n  \"block\": \"[[[11,\\\"textarea\\\"],[16,1,[30,0,[\\\"id\\\"]]],[16,0,[30,0,[\\\"class\\\"]]],[17,1],[16,2,[30,0,[\\\"value\\\"]]],[4,[32,0],[\\\"change\\\",[30,0,[\\\"change\\\"]]],null],[4,[32,0],[\\\"input\\\",[30,0,[\\\"input\\\"]]],null],[4,[32,0],[\\\"keyup\\\",[30,0,[\\\"keyUp\\\"]]],null],[4,[32,0],[\\\"paste\\\",[30,0,[\\\"valueDidChange\\\"]]],null],[4,[32,0],[\\\"cut\\\",[30,0,[\\\"valueDidChange\\\"]]],null],[12],[13]],[\\\"&attrs\\\"],false,[]]\",\n  \"moduleName\": \"packages/@ember/-internals/glimmer/lib/templates/textarea.hbs\",\n  \"scope\": () => [on],\n  \"isStrictMode\": true\n});\n\n/**\n@module @ember/component\n*/\n\nclass _Textarea extends AbstractInput {\n  static toString() {\n    return 'Textarea';\n  }\n  get class() {\n    return 'ember-text-area ember-view';\n  }\n\n  // See abstract-input.ts for why these are needed\n\n  change(event) {\n    super.change(event);\n  }\n  input(event) {\n    super.input(event);\n  }\n  isSupportedArgument(name) {\n    let supportedArguments = ['type', 'value', 'enter', 'insert-newline', 'escape-press'];\n    return supportedArguments.indexOf(name) !== -1 || super.isSupportedArgument(name);\n  }\n}\n_Textarea2 = _Textarea;\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.a)(_Textarea2.prototype, \"change\", [_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.b]);\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.a)(_Textarea2.prototype, \"input\", [_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.b]);\nconst Textarea = opaquify(_Textarea, TextareaTemplate);\nfunction isTemplateFactory(template) {\n  return typeof template === 'function';\n}\nfunction referenceForParts(rootRef, parts) {\n  let isAttrs = parts[0] === 'attrs';\n\n  // TODO deprecate this\n  if (isAttrs) {\n    parts.shift();\n    if (parts.length === 1) {\n      return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.childRefFor)(rootRef, parts[0]);\n    }\n  }\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.childRefFromParts)(rootRef, parts);\n}\nfunction parseAttributeBinding(microsyntax) {\n  let colonIndex = microsyntax.indexOf(':');\n  if (colonIndex === -1) {\n     true && !(microsyntax !== 'class') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You cannot use class as an attributeBinding, use classNameBindings instead.', microsyntax !== 'class');\n    return [microsyntax, microsyntax, true];\n  } else {\n    let prop = microsyntax.substring(0, colonIndex);\n    let attribute = microsyntax.substring(colonIndex + 1);\n     true && !(attribute !== 'class') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You cannot use class as an attributeBinding, use classNameBindings instead.', attribute !== 'class');\n    return [prop, attribute, false];\n  }\n}\nfunction installAttributeBinding(component, rootRef, parsed, operations) {\n  let [prop, attribute, isSimple] = parsed;\n  if (attribute === 'id') {\n    // SAFETY: `get` could not infer the type of `prop` and just gave us `unknown`.\n    //         we may want to throw an error in the future if the value isn't string or null/undefined.\n    let elementId = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(component, prop);\n    if (elementId === undefined || elementId === null) {\n      elementId = component.elementId;\n    }\n    let elementIdRef = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createPrimitiveRef)(elementId);\n    operations.setAttribute('id', elementIdRef, true, null);\n    return;\n  }\n  let isPath = prop.indexOf('.') > -1;\n  let reference = isPath ? referenceForParts(rootRef, prop.split('.')) : (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.childRefFor)(rootRef, prop);\n   true && !!(isSimple && isPath) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Illegal attributeBinding: '${prop}' is not a valid attribute name.`, !(isSimple && isPath));\n  operations.setAttribute(attribute, reference, false, null);\n}\nfunction createClassNameBindingRef(rootRef, microsyntax, operations) {\n  let parts = microsyntax.split(':');\n  let [prop, truthy, falsy] = parts;\n  // NOTE: This could be an empty string\n   true && !(prop !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has prop', prop !== undefined); // Will always have at least one part\n  let isStatic = prop === '';\n  if (isStatic) {\n    operations.setAttribute('class', (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createPrimitiveRef)(truthy), true, null);\n  } else {\n    let isPath = prop.indexOf('.') > -1;\n    let parts = isPath ? prop.split('.') : [];\n    let value = isPath ? referenceForParts(rootRef, parts) : (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.childRefFor)(rootRef, prop);\n    let ref;\n    if (truthy === undefined) {\n      ref = createSimpleClassNameBindingRef(value, isPath ? parts[parts.length - 1] : prop);\n    } else {\n      ref = createColonClassNameBindingRef(value, truthy, falsy);\n    }\n    operations.setAttribute('class', ref, false, null);\n  }\n}\nfunction createSimpleClassNameBindingRef(inner, path) {\n  let dasherizedPath;\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n    let value = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(inner);\n    if (value === true) {\n       true && !(path !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You must pass a path when binding a to a class name using classNameBindings', path !== undefined);\n      return dasherizedPath || (dasherizedPath = (0,_ember_internals_string_index_js__WEBPACK_IMPORTED_MODULE_59__.dasherize)(path));\n    } else if (value || value === 0) {\n      return String(value);\n    } else {\n      return null;\n    }\n  });\n}\nfunction createColonClassNameBindingRef(inner, truthy, falsy) {\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n    return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(inner) ? truthy : falsy;\n  });\n}\nfunction NOOP$1() {}\n\n/**\n  @module ember\n*/\n\n/**\n  Represents the internal state of the component.\n\n  @class ComponentStateBucket\n  @private\n*/\nclass ComponentStateBucket {\n  constructor(component, args, argsTag, finalizer, hasWrappedElement, isInteractive) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"classRef\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"rootRef\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"argsRevision\", void 0);\n    this.component = component;\n    this.args = args;\n    this.argsTag = argsTag;\n    this.finalizer = finalizer;\n    this.hasWrappedElement = hasWrappedElement;\n    this.isInteractive = isInteractive;\n    this.classRef = null;\n    this.argsRevision = args === null ? 0 : (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.valueForTag)(argsTag);\n    this.rootRef = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createConstRef)(component, 'this');\n    (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_14__.registerDestructor)(this, () => this.willDestroy(), true);\n    (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_14__.registerDestructor)(this, () => this.component.destroy());\n  }\n  willDestroy() {\n    let {\n      component,\n      isInteractive\n    } = this;\n    if (isInteractive) {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.beginUntrackFrame)();\n      component.trigger('willDestroyElement');\n      component.trigger('willClearRender');\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.endUntrackFrame)();\n      let element = (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.getViewElement)(component);\n      if (element) {\n        (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.clearElementView)(element);\n        (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.clearViewElement)(component);\n      }\n    }\n    component.renderer.unregister(component);\n  }\n  finalize() {\n    let {\n      finalizer\n    } = this;\n    finalizer();\n    this.finalizer = NOOP$1;\n  }\n}\nfunction internalHelper(helper) {\n  return (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.setInternalHelperManager)(helper, {});\n}\n\n/**\n@module ember\n*/\nconst ACTIONS = new WeakSet();\n\n/**\n  The `{{action}}` helper provides a way to pass triggers for behavior (usually\n  just a function) between components, and into components from controllers.\n\n  ### Passing functions with the action helper\n\n  There are three contexts an action helper can be used in. The first two\n  contexts to discuss are attribute context, and Handlebars value context.\n\n  ```handlebars\n  {{! An example of attribute context }}\n  <div onclick={{action \"save\"}}></div>\n  {{! Examples of Handlebars value context }}\n  {{input on-input=(action \"save\")}}\n  {{yield (action \"refreshData\") andAnotherParam}}\n  ```\n\n  In these contexts,\n  the helper is called a \"closure action\" helper. Its behavior is simple:\n  If passed a function name, read that function off the `actions` property\n  of the current context. Once that function is read, or immediately if a function was\n  passed, create a closure over that function and any arguments.\n  The resulting value of an action helper used this way is simply a function.\n\n  For example, in the attribute context:\n\n  ```handlebars\n  {{! An example of attribute context }}\n  <div onclick={{action \"save\"}}></div>\n  ```\n\n  The resulting template render logic would be:\n\n  ```js\n  var div = document.createElement('div');\n  var actionFunction = (function(context){\n    return function() {\n      return context.actions.save.apply(context, arguments);\n    };\n  })(context);\n  div.onclick = actionFunction;\n  ```\n\n  Thus when the div is clicked, the action on that context is called.\n  Because the `actionFunction` is just a function, closure actions can be\n  passed between components and still execute in the correct context.\n\n  Here is an example action handler on a component:\n\n  ```app/components/my-component.js\n  import Component from '@glimmer/component';\n  import { action } from '@ember/object';\n\n  export default class extends Component {\n    @action\n    save() {\n      this.model.save();\n    }\n  }\n  ```\n\n  Actions are always looked up on the `actions` property of the current context.\n  This avoids collisions in the naming of common actions, such as `destroy`.\n  Two options can be passed to the `action` helper when it is used in this way.\n\n  * `target=someProperty` will look to `someProperty` instead of the current\n    context for the `actions` hash. This can be useful when targeting a\n    service for actions.\n  * `value=\"target.value\"` will read the path `target.value` off the first\n    argument to the action when it is called and rewrite the first argument\n    to be that value. This is useful when attaching actions to event listeners.\n\n  ### Invoking an action\n\n  Closure actions curry both their scope and any arguments. When invoked, any\n  additional arguments are added to the already curried list.\n  Actions are presented in JavaScript as callbacks, and are\n  invoked like any other JavaScript function.\n\n  For example\n\n  ```app/components/update-name.js\n  import Component from '@glimmer/component';\n  import { action } from '@ember/object';\n\n  export default class extends Component {\n    @action\n    setName(model, name) {\n      model.set('name', name);\n    }\n  }\n  ```\n\n  ```app/components/update-name.hbs\n  {{input on-input=(action (action 'setName' @model) value=\"target.value\")}}\n  ```\n\n  The first argument (`@model`) was curried over, and the run-time argument (`event`)\n  becomes a second argument. Action calls can be nested this way because each simply\n  returns a function. Any function can be passed to the `{{action}}` helper, including\n  other actions.\n\n  Actions invoked with `sendAction` have the same currying behavior as demonstrated\n  with `on-input` above. For example:\n\n  ```app/components/my-input.js\n  import Component from '@glimmer/component';\n  import { action } from '@ember/object';\n\n  export default class extends Component {\n    @action\n    setName(model, name) {\n      model.set('name', name);\n    }\n  }\n  ```\n\n  ```handlebars\n  <MyInput @submit={{action 'setName' @model}} />\n  ```\n\n  or\n\n  ```handlebars\n  {{my-input submit=(action 'setName' @model)}}\n  ```\n\n  ```app/components/my-component.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    click() {\n      // Note that model is not passed, it was curried in the template\n      this.submit('bob');\n    }\n  });\n  ```\n\n  ### Attaching actions to DOM elements\n\n  The third context of the `{{action}}` helper can be called \"element space\".\n  For example:\n\n  ```handlebars\n  {{! An example of element space }}\n  <div {{action \"save\"}}></div>\n  ```\n\n  Used this way, the `{{action}}` helper provides a useful shortcut for\n  registering an HTML element in a template for a single DOM event and\n  forwarding that interaction to the template's context (controller or component).\n  If the context of a template is a controller, actions used this way will\n  bubble to routes when the controller does not implement the specified action.\n  Once an action hits a route, it will bubble through the route hierarchy.\n\n  ### Event Propagation\n\n  `{{action}}` helpers called in element space can control event bubbling. Note\n  that the closure style actions cannot.\n\n  Events triggered through the action helper will automatically have\n  `.preventDefault()` called on them. You do not need to do so in your event\n  handlers. If you need to allow event propagation (to handle file inputs for\n  example) you can supply the `preventDefault=false` option to the `{{action}}` helper:\n\n  ```handlebars\n  <div {{action \"sayHello\" preventDefault=false}}>\n    <input type=\"file\" />\n    <input type=\"checkbox\" />\n  </div>\n  ```\n\n  To disable bubbling, pass `bubbles=false` to the helper:\n\n  ```handlebars\n  <button {{action 'edit' post bubbles=false}}>Edit</button>\n  ```\n\n  To disable bubbling with closure style actions you must create your own\n  wrapper helper that makes use of `event.stopPropagation()`:\n\n  ```handlebars\n  <div onclick={{disable-bubbling (action \"sayHello\")}}>Hello</div>\n  ```\n\n  ```app/helpers/disable-bubbling.js\n  import { helper } from '@ember/component/helper';\n\n  export function disableBubbling([action]) {\n    return function(event) {\n      event.stopPropagation();\n      return action(event);\n    };\n  }\n  export default helper(disableBubbling);\n  ```\n\n  If you need the default handler to trigger you should either register your\n  own event handler, or use event methods on your view class. See\n  [\"Responding to Browser Events\"](/ember/release/classes/Component)\n  in the documentation for `Component` for more information.\n\n  ### Specifying DOM event type\n\n  `{{action}}` helpers called in element space can specify an event type.\n  By default the `{{action}}` helper registers for DOM `click` events. You can\n  supply an `on` option to the helper to specify a different DOM event name:\n\n  ```handlebars\n  <div {{action \"anActionName\" on=\"doubleClick\"}}>\n    click me\n  </div>\n  ```\n\n  See [\"Event Names\"](/ember/release/classes/Component) for a list of\n  acceptable DOM event names.\n\n  ### Specifying whitelisted modifier keys\n\n  `{{action}}` helpers called in element space can specify modifier keys.\n  By default the `{{action}}` helper will ignore click events with pressed modifier\n  keys. You can supply an `allowedKeys` option to specify which keys should not be ignored.\n\n  ```handlebars\n  <div {{action \"anActionName\" allowedKeys=\"alt\"}}>\n    click me\n  </div>\n  ```\n\n  This way the action will fire when clicking with the alt key pressed down.\n  Alternatively, supply \"any\" to the `allowedKeys` option to accept any combination of modifier keys.\n\n  ```handlebars\n  <div {{action \"anActionName\" allowedKeys=\"any\"}}>\n    click me with any key pressed\n  </div>\n  ```\n\n  ### Specifying a Target\n\n  A `target` option can be provided to the helper to change\n  which object will receive the method call. This option must be a path\n  to an object, accessible in the current context:\n\n  ```app/templates/application.hbs\n  <div {{action \"anActionName\" target=someService}}>\n    click me\n  </div>\n  ```\n\n  ```app/controllers/application.js\n  import Controller from '@ember/controller';\n  import { service } from '@ember/service';\n\n  export default class extends Controller {\n    @service someService;\n  }\n  ```\n\n  @method action\n  @for Ember.Templates.helpers\n  @public\n*/\nconst action = internalHelper(args => {\n  (0,_ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_52__.deprecateUntil)(`Usage of the \\`(action)\\` helper is deprecated. Migrate to native functions and function invocation.`, _ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_52__.DEPRECATIONS.DEPRECATE_TEMPLATE_ACTION);\n  let {\n    named,\n    positional\n  } = args;\n  // The first two argument slots are reserved.\n  // pos[0] is the context (or `this`)\n  // pos[1] is the action name or function\n  // Anything else is an action argument.\n  let [context, action, ...restArgs] = positional;\n   true && !(context && action) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('hash position arguments', context && action);\n  let debugKey = action.debugLabel;\n  let target = 'target' in named ? named['target'] : context;\n  let processArgs = makeArgsProcessor('value' in named && named['value'] || false, restArgs);\n  let fn;\n  if ((0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isInvokableRef)(action)) {\n    fn = makeClosureAction(action, action, invokeRef, processArgs, debugKey);\n  } else {\n    fn = makeDynamicClosureAction((0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(context),\n    // SAFETY: glimmer-vm should expose narrowing utilities for references\n    //         as is, `target` is still `Reference<unknown>`.\n    //         however, we never even tried to narrow `target`, so this is potentially risky code.\n    target,\n    // SAFETY: glimmer-vm should expose narrowing utilities for references\n    //         as is, `action` is still `Reference<unknown>`\n    action, processArgs, debugKey);\n  }\n  ACTIONS.add(fn);\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createUnboundRef)(fn, '(result of an `action` helper)');\n});\nfunction NOOP(args) {\n  return args;\n}\nfunction makeArgsProcessor(valuePathRef, actionArgsRef) {\n  let mergeArgs;\n  if (actionArgsRef.length > 0) {\n    mergeArgs = args => {\n      return actionArgsRef.map(_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef).concat(args);\n    };\n  }\n  let readValue;\n  if (valuePathRef) {\n    readValue = args => {\n      let valuePath = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(valuePathRef);\n      if (valuePath && args.length > 0) {\n        args[0] = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(args[0], valuePath);\n      }\n      return args;\n    };\n  }\n  if (mergeArgs && readValue) {\n    return args => {\n      return readValue(mergeArgs(args));\n    };\n  } else {\n    return mergeArgs || readValue || NOOP;\n  }\n}\nfunction makeDynamicClosureAction(context, targetRef, actionRef, processArgs, debugKey) {\n  const action = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(actionRef);\n\n  // We don't allow undefined/null values, so this creates a throw-away action to trigger the assertions\n  if (true) {\n    makeClosureAction(context, (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(targetRef), action, processArgs, debugKey);\n  }\n  return (...args) => {\n    return makeClosureAction(context, (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(targetRef), action, processArgs, debugKey)(...args);\n  };\n}\nfunction makeClosureAction(context, target, action, processArgs, debugKey) {\n  let self;\n  let fn;\n   true && !(action !== undefined && action !== null) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Action passed is null or undefined in (action) from ${target}.`, action !== undefined && action !== null);\n  if (typeof action === 'string') {\n     true && !(target !== null && typeof target === 'object') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('target must be an object', target !== null && typeof target === 'object');\n    self = target;\n    let value = target.actions?.[action];\n     true && !Boolean(value) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`An action named '${action}' was not found in ${target}`, Boolean(value));\n     true && !(typeof value === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`An action named '${action}' was found in ${target}, but is not a function`, typeof value === 'function');\n    fn = value;\n  } else if (typeof action === 'function') {\n    self = context;\n    fn = action;\n  } else {\n     true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`An action could not be made for \\`${debugKey || action}\\` in ${target}. Please confirm that you are using either a quoted action name (i.e. \\`(action '${debugKey || 'myAction'}')\\`) or a function available in ${target}.`, false);\n  }\n  return (...args) => {\n    let payload = {\n      target: self,\n      args,\n      label: '@glimmer/closure-action'\n    };\n    return (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__.flaggedInstrument)('interaction.ember-action', payload, () => {\n      return (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.j)(self, fn, ...processArgs(args));\n    });\n  };\n}\n\n// The code above:\n\n// 1. Finds an action function, usually on the `actions` hash\n// 2. Calls it with the target as the correct `this` context\n\n// Previously, `UPDATE_REFERENCED_VALUE` was a method on the reference itself,\n// so this made a bit more sense. Now, it isn't, and so we need to create a\n// function that can have `this` bound to it when called. This allows us to use\n// the same codepath to call `updateRef` on the reference.\nfunction invokeRef(value) {\n  (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.updateRef)(this, value);\n}\nfunction processComponentArgs(namedArgs) {\n  let attrs = Object.create(null);\n  let props = Object.create(null);\n  props[ARGS] = namedArgs;\n  for (let name in namedArgs) {\n    let ref = namedArgs[name];\n     true && !ref && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected ref', ref);\n    let value = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(ref);\n    let isAction = typeof value === 'function' && ACTIONS.has(value);\n    if ((0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isUpdatableRef)(ref) && !isAction) {\n      attrs[name] = new MutableCell(ref, value);\n    } else {\n      attrs[name] = value;\n    }\n    props[name] = value;\n  }\n  props.attrs = attrs;\n  return props;\n}\nconst REF = Symbol('REF');\nclass MutableCell {\n  constructor(ref, value) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"value\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, _ember_internals_views_lib_compat_attrs_js__WEBPACK_IMPORTED_MODULE_60__.MUTABLE_CELL, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, REF, void 0);\n    this[_ember_internals_views_lib_compat_attrs_js__WEBPACK_IMPORTED_MODULE_60__.MUTABLE_CELL] = true;\n    this[REF] = ref;\n    this.value = value;\n  }\n  update(val) {\n    (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.updateRef)(this[REF], val);\n  }\n}\nconst ARGS = (0,_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_56__.e)('ARGS');\nconst HAS_BLOCK = (0,_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_56__.e)('HAS_BLOCK');\nconst DIRTY_TAG = Symbol('DIRTY_TAG');\nconst IS_DISPATCHING_ATTRS = Symbol('IS_DISPATCHING_ATTRS');\nconst BOUNDS = Symbol('BOUNDS');\nconst EMBER_VIEW_REF = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createPrimitiveRef)('ember-view');\nfunction aliasIdToElementId(args, props) {\n  if (args.named.has('id')) {\n     true && !!args.named.has('elementId') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You cannot invoke a component with both 'id' and 'elementId' at the same time.`, !args.named.has('elementId'));\n    props.elementId = props.id;\n  }\n}\n\n// We must traverse the attributeBindings in reverse keeping track of\n// what has already been applied. This is essentially refining the concatenated\n// properties applying right to left.\nfunction applyAttributeBindings(attributeBindings, component, rootRef, operations) {\n  let seen = [];\n  let i = attributeBindings.length - 1;\n  while (i !== -1) {\n    let binding = attributeBindings[i];\n     true && !binding && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has binding', binding);\n    let parsed = parseAttributeBinding(binding);\n    let attribute = parsed[1];\n    if (seen.indexOf(attribute) === -1) {\n      seen.push(attribute);\n      installAttributeBinding(component, rootRef, parsed, operations);\n    }\n    i--;\n  }\n  if (seen.indexOf('id') === -1) {\n    let id = component.elementId ? component.elementId : (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.g)(component);\n    operations.setAttribute('id', (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createPrimitiveRef)(id), false, null);\n  }\n}\nconst EMPTY_POSITIONAL_ARGS = [];\n(0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.h)(EMPTY_POSITIONAL_ARGS);\nclass CurlyComponentManager {\n  templateFor(component) {\n    let {\n      layout,\n      layoutName\n    } = component;\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(component);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Component is unexpectedly missing an owner', owner);\n    let factory;\n    if (layout === undefined) {\n      if (layoutName !== undefined) {\n        let _factory = owner.lookup(`template:${layoutName}`);\n         true && !(_factory !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Layout \\`${layoutName}\\` not found!`, _factory !== undefined);\n        factory = _factory;\n      } else {\n        return null;\n      }\n    } else if (isTemplateFactory(layout)) {\n      factory = layout;\n    } else {\n      // no layout was found, use the default layout\n      return null;\n    }\n    return (0,_glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_58__.unwrapTemplate)(factory(owner)).asWrappedLayout();\n  }\n  getDynamicLayout(bucket) {\n    return this.templateFor(bucket.component);\n  }\n  getTagName(state) {\n    let {\n      component,\n      hasWrappedElement\n    } = state;\n    if (!hasWrappedElement) {\n      return null;\n    }\n    return component && component.tagName || 'div';\n  }\n  getCapabilities() {\n    return CURLY_CAPABILITIES;\n  }\n  prepareArgs(ComponentClass, args) {\n    if (args.named.has('__ARGS__')) {\n       true && !(args.positional.length === 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] cannot pass both __ARGS__ and positional arguments', args.positional.length === 0);\n      let {\n        __ARGS__,\n        ...rest\n      } = args.named.capture();\n       true && !__ARGS__ && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] unexpectedly missing __ARGS__ after check', __ARGS__); // does this need to be untracked?\n      let __args__ = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(__ARGS__);\n      let prepared = {\n        positional: __args__.positional,\n        named: {\n          ...rest,\n          ...__args__.named\n        }\n      };\n      return prepared;\n    }\n    const {\n      positionalParams\n    } = ComponentClass.class ?? ComponentClass;\n\n    // early exits\n    if (positionalParams === undefined || positionalParams === null || args.positional.length === 0) {\n      return null;\n    }\n    let named;\n    if (typeof positionalParams === 'string') {\n       true && !!args.named.has(positionalParams) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You cannot specify positional parameters and the hash argument \\`${positionalParams}\\`.`, !args.named.has(positionalParams));\n      let captured = args.positional.capture();\n      named = {\n        [positionalParams]: (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.reifyPositional)(captured))\n      };\n      Object.assign(named, args.named.capture());\n    } else if (Array.isArray(positionalParams) && positionalParams.length > 0) {\n      const count = Math.min(positionalParams.length, args.positional.length);\n      named = {};\n      Object.assign(named, args.named.capture());\n      for (let i = 0; i < count; i++) {\n        let name = positionalParams[i];\n         true && !name && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected at least one positional param', name);\n         true && !!args.named.has(name) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You cannot specify both a positional param (at position ${i}) and the hash argument \\`${name}\\`.`, !args.named.has(name));\n        named[name] = args.positional.at(i);\n      }\n    } else {\n      return null;\n    }\n    return {\n      positional: _glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_58__.EMPTY_ARRAY,\n      named\n    };\n  }\n\n  /*\n   * This hook is responsible for actually instantiating the component instance.\n   * It also is where we perform additional bookkeeping to support legacy\n   * features like exposed by view mixins like ChildViewSupport, ActionSupport,\n   * etc.\n   */\n  create(owner, ComponentClass, args, {\n    isInteractive\n  }, dynamicScope, callerSelfRef, hasBlock) {\n    // Get the nearest concrete component instance from the scope. \"Virtual\"\n    // components will be skipped.\n    let parentView = dynamicScope.view;\n\n    // Capture the arguments, which tells Glimmer to give us our own, stable\n    // copy of the Arguments object that is safe to hold on to between renders.\n    let capturedArgs = args.named.capture();\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.beginTrackFrame)();\n    let props = processComponentArgs(capturedArgs);\n    let argsTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.endTrackFrame)();\n\n    // Alias `id` argument to `elementId` property on the component instance.\n    aliasIdToElementId(args, props);\n\n    // Set component instance's parentView property to point to nearest concrete\n    // component.\n    props.parentView = parentView;\n\n    // Set whether this component was invoked with a block\n    // (`{{#my-component}}{{/my-component}}`) or without one\n    // (`{{my-component}}`).\n    props[HAS_BLOCK] = hasBlock;\n\n    // Save the current `this` context of the template as the component's\n    // `_target`, so bubbled actions are routed to the right place.\n    props._target = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(callerSelfRef);\n    (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.setOwner)(props, owner);\n\n    // caller:\n    // <FaIcon @name=\"bug\" />\n    //\n    // callee:\n    // <i class=\"fa-{{@name}}\"></i>\n\n    // Now that we've built up all of the properties to set on the component instance,\n    // actually create it.\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.beginUntrackFrame)();\n    let component = ComponentClass.create(props);\n    let finalizer = (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__._instrumentStart)('render.component', initialRenderInstrumentDetails, component);\n\n    // We become the new parentView for downstream components, so save our\n    // component off on the dynamic scope.\n    dynamicScope.view = component;\n\n    // Unless we're the root component, we need to add ourselves to our parent\n    // component's childViews array.\n    if (parentView !== null && parentView !== undefined) {\n      (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.addChildView)(parentView, component);\n    }\n    component.trigger('didReceiveAttrs');\n    let hasWrappedElement = component.tagName !== '';\n\n    // We usually do this in the `didCreateElement`, but that hook doesn't fire for tagless components\n    if (!hasWrappedElement) {\n      if (isInteractive) {\n        component.trigger('willRender');\n      }\n      component._transitionTo('hasElement');\n      if (isInteractive) {\n        component.trigger('willInsertElement');\n      }\n    }\n\n    // Track additional lifecycle metadata about this component in a state bucket.\n    // Essentially we're saving off all the state we'll need in the future.\n    let bucket = new ComponentStateBucket(component, capturedArgs, argsTag, finalizer, hasWrappedElement, isInteractive);\n    if (args.named.has('class')) {\n      bucket.classRef = args.named.get('class');\n    }\n    if (true) {\n      processComponentInitializationAssertions(component, props);\n    }\n    if (isInteractive && hasWrappedElement) {\n      component.trigger('willRender');\n    }\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.endUntrackFrame)();\n\n    // consume every argument so we always run again\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)(bucket.argsTag);\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)(component[DIRTY_TAG]);\n    return bucket;\n  }\n  getDebugName(definition) {\n    return definition.fullName || definition.normalizedName || definition.class?.name || definition.name;\n  }\n  getSelf({\n    rootRef\n  }) {\n    return rootRef;\n  }\n  didCreateElement({\n    component,\n    classRef,\n    isInteractive,\n    rootRef\n  }, element, operations) {\n    (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.setViewElement)(component, element);\n    (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.setElementView)(element, component);\n    let {\n      attributeBindings,\n      classNames,\n      classNameBindings\n    } = component;\n    if (attributeBindings && attributeBindings.length) {\n      applyAttributeBindings(attributeBindings, component, rootRef, operations);\n    } else {\n      let id = component.elementId ? component.elementId : (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.g)(component);\n      operations.setAttribute('id', (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createPrimitiveRef)(id), false, null);\n    }\n    if (classRef) {\n      const ref = createSimpleClassNameBindingRef(classRef);\n      operations.setAttribute('class', ref, false, null);\n    }\n    if (classNames && classNames.length) {\n      classNames.forEach(name => {\n        operations.setAttribute('class', (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createPrimitiveRef)(name), false, null);\n      });\n    }\n    if (classNameBindings && classNameBindings.length) {\n      classNameBindings.forEach(binding => {\n        createClassNameBindingRef(rootRef, binding, operations);\n      });\n    }\n    operations.setAttribute('class', EMBER_VIEW_REF, false, null);\n    if ('ariaRole' in component) {\n      operations.setAttribute('role', (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.childRefFor)(rootRef, 'ariaRole'), false, null);\n    }\n    component._transitionTo('hasElement');\n    if (isInteractive) {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.beginUntrackFrame)();\n      component.trigger('willInsertElement');\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.endUntrackFrame)();\n    }\n  }\n  didRenderLayout(bucket, bounds) {\n    bucket.component[BOUNDS] = bounds;\n    bucket.finalize();\n  }\n  didCreate({\n    component,\n    isInteractive\n  }) {\n    if (isInteractive) {\n      component._transitionTo('inDOM');\n      component.trigger('didInsertElement');\n      component.trigger('didRender');\n    }\n  }\n  update(bucket) {\n    let {\n      component,\n      args,\n      argsTag,\n      argsRevision,\n      isInteractive\n    } = bucket;\n    bucket.finalizer = (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__._instrumentStart)('render.component', rerenderInstrumentDetails, component);\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.beginUntrackFrame)();\n    if (args !== null && !(0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.validateTag)(argsTag, argsRevision)) {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.beginTrackFrame)();\n      let props = processComponentArgs(args);\n      argsTag = bucket.argsTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.endTrackFrame)();\n      bucket.argsRevision = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.valueForTag)(argsTag);\n      component[IS_DISPATCHING_ATTRS] = true;\n      component.setProperties(props);\n      component[IS_DISPATCHING_ATTRS] = false;\n      component.trigger('didUpdateAttrs');\n      component.trigger('didReceiveAttrs');\n    }\n    if (isInteractive) {\n      component.trigger('willUpdate');\n      component.trigger('willRender');\n    }\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.endUntrackFrame)();\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)(argsTag);\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)(component[DIRTY_TAG]);\n  }\n  didUpdateLayout(bucket) {\n    bucket.finalize();\n  }\n  didUpdate({\n    component,\n    isInteractive\n  }) {\n    if (isInteractive) {\n      component.trigger('didUpdate');\n      component.trigger('didRender');\n    }\n  }\n  getDestroyable(bucket) {\n    return bucket;\n  }\n}\nfunction processComponentInitializationAssertions(component, props) {\n   true && !(() => {\n    let {\n      classNameBindings\n    } = component;\n    for (let i = 0; i < classNameBindings.length; i++) {\n      let binding = classNameBindings[i];\n      if (typeof binding !== 'string' || binding.length === 0) {\n        return false;\n      }\n    }\n    return true;\n  })() && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`classNameBindings must be non-empty strings: ${component}`, (() => {\n    let {\n      classNameBindings\n    } = component;\n    for (let i = 0; i < classNameBindings.length; i++) {\n      let binding = classNameBindings[i];\n      if (typeof binding !== 'string' || binding.length === 0) {\n        return false;\n      }\n    }\n    return true;\n  })());\n   true && !(() => {\n    let {\n      classNameBindings\n    } = component;\n    for (let binding of classNameBindings) {\n      if (binding.split(' ').length > 1) {\n        return false;\n      }\n    }\n    return true;\n  })() && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`classNameBindings must not have spaces in them: ${component}`, (() => {\n    let {\n      classNameBindings\n    } = component;\n    for (let binding of classNameBindings) {\n      if (binding.split(' ').length > 1) {\n        return false;\n      }\n    }\n    return true;\n  })());\n   true && !(component.tagName !== '' || !component.classNameBindings || component.classNameBindings.length === 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You cannot use \\`classNameBindings\\` on a tag-less component: ${component}`, component.tagName !== '' || !component.classNameBindings || component.classNameBindings.length === 0);\n   true && !(component.tagName !== '' || props.id === component.elementId || !component.elementId && component.elementId !== '') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You cannot use \\`elementId\\` on a tag-less component: ${component}`, component.tagName !== '' || props.id === component.elementId || !component.elementId && component.elementId !== '');\n   true && !(component.tagName !== '' || !component.attributeBindings || component.attributeBindings.length === 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You cannot use \\`attributeBindings\\` on a tag-less component: ${component}`, component.tagName !== '' || !component.attributeBindings || component.attributeBindings.length === 0);\n}\nfunction initialRenderInstrumentDetails(component) {\n  return component.instrumentDetails({\n    initialRender: true\n  });\n}\nfunction rerenderInstrumentDetails(component) {\n  return component.instrumentDetails({\n    initialRender: false\n  });\n}\nconst CURLY_CAPABILITIES = {\n  dynamicLayout: true,\n  dynamicTag: true,\n  prepareArgs: true,\n  createArgs: true,\n  attributeHook: true,\n  elementHook: true,\n  createCaller: true,\n  dynamicScope: true,\n  updateHook: true,\n  createInstance: true,\n  wrapped: true,\n  willDestroy: true,\n  hasSubOwner: false\n};\nconst CURLY_COMPONENT_MANAGER = new CurlyComponentManager();\nfunction isCurlyManager(manager) {\n  return manager === CURLY_COMPONENT_MANAGER;\n}\nlet lazyEventsProcessed = new WeakMap();\n\n/**\n@module @ember/component\n*/\n\n// A zero-runtime-overhead private symbol to use in branding the component to\n// preserve its type parameter.\n\n/**\n  A component is a reusable UI element that consists of a `.hbs` template and an\n  optional JavaScript class that defines its behavior. For example, someone\n  might make a `button` in the template and handle the click behavior in the\n  JavaScript file that shares the same name as the template.\n\n  Components are broken down into two categories:\n\n  - Components _without_ JavaScript, that are based only on a template. These\n    are called Template-only or TO components.\n  - Components _with_ JavaScript, which consist of a template and a backing\n    class.\n\n  Ember ships with two types of JavaScript classes for components:\n\n  1. Glimmer components, imported from `@glimmer/component`, which are the\n     default component's for Ember Octane (3.15) and more recent editions.\n  2. Classic components, imported from `@ember/component`, which were the\n     default for older editions of Ember (pre 3.15).\n\n  Below is the documentation for Classic components. If you are looking for the\n  API documentation for Template-only or Glimmer components, it is\n  [available here](/ember/release/modules/@glimmer%2Fcomponent).\n\n  ## Defining a Classic Component\n\n  If you want to customize the component in order to handle events, transform\n  arguments or maintain internal state, you implement a subclass of `Component`.\n\n  One example is to add computed properties to your component:\n\n  ```app/components/person-profile.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    displayName: computed('person.title', 'person.firstName', 'person.lastName', function() {\n      let { title, firstName, lastName } = this.person;\n\n      if (title) {\n        return `${title} ${lastName}`;\n      } else {\n        return `${firstName} ${lastName}`;\n      }\n    })\n  });\n  ```\n\n  And then use it in the component's template:\n\n  ```app/templates/components/person-profile.hbs\n  <h1>{{this.displayName}}</h1>\n  {{yield}}\n  ```\n\n  ## Customizing a Classic Component's HTML Element in JavaScript\n\n  ### HTML Tag\n\n  The default HTML tag name used for a component's HTML representation is `div`.\n  This can be customized by setting the `tagName` property.\n\n  Consider the following component class:\n\n  ```app/components/emphasized-paragraph.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    tagName: 'em'\n  });\n  ```\n\n  When invoked, this component would produce output that looks something like\n  this:\n\n  ```html\n  <em id=\"ember1\" class=\"ember-view\"></em>\n  ```\n\n  ### HTML `class` Attribute\n\n  The HTML `class` attribute of a component's tag can be set by providing a\n  `classNames` property that is set to an array of strings:\n\n  ```app/components/my-widget.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    classNames: ['my-class', 'my-other-class']\n  });\n  ```\n\n  Invoking this component will produce output that looks like this:\n\n  ```html\n  <div id=\"ember1\" class=\"ember-view my-class my-other-class\"></div>\n  ```\n\n  `class` attribute values can also be set by providing a `classNameBindings`\n  property set to an array of properties names for the component. The return\n  value of these properties will be added as part of the value for the\n  components's `class` attribute. These properties can be computed properties:\n\n  ```app/components/my-widget.js\n  import Component from '@ember/component';\n  import { computed } from '@ember/object';\n\n  export default Component.extend({\n    classNames: ['my-class', 'my-other-class'],\n    classNameBindings: ['propertyA', 'propertyB'],\n\n    propertyA: 'from-a',\n    propertyB: computed(function() {\n      if (someLogic) { return 'from-b'; }\n    })\n  });\n  ```\n\n  Invoking this component will produce HTML that looks like:\n\n  ```html\n  <div id=\"ember1\" class=\"ember-view my-class my-other-class from-a from-b\"></div>\n  ```\n\n  Note that `classNames` and `classNameBindings` is in addition to the `class`\n  attribute passed with the angle bracket invocation syntax. Therefore, if this\n  component was invoked like so:\n\n  ```handlebars\n  <MyWidget class=\"from-invocation\" />\n  ```\n\n  The resulting HTML will look similar to this:\n\n  ```html\n  <div id=\"ember1\" class=\"from-invocation ember-view my-class my-other-class from-a from-b\"></div>\n  ```\n\n  If the value of a class name binding returns a boolean the property name\n  itself will be used as the class name if the property is true. The class name\n  will not be added if the value is `false` or `undefined`.\n\n  ```app/components/my-widget.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    classNameBindings: ['hovered'],\n\n    hovered: true\n  });\n  ```\n\n  Invoking this component will produce HTML that looks like:\n\n  ```html\n  <div id=\"ember1\" class=\"ember-view hovered\"></div>\n  ```\n\n  ### Custom Class Names for Boolean Values\n\n  When using boolean class name bindings you can supply a string value other\n  than the property name for use as the `class` HTML attribute by appending the\n  preferred value after a \":\" character when defining the binding:\n\n  ```app/components/my-widget.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    classNameBindings: ['awesome:so-very-cool'],\n\n    awesome: true\n  });\n  ```\n\n  Invoking this component will produce HTML that looks like:\n\n  ```html\n  <div id=\"ember1\" class=\"ember-view so-very-cool\"></div>\n  ```\n\n  Boolean value class name bindings whose property names are in a\n  camelCase-style format will be converted to a dasherized format:\n\n  ```app/components/my-widget.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    classNameBindings: ['isUrgent'],\n\n    isUrgent: true\n  });\n  ```\n\n  Invoking this component will produce HTML that looks like:\n\n  ```html\n  <div id=\"ember1\" class=\"ember-view is-urgent\"></div>\n  ```\n\n  Class name bindings can also refer to object values that are found by\n  traversing a path relative to the component itself:\n\n  ```app/components/my-widget.js\n  import Component from '@ember/component';\n  import EmberObject from '@ember/object';\n\n  export default Component.extend({\n    classNameBindings: ['messages.empty'],\n\n    messages: EmberObject.create({\n      empty: true\n    })\n  });\n  ```\n\n  Invoking this component will produce HTML that looks like:\n\n  ```html\n  <div id=\"ember1\" class=\"ember-view empty\"></div>\n  ```\n\n  If you want to add a class name for a property which evaluates to true and\n  and a different class name if it evaluates to false, you can pass a binding\n  like this:\n\n  ```app/components/my-widget.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    classNameBindings: ['isEnabled:enabled:disabled'],\n    isEnabled: true\n  });\n  ```\n\n  Invoking this component will produce HTML that looks like:\n\n  ```html\n  <div id=\"ember1\" class=\"ember-view enabled\"></div>\n  ```\n\n  When isEnabled is `false`, the resulting HTML representation looks like this:\n\n  ```html\n  <div id=\"ember1\" class=\"ember-view disabled\"></div>\n  ```\n\n  This syntax offers the convenience to add a class if a property is `false`:\n\n  ```app/components/my-widget.js\n  import Component from '@ember/component';\n\n  // Applies no class when isEnabled is true and class 'disabled' when isEnabled is false\n  export default Component.extend({\n    classNameBindings: ['isEnabled::disabled'],\n    isEnabled: true\n  });\n  ```\n\n  Invoking this component when the `isEnabled` property is true will produce\n  HTML that looks like:\n\n  ```html\n  <div id=\"ember1\" class=\"ember-view\"></div>\n  ```\n\n  Invoking it when the `isEnabled` property on the component is `false` will\n  produce HTML that looks like:\n\n  ```html\n  <div id=\"ember1\" class=\"ember-view disabled\"></div>\n  ```\n\n  Updates to the value of a class name binding will result in automatic update\n  of the  HTML `class` attribute in the component's rendered HTML\n  representation. If the value becomes `false` or `undefined` the class name\n  will be removed.\n\n  Both `classNames` and `classNameBindings` are concatenated properties. See\n  [EmberObject](/ember/release/classes/EmberObject) documentation for more\n  information about concatenated properties.\n\n  ### Other HTML Attributes\n\n  The HTML attribute section of a component's tag can be set by providing an\n  `attributeBindings` property set to an array of property names on the component.\n  The return value of these properties will be used as the value of the component's\n  HTML associated attribute:\n\n  ```app/components/my-anchor.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    tagName: 'a',\n    attributeBindings: ['href'],\n\n    href: 'http://google.com'\n  });\n  ```\n\n  Invoking this component will produce HTML that looks like:\n\n  ```html\n  <a id=\"ember1\" class=\"ember-view\" href=\"http://google.com\"></a>\n  ```\n\n  One property can be mapped on to another by placing a \":\" between\n  the source property and the destination property:\n\n  ```app/components/my-anchor.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    tagName: 'a',\n    attributeBindings: ['url:href'],\n\n    url: 'http://google.com'\n  });\n  ```\n\n  Invoking this component will produce HTML that looks like:\n\n  ```html\n  <a id=\"ember1\" class=\"ember-view\" href=\"http://google.com\"></a>\n  ```\n\n  HTML attributes passed with angle bracket invocations will take precedence\n  over those specified in `attributeBindings`. Therefore, if this component was\n  invoked like so:\n\n  ```handlebars\n  <MyAnchor href=\"http://bing.com\" @url=\"http://google.com\" />\n  ```\n\n  The resulting HTML will looks like this:\n\n  ```html\n  <a id=\"ember1\" class=\"ember-view\" href=\"http://bing.com\"></a>\n  ```\n\n  Note that the `href` attribute is ultimately set to `http://bing.com`,\n  despite it having attribute binidng to the `url` property, which was\n  set to `http://google.com`.\n\n  Namespaced attributes (e.g. `xlink:href`) are supported, but have to be\n  mapped, since `:` is not a valid character for properties in Javascript:\n\n  ```app/components/my-use.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    tagName: 'use',\n    attributeBindings: ['xlinkHref:xlink:href'],\n\n    xlinkHref: '#triangle'\n  });\n  ```\n\n  Invoking this component will produce HTML that looks like:\n\n  ```html\n  <use xlink:href=\"#triangle\"></use>\n  ```\n\n  If the value of a property monitored by `attributeBindings` is a boolean, the\n  attribute will be present or absent depending on the value:\n\n  ```app/components/my-text-input.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    tagName: 'input',\n    attributeBindings: ['disabled'],\n\n    disabled: false\n  });\n  ```\n\n  Invoking this component will produce HTML that looks like:\n\n  ```html\n  <input id=\"ember1\" class=\"ember-view\" />\n  ```\n\n  `attributeBindings` can refer to computed properties:\n\n  ```app/components/my-text-input.js\n  import Component from '@ember/component';\n  import { computed } from '@ember/object';\n\n  export default Component.extend({\n    tagName: 'input',\n    attributeBindings: ['disabled'],\n\n    disabled: computed(function() {\n      if (someLogic) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n  });\n  ```\n\n  To prevent setting an attribute altogether, use `null` or `undefined` as the\n  value of the property used in `attributeBindings`:\n\n  ```app/components/my-text-input.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    tagName: 'form',\n    attributeBindings: ['novalidate'],\n    novalidate: null\n  });\n  ```\n\n  Updates to the property of an attribute binding will result in automatic\n  update of the  HTML attribute in the component's HTML output.\n\n  `attributeBindings` is a concatenated property. See\n  [EmberObject](/ember/release/classes/EmberObject) documentation for more\n  information about concatenated properties.\n\n  ## Layouts\n\n  The `layout` property can be used to dynamically specify a template associated\n  with a component class, instead of relying on Ember to link together a\n  component class and a template based on file names.\n\n  In general, applications should not use this feature, but it's commonly used\n  in addons for historical reasons.\n\n  The `layout` property should be set to the default export of a template\n  module, which is the name of a template file without the `.hbs` extension.\n\n  ```app/templates/components/person-profile.hbs\n  <h1>Person's Title</h1>\n  <div class='details'>{{yield}}</div>\n  ```\n\n  ```app/components/person-profile.js\n    import Component from '@ember/component';\n    import layout from '../templates/components/person-profile';\n\n    export default Component.extend({\n      layout\n    });\n  ```\n\n  If you invoke the component:\n\n  ```handlebars\n  <PersonProfile>\n    <h2>Chief Basket Weaver</h2>\n    <h3>Fisherman Industries</h3>\n  </PersonProfile>\n  ```\n\n  or\n\n  ```handlebars\n  {{#person-profile}}\n    <h2>Chief Basket Weaver</h2>\n    <h3>Fisherman Industries</h3>\n  {{/person-profile}}\n  ```\n\n  It will result in the following HTML output:\n\n  ```html\n  <h1>Person's Title</h1>\n    <div class=\"details\">\n    <h2>Chief Basket Weaver</h2>\n    <h3>Fisherman Industries</h3>\n  </div>\n  ```\n\n  ## Handling Browser Events\n\n  Components can respond to user-initiated events in one of three ways: passing\n  actions with angle bracket invocation, adding event handler methods to the\n  component's class, or adding actions to the component's template.\n\n  ### Passing Actions With Angle Bracket Invocation\n\n  For one-off events specific to particular instance of a component, it is possible\n  to pass actions to the component's element using angle bracket invocation syntax.\n\n  ```handlebars\n  <MyWidget {{action 'firstWidgetClicked'}} />\n\n  <MyWidget {{action 'secondWidgetClicked'}} />\n  ```\n\n  In this case, when the first component is clicked on, Ember will invoke the\n  `firstWidgetClicked` action. When the second component is clicked on, Ember\n  will invoke the `secondWidgetClicked` action instead.\n\n  Besides `{{action}}`, it is also possible to pass any arbitrary element modifiers\n  using the angle bracket invocation syntax.\n\n  ### Event Handler Methods\n\n  Components can also respond to user-initiated events by implementing a method\n  that matches the event name. This approach is appropriate when the same event\n  should be handled by all instances of the same component.\n\n  An event object will be passed as the argument to the event handler method.\n\n  ```app/components/my-widget.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    click(event) {\n      // `event.target` is either the component's element or one of its children\n      let tag = event.target.tagName.toLowerCase();\n      console.log('clicked on a `<${tag}>` HTML element!');\n    }\n  });\n  ```\n\n  In this example, whenever the user clicked anywhere inside the component, it\n  will log a message to the console.\n\n  It is possible to handle event types other than `click` by implementing the\n  following event handler methods. In addition, custom events can be registered\n  by using `Application.customEvents`.\n\n  Touch events:\n\n  * `touchStart`\n  * `touchMove`\n  * `touchEnd`\n  * `touchCancel`\n\n  Keyboard events:\n\n  * `keyDown`\n  * `keyUp`\n  * `keyPress`\n\n  Mouse events:\n\n  * `mouseDown`\n  * `mouseUp`\n  * `contextMenu`\n  * `click`\n  * `doubleClick`\n  * `focusIn`\n  * `focusOut`\n\n  Form events:\n\n  * `submit`\n  * `change`\n  * `focusIn`\n  * `focusOut`\n  * `input`\n\n  Drag and drop events:\n\n  * `dragStart`\n  * `drag`\n  * `dragEnter`\n  * `dragLeave`\n  * `dragOver`\n  * `dragEnd`\n  * `drop`\n\n  ### `{{action}}` Helper\n\n  Instead of handling all events of a particular type anywhere inside the\n  component's element, you may instead want to limit it to a particular\n  element in the component's template. In this case, it would be more\n  convenient to implement an action instead.\n\n  For example, you could implement the action `hello` for the `person-profile`\n  component:\n\n  ```app/components/person-profile.js\n  import Component from '@ember/component';\n\n  export default Component.extend({\n    actions: {\n      hello(name) {\n        console.log(\"Hello\", name);\n      }\n    }\n  });\n  ```\n\n  And then use it in the component's template:\n\n  ```app/templates/components/person-profile.hbs\n  <h1>{{@person.name}}</h1>\n\n  <button {{action 'hello' @person.name}}>\n    Say Hello to {{@person.name}}\n  </button>\n  ```\n\n  When the user clicks the button, Ember will invoke the `hello` action,\n  passing in the current value of `@person.name` as an argument.\n\n  See [Ember.Templates.helpers.action](/ember/release/classes/Ember.Templates.helpers/methods/action?anchor=action).\n\n  @class Component\n  @extends Ember.CoreView\n  @uses Ember.TargetActionSupport\n  @uses Ember.ClassNamesSupport\n  @uses Ember.ActionSupport\n  @uses Ember.ViewMixin\n  @uses Ember.ViewStateSupport\n  @public\n*/\n// This type param is used in the class, so must appear here.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nclass Component extends _core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.C.extend(_ember_internals_views_lib_mixins_child_views_support_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"], _ember_internals_views_lib_mixins_view_state_support_js__WEBPACK_IMPORTED_MODULE_21__[\"default\"], _ember_internals_views_lib_mixins_class_names_support_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"], _ember_internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_36__[\"default\"], _ember_internals_views_lib_mixins_action_support_js__WEBPACK_IMPORTED_MODULE_23__[\"default\"], _ember_internals_views_lib_mixins_view_support_js__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n  // These need to be overridable via extend/create but should still\n  // have a default. Defining them here is the best way to achieve that.\n  didReceiveAttrs() {},\n  didRender() {},\n  didUpdate() {},\n  didUpdateAttrs() {},\n  willRender() {},\n  willUpdate() {}\n}) {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isComponent\", true);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"__dispatcher\", void 0);\n  }\n  // SAFETY: this has no runtime existence whatsoever; it is a \"phantom type\"\n  // here to preserve the type param.\n\n  // SAFTEY: This is set in `init`.\n\n  init(properties) {\n    super.init(properties);\n\n    // Handle methods from ViewMixin.\n    // The native class inheritance will not work for mixins. To work around this,\n    // we copy the existing rerender method provided by the mixin and swap in the\n    // new rerender method from our class.\n    this._superRerender = this.rerender;\n    this.rerender = this._rerender;\n    this[IS_DISPATCHING_ATTRS] = false;\n    this[DIRTY_TAG] = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.createTag)();\n    this[BOUNDS] = null;\n    const eventDispatcher = this._dispatcher;\n    if (eventDispatcher) {\n      let lazyEventsProcessedForComponentClass = lazyEventsProcessed.get(eventDispatcher);\n      if (!lazyEventsProcessedForComponentClass) {\n        lazyEventsProcessedForComponentClass = new WeakSet();\n        lazyEventsProcessed.set(eventDispatcher, lazyEventsProcessedForComponentClass);\n      }\n      let proto = Object.getPrototypeOf(this);\n      if (!lazyEventsProcessedForComponentClass.has(proto)) {\n        let lazyEvents = eventDispatcher.lazyEvents;\n        lazyEvents.forEach((mappedEventName, event) => {\n          if (mappedEventName !== null && typeof this[mappedEventName] === 'function') {\n            eventDispatcher.setupHandlerForBrowserEvent(event);\n          }\n        });\n        lazyEventsProcessedForComponentClass.add(proto);\n      }\n    }\n    if ( true && eventDispatcher && this.renderer._isInteractive && this.tagName === '') {\n      let eventNames = [];\n      let events = eventDispatcher.finalEventNameMapping;\n      for (let key in events) {\n        let methodName = events[key];\n        if (methodName && typeof this[methodName] === 'function') {\n          eventNames.push(methodName);\n        }\n      }\n      // If in a tagless component, assert that no event handlers are defined\n       true && !!eventNames.length && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You can not define \\`${eventNames}\\` function(s) to handle DOM event in the \\`${this}\\` tagless component since it doesn't have any DOM element.`, !eventNames.length);\n    }\n  }\n  get _dispatcher() {\n    if (this.__dispatcher === undefined) {\n      let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n       true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Component is unexpectedly missing an owner', owner);\n      if (owner.lookup('-environment:main').isInteractive) {\n        let dispatcher = owner.lookup('event_dispatcher:main');\n         true && !(dispatcher instanceof _ember_internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_55__[\"default\"]) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected dispatcher to be an EventDispatcher', dispatcher instanceof _ember_internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_55__[\"default\"]);\n        this.__dispatcher = dispatcher;\n      } else {\n        // In FastBoot we have no EventDispatcher. Set to null to not try again to look it up.\n        this.__dispatcher = null;\n      }\n    }\n    return this.__dispatcher;\n  }\n  on(name, target, method) {\n    this._dispatcher?.setupHandlerForEmberEvent(name);\n    // The `on` method here comes from the Evented mixin. Since this mixin\n    // is applied to the parent of this class, however, we are still able\n    // to use `super`.\n    return super.on(name, target, method);\n  }\n\n  // Changed to `rerender` on init\n  _rerender() {\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.dirtyTag)(this[DIRTY_TAG]);\n    this._superRerender();\n  }\n  [_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.Q](key, value) {\n    if (this[IS_DISPATCHING_ATTRS]) {\n      return;\n    }\n    let args = this[ARGS];\n    let reference = args !== undefined ? args[key] : undefined;\n    if (reference !== undefined && (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isUpdatableRef)(reference)) {\n      (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.updateRef)(reference, arguments.length === 2 ? value : (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, key));\n    }\n  }\n  getAttr(key) {\n    // TODO Intimate API should be deprecated\n    return this.get(key);\n  }\n\n  /**\n    Normally, Ember's component model is \"write-only\". The component takes a\n    bunch of attributes that it got passed in, and uses them to render its\n    template.\n     One nice thing about this model is that if you try to set a value to the\n    same thing as last time, Ember (through HTMLBars) will avoid doing any\n    work on the DOM.\n     This is not just a performance optimization. If an attribute has not\n    changed, it is important not to clobber the element's \"hidden state\".\n    For example, if you set an input's `value` to the same value as before,\n    it will clobber selection state and cursor position. In other words,\n    setting an attribute is not **always** idempotent.\n     This method provides a way to read an element's attribute and also\n    update the last value Ember knows about at the same time. This makes\n    setting an attribute idempotent.\n     In particular, what this means is that if you get an `<input>` element's\n    `value` attribute and then re-render the template with the same value,\n    it will avoid clobbering the cursor and selection position.\n    Since most attribute sets are idempotent in the browser, you typically\n    can get away with reading attributes using jQuery, but the most reliable\n    way to do so is through this method.\n    @method readDOMAttr\n     @param {String} name the name of the attribute\n    @return String\n    @public\n    */\n  readDOMAttr(name) {\n    // TODO revisit this\n    let _element = (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.getViewElement)(this);\n     true && !(_element !== null) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Cannot call \\`readDOMAttr\\` on ${this} which does not have an element`, _element !== null);\n    let element = _element;\n    let isSVG = element.namespaceURI === 'http://www.w3.org/2000/svg';\n    let {\n      type,\n      normalized\n    } = (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.normalizeProperty)(element, name);\n    if (isSVG || type === 'attr') {\n      return element.getAttribute(normalized);\n    }\n    return element[normalized];\n  }\n\n  // --- Declarations which support mixins ---\n  // We use `declare` on these properties, even though they are optional, so\n  // that they do not get created on the class *at all* when emitting the\n  // transpiled code. Otherwise, since declared class properties are equivalent\n  // to calling `defineProperty` in the class constructor, they would \"stomp\"\n  // the properties supplied by mixins.\n\n  /**\n   Enables components to take a list of parameters as arguments.\n    For example, a component that takes two parameters with the names\n    `name` and `age`:\n     ```app/components/my-component.js\n    import Component from '@ember/component';\n     let MyComponent = Component.extend();\n     MyComponent.reopenClass({\n      positionalParams: ['name', 'age']\n    });\n     export default MyComponent;\n    ```\n     It can then be invoked like this:\n     ```hbs\n    {{my-component \"John\" 38}}\n    ```\n     The parameters can be referred to just like named parameters:\n     ```hbs\n    Name: {{name}}, Age: {{age}}.\n    ```\n     Using a string instead of an array allows for an arbitrary number of\n    parameters:\n     ```app/components/my-component.js\n    import Component from '@ember/component';\n     let MyComponent = Component.extend();\n     MyComponent.reopenClass({\n      positionalParams: 'names'\n    });\n     export default MyComponent;\n    ```\n     It can then be invoked like this:\n     ```hbs\n    {{my-component \"John\" \"Michael\" \"Scott\"}}\n    ```\n    The parameters can then be referred to by enumerating over the list:\n     ```hbs\n    {{#each names as |name|}}{{name}}{{/each}}\n    ```\n     @static\n    @public\n    @property positionalParams\n    @since 1.13.0\n    */ /**\n       Enables components to take a list of parameters as arguments.\n       For example, a component that takes two parameters with the names\n       `name` and `age`:\n       ```app/components/my-component.js\n       import Component from '@ember/component';\n       let MyComponent = Component.extend();\n       MyComponent.reopenClass({\n       positionalParams: ['name', 'age']\n       });\n       export default MyComponent;\n       ```\n       It can then be invoked like this:\n       ```hbs\n       {{my-component \"John\" 38}}\n       ```\n       The parameters can be referred to just like named parameters:\n       ```hbs\n       Name: {{name}}, Age: {{age}}.\n       ```\n       Using a string instead of an array allows for an arbitrary number of\n       parameters:\n       ```app/components/my-component.js\n       import Component from '@ember/component';\n       let MyComponent = Component.extend();\n       MyComponent.reopenClass({\n       positionalParams: 'names'\n       });\n       export default MyComponent;\n       ```\n       It can then be invoked like this:\n       ```hbs\n       {{my-component \"John\" \"Michael\" \"Scott\"}}\n       ```\n       The parameters can then be referred to by enumerating over the list:\n       ```hbs\n       {{#each names as |name|}}{{name}}{{/each}}\n       ```\n       @static\n       @public\n       @property positionalParams\n       @since 1.13.0\n       */\n\n  /**\n    Layout can be used to wrap content in a component.\n    @property layout\n    @type Function\n    @public\n  */\n\n  /**\n    The name of the layout to lookup if no layout is provided.\n    By default `Component` will lookup a template with this name in\n    `Ember.TEMPLATES` (a shared global object).\n    @property layoutName\n    @type String\n    @default undefined\n    @private\n  */\n\n  /**\n   The WAI-ARIA role of the control represented by this view. For example, a\n    button may have a role of type 'button', or a pane may have a role of\n    type 'alertdialog'. This property is used by assistive software to help\n    visually challenged users navigate rich web applications.\n     The full list of valid WAI-ARIA roles is available at:\n    [https://www.w3.org/TR/wai-aria/#roles_categorization](https://www.w3.org/TR/wai-aria/#roles_categorization)\n     @property ariaRole\n    @type String\n    @default undefined\n    @public\n    */\n\n  static toString() {\n    return '@ember/component';\n  }\n}\n\n// We continue to use reopenClass here so that positionalParams can be overridden with reopenClass in subclasses.\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Component, \"isComponentFactory\", true);\nComponent.reopenClass({\n  positionalParams: []\n});\n(0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.setInternalComponentManager)(CURLY_COMPONENT_MANAGER, Component);\n\n/**\n@module @ember/component\n*/\n\nconst RECOMPUTE_TAG = Symbol('RECOMPUTE_TAG');\n\n// Signature type utilities\n\n// Implements Ember's `Factory` interface and tags it for narrowing/checking.\n\nconst IS_CLASSIC_HELPER = Symbol('IS_CLASSIC_HELPER');\n\n// A zero-runtime-overhead private symbol to use in branding the component to\n// preserve its type parameter.\n\n/**\n  Ember Helpers are functions that can compute values, and are used in templates.\n  For example, this code calls a helper named `format-currency`:\n\n  ```app/templates/application.hbs\n  <Cost @cents={{230}} />\n  ```\n\n  ```app/components/cost.hbs\n  <div>{{format-currency @cents currency=\"$\"}}</div>\n  ```\n\n  Additionally a helper can be called as a nested helper.\n  In this example, we show the formatted currency value if the `showMoney`\n  named argument is truthy.\n\n  ```handlebars\n  {{if @showMoney (format-currency @cents currency=\"$\")}}\n  ```\n\n  Helpers defined using a class must provide a `compute` function. For example:\n\n  ```app/helpers/format-currency.js\n  import Helper from '@ember/component/helper';\n\n  export default class extends Helper {\n    compute([cents], { currency }) {\n      return `${currency}${cents * 0.01}`;\n    }\n  }\n  ```\n\n  Each time the input to a helper changes, the `compute` function will be\n  called again.\n\n  As instances, these helpers also have access to the container and will accept\n  injected dependencies.\n\n  Additionally, class helpers can call `recompute` to force a new computation.\n\n  @class Helper\n  @extends CoreObject\n  @public\n  @since 1.13.0\n*/\n// ESLint doesn't understand declaration merging.\n/* eslint-disable import/export */\n\nclass Helper extends _ember_object_internals_js__WEBPACK_IMPORTED_MODULE_61__.FrameworkObject {\n  // SAFETY: this is initialized in `init`, rather than `constructor`. It is\n  // safe to `declare` like this *if and only if* nothing uses the constructor\n  // directly in this class, since nothing else can run before `init`.\n\n  // SAFETY: this has no runtime existence whatsoever; it is a \"phantom type\"\n  // here to preserve the type param.\n\n  init(properties) {\n    super.init(properties);\n    this[RECOMPUTE_TAG] = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.createTag)();\n     true && !this.compute && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected compute to be defined', this.compute);\n  }\n\n  /**\n    On a class-based helper, it may be useful to force a recomputation of that\n    helpers value. This is akin to `rerender` on a component.\n     For example, this component will rerender when the `currentUser` on a\n    session service changes:\n     ```app/helpers/current-user-email.js\n    import Helper from '@ember/component/helper'\n    import { service } from '@ember/service'\n    import { observer } from '@ember/object'\n     export default Helper.extend({\n      session: service(),\n       onNewUser: observer('session.currentUser', function() {\n        this.recompute();\n      }),\n       compute() {\n        return this.get('session.currentUser.email');\n      }\n    });\n    ```\n     @method recompute\n    @public\n    @since 1.13.0\n  */\n  recompute() {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.j)(() => (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.dirtyTag)(this[RECOMPUTE_TAG]));\n  }\n}\n/* eslint-enable import/export */\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Helper, \"isHelperFactory\", true);\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Helper, IS_CLASSIC_HELPER, true);\n// `packages/ember/index.js` was setting `Helper.helper`. This seems like\n// a bad idea and probably not something we want. We've moved that definition\n// here, but it should definitely be reviewed and probably removed.\n/** @deprecated */\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Helper, \"helper\", helper$1);\nfunction isClassicHelper(obj) {\n  return obj[IS_CLASSIC_HELPER] === true;\n}\nclass ClassicHelperManager {\n  constructor(owner) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"capabilities\", (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.helperCapabilities)('3.23', {\n      hasValue: true,\n      hasDestroyable: true\n    }));\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"ownerInjection\", void 0);\n    let ownerInjection = {};\n    (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.setOwner)(ownerInjection, owner);\n    this.ownerInjection = ownerInjection;\n  }\n  createHelper(definition, args) {\n    let instance = isFactoryManager(definition) ? definition.create() : definition.create(this.ownerInjection);\n     true && !function (instance) {\n      if (instance !== null && typeof instance === 'object') {\n        let cast = instance;\n        return typeof cast.compute === 'function' && typeof cast.destroy === 'function';\n      }\n      return false;\n    }(instance) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected HelperInstance', function (instance) {\n      if (instance !== null && typeof instance === 'object') {\n        let cast = instance;\n        return typeof cast.compute === 'function' && typeof cast.destroy === 'function';\n      }\n      return false;\n    }(instance));\n    return {\n      instance,\n      args\n    };\n  }\n  getDestroyable({\n    instance\n  }) {\n    return instance;\n  }\n  getValue({\n    instance,\n    args\n  }) {\n    let {\n      positional,\n      named\n    } = args;\n    let ret = instance.compute(positional, named);\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)(instance[RECOMPUTE_TAG]);\n    return ret;\n  }\n  getDebugName(definition) {\n    return (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.a)((definition.class || definition)['prototype']);\n  }\n}\nfunction isFactoryManager(obj) {\n  return obj != null && 'class' in obj;\n}\n(0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.setHelperManager)(owner => {\n  return new ClassicHelperManager(owner);\n}, Helper);\nconst CLASSIC_HELPER_MANAGER = (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.getInternalHelperManager)(Helper);\n\n///////////\n\nclass Wrapper {\n  constructor(compute) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isHelperFactory\", true);\n    this.compute = compute;\n  }\n  create() {\n    // needs new instance or will leak containers\n    return {\n      compute: this.compute\n    };\n  }\n}\nclass SimpleClassicHelperManager {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"capabilities\", (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.helperCapabilities)('3.23', {\n      hasValue: true\n    }));\n  }\n  createHelper(definition, args) {\n    return () => definition.compute.call(null, args.positional, args.named);\n  }\n  getValue(fn) {\n    return fn();\n  }\n  getDebugName(definition) {\n    return (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.a)(definition.compute);\n  }\n}\nconst SIMPLE_CLASSIC_HELPER_MANAGER = new SimpleClassicHelperManager();\n(0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.setHelperManager)(() => SIMPLE_CLASSIC_HELPER_MANAGER, Wrapper.prototype);\n\n/*\n  Function-based helpers need to present with a constructor signature so that\n  type parameters can be preserved when `helper()` is passed a generic function\n  (this is particularly key for checking helper invocations with Glint).\n  Accordingly, we define an abstract class and declaration merge it with the\n  interface; this inherently provides an `abstract` constructor. Since it is\n  `abstract`, it is not callable, which is important since end users should not\n  be able to do `let myHelper = helper(someFn); new myHelper()`.\n */\n\n/**\n * The type of a function-based helper.\n *\n * @note This is *not* user-constructible: it is exported only so that the type\n *   returned by the `helper` function can be named (and indeed can be exported\n *   like `export default helper(...)` safely).\n */\n// Making `FunctionBasedHelper` an alias this way allows callers to name it in\n// terms meaningful to *them*, while preserving the type behavior described on\n// the `abstract class FunctionBasedHelperInstance` below.\n\n// This abstract class -- specifically, its `protected abstract __concrete__`\n// member -- prevents subclasses from doing `class X extends helper(..)`, since\n// that is an error at runtime. While it is rare that people would type that, it\n// is not impossible and we use this to give them early signal via the types for\n// a behavior which will break (and in a somewhat inscrutable way!) at runtime.\n//\n// This is needful because we lie about what this actually is for Glint's sake:\n// a function-based helper returns a `Factory<SimpleHelper>`, which is designed\n// to be \"opaque\" from a consumer's POV, i.e. not user-callable or constructible\n// but only useable in a template (or via `invokeHelper()` which also treats it\n// as a fully opaque `object` from a type POV). But Glint needs a `Helper<S>` to\n// make it work the same way as class-based helpers. (Note that this does not\n// hold for plain functions as helpers, which it can handle distinctly.) This\n// signature thus makes it so that the item is usable *as* a `Helper` in Glint,\n// but without letting end users treat it as a helper class instance.\n\n/**\n  In many cases it is not necessary to use the full `Helper` class.\n  The `helper` method create pure-function helpers without instances.\n  For example:\n\n  ```app/helpers/format-currency.js\n  import { helper } from '@ember/component/helper';\n\n  export default helper(function([cents], {currency}) {\n    return `${currency}${cents * 0.01}`;\n  });\n  ```\n\n  @static\n  @param {Function} helper The helper function\n  @method helper\n  @for @ember/component/helper\n  @public\n  @since 1.13.0\n*/\n// This overload allows users to write types directly on the callback passed to\n// the `helper` function and infer the resulting type correctly.\n\n// This overload allows users to provide a `Signature` type explicitly at the\n// helper definition site, e.g. `helper<Sig>((pos, named) => {...})`. **Note:**\n// this overload must appear second, since TS' inference engine will not\n// correctly infer the type of `S` here from the types on the supplied callback.\n\nfunction helper$1(helperFn) {\n  // SAFETY: this is completely lies, in two ways:\n  //\n  // 1. `Wrapper` is a `Factory<SimpleHelper<S>>`, but from the perspective of\n  //    any external callers (i.e. Ember *users*), it is quite important that\n  //    the `Factory` relationship be hidden, because it is not public API for\n  //    an end user to call `.create()` on a helper created this way. Instead,\n  //    we provide them an `abstract new` signature (which means it cannot be\n  //    directly constructed by calling `new` on it) and which does not have the\n  //    `.create()` signature on it anymore.\n  //\n  // 2. The produced type here ends up being a subtype of `Helper`, which is not\n  //    strictly true. This is necessary for the sake of Glint, which provides\n  //    its information by way of a \"declaration merge\" with `Helper<S>` in the\n  //    case of items produced by `helper()`.\n  //\n  // Long-term, this entire construct can go away in favor of deprecating the\n  // `helper()` invocation in favor of using plain functions.\n  return new Wrapper(helperFn);\n}\n\n/**\n@module @ember/template\n*/\n\n/**\n  A wrapper around a string that has been marked as safe (\"trusted\"). **When\n  rendered in HTML, Ember will not perform any escaping.**\n\n  Note:\n\n  1. This does not *make* the string safe; it means that some code in your\n     application has *marked* it as safe using the `htmlSafe()` function.\n\n  2. The only public API for getting a `SafeString` is calling `htmlSafe()`. It\n     is *not* user-constructible.\n\n  If a string contains user inputs or other untrusted data, you must sanitize\n  the string before using the `htmlSafe` method. Otherwise your code is\n  vulnerable to [Cross-Site Scripting][xss]. There are many open source\n  sanitization libraries to choose from, both for front end and server-side\n  sanitization.\n\n  [xss]: https://owasp.org/www-community/attacks/DOM_Based_XSS\n\n  ```javascript\n  import { htmlSafe } from '@ember/template';\n\n  let someTrustedOrSanitizedString = \"<div>Hello!</div>\"\n\n  htmlSafe(someTrustedorSanitizedString);\n  ```\n\n  @for @ember/template\n  @class SafeString\n  @since 4.12.0\n  @public\n */\nclass SafeString {\n  constructor(string) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"__string\", void 0);\n    this.__string = string;\n  }\n\n  /**\n    Get the string back to use as a string.\n     @public\n    @method toString\n    @returns {String} The string marked as trusted\n   */\n  toString() {\n    return `${this.__string}`;\n  }\n\n  /**\n    Get the wrapped string as HTML to use without escaping.\n     @public\n    @method toHTML\n    @returns {String} the trusted string, without any escaping applied\n   */\n  toHTML() {\n    return this.toString();\n  }\n}\nconst escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\nconst possible = /[&<>\"'`=]/;\nconst badChars = /[&<>\"'`=]/g;\nfunction escapeChar(chr) {\n  return escape[chr];\n}\nfunction escapeExpression(string) {\n  let s;\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (isHTMLSafe(string)) {\n      return string.toHTML();\n    } else if (string === null || string === undefined) {\n      return '';\n    } else if (!string) {\n      return String(string);\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    s = String(string);\n  } else {\n    s = string;\n  }\n  if (!possible.test(s)) {\n    return s;\n  }\n\n  // SAFETY: this is technically a lie, but it's a true lie as long as the\n  // invariant it depends on is upheld: `escapeChar` will always return a string\n  // as long as its input is one of the characters in `escape`, and it will only\n  // be called if it matches one of the characters in the `badChar` regex, which\n  // is hand-maintained to match the set escaped. (It would be nice if TS could\n  // \"see\" into the regex to see how this works, but that'd be quite a lot of\n  // extra fanciness.)\n  return s.replace(badChars, escapeChar);\n}\n\n/**\n  Use this method to indicate that a string should be rendered as HTML\n  when the string is used in a template. To say this another way,\n  strings marked with `htmlSafe` will not be HTML escaped.\n\n  A word of warning -   The `htmlSafe` method does not make the string safe;\n  it only tells the framework to treat the string as if it is safe to render\n  as HTML. If a string contains user inputs or other untrusted\n  data, you must sanitize the string before using the `htmlSafe` method.\n  Otherwise your code is vulnerable to\n  [Cross-Site Scripting](https://owasp.org/www-community/attacks/DOM_Based_XSS).\n  There are many open source sanitization libraries to choose from,\n  both for front end and server-side sanitization.\n\n  ```javascript\n  import { htmlSafe } from '@ember/template';\n\n  const someTrustedOrSanitizedString = \"<div>Hello!</div>\"\n\n  htmlSafe(someTrustedorSanitizedString)\n  ```\n\n  @method htmlSafe\n  @for @ember/template\n  @param str {String} The string to treat as trusted.\n  @static\n  @return {SafeString} A string that will not be HTML escaped by Handlebars.\n  @public\n*/\nfunction htmlSafe(str) {\n  if (str === null || str === undefined) {\n    str = '';\n  } else if (typeof str !== 'string') {\n    str = String(str);\n  }\n  return new SafeString(str);\n}\n\n/**\n  Detects if a string was decorated using `htmlSafe`.\n\n  ```javascript\n  import { htmlSafe, isHTMLSafe } from '@ember/template';\n\n  let plainString = 'plain string';\n  let safeString = htmlSafe('<div>someValue</div>');\n\n  isHTMLSafe(plainString); // false\n  isHTMLSafe(safeString);  // true\n  ```\n\n  @method isHTMLSafe\n  @for @ember/template\n  @static\n  @return {Boolean} `true` if the string was decorated with `htmlSafe`, `false` otherwise.\n  @public\n*/\nfunction isHTMLSafe(str) {\n  return str !== null && typeof str === 'object' && 'toHTML' in str && typeof str.toHTML === 'function';\n}\nfunction instrumentationPayload$1(def) {\n  // \"main\" used to be the outlet name, keeping it around for compatibility\n  return {\n    object: `${def.name}:main`\n  };\n}\nconst CAPABILITIES$1 = {\n  dynamicLayout: false,\n  dynamicTag: false,\n  prepareArgs: false,\n  createArgs: false,\n  attributeHook: false,\n  elementHook: false,\n  createCaller: false,\n  dynamicScope: true,\n  updateHook: false,\n  createInstance: true,\n  wrapped: false,\n  willDestroy: false,\n  hasSubOwner: false\n};\nclass OutletComponentManager {\n  create(_owner, definition, _args, env, dynamicScope) {\n    let parentStateRef = dynamicScope.get('outletState');\n    let currentStateRef = definition.ref;\n    dynamicScope.set('outletState', currentStateRef);\n    let state = {\n      self: (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createConstRef)(definition.controller, 'this'),\n      finalize: (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__._instrumentStart)('render.outlet', instrumentationPayload$1, definition)\n    };\n    if (env.debugRenderTree !== undefined) {\n      state.outletBucket = {};\n      let parentState = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(parentStateRef);\n      let parentOwner = parentState && parentState.render && parentState.render.owner;\n      let currentOwner = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(currentStateRef).render.owner;\n      if (parentOwner && parentOwner !== currentOwner) {\n         true && !(currentOwner instanceof EmberEngineInstance) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected currentOwner to be an EngineInstance', currentOwner instanceof EmberEngineInstance);\n        let mountPoint = currentOwner.mountPoint;\n        state.engine = currentOwner;\n        if (mountPoint) {\n          state.engineBucket = {\n            mountPoint\n          };\n        }\n      }\n    }\n    return state;\n  }\n  getDebugName({\n    name\n  }) {\n    return name;\n  }\n  getDebugCustomRenderTree(definition, state, args) {\n    let nodes = [];\n     true && !state.outletBucket && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] outletBucket must be set', state.outletBucket);\n    nodes.push({\n      bucket: state.outletBucket,\n      type: 'outlet',\n      // \"main\" used to be the outlet name, keeping it around for compatibility\n      name: 'main',\n      args: _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.EMPTY_ARGS,\n      instance: undefined,\n      template: undefined\n    });\n    if (state.engineBucket) {\n      nodes.push({\n        bucket: state.engineBucket,\n        type: 'engine',\n        name: state.engineBucket.mountPoint,\n        args: _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.EMPTY_ARGS,\n        instance: state.engine,\n        template: undefined\n      });\n    }\n    nodes.push({\n      bucket: state,\n      type: 'route-template',\n      name: definition.name,\n      args: args,\n      instance: definition.controller,\n      template: (0,_glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_58__.unwrapTemplate)(definition.template).moduleName\n    });\n    return nodes;\n  }\n  getCapabilities() {\n    return CAPABILITIES$1;\n  }\n  getSelf({\n    self\n  }) {\n    return self;\n  }\n  didCreate() {}\n  didUpdate() {}\n  didRenderLayout(state) {\n    state.finalize();\n  }\n  didUpdateLayout() {}\n  getDestroyable() {\n    return null;\n  }\n}\nconst OUTLET_MANAGER = new OutletComponentManager();\nclass OutletComponentDefinition {\n  constructor(state, manager = OUTLET_MANAGER) {\n    // handle is not used by this custom definition\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"handle\", -1);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"resolvedName\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"compilable\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"capabilities\", void 0);\n    this.state = state;\n    this.manager = manager;\n    let capabilities = manager.getCapabilities();\n    this.capabilities = (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.capabilityFlagsFrom)(capabilities);\n    this.compilable = capabilities.wrapped ? (0,_glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_58__.unwrapTemplate)(state.template).asWrappedLayout() : (0,_glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_58__.unwrapTemplate)(state.template).asLayout();\n    this.resolvedName = state.name;\n  }\n}\nfunction createRootOutlet(outletView) {\n  return new OutletComponentDefinition(outletView.state);\n}\nclass RootComponentManager extends CurlyComponentManager {\n  constructor(component) {\n    super();\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"component\", void 0);\n    this.component = component;\n  }\n  create(_owner, _state, _args, {\n    isInteractive\n  }, dynamicScope) {\n    let component = this.component;\n    let finalizer = (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__._instrumentStart)('render.component', initialRenderInstrumentDetails, component);\n    dynamicScope.view = component;\n    let hasWrappedElement = component.tagName !== '';\n\n    // We usually do this in the `didCreateElement`, but that hook doesn't fire for tagless components\n    if (!hasWrappedElement) {\n      if (isInteractive) {\n        component.trigger('willRender');\n      }\n      component._transitionTo('hasElement');\n      if (isInteractive) {\n        component.trigger('willInsertElement');\n      }\n    }\n    if (true) {\n      processComponentInitializationAssertions(component, {});\n    }\n    let bucket = new ComponentStateBucket(component, null, _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.CONSTANT_TAG, finalizer, hasWrappedElement, isInteractive);\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)(component[DIRTY_TAG]);\n    return bucket;\n  }\n}\n\n// ROOT is the top-level template it has nothing but one yield.\n// it is supposed to have a dummy element\nconst ROOT_CAPABILITIES = {\n  dynamicLayout: true,\n  dynamicTag: true,\n  prepareArgs: false,\n  createArgs: false,\n  attributeHook: true,\n  elementHook: true,\n  createCaller: true,\n  dynamicScope: true,\n  updateHook: true,\n  createInstance: true,\n  wrapped: true,\n  willDestroy: false,\n  hasSubOwner: false\n};\nclass RootComponentDefinition {\n  constructor(component) {\n    // handle is not used by this custom definition\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"handle\", -1);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"resolvedName\", '-top-level');\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"manager\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"capabilities\", (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.capabilityFlagsFrom)(ROOT_CAPABILITIES));\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"compilable\", null);\n    this.manager = new RootComponentManager(component);\n    let factory = (0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_2__.g)(component);\n     true && !(factory !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('missing factory for component', factory !== undefined);\n    this.state = factory;\n  }\n}\n\n/**\n@module ember\n*/\nclass EachInWrapper {\n  constructor(inner) {\n    this.inner = inner;\n  }\n}\nconst eachIn = internalHelper(({\n  positional\n}) => {\n  const inner = positional[0];\n   true && !inner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected at least one positional arg', inner);\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n    let iterable = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(inner);\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.t)(iterable));\n    if ((0,_is_proxy_Dmis_70B_js__WEBPACK_IMPORTED_MODULE_49__.i)(iterable)) {\n      // this is because the each-in doesn't actually get(proxy, 'key') but bypasses it\n      // and the proxy's tag is lazy updated on access\n      iterable = (0,_ember_internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_34__.contentFor)(iterable);\n    }\n    return new EachInWrapper(iterable);\n  });\n});\nfunction toIterator(iterable) {\n  if (iterable instanceof EachInWrapper) {\n    return toEachInIterator(iterable.inner);\n  } else {\n    return toEachIterator(iterable);\n  }\n}\nfunction toEachInIterator(iterable) {\n  if (!isIndexable(iterable)) {\n    return null;\n  }\n  if (Array.isArray(iterable) || (0,_ember_array_internals_js__WEBPACK_IMPORTED_MODULE_66__.isEmberArray)(iterable)) {\n    return ObjectIterator.fromIndexable(iterable);\n  } else if (isNativeIterable(iterable)) {\n    return MapLikeNativeIterator.from(iterable);\n  } else if (hasForEach(iterable)) {\n    return ObjectIterator.fromForEachable(iterable);\n  } else {\n    return ObjectIterator.fromIndexable(iterable);\n  }\n}\nfunction toEachIterator(iterable) {\n  if (!(0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.e)(iterable)) {\n    return null;\n  }\n  if (Array.isArray(iterable)) {\n    return ArrayIterator.from(iterable);\n  } else if ((0,_ember_array_internals_js__WEBPACK_IMPORTED_MODULE_66__.isEmberArray)(iterable)) {\n    return EmberArrayIterator.from(iterable);\n  } else if (isNativeIterable(iterable)) {\n    return ArrayLikeNativeIterator.from(iterable);\n  } else if (hasForEach(iterable)) {\n    return ArrayIterator.fromForEachable(iterable);\n  } else {\n    return null;\n  }\n}\nclass BoundedIterator {\n  constructor(length) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"position\", 0);\n    this.length = length;\n  }\n  isEmpty() {\n    return false;\n  }\n  memoFor(position) {\n    return position;\n  }\n  next() {\n    let {\n      length,\n      position\n    } = this;\n    if (position >= length) {\n      return null;\n    }\n    let value = this.valueFor(position);\n    let memo = this.memoFor(position);\n    this.position++;\n    return {\n      value,\n      memo\n    };\n  }\n}\nclass ArrayIterator extends BoundedIterator {\n  static from(iterable) {\n    return iterable.length > 0 ? new this(iterable) : null;\n  }\n  static fromForEachable(object) {\n    let array = [];\n    object.forEach(item => array.push(item));\n    return this.from(array);\n  }\n  constructor(array) {\n    super(array.length);\n    this.array = array;\n  }\n  valueFor(position) {\n    return this.array[position];\n  }\n}\nclass EmberArrayIterator extends BoundedIterator {\n  static from(iterable) {\n    return iterable.length > 0 ? new this(iterable) : null;\n  }\n  constructor(array) {\n    super(array.length);\n    this.array = array;\n  }\n  valueFor(position) {\n    return (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.R)(this.array, position);\n  }\n}\nclass ObjectIterator extends BoundedIterator {\n  static fromIndexable(obj) {\n    let keys = Object.keys(obj);\n    if (keys.length === 0) {\n      return null;\n    } else {\n      let values = [];\n      for (let key of keys) {\n        let value;\n        value = obj[key];\n\n        // Add the tag of the returned value if it is an array, since arrays\n        // should always cause updates if they are consumed and then changed\n        if ((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.isTracking)()) {\n          (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.tagFor)(obj, key));\n          if (Array.isArray(value)) {\n            (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.tagFor)(value, '[]'));\n          }\n        }\n        values.push(value);\n      }\n      return new this(keys, values);\n    }\n  }\n  static fromForEachable(obj) {\n    let keys = [];\n    let values = [];\n    let length = 0;\n    let isMapLike = false;\n\n    // Not using an arrow function here so we can get an accurate `arguments`\n    obj.forEach(function (value, key) {\n      isMapLike = isMapLike || arguments.length >= 2;\n      if (isMapLike) {\n        keys.push(key);\n      }\n      values.push(value);\n      length++;\n    });\n    if (length === 0) {\n      return null;\n    } else if (isMapLike) {\n      return new this(keys, values);\n    } else {\n      return new ArrayIterator(values);\n    }\n  }\n  constructor(keys, values) {\n    super(values.length);\n    this.keys = keys;\n    this.values = values;\n  }\n  valueFor(position) {\n    return this.values[position];\n  }\n  memoFor(position) {\n    return this.keys[position];\n  }\n}\nclass NativeIterator {\n  static from(iterable) {\n    let iterator = iterable[Symbol.iterator]();\n    let result = iterator.next();\n    let {\n      done\n    } = result;\n    if (done) {\n      return null;\n    } else {\n      return new this(iterator, result);\n    }\n  }\n  constructor(iterable, result) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"position\", 0);\n    this.iterable = iterable;\n    this.result = result;\n  }\n  isEmpty() {\n    return false;\n  }\n  next() {\n    let {\n      iterable,\n      result,\n      position\n    } = this;\n    if (result.done) {\n      return null;\n    }\n    let value = this.valueFor(result, position);\n    let memo = this.memoFor(result, position);\n    this.position++;\n    this.result = iterable.next();\n    return {\n      value,\n      memo\n    };\n  }\n}\nclass ArrayLikeNativeIterator extends NativeIterator {\n  valueFor(result) {\n    return result.value;\n  }\n  memoFor(_result, position) {\n    return position;\n  }\n}\nclass MapLikeNativeIterator extends NativeIterator {\n  valueFor(result) {\n    return result.value[1];\n  }\n  memoFor(result) {\n    return result.value[0];\n  }\n}\nfunction hasForEach(value) {\n  return value != null && typeof value['forEach'] === 'function';\n}\nfunction isNativeIterable(value) {\n  return value != null && typeof value[Symbol.iterator] === 'function';\n}\nfunction isIndexable(value) {\n  return value !== null && (typeof value === 'object' || typeof value === 'function');\n}\nfunction toBool(predicate) {\n  if ((0,_is_proxy_Dmis_70B_js__WEBPACK_IMPORTED_MODULE_49__.i)(predicate)) {\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.a)(predicate, 'content'));\n    return Boolean((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(predicate, 'isTruthy'));\n  } else if ((0,_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.i)(predicate)) {\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.a)(predicate, '[]'));\n    return predicate.length !== 0;\n  } else if (isHTMLSafe(predicate)) {\n    return Boolean(predicate.toString());\n  } else {\n    return Boolean(predicate);\n  }\n}\n(0,_glimmer_global_context_index_js__WEBPACK_IMPORTED_MODULE_65__[\"default\"])({\n  FEATURES: {\n    DEFAULT_HELPER_MANAGER: true\n  },\n  scheduleRevalidate() {\n    _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__._.ensureInstance();\n  },\n  toBool,\n  toIterator,\n  getProp: _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.a6,\n  setProp: _property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__._,\n  getPath: _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g,\n  setPath: _property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s,\n  scheduleDestroy(destroyable, destructor) {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.s)('actions', null, destructor, destroyable);\n  },\n  scheduleDestroyed(finalizeDestructor) {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.s)('destroy', null, finalizeDestructor);\n  },\n  warnIfStyleNotTrusted(value) {\n     true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.w)((0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.constructStyleDeprecationMessage)(String(value)), (() => {\n      if (value === null || value === undefined || isHTMLSafe(value)) {\n        return true;\n      }\n      return false;\n    })(), {\n      id: 'ember-htmlbars.style-xss-warning'\n    });\n  },\n  assert(test, msg, options) {\n    if (true) {\n      let id = options?.id;\n      let override = VM_ASSERTION_OVERRIDES.filter(o => o.id === id)[0];\n       true && !test && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(override?.message ?? msg, test);\n    }\n  },\n  deprecate(msg, test, options) {\n    if (true) {\n      let {\n        id\n      } = options;\n      if (id === 'argument-less-helper-paren-less-invocation') {\n        throw new Error(`A resolved helper cannot be passed as a named argument as the syntax is ` + `ambiguously a pass-by-reference or invocation. Use the ` + `\\`{{helper 'foo-helper}}\\` helper to pass by reference or explicitly ` + `invoke the helper with parens: \\`{{(fooHelper)}}\\`.`);\n      }\n      let override = VM_DEPRECATION_OVERRIDES.filter(o => o.id === id)[0];\n      if (!override) throw new Error(`deprecation override for ${id} not found`);\n\n      // allow deprecations to be disabled in the VM_DEPRECATION_OVERRIDES array below\n      if (!override.disabled) {\n         true && !Boolean(test) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.d)(override.message ?? msg, Boolean(test), override);\n      }\n    }\n  }\n});\nif (true) {\n  _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.debug?.setTrackingTransactionEnv?.({\n    debugMessage(obj, keyName) {\n      let dirtyString = keyName ? `\\`${keyName}\\` on \\`${(0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.a)?.(obj)}\\`` : `\\`${(0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.a)?.(obj)}\\``;\n      return `You attempted to update ${dirtyString}, but it had already been used previously in the same computation.  Attempting to update a value after using it in a computation can cause logical errors, infinite revalidation bugs, and performance issues, and is not supported.`;\n    }\n  });\n}\n\n///////////\n\n// VM Assertion/Deprecation overrides\n\nconst VM_DEPRECATION_OVERRIDES = [{\n  id: 'setting-on-hash',\n  until: '4.4.0',\n  for: 'ember-source',\n  since: {\n    available: '3.28.0',\n    enabled: '3.28.0'\n  }\n}];\nconst VM_ASSERTION_OVERRIDES = [];\n\n///////////\n\n// Define environment delegate\n\nclass EmberEnvironmentDelegate {\n  constructor(owner, isInteractive) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"enableDebugTooling\", _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_15__.E._DEBUG_RENDER_TREE);\n    this.owner = owner;\n    this.isInteractive = isInteractive;\n  }\n  onTransactionCommit() {}\n}\n\n/**\n@module ember\n*/\nconst disallowDynamicResolution = internalHelper(({\n  positional,\n  named\n}) => {\n  const nameOrValueRef = positional[0];\n   true && !(positional.length === 1 && nameOrValueRef) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`[BUG] wrong number of positional arguments, expecting 1, got ${positional.length}`, positional.length === 1 && nameOrValueRef);\n  let typeRef = named['type'];\n  let locRef = named['loc'];\n  let originalRef = named['original'];\n   true && !typeRef && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`[BUG] expecting \\`type\\` named argument`, typeRef);\n   true && !locRef && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`[BUG] expecting \\`loc\\` named argument`, locRef);\n   true && !originalRef && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`[BUG] expecting \\`original\\` named argument`, originalRef); // Bug: why do these fail?\n  // assert('[BUG] expecting a string literal for the `type` argument', isConstRef(typeRef));\n  // assert('[BUG] expecting a string literal for the `loc` argument', isConstRef(locRef));\n  // assert('[BUG] expecting a string literal for the `original` argument', isConstRef(originalRef));\n  const type = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(typeRef);\n  const loc = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(locRef);\n  const original = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(originalRef);\n   true && !(typeof type === 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] expecting a string literal for the `type` argument', typeof type === 'string');\n   true && !(typeof loc === 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] expecting a string literal for the `loc` argument', typeof loc === 'string');\n   true && !(typeof original === 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] expecting a string literal for the `original` argument', typeof original === 'string');\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n    let nameOrValue = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(nameOrValueRef);\n     true && !(typeof nameOrValue !== 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Passing a dynamic string to the \\`(${type})\\` keyword is disallowed. ` + `(You specified \\`(${type} ${original})\\` and \\`${original}\\` evaluated into \"${nameOrValue}\".) ` + `This ensures we can statically analyze the template and determine which ${type}s are used. ` + `If the ${type} name is always the same, use a string literal instead, i.e. \\`(${type} \"${nameOrValue}\")\\`. ` + `Otherwise, import the ${type}s into JavaScript and pass them directly. ` + 'See https://github.com/emberjs/rfcs/blob/master/text/0496-handlebars-strict-mode.md#4-no-dynamic-resolution for details. ' + loc, typeof nameOrValue !== 'string');\n    return nameOrValue;\n  });\n});\nlet helper;\nif (true) {\n  helper = args => {\n    const inner = args.positional[0];\n     true && !inner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected at least one positional arg', inner);\n    return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n      let value = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(inner);\n       true && !(value !== null && value !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You cannot pass a null or undefined destination element to in-element', value !== null && value !== undefined);\n      return value;\n    });\n  };\n} else {}\nconst inElementNullCheckHelper = internalHelper(helper);\nconst normalizeClassHelper = internalHelper(({\n  positional\n}) => {\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n    let classNameArg = positional[0];\n    let valueArg = positional[1];\n     true && !(classNameArg && valueArg) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected at least two positional args', classNameArg && valueArg);\n    let classNameParts = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(classNameArg).split('.');\n    let className = classNameParts[classNameParts.length - 1];\n     true && !className && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has className', className); // Always at least one split result\n    let value = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(valueArg);\n    if (value === true) {\n      return (0,_ember_internals_string_index_js__WEBPACK_IMPORTED_MODULE_59__.dasherize)(className);\n    } else if (!value && value !== 0) {\n      return '';\n    } else {\n      return String(value);\n    }\n  });\n});\n\n/**\n  @module ember\n*/\n\nconst resolve = internalHelper(({\n  positional\n}, owner) => {\n  // why is this allowed to be undefined in the first place?\n   true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] missing owner', owner);\n   true && !(positional.length === 1) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`[BUG] wrong number of positional arguments, expecting 1, got ${positional.length}`, positional.length === 1);\n  let fullNameRef = positional[0];\n   true && !(fullNameRef && (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isConstRef)(fullNameRef)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] expecting a string literal as argument', fullNameRef && (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isConstRef)(fullNameRef));\n  let fullName = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(fullNameRef);\n   true && !(typeof fullName === 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] expecting a string literal as argument', typeof fullName === 'string');\n   true && !(s => s.split(':').length === 2)(fullName) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] expecting a valid full name', (s => s.split(':').length === 2)(fullName));\n  if (true) {\n    let [type, name] = fullName.split(':');\n     true && !owner.hasRegistration(fullName) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Attempted to invoke \\`(-resolve \"${fullName}\")\\`, but ${name} was not a valid ${type} name.`, owner.hasRegistration(fullName));\n  }\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createConstRef)(owner.factoryFor(fullName)?.class, `(-resolve \"${fullName}\")`);\n});\n\n/**\n@module ember\n*/\nconst trackArray = internalHelper(({\n  positional\n}) => {\n  const inner = positional[0];\n   true && !inner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected at least one positional arg', inner);\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n    let iterable = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(inner);\n    if ((0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.e)(iterable)) {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.a)(iterable, '[]'));\n    }\n    return iterable;\n  });\n});\n\n/**\n@module ember\n*/\nconst mut = internalHelper(({\n  positional\n}) => {\n  let ref = positional[0];\n   true && !ref && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected at least one positional arg', ref); // TODO: Improve this error message. This covers at least two distinct\n  // cases:\n  //\n  // 1. (mut \"not a path\") – passing a literal, result from a helper\n  //    invocation, etc\n  //\n  // 2. (mut receivedValue) – passing a value received from the caller\n  //    that was originally derived from a literal, result from a helper\n  //    invocation, etc\n  //\n  // This message is alright for the first case, but could be quite\n  // confusing for the second case.\n   true && !(0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isUpdatableRef)(ref) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You can only pass a path to mut', (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isUpdatableRef)(ref));\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createInvokableRef)(ref);\n});\n\n/**\n@module ember\n*/\n\nconst readonly = internalHelper(({\n  positional\n}) => {\n  let firstArg = positional[0];\n   true && !firstArg && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has first arg', firstArg);\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createReadOnlyRef)(firstArg);\n});\n\n/**\n@module ember\n*/\n\nconst unbound = internalHelper(({\n  positional,\n  named\n}) => {\n   true && !(positional.length === 1 && Object.keys(named).length === 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('unbound helper cannot be called with multiple params or hash params', positional.length === 1 && Object.keys(named).length === 0);\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createUnboundRef)((0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(positional[0]), '(result of an `unbound` helper)');\n});\n\n/**\n@module ember\n*/\n\nconst uniqueId = internalHelper(() => {\n  // SAFETY: glimmer-vm should change the signature of createUnboundRef to use a generic\n  //         so that the type param to `Reference<?>` can infer from the first argument.\n  //\n  // NOTE: constRef is an optimization so we don't let the VM create extra wrappers,\n  //       tracking frames, etc.\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createConstRef)(uniqueId$1(), 'unique-id');\n});\n\n// From https://gist.github.com/selfish/fef2c0ba6cdfe07af76e64cecd74888b\n//\n// This code should be reasonably fast, and provide a unique value every time\n// it's called, which is what we need here. It produces a string formatted as a\n// standard UUID, which avoids accidentally turning Ember-specific\n// implementation details into an intimate API. It also ensures that the UUID\n// always starts with a letter, to avoid creating invalid IDs with a numeric\n// digit at the start.\nfunction uniqueId$1() {\n  // @ts-expect-error this one-liner abuses weird JavaScript semantics that\n  // TypeScript (legitimately) doesn't like, but they're nonetheless valid and\n  // specced.\n  return ([3e7] + -1e3 + -4e3 + -2e3 + -1e11).replace(/[0-3]/g, a => (a * 4 ^ Math.random() * 16 >> (a & 2)).toString(16));\n}\nconst MODIFIERS = ['alt', 'shift', 'meta', 'ctrl'];\nconst POINTER_EVENT_TYPE_REGEX = /^click|mouse|touch/;\nfunction isAllowedEvent(event, allowedKeys) {\n  if (allowedKeys === null || allowedKeys === undefined) {\n    if (POINTER_EVENT_TYPE_REGEX.test(event.type)) {\n      return (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.isSimpleClick)(event);\n    } else {\n      allowedKeys = '';\n    }\n  }\n  if (allowedKeys.indexOf('any') >= 0) {\n    return true;\n  }\n  for (let i = 0; i < MODIFIERS.length; i++) {\n    if (event[MODIFIERS[i] + 'Key'] && allowedKeys.indexOf(MODIFIERS[i]) === -1) {\n      return false;\n    }\n  }\n  return true;\n}\nlet ActionHelper = {\n  // registeredActions is re-exported for compatibility with older plugins\n  // that were using this undocumented API.\n  registeredActions: _ember_internals_views_lib_system_action_manager_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"].registeredActions,\n  registerAction(actionState) {\n    let {\n      actionId\n    } = actionState;\n    _ember_internals_views_lib_system_action_manager_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"].registeredActions[actionId] = actionState;\n    return actionId;\n  },\n  unregisterAction(actionState) {\n    let {\n      actionId\n    } = actionState;\n    delete _ember_internals_views_lib_system_action_manager_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"].registeredActions[actionId];\n  }\n};\nclass ActionState {\n  constructor(element, owner, actionId, actionArgs, namedArgs, positionalArgs) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"element\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"owner\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"actionId\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"actionName\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"actionArgs\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"namedArgs\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"positional\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"implicitTarget\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"eventName\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"tag\", (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.createUpdatableTag)());\n    this.element = element;\n    this.owner = owner;\n    this.actionId = actionId;\n    this.actionArgs = actionArgs;\n    this.namedArgs = namedArgs;\n    this.positional = positionalArgs;\n    this.eventName = this.getEventName();\n    (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_14__.registerDestructor)(this, () => ActionHelper.unregisterAction(this));\n  }\n  getEventName() {\n    let {\n      on\n    } = this.namedArgs;\n    return on !== undefined ? (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(on) : 'click';\n  }\n  getActionArgs() {\n    let result = new Array(this.actionArgs.length);\n    for (let i = 0; i < this.actionArgs.length; i++) {\n      result[i] = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(this.actionArgs[i]);\n    }\n    return result;\n  }\n  getTarget() {\n    let {\n      implicitTarget,\n      namedArgs\n    } = this;\n    let {\n      target\n    } = namedArgs;\n    return target !== undefined ? (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(target) : (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(implicitTarget);\n  }\n  handler(event) {\n    let {\n      actionName,\n      namedArgs\n    } = this;\n    let {\n      bubbles,\n      preventDefault,\n      allowedKeys\n    } = namedArgs;\n    let bubblesVal = bubbles !== undefined ? (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(bubbles) : undefined;\n    let preventDefaultVal = preventDefault !== undefined ? (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(preventDefault) : undefined;\n    let allowedKeysVal = allowedKeys !== undefined ? (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(allowedKeys) : undefined;\n    let target = this.getTarget();\n    let shouldBubble = bubblesVal !== false;\n    if (!isAllowedEvent(event, allowedKeysVal)) {\n      return true;\n    }\n    if (preventDefaultVal !== false) {\n      event.preventDefault();\n    }\n    if (!shouldBubble) {\n      event.stopPropagation();\n    }\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.j)(() => {\n      let args = this.getActionArgs();\n      let payload = {\n        args,\n        target,\n        name: null\n      };\n      if ((0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isInvokableRef)(actionName)) {\n        (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__.flaggedInstrument)('interaction.ember-action', payload, () => {\n          (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.updateRef)(actionName, args[0]);\n        });\n        return;\n      }\n      if (typeof actionName === 'function') {\n        (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__.flaggedInstrument)('interaction.ember-action', payload, () => {\n          actionName.apply(target, args);\n        });\n        return;\n      }\n      payload.name = actionName;\n      if (target.send) {\n        (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__.flaggedInstrument)('interaction.ember-action', payload, () => {\n          target.send.apply(target, [actionName, ...args]);\n        });\n      } else {\n         true && !(typeof target[actionName] === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The action '${actionName}' did not exist on ${target}`, typeof target[actionName] === 'function');\n        (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__.flaggedInstrument)('interaction.ember-action', payload, () => {\n          target[actionName].apply(target, args);\n        });\n      }\n    });\n    return shouldBubble;\n  }\n}\nclass ActionModifierManager {\n  create(owner, element, _state, {\n    named,\n    positional\n  }) {\n    let actionArgs = [];\n    // The first two arguments are (1) `this` and (2) the action name.\n    // Everything else is a param.\n    for (let i = 2; i < positional.length; i++) {\n      actionArgs.push(positional[i]);\n    }\n    let actionId = (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.u)();\n    return new ActionState(element, owner, actionId, actionArgs, named, positional);\n  }\n  getDebugInstance() {\n    return null;\n  }\n  getDebugName() {\n    return 'action';\n  }\n  install(actionState) {\n    (0,_ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_52__.deprecateUntil)(`Usage of the \\`{{action}}\\` modifier is deprecated. Migrate to native functions and function invocation.`, _ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_52__.DEPRECATIONS.DEPRECATE_TEMPLATE_ACTION);\n    let {\n      element,\n      actionId,\n      positional\n    } = actionState;\n    let actionName;\n    let actionNameRef;\n    let implicitTarget;\n    if (positional.length > 1) {\n      implicitTarget = positional[0];\n      actionNameRef = positional[1];\n      if ((0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isInvokableRef)(actionNameRef)) {\n        actionName = actionNameRef;\n      } else {\n        actionName = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(actionNameRef);\n        if (true) {\n          let actionPath = actionNameRef.debugLabel;\n          let actionPathParts = actionPath.split('.');\n          let actionLabel = actionPathParts[actionPathParts.length - 1];\n           true && !(typeof actionName === 'string' || typeof actionName === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You specified a quoteless path, `' + actionPath + '`, to the ' + '{{action}} helper which did not resolve to an action name (a ' + 'string). Perhaps you meant to use a quoted actionName? (e.g. ' + '{{action \"' + actionLabel + '\"}}).', typeof actionName === 'string' || typeof actionName === 'function');\n        }\n      }\n    }\n    actionState.actionName = actionName;\n    actionState.implicitTarget = implicitTarget;\n    this.ensureEventSetup(actionState);\n    ActionHelper.registerAction(actionState);\n    element.setAttribute('data-ember-action', '');\n    element.setAttribute(`data-ember-action-${actionId}`, String(actionId));\n  }\n  update(actionState) {\n    let {\n      positional\n    } = actionState;\n    let actionNameRef = positional[1];\n     true && !actionNameRef && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected at least one positional arg', actionNameRef);\n    if (!(0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.isInvokableRef)(actionNameRef)) {\n      actionState.actionName = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(actionNameRef);\n    }\n    let newEventName = actionState.getEventName();\n    if (newEventName !== actionState.eventName) {\n      this.ensureEventSetup(actionState);\n      actionState.eventName = actionState.getEventName();\n    }\n  }\n  ensureEventSetup(actionState) {\n    let dispatcher = actionState.owner.lookup('event_dispatcher:main');\n     true && !(dispatcher instanceof _ember_internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_55__[\"default\"]) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected dispatcher to be an EventDispatcher', dispatcher instanceof _ember_internals_views_lib_system_event_dispatcher_js__WEBPACK_IMPORTED_MODULE_55__[\"default\"]);\n    dispatcher?.setupHandlerForEmberEvent(actionState.eventName);\n  }\n  getTag(actionState) {\n    return actionState.tag;\n  }\n  getDestroyable(actionState) {\n    return actionState;\n  }\n}\nconst ACTION_MODIFIER_MANAGER = new ActionModifierManager();\nconst actionModifier = (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.setInternalModifierManager)(ACTION_MODIFIER_MANAGER, {});\nconst CAPABILITIES = {\n  dynamicLayout: true,\n  dynamicTag: false,\n  prepareArgs: false,\n  createArgs: true,\n  attributeHook: false,\n  elementHook: false,\n  createCaller: true,\n  dynamicScope: true,\n  updateHook: true,\n  createInstance: true,\n  wrapped: false,\n  willDestroy: false,\n  hasSubOwner: true\n};\nclass MountManager {\n  getDynamicLayout(state) {\n    let templateFactory = state.engine.lookup('template:application');\n    return (0,_glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_58__.unwrapTemplate)(templateFactory(state.engine)).asLayout();\n  }\n  getCapabilities() {\n    return CAPABILITIES;\n  }\n  getOwner(state) {\n    return state.engine;\n  }\n  create(owner, {\n    name\n  }, args, env) {\n    // TODO\n    // mount is a runtime helper, this shouldn't use dynamic layout\n    // we should resolve the engine app template in the helper\n    // it also should use the owner that looked up the mount helper.\n     true && !(owner instanceof EmberEngineInstance) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected owner to be an EngineInstance', owner instanceof EmberEngineInstance);\n    let engine = owner.buildChildEngineInstance(name);\n    engine.boot();\n    let applicationFactory = engine.factoryFor(`controller:application`);\n    let controllerFactory = applicationFactory || (0,_ember_routing_lib_generate_controller_js__WEBPACK_IMPORTED_MODULE_51__.generateControllerFactory)(engine, 'application');\n    let controller;\n    let self;\n    let bucket;\n    let modelRef;\n    if (args.named.has('model')) {\n      modelRef = args.named.get('model');\n    }\n    if (modelRef === undefined) {\n      controller = controllerFactory.create();\n      self = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createConstRef)(controller, 'this');\n      bucket = {\n        engine,\n        controller,\n        self,\n        modelRef\n      };\n    } else {\n      let model = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(modelRef);\n      controller = controllerFactory.create({\n        model\n      });\n      self = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createConstRef)(controller, 'this');\n      bucket = {\n        engine,\n        controller,\n        self,\n        modelRef\n      };\n    }\n    if (env.debugRenderTree) {\n      (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_14__.associateDestroyableChild)(engine, controller);\n    }\n    return bucket;\n  }\n  getDebugName({\n    name\n  }) {\n    return name;\n  }\n  getDebugCustomRenderTree(definition, state, args, templateModuleName) {\n    return [{\n      bucket: state.engine,\n      instance: state.engine,\n      type: 'engine',\n      name: definition.name,\n      args\n    }, {\n      bucket: state.controller,\n      instance: state.controller,\n      type: 'route-template',\n      name: 'application',\n      args,\n      template: templateModuleName\n    }];\n  }\n  getSelf({\n    self\n  }) {\n    return self;\n  }\n  getDestroyable(bucket) {\n    return bucket.engine;\n  }\n  didCreate() {}\n  didUpdate() {}\n  didRenderLayout() {}\n  didUpdateLayout() {}\n  update(bucket) {\n    let {\n      controller,\n      modelRef\n    } = bucket;\n    if (modelRef !== undefined) {\n      controller.set('model', (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(modelRef));\n    }\n  }\n}\nconst MOUNT_MANAGER = new MountManager();\nclass MountDefinition {\n  constructor(resolvedName) {\n    // handle is not used by this custom definition\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"handle\", -1);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"manager\", MOUNT_MANAGER);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"compilable\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"capabilities\", (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.capabilityFlagsFrom)(CAPABILITIES));\n    this.resolvedName = resolvedName;\n    this.state = {\n      name: resolvedName\n    };\n  }\n}\n\n/**\n@module ember\n*/\n\nconst mountHelper = internalHelper((args, owner) => {\n   true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('{{mount}} must be used within a component that has an owner', owner);\n  let nameRef = args.positional[0];\n  let captured;\n   true && !(args.positional.length === 1) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You can only pass a single positional argument to the {{mount}} helper, e.g. {{mount \"chat-engine\"}}.', args.positional.length === 1);\n  if ( true && args.named) {\n    let keys = Object.keys(args.named);\n    let extra = keys.filter(k => k !== 'model');\n     true && !(extra.length === 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You can only pass a `model` argument to the {{mount}} helper, ' + 'e.g. {{mount \"profile-engine\" model=this.profile}}. ' + `You passed ${extra.join(',')}.`, extra.length === 0);\n  }\n  captured = (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.createCapturedArgs)(args.named, _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.EMPTY_POSITIONAL);\n  let lastName, lastDef;\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n    let name = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(nameRef);\n    if (typeof name === 'string') {\n      if (lastName === name) {\n        return lastDef;\n      }\n       true && !owner.hasRegistration(`engine:${name}`) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You used \\`{{mount '${name}'}}\\`, but the engine '${name}' can not be found.`, owner.hasRegistration(`engine:${name}`));\n      lastName = name;\n      lastDef = (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.curry)(_glimmer_vm_index_js__WEBPACK_IMPORTED_MODULE_62__.CurriedType.Component, new MountDefinition(name), owner, captured, true);\n      return lastDef;\n    } else {\n       true && !(name === null || name === undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Invalid engine name '${name}' specified, engine name must be either a string, null or undefined.`, name === null || name === undefined);\n      lastDef = null;\n      lastName = null;\n      return null;\n    }\n  });\n});\nconst outletHelper = internalHelper((_args, owner, scope) => {\n   true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected owner to be present, {{outlet}} requires an owner', owner);\n   true && !scope && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected dynamic scope to be present. You may have attempted to use the {{outlet}} keyword dynamically. This keyword cannot be used dynamically.', scope);\n  let outletRef = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n    let state = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(scope.get('outletState'));\n    return state?.outlets?.main;\n  });\n  let lastState = null;\n  let definition = null;\n  return (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n    let outletState = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(outletRef);\n    let state = stateFor(outletRef, outletState);\n    if (!validate(state, lastState)) {\n      lastState = state;\n      if (state !== null) {\n        let named = (0,_glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_58__.dict)();\n\n        // Create a ref for the model\n        let modelRef = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.childRefFromParts)(outletRef, ['render', 'model']);\n\n        // Store the value of the model\n        let model = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(modelRef);\n\n        // Create a compute ref which we pass in as the `{{@model}}` reference\n        // for the outlet. This ref will update and return the value of the\n        // model _until_ the outlet itself changes. Once the outlet changes,\n        // dynamic scope also changes, and so the original model ref would not\n        // provide the correct updated value. So we stop updating and return\n        // the _last_ model value for that outlet.\n        named['model'] = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n          if (lastState === state) {\n            model = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(modelRef);\n          }\n          return model;\n        });\n        if (true) {\n          named['model'] = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createDebugAliasRef)('@model', named['model']);\n        }\n        let args = (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.createCapturedArgs)(named, _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.EMPTY_POSITIONAL);\n        definition = (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.curry)(_glimmer_vm_index_js__WEBPACK_IMPORTED_MODULE_62__.CurriedType.Component, new OutletComponentDefinition(state), outletState?.render?.owner ?? owner, args, true);\n      } else {\n        definition = null;\n      }\n    }\n    return definition;\n  });\n});\nfunction stateFor(ref, outlet) {\n  if (outlet === undefined) return null;\n  let render = outlet.render;\n  if (render === undefined) return null;\n  let template = render.template;\n  if (template === undefined) return null;\n  if (isTemplateFactory(template)) {\n    template = template(render.owner);\n    if (true) {\n      let message = 'The `template` property of `OutletState` should be a ' + '`Template` rather than a `TemplateFactory`. This is known to be a ' + \"problem in older versions of `@ember/test-helpers`. If you haven't \" + 'done so already, try upgrading to the latest version.\\n\\n';\n      if (template.result === 'ok' && typeof template.moduleName === 'string') {\n        message += 'The offending template has a moduleName `' + template.moduleName + '`, which might be helpful for identifying ' + 'source of this issue.\\n\\n';\n      }\n      message += 'Please note that `OutletState` is a private API in Ember.js ' + \"and not meant to be used outside of the framework's internal code.\";\n       true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.d)(message, false, {\n        id: 'outlet-state-template-factory',\n        until: '5.9.0',\n        for: 'ember-source',\n        since: {\n          available: '5.6.0',\n          enabled: '5.6.0'\n        }\n      });\n    }\n  }\n  return {\n    ref,\n    name: render.name,\n    template,\n    controller: render.controller,\n    model: render.model\n  };\n}\nfunction validate(state, lastState) {\n  if (state === null) {\n    return lastState === null;\n  }\n  if (lastState === null) {\n    return false;\n  }\n  return state.template === lastState.template && state.controller === lastState.controller;\n}\nfunction instrumentationPayload(name) {\n  return {\n    object: `component:${name}`\n  };\n}\nfunction componentFor(name, owner) {\n  let fullName = `component:${name}`;\n  return owner.factoryFor(fullName) || null;\n}\nfunction layoutFor(name, owner, options) {\n  if (_ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_52__.DEPRECATIONS.DEPRECATE_COMPONENT_TEMPLATE_RESOLVING.isRemoved) {\n    return null;\n  }\n  let templateFullName = `template:components/${name}`;\n  let result = owner.lookup(templateFullName, options) || null;\n  if (result) {\n    (0,_ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_52__.deprecateUntil)(`Components with separately resolved templates are deprecated. Migrate to either co-located js/ts + hbs files or to gjs/gts. Tried to lookup '${templateFullName}'.`, _ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_52__.DEPRECATIONS.DEPRECATE_COMPONENT_TEMPLATE_RESOLVING);\n  }\n  return result;\n}\nfunction lookupComponentPair(owner, name, options) {\n  let component = componentFor(name, owner);\n  if ((0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.isFactory)(component) && component.class) {\n    let layout = (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.getComponentTemplate)(component.class);\n    if (layout !== undefined) {\n      return {\n        component,\n        layout\n      };\n    }\n  }\n  let layout = layoutFor(name, owner, options);\n  if (component === null && layout === null) {\n    return null;\n  } else {\n    return {\n      component,\n      layout\n    };\n  }\n}\nconst BUILTIN_KEYWORD_HELPERS = {\n  action,\n  mut,\n  readonly,\n  unbound,\n  '-hash': _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.hash,\n  '-each-in': eachIn,\n  '-normalize-class': normalizeClassHelper,\n  '-resolve': resolve,\n  '-track-array': trackArray,\n  '-mount': mountHelper,\n  '-outlet': outletHelper,\n  '-in-el-null': inElementNullCheckHelper\n};\nconst BUILTIN_HELPERS = {\n  ...BUILTIN_KEYWORD_HELPERS,\n  array: _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.array,\n  concat: _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.concat,\n  fn: _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.fn,\n  get: _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.get,\n  hash: _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.hash,\n  'unique-id': uniqueId\n};\nif (true) {\n  BUILTIN_HELPERS['-disallow-dynamic-resolution'] = disallowDynamicResolution;\n} else {}\nconst BUILTIN_KEYWORD_MODIFIERS = {\n  action: actionModifier\n};\nconst BUILTIN_MODIFIERS = {\n  ...BUILTIN_KEYWORD_MODIFIERS,\n  on: _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.on\n};\nconst CLASSIC_HELPER_MANAGER_ASSOCIATED = new WeakSet();\nclass ResolverImpl {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"componentDefinitionCache\", new Map());\n  }\n  lookupPartial() {\n    return null;\n  }\n  lookupHelper(name, owner) {\n     true && !!(BUILTIN_HELPERS[name] && owner.hasRegistration(`helper:${name}`)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You attempted to overwrite the built-in helper \"${name}\" which is not allowed. Please rename the helper.`, !(BUILTIN_HELPERS[name] && owner.hasRegistration(`helper:${name}`)));\n    let helper = BUILTIN_HELPERS[name];\n    if (helper !== undefined) {\n      return helper;\n    }\n    let factory = owner.factoryFor(`helper:${name}`);\n    if (factory === undefined) {\n      return null;\n    }\n    let definition = factory.class;\n    if (definition === undefined) {\n      return null;\n    }\n    if (typeof definition === 'function' && isClassicHelper(definition)) {\n      // For classic class based helpers, we need to pass the factoryFor result itself rather\n      // than the raw value (`factoryFor(...).class`). This is because injections are already\n      // bound in the factoryFor result, including type-based injections\n\n      if (true) {\n        // In DEBUG we need to only set the associated value once, otherwise\n        // we'll trigger an assertion\n        if (!CLASSIC_HELPER_MANAGER_ASSOCIATED.has(factory)) {\n          CLASSIC_HELPER_MANAGER_ASSOCIATED.add(factory);\n          (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.setInternalHelperManager)(CLASSIC_HELPER_MANAGER, factory);\n        }\n      } else {}\n      return factory;\n    }\n    return definition;\n  }\n  lookupBuiltInHelper(name) {\n    return BUILTIN_KEYWORD_HELPERS[name] ?? null;\n  }\n  lookupModifier(name, owner) {\n    let builtin = BUILTIN_MODIFIERS[name];\n    if (builtin !== undefined) {\n      return builtin;\n    }\n    let modifier = owner.factoryFor(`modifier:${name}`);\n    if (modifier === undefined) {\n      return null;\n    }\n    return modifier.class || null;\n  }\n  lookupBuiltInModifier(name) {\n    return BUILTIN_KEYWORD_MODIFIERS[name] ?? null;\n  }\n  lookupComponent(name, owner) {\n    let pair = lookupComponentPair(owner, name);\n    if (pair === null) {\n       true && !(name !== 'text-area') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Could not find component `<TextArea />` (did you mean `<Textarea />`?)', name !== 'text-area');\n      return null;\n    }\n    let template = null;\n    let key;\n    if (pair.component === null) {\n      key = template = pair.layout(owner);\n    } else {\n      key = pair.component;\n    }\n    let cachedComponentDefinition = this.componentDefinitionCache.get(key);\n    if (cachedComponentDefinition !== undefined) {\n      return cachedComponentDefinition;\n    }\n    if (template === null && pair.layout !== null) {\n      template = pair.layout(owner);\n    }\n    let finalizer = (0,_ember_instrumentation_index_js__WEBPACK_IMPORTED_MODULE_57__._instrumentStart)('render.getComponentDefinition', instrumentationPayload, name);\n    let definition = null;\n    if (pair.component === null) {\n      definition = {\n        state: (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.templateOnlyComponent)(undefined, name),\n        manager: _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.TEMPLATE_ONLY_COMPONENT_MANAGER,\n        template\n      };\n    } else {\n      let factory = pair.component;\n       true && !(factory.class !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`missing component class ${name}`, factory.class !== undefined);\n      let ComponentClass = factory.class;\n      let manager = (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__.getInternalComponentManager)(ComponentClass);\n      definition = {\n        state: isCurlyManager(manager) ? factory : ComponentClass,\n        manager,\n        template\n      };\n    }\n    finalizer();\n    this.componentDefinitionCache.set(key, definition);\n     true && !!(definition === null && name === 'text-area') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Could not find component `<TextArea />` (did you mean `<Textarea />`?)', !(definition === null && name === 'text-area'));\n    return definition;\n  }\n}\n\n// We use the `InternalOwner` notion here because we actually need all of its\n// API for using with renderers (normally, it will be `EngineInstance`).\n// We use `getOwner` from our internal home for it rather than the narrower\n// public API for the same reason.\nconst TOP_LEVEL_NAME = '-top-level';\nclass OutletView {\n  static extend(injections) {\n    return class extends OutletView {\n      static create(options) {\n        if (options) {\n          return super.create(Object.assign({}, injections, options));\n        } else {\n          return super.create(injections);\n        }\n      }\n    };\n  }\n  static reopenClass(injections) {\n    Object.assign(this, injections);\n  }\n  static create(options) {\n    let {\n      environment: _environment,\n      application: namespace,\n      template: templateFactory\n    } = options;\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(options);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('OutletView is unexpectedly missing an owner', owner);\n    let template = templateFactory(owner);\n    return new OutletView(_environment, owner, template, namespace);\n  }\n  constructor(_environment, owner, template, namespace) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"ref\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n    this._environment = _environment;\n    this.owner = owner;\n    this.template = template;\n    this.namespace = namespace;\n    let outletStateTag = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.createTag)();\n    let outletState = {\n      outlets: {\n        main: undefined\n      },\n      render: {\n        owner: owner,\n        into: undefined,\n        outlet: 'main',\n        name: TOP_LEVEL_NAME,\n        controller: undefined,\n        model: undefined,\n        template\n      }\n    };\n    let ref = this.ref = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createComputeRef)(() => {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)(outletStateTag);\n      return outletState;\n    }, state => {\n      (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.dirtyTag)(outletStateTag);\n      outletState.outlets['main'] = state;\n    });\n    this.state = {\n      ref,\n      name: TOP_LEVEL_NAME,\n      template,\n      controller: undefined,\n      model: undefined\n    };\n  }\n  appendTo(selector) {\n    let target;\n    if (this._environment.hasDOM) {\n      target = typeof selector === 'string' ? document.querySelector(selector) : selector;\n    } else {\n      target = selector;\n    }\n    let renderer = this.owner.lookup('renderer:-dom');\n\n    // SAFETY: It's not clear that this cast is safe.\n    // The types for appendOutletView may be incorrect or this is a potential bug.\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.s)('render', renderer, 'appendOutletView', this, target);\n  }\n  rerender() {\n    /**/\n  }\n  setOutletState(state) {\n    (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.updateRef)(this.ref, state);\n  }\n  destroy() {\n    /**/\n  }\n}\nclass DynamicScope {\n  constructor(view, outletState) {\n    this.view = view;\n    this.outletState = outletState;\n  }\n  child() {\n    return new DynamicScope(this.view, this.outletState);\n  }\n  get(key) {\n     true && !(key === 'outletState') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Using \\`-get-dynamic-scope\\` is only supported for \\`outletState\\` (you used \\`${key}\\`).`, key === 'outletState');\n    return this.outletState;\n  }\n  set(key, value) {\n     true && !(key === 'outletState') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Using \\`-with-dynamic-scope\\` is only supported for \\`outletState\\` (you used \\`${key}\\`).`, key === 'outletState');\n    this.outletState = value;\n    return value;\n  }\n}\nconst NO_OP = () => {};\n\n// This wrapper logic prevents us from rerendering in case of a hard failure\n// during render. This prevents infinite revalidation type loops from occuring,\n// and ensures that errors are not swallowed by subsequent follow on failures.\nfunction errorLoopTransaction(fn) {\n  if (true) {\n    return () => {\n      let didError = true;\n      try {\n        fn();\n        didError = false;\n      } finally {\n        if (didError) {\n          // Noop the function so that we won't keep calling it and causing\n          // infinite looping failures;\n          fn = () => {\n            // eslint-disable-next-line no-console\n            console.warn('Attempted to rerender, but the Ember application has had an unrecoverable error occur during render. You should reload the application after fixing the cause of the error.');\n          };\n        }\n      }\n    };\n  } else {}\n}\nclass RootState {\n  constructor(root, runtime, context, owner, template, self, parentElement, dynamicScope, builder) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"result\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"destroyed\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"render\", void 0);\n    this.root = root;\n    this.runtime = runtime;\n     true && !(template !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You cannot render \\`${(0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.valueForRef)(self)}\\` without a template.`, template !== undefined);\n    this.id = root instanceof OutletView ? (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.g)(root) : (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.getViewId)(root);\n    this.result = undefined;\n    this.destroyed = false;\n    this.render = errorLoopTransaction(() => {\n      let layout = (0,_glimmer_util_index_js__WEBPACK_IMPORTED_MODULE_58__.unwrapTemplate)(template).asLayout();\n      let iterator = (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.renderMain)(runtime, context, owner, self, builder(runtime.env, {\n        element: parentElement,\n        nextSibling: null\n      }), layout, dynamicScope);\n      let result = this.result = iterator.sync();\n\n      // override .render function after initial render\n      this.render = errorLoopTransaction(() => result.rerender({\n        alwaysRevalidate: false\n      }));\n    });\n  }\n  isFor(possibleRoot) {\n    return this.root === possibleRoot;\n  }\n  destroy() {\n    let {\n      result,\n      runtime: {\n        env\n      }\n    } = this;\n    this.destroyed = true;\n    this.runtime = undefined;\n    this.root = null;\n    this.result = undefined;\n    this.render = undefined;\n    if (result !== undefined) {\n      /*\n       Handles these scenarios:\n        * When roots are removed during standard rendering process, a transaction exists already\n         `.begin()` / `.commit()` are not needed.\n       * When roots are being destroyed manually (`component.append(); component.destroy() case), no\n         transaction exists already.\n       * When roots are being destroyed during `Renderer#destroy`, no transaction exists\n        */\n\n      (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.inTransaction)(env, () => (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_14__.destroy)(result));\n    }\n  }\n}\nconst renderers = [];\nfunction _resetRenderers() {\n  renderers.length = 0;\n}\nfunction register(renderer) {\n   true && !(renderers.indexOf(renderer) === -1) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Cannot register the same renderer twice', renderers.indexOf(renderer) === -1);\n  renderers.push(renderer);\n}\nfunction deregister(renderer) {\n  let index = renderers.indexOf(renderer);\n   true && !(index !== -1) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Cannot deregister unknown unregistered renderer', index !== -1);\n  renderers.splice(index, 1);\n}\nfunction loopBegin() {\n  for (let renderer of renderers) {\n    renderer._scheduleRevalidate();\n  }\n}\nlet renderSettledDeferred = null;\n/*\n  Returns a promise which will resolve when rendering has settled. Settled in\n  this context is defined as when all of the tags in use are \"current\" (e.g.\n  `renderers.every(r => r._isValid())`). When this is checked at the _end_ of\n  the run loop, this essentially guarantees that all rendering is completed.\n\n  @method renderSettled\n  @returns {Promise<void>} a promise which fulfills when rendering has settled\n*/\nfunction renderSettled() {\n  if (renderSettledDeferred === null) {\n    renderSettledDeferred = _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_39__.a.defer();\n    // if there is no current runloop, the promise created above will not have\n    // a chance to resolve (because its resolved in backburner's \"end\" event)\n    if (!(0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.Z)()) {\n      // ensure a runloop has been kicked off\n      _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__._.schedule('actions', null, NO_OP);\n    }\n  }\n  return renderSettledDeferred.promise;\n}\nfunction resolveRenderPromise() {\n  if (renderSettledDeferred !== null) {\n    let resolve = renderSettledDeferred.resolve;\n    renderSettledDeferred = null;\n    _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__._.join(null, resolve);\n  }\n}\nlet loops = 0;\nfunction loopEnd() {\n  for (let renderer of renderers) {\n    if (!renderer._isValid()) {\n      if (loops > _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_15__.E._RERENDER_LOOP_LIMIT) {\n        loops = 0;\n        // TODO: do something better\n        renderer.destroy();\n        throw new Error('infinite rendering invalidation detected');\n      }\n      loops++;\n      return _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__._.join(null, NO_OP);\n    }\n  }\n  loops = 0;\n  resolveRenderPromise();\n}\n_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__._.on('begin', loopBegin);\n_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__._.on('end', loopEnd);\nclass Renderer {\n  static create(props) {\n    let {\n      _viewRegistry\n    } = props;\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(props);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Renderer is unexpectedly missing an owner', owner);\n    let document = owner.lookup('service:-document');\n    let env = owner.lookup('-environment:main');\n    let rootTemplate = owner.lookup((0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_2__.p)`template:-root`);\n    let builder = owner.lookup('service:-dom-builder');\n    return new this(owner, document, env, rootTemplate, _viewRegistry, builder);\n  }\n  constructor(owner, document, env, rootTemplate, viewRegistry, builder = _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.clientBuilder) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_rootTemplate\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_viewRegistry\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_roots\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_removedRoots\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_builder\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_inRenderTransaction\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_owner\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_context\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_runtime\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_lastRevision\", -1);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_destroyed\", false);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_isInteractive\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_runtimeResolver\", void 0);\n    this._owner = owner;\n    this._rootTemplate = rootTemplate(owner);\n    this._viewRegistry = viewRegistry || owner.lookup('-view-registry:main');\n    this._roots = [];\n    this._removedRoots = [];\n    this._builder = builder;\n    this._isInteractive = env.isInteractive;\n\n    // resolver is exposed for tests\n    let resolver = this._runtimeResolver = new ResolverImpl();\n    let sharedArtifacts = (0,_glimmer_program_index_js__WEBPACK_IMPORTED_MODULE_63__.artifacts)();\n    this._context = (0,_glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_1__.programCompilationContext)(sharedArtifacts, resolver, heap => new _glimmer_program_index_js__WEBPACK_IMPORTED_MODULE_63__.RuntimeOpImpl(heap));\n    let runtimeEnvironmentDelegate = new EmberEnvironmentDelegate(owner, env.isInteractive);\n    this._runtime = (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.runtimeContext)({\n      appendOperations: env.hasDOM ? new _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.DOMTreeConstruction(document) : new _glimmer_node_index_js__WEBPACK_IMPORTED_MODULE_64__.NodeDOMTreeConstruction(document),\n      updateOperations: new _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.DOMChanges(document)\n    }, runtimeEnvironmentDelegate, sharedArtifacts, resolver);\n  }\n  get debugRenderTree() {\n    let {\n      debugRenderTree\n    } = this._runtime.env;\n     true && !debugRenderTree && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Attempted to access the DebugRenderTree, but it did not exist. Is the Ember Inspector open?', debugRenderTree);\n    return debugRenderTree;\n  }\n\n  // renderer HOOKS\n\n  appendOutletView(view, target) {\n    let definition = createRootOutlet(view);\n    this._appendDefinition(view, (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.curry)(_glimmer_vm_index_js__WEBPACK_IMPORTED_MODULE_62__.CurriedType.Component, definition, view.owner, null, true), target);\n  }\n  appendTo(view, target) {\n    let definition = new RootComponentDefinition(view);\n    this._appendDefinition(view, (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.curry)(_glimmer_vm_index_js__WEBPACK_IMPORTED_MODULE_62__.CurriedType.Component, definition, this._owner, null, true), target);\n  }\n  _appendDefinition(root, definition, target) {\n    let self = (0,_glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.createConstRef)(definition, 'this');\n    let dynamicScope = new DynamicScope(null, _glimmer_reference_index_js__WEBPACK_IMPORTED_MODULE_6__.UNDEFINED_REFERENCE);\n    let rootState = new RootState(root, this._runtime, this._context, this._owner, this._rootTemplate, self, target, dynamicScope, this._builder);\n    this._renderRoot(rootState);\n  }\n  rerender() {\n    this._scheduleRevalidate();\n  }\n  register(view) {\n    let id = (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.getViewId)(view);\n     true && !!this._viewRegistry[id] && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Attempted to register a view with an id already in use: ' + id, !this._viewRegistry[id]);\n    this._viewRegistry[id] = view;\n  }\n  unregister(view) {\n    delete this._viewRegistry[(0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.getViewId)(view)];\n  }\n  remove(view) {\n    view._transitionTo('destroying');\n    this.cleanupRootFor(view);\n    if (this._isInteractive) {\n      view.trigger('didDestroyElement');\n    }\n  }\n  cleanupRootFor(view) {\n    // no need to cleanup roots if we have already been destroyed\n    if (this._destroyed) {\n      return;\n    }\n    let roots = this._roots;\n\n    // traverse in reverse so we can remove items\n    // without mucking up the index\n    let i = this._roots.length;\n    while (i--) {\n      let root = roots[i];\n       true && !root && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has root', root);\n      if (root.isFor(view)) {\n        root.destroy();\n        roots.splice(i, 1);\n      }\n    }\n  }\n  destroy() {\n    if (this._destroyed) {\n      return;\n    }\n    this._destroyed = true;\n    this._clearAllRoots();\n  }\n  getElement(view) {\n    if (this._isInteractive) {\n      return (0,_ember_internals_views_lib_system_utils_js__WEBPACK_IMPORTED_MODULE_11__.getViewElement)(view);\n    } else {\n      throw new Error('Accessing `this.element` is not allowed in non-interactive environments (such as FastBoot).');\n    }\n  }\n  getBounds(view) {\n    let bounds = view[BOUNDS];\n     true && !bounds && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('object passed to getBounds must have the BOUNDS symbol as a property', bounds);\n    let parentElement = bounds.parentElement();\n    let firstNode = bounds.firstNode();\n    let lastNode = bounds.lastNode();\n    return {\n      parentElement,\n      firstNode,\n      lastNode\n    };\n  }\n  createElement(tagName) {\n    return this._runtime.env.getAppendOperations().createElement(tagName);\n  }\n  _renderRoot(root) {\n    let {\n      _roots: roots\n    } = this;\n    roots.push(root);\n    if (roots.length === 1) {\n      register(this);\n    }\n    this._renderRootsTransaction();\n  }\n  _renderRoots() {\n    let {\n      _roots: roots,\n      _runtime: runtime,\n      _removedRoots: removedRoots\n    } = this;\n    let initialRootsLength;\n    do {\n      initialRootsLength = roots.length;\n      (0,_glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.inTransaction)(runtime.env, () => {\n        // ensure that for the first iteration of the loop\n        // each root is processed\n        for (let i = 0; i < roots.length; i++) {\n          let root = roots[i];\n           true && !root && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has root', root);\n          if (root.destroyed) {\n            // add to the list of roots to be removed\n            // they will be removed from `this._roots` later\n            removedRoots.push(root);\n\n            // skip over roots that have been marked as destroyed\n            continue;\n          }\n\n          // when processing non-initial reflush loops,\n          // do not process more roots than needed\n          if (i >= initialRootsLength) {\n            continue;\n          }\n          root.render();\n        }\n        this._lastRevision = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.valueForTag)(_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.CURRENT_TAG);\n      });\n    } while (roots.length > initialRootsLength);\n\n    // remove any roots that were destroyed during this transaction\n    while (removedRoots.length) {\n      let root = removedRoots.pop();\n      let rootIndex = roots.indexOf(root);\n      roots.splice(rootIndex, 1);\n    }\n    if (this._roots.length === 0) {\n      deregister(this);\n    }\n  }\n  _renderRootsTransaction() {\n    if (this._inRenderTransaction) {\n      // currently rendering roots, a new root was added and will\n      // be processed by the existing _renderRoots invocation\n      return;\n    }\n\n    // used to prevent calling _renderRoots again (see above)\n    // while we are actively rendering roots\n    this._inRenderTransaction = true;\n    let completedWithoutError = false;\n    try {\n      this._renderRoots();\n      completedWithoutError = true;\n    } finally {\n      if (!completedWithoutError) {\n        this._lastRevision = (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.valueForTag)(_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.CURRENT_TAG);\n      }\n      this._inRenderTransaction = false;\n    }\n  }\n  _clearAllRoots() {\n    let roots = this._roots;\n    for (let root of roots) {\n      root.destroy();\n    }\n    this._removedRoots.length = 0;\n    this._roots = [];\n\n    // if roots were present before destroying\n    // deregister this renderer instance\n    if (roots.length) {\n      deregister(this);\n    }\n  }\n  _scheduleRevalidate() {\n    _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__._.scheduleOnce('render', this, this._revalidate);\n  }\n  _isValid() {\n    return this._destroyed || this._roots.length === 0 || (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.validateTag)(_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.CURRENT_TAG, this._lastRevision);\n  }\n  _revalidate() {\n    if (this._isValid()) {\n      return;\n    }\n    this._renderRootsTransaction();\n  }\n}\nconst OutletTemplate = (0,_glimmer_opcode_compiler_index_js__WEBPACK_IMPORTED_MODULE_1__.templateFactory)(\n/*\n  {{component (outletHelper)}}\n*/\n{\n  \"id\": \"2c6+lAmT\",\n  \"block\": \"[[[46,[28,[32,0],null,null],null,null,null]],[],false,[\\\"component\\\"]]\",\n  \"moduleName\": \"packages/@ember/-internals/glimmer/lib/templates/outlet.hbs\",\n  \"scope\": () => [outletHelper],\n  \"isStrictMode\": true\n});\nfunction setupApplicationRegistry(registry) {\n  // because we are using injections we can't use instantiate false\n  // we need to use bind() to copy the function so factory for\n  // association won't leak\n  registry.register('service:-dom-builder', {\n    // Additionally, we *must* constrain this to require `props` on create, else\n    // we *know* it cannot have an owner.\n    create(props) {\n      let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(props);\n       true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('DomBuilderService is unexpectedly missing an owner', owner);\n      let env = owner.lookup('-environment:main');\n      switch (env._renderMode) {\n        case 'serialize':\n          return _glimmer_node_index_js__WEBPACK_IMPORTED_MODULE_64__.serializeBuilder.bind(null);\n        case 'rehydrate':\n          return _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.rehydrationBuilder.bind(null);\n        default:\n          return _glimmer_runtime_index_js__WEBPACK_IMPORTED_MODULE_4__.clientBuilder.bind(null);\n      }\n    }\n  });\n  registry.register((0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_2__.p)`template:-root`, RootTemplate);\n  registry.register('renderer:-dom', Renderer);\n}\nfunction setupEngineRegistry(registry) {\n  registry.optionsForType('template', {\n    instantiate: false\n  });\n  registry.register('view:-outlet', OutletView);\n  registry.register('template:-outlet', OutletTemplate);\n  registry.optionsForType('helper', {\n    instantiate: false\n  });\n  registry.register('component:input', Input);\n  registry.register('component:link-to', LinkTo);\n  registry.register('component:textarea', Textarea);\n}\nfunction props(obj) {\n  let properties = [];\n  for (let key in obj) {\n    properties.push(key);\n  }\n  return properties;\n}\n\n/**\n@module @ember/engine\n*/\n\n/**\n  The `Engine` class contains core functionality for both applications and\n  engines.\n\n  Each engine manages a registry that's used for dependency injection and\n  exposed through `RegistryProxy`.\n\n  Engines also manage initializers and instance initializers.\n\n  Engines can spawn `EngineInstance` instances via `buildInstance()`.\n\n  @class Engine\n  @extends Ember.Namespace\n  @uses RegistryProxyMixin\n  @public\n*/\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\nclass Engine extends _ember_application_namespace_js__WEBPACK_IMPORTED_MODULE_27__[\"default\"].extend(_ember_internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_30__[\"default\"]) {\n  constructor(...args) {\n    super(...args);\n    /**\n      A private flag indicating whether an engine's initializers have run yet.\n       @private\n      @property _initializersRan\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_initializersRan\", false);\n  }\n  /**\n    This creates a registry with the default Ember naming conventions.\n     It also configures the registry:\n     * registered views are created every time they are looked up (they are\n      not singletons)\n    * registered templates are not factories; the registered value is\n      returned directly.\n    * the router receives the application as its `namespace` property\n    * all controllers receive the router as their `target` and `controllers`\n      properties\n    * all controllers receive the application as their `namespace` property\n    * the application view receives the application controller as its\n      `controller` property\n    * the application view receives the application template as its\n      `defaultTemplate` property\n     @method buildRegistry\n    @static\n    @param {Application} namespace the application for which to\n      build the registry\n    @return {Ember.Registry} the built registry\n    @private\n  */\n  static buildRegistry(namespace) {\n    let registry = new _registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_2__.R({\n      resolver: resolverFor(namespace)\n    });\n    registry.set = _property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s;\n    registry.register('application:main', namespace, {\n      instantiate: false\n    });\n    commonSetupRegistry(registry);\n    setupEngineRegistry(registry);\n    return registry;\n  }\n\n  /**\n    Set this to provide an alternate class to `DefaultResolver`\n     @property resolver\n    @public\n  */\n\n  init(properties) {\n    super.init(properties);\n    this.buildRegistry();\n  }\n  /**\n    Ensure that initializers are run once, and only once, per engine.\n     @private\n    @method ensureInitializers\n  */\n  ensureInitializers() {\n    if (!this._initializersRan) {\n      this.runInitializers();\n      this._initializersRan = true;\n    }\n  }\n\n  /**\n    Create an EngineInstance for this engine.\n     @public\n    @method buildInstance\n    @return {EngineInstance} the engine instance\n  */\n  buildInstance(options = {}) {\n    this.ensureInitializers();\n    return EmberEngineInstance.create({\n      ...options,\n      base: this\n    });\n  }\n\n  /**\n    Build and configure the registry for the current engine.\n     @private\n    @method buildRegistry\n    @return {Ember.Registry} the configured registry\n  */\n  buildRegistry() {\n    let registry = this.__registry__ = this.constructor.buildRegistry(this);\n    return registry;\n  }\n\n  /**\n    @private\n    @method initializer\n  */\n  initializer(initializer) {\n    this.constructor.initializer(initializer);\n  }\n\n  /**\n    @private\n    @method instanceInitializer\n  */\n  instanceInitializer(initializer) {\n    this.constructor.instanceInitializer(initializer);\n  }\n\n  /**\n    @private\n    @method runInitializers\n  */\n  runInitializers() {\n    this._runInitializer('initializers', (name, initializer) => {\n       true && !initializer && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`No application initializer named '${name}'`, initializer);\n      initializer.initialize(this);\n    });\n  }\n\n  /**\n    @private\n    @since 1.12.0\n    @method runInstanceInitializers\n  */\n  runInstanceInitializers(instance) {\n    this._runInitializer('instanceInitializers', (name, initializer) => {\n       true && !initializer && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`No instance initializer named '${name}'`, initializer);\n      initializer.initialize(instance);\n    });\n  }\n  _runInitializer(bucketName, cb) {\n    let initializersByName = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.constructor, bucketName);\n    let initializers = props(initializersByName);\n    let graph = new _dag_map_index_js__WEBPACK_IMPORTED_MODULE_28__[\"default\"]();\n    let initializer;\n    for (let name of initializers) {\n      initializer = initializersByName[name];\n       true && !initializer && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`missing ${bucketName}: ${name}`, initializer);\n      graph.add(initializer.name, initializer, initializer.before, initializer.after);\n    }\n    graph.topsort(cb);\n  }\n}\n\n/**\n  This function defines the default lookup rules for container lookups:\n\n  * templates are looked up on `Ember.TEMPLATES`\n  * other names are looked up on the application after classifying the name.\n    For example, `controller:post` looks up `App.PostController` by default.\n  * if the default lookup fails, look for registered classes on the container\n\n  This allows the application to register default injections in the container\n  that could be overridden by the normal naming convention.\n\n  @private\n  @method resolverFor\n  @param {Ember.Enginer} namespace the namespace to look for classes\n  @return {*} the resolved value for a given lookup\n*/\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Engine, \"initializers\", Object.create(null));\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Engine, \"instanceInitializers\", Object.create(null));\n/**\n  The goal of initializers should be to register dependencies and injections.\n  This phase runs once. Because these initializers may load code, they are\n  allowed to defer application readiness and advance it. If you need to access\n  the container or store you should use an InstanceInitializer that will be run\n  after all initializers and therefore after all code is loaded and the app is\n  ready.\n   Initializer receives an object which has the following attributes:\n  `name`, `before`, `after`, `initialize`. The only required attribute is\n  `initialize`, all others are optional.\n   * `name` allows you to specify under which name the initializer is registered.\n  This must be a unique name, as trying to register two initializers with the\n  same name will result in an error.\n   ```app/initializer/named-initializer.js\n  import { debug } from '@ember/debug';\n   export function initialize() {\n    debug('Running namedInitializer!');\n  }\n   export default {\n    name: 'named-initializer',\n    initialize\n  };\n  ```\n   * `before` and `after` are used to ensure that this initializer is ran prior\n  or after the one identified by the value. This value can be a single string\n  or an array of strings, referencing the `name` of other initializers.\n   An example of ordering initializers, we create an initializer named `first`:\n   ```app/initializer/first.js\n  import { debug } from '@ember/debug';\n   export function initialize() {\n    debug('First initializer!');\n  }\n   export default {\n    name: 'first',\n    initialize\n  };\n  ```\n   ```bash\n  // DEBUG: First initializer!\n  ```\n   We add another initializer named `second`, specifying that it should run\n  after the initializer named `first`:\n   ```app/initializer/second.js\n  import { debug } from '@ember/debug';\n   export function initialize() {\n    debug('Second initializer!');\n  }\n   export default {\n    name: 'second',\n    after: 'first',\n    initialize\n  };\n  ```\n   ```\n  // DEBUG: First initializer!\n  // DEBUG: Second initializer!\n  ```\n   Afterwards we add a further initializer named `pre`, this time specifying\n  that it should run before the initializer named `first`:\n   ```app/initializer/pre.js\n  import { debug } from '@ember/debug';\n   export function initialize() {\n    debug('Pre initializer!');\n  }\n   export default {\n    name: 'pre',\n    before: 'first',\n    initialize\n  };\n  ```\n   ```bash\n  // DEBUG: Pre initializer!\n  // DEBUG: First initializer!\n  // DEBUG: Second initializer!\n  ```\n   Finally we add an initializer named `post`, specifying it should run after\n  both the `first` and the `second` initializers:\n   ```app/initializer/post.js\n  import { debug } from '@ember/debug';\n   export function initialize() {\n    debug('Post initializer!');\n  }\n   export default {\n    name: 'post',\n    after: ['first', 'second'],\n    initialize\n  };\n  ```\n   ```bash\n  // DEBUG: Pre initializer!\n  // DEBUG: First initializer!\n  // DEBUG: Second initializer!\n  // DEBUG: Post initializer!\n  ```\n   * `initialize` is a callback function that receives one argument,\n    `application`, on which you can operate.\n   Example of using `application` to register an adapter:\n   ```app/initializer/api-adapter.js\n  import ApiAdapter from '../utils/api-adapter';\n   export function initialize(application) {\n    application.register('api-adapter:main', ApiAdapter);\n  }\n   export default {\n    name: 'post',\n    after: ['first', 'second'],\n    initialize\n  };\n  ```\n   @method initializer\n  @param initializer {Object}\n  @public\n*/\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Engine, \"initializer\", buildInitializerMethod('initializers', 'initializer'));\n/**\n  Instance initializers run after all initializers have run. Because\n  instance initializers run after the app is fully set up. We have access\n  to the store, container, and other items. However, these initializers run\n  after code has loaded and are not allowed to defer readiness.\n   Instance initializer receives an object which has the following attributes:\n  `name`, `before`, `after`, `initialize`. The only required attribute is\n  `initialize`, all others are optional.\n   * `name` allows you to specify under which name the instanceInitializer is\n  registered. This must be a unique name, as trying to register two\n  instanceInitializer with the same name will result in an error.\n   ```app/initializer/named-instance-initializer.js\n  import { debug } from '@ember/debug';\n   export function initialize() {\n    debug('Running named-instance-initializer!');\n  }\n   export default {\n    name: 'named-instance-initializer',\n    initialize\n  };\n  ```\n   * `before` and `after` are used to ensure that this initializer is ran prior\n  or after the one identified by the value. This value can be a single string\n  or an array of strings, referencing the `name` of other initializers.\n   * See Application.initializer for discussion on the usage of before\n  and after.\n   Example instanceInitializer to preload data into the store.\n   ```app/initializer/preload-data.js\n   export function initialize(application) {\n      var userConfig, userConfigEncoded, store;\n      // We have a HTML escaped JSON representation of the user's basic\n      // configuration generated server side and stored in the DOM of the main\n      // index.html file. This allows the app to have access to a set of data\n      // without making any additional remote calls. Good for basic data that is\n      // needed for immediate rendering of the page. Keep in mind, this data,\n      // like all local models and data can be manipulated by the user, so it\n      // should not be relied upon for security or authorization.\n       // Grab the encoded data from the meta tag\n      userConfigEncoded = document.querySelector('head meta[name=app-user-config]').attr('content');\n       // Unescape the text, then parse the resulting JSON into a real object\n      userConfig = JSON.parse(unescape(userConfigEncoded));\n       // Lookup the store\n      store = application.lookup('service:store');\n       // Push the encoded JSON into the store\n      store.pushPayload(userConfig);\n  }\n   export default {\n    name: 'named-instance-initializer',\n    initialize\n  };\n  ```\n   @method instanceInitializer\n  @param instanceInitializer\n  @public\n*/\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Engine, \"instanceInitializer\", buildInitializerMethod('instanceInitializers', 'instance initializer'));\nfunction resolverFor(namespace) {\n  let ResolverClass = namespace.Resolver;\n  let props = {\n    namespace\n  };\n  return ResolverClass.create(props);\n}\n\n/** @internal */\nfunction buildInitializerMethod(bucketName, humanName) {\n  return function (initializer) {\n    // If this is the first initializer being added to a subclass, we are going to reopen the class\n    // to make sure we have a new `initializers` object, which extends from the parent class' using\n    // prototypal inheritance. Without this, attempting to add initializers to the subclass would\n    // pollute the parent class as well as other subclasses.\n    // SAFETY: The superclass may be an Engine, we don't call unless we confirmed it was ok.\n    let superclass = this.superclass;\n    if (superclass[bucketName] !== undefined && superclass[bucketName] === this[bucketName]) {\n      let attrs = {\n        [bucketName]: Object.create(this[bucketName])\n      };\n      this.reopenClass(attrs);\n    }\n     true && !!this[bucketName][initializer.name] && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The ${humanName} '${initializer.name}' has already been registered`, !this[bucketName][initializer.name]);\n     true && !(0,_invoke_BjRgvK2V_js__WEBPACK_IMPORTED_MODULE_25__.c)(initializer, 'initialize') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`An ${humanName} cannot be registered without an initialize function`, (0,_invoke_BjRgvK2V_js__WEBPACK_IMPORTED_MODULE_25__.c)(initializer, 'initialize'));\n     true && !(initializer.name !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`An ${humanName} cannot be registered without a name property`, initializer.name !== undefined);\n    let initializers = this[bucketName];\n    initializers[initializer.name] = initializer;\n  };\n}\nfunction commonSetupRegistry(registry) {\n  registry.optionsForType('component', {\n    singleton: false\n  });\n  registry.optionsForType('view', {\n    singleton: false\n  });\n  registry.register('controller:basic', _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"], {\n    instantiate: false\n  });\n\n  // Register the routing service...\n  registry.register('service:-routing', RoutingService);\n\n  // DEBUGGING\n  registry.register('resolver-for-debugging:main', registry.resolver, {\n    instantiate: false\n  });\n  registry.register('container-debug-adapter:main', _ember_debug_container_debug_adapter_js__WEBPACK_IMPORTED_MODULE_29__[\"default\"]);\n  registry.register('component-lookup:main', _ember_internals_views_lib_component_lookup_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"]);\n}\n\n/**\n@module @ember/engine\n*/\n\nclass EngineInstance extends _index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.E.extend(_ember_internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_30__[\"default\"], _ember_internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_31__[\"default\"]) {\n  constructor(...args) {\n    super(...args);\n    /**\n      The base `Engine` for which this is an instance.\n       @property {Engine} engine\n      @private\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, _ember_engine_lib_engine_parent_js__WEBPACK_IMPORTED_MODULE_24__.ENGINE_PARENT, void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_booted\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_bootPromise\", null);\n  }\n  /**\n   @private\n   @method setupRegistry\n   @param {Registry} registry\n   @param {BootOptions} options\n   */\n  // This is effectively an \"abstract\" method: it defines the contract a\n  // subclass (e.g. `ApplicationInstance`) must follow to implement this\n  // behavior, but an `EngineInstance` has no behavior of its own here.\n  static setupRegistry(_registry, _options) {}\n  init(properties) {\n    super.init(properties);\n\n    // Ensure the guid gets setup for this instance\n    (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.g)(this);\n    this.base ??= this.application;\n\n    // Create a per-instance registry that will use the application's registry\n    // as a fallback for resolving registrations.\n    let registry = this.__registry__ = new _registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_2__.R({\n      fallback: this.base.__registry__\n    });\n\n    // Create a per-instance container from the instance's registry\n    this.__container__ = registry.container({\n      owner: this\n    });\n    this._booted = false;\n  }\n  /**\n    Initialize the `EngineInstance` and return a promise that resolves\n    with the instance itself when the boot process is complete.\n     The primary task here is to run any registered instance initializers.\n     See the documentation on `BootOptions` for the options it takes.\n     @public\n    @method boot\n    @param options {Object}\n    @return {Promise<EngineInstance,Error>}\n  */\n  boot(options) {\n    if (this._bootPromise) {\n      return this._bootPromise;\n    }\n    this._bootPromise = new _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_39__.R.Promise(resolve => {\n      resolve(this._bootSync(options));\n    });\n    return this._bootPromise;\n  }\n\n  /**\n    Unfortunately, a lot of existing code assumes booting an instance is\n    synchronous – specifically, a lot of tests assume the last call to\n    `app.advanceReadiness()` or `app.reset()` will result in a new instance\n    being fully-booted when the current runloop completes.\n     We would like new code (like the `visit` API) to stop making this\n    assumption, so we created the asynchronous version above that returns a\n    promise. But until we have migrated all the code, we would have to expose\n    this method for use *internally* in places where we need to boot an instance\n    synchronously.\n     @private\n  */\n  _bootSync(options) {\n    if (this._booted) {\n      return this;\n    }\n     true && !(0,_ember_engine_lib_engine_parent_js__WEBPACK_IMPORTED_MODULE_24__.getEngineParent)(this) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(\"An engine instance's parent must be set via `setEngineParent(engine, parent)` prior to calling `engine.boot()`.\", (0,_ember_engine_lib_engine_parent_js__WEBPACK_IMPORTED_MODULE_24__.getEngineParent)(this));\n    this.cloneParentDependencies();\n    this.setupRegistry(options);\n    this.base.runInstanceInitializers(this);\n    this._booted = true;\n    return this;\n  }\n  setupRegistry(options = this.__container__.lookup('-environment:main')) {\n    this.constructor.setupRegistry(this.__registry__, options);\n  }\n\n  /**\n   Unregister a factory.\n    Overrides `RegistryProxy#unregister` in order to clear any cached instances\n   of the unregistered factory.\n    @public\n   @method unregister\n   @param {String} fullName\n   */\n  unregister(fullName) {\n    this.__container__.reset(fullName);\n\n    // We overwrote this method from RegistryProxyMixin.\n    this.__registry__.unregister(fullName);\n  }\n\n  /**\n    Build a new `EngineInstance` that's a child of this instance.\n     Engines must be registered by name with their parent engine\n    (or application).\n     @private\n    @method buildChildEngineInstance\n    @param name {String} the registered name of the engine.\n    @param options {Object} options provided to the engine instance.\n    @return {EngineInstance,Error}\n  */\n  buildChildEngineInstance(name, options = {}) {\n    let ChildEngine = this.lookup(`engine:${name}`);\n    if (!ChildEngine) {\n      throw new Error(`You attempted to mount the engine '${name}', but it is not registered with its parent.`);\n    }\n     true && !(ChildEngine instanceof Engine) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected an Engine', ChildEngine instanceof Engine);\n    let engineInstance = ChildEngine.buildInstance(options);\n    (0,_ember_engine_lib_engine_parent_js__WEBPACK_IMPORTED_MODULE_24__.setEngineParent)(engineInstance, this);\n    return engineInstance;\n  }\n\n  /**\n    Clone dependencies shared between an engine instance and its parent.\n     @private\n    @method cloneParentDependencies\n  */\n  cloneParentDependencies() {\n    const parent = (0,_ember_engine_lib_engine_parent_js__WEBPACK_IMPORTED_MODULE_24__.getEngineParent)(this);\n     true && !parent && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected parent', parent);\n    let registrations = ['route:basic', 'service:-routing'];\n    registrations.forEach(key => {\n      let registration = parent.resolveRegistration(key);\n       true && !(0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.isFactory)(registration) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected registration to be a factory', (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.isFactory)(registration));\n      this.register(key, registration);\n    });\n    let env = parent.lookup('-environment:main');\n    this.register('-environment:main', env, {\n      instantiate: false\n    });\n\n    // The type annotation forces TS to (a) validate that these match and (b)\n    // *notice* that they match, e.g. below on the `singletons.push()`.\n    let singletons = ['router:main', (0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_2__.p)`-bucket-cache:main`, '-view-registry:main', `renderer:-dom`, 'service:-document'];\n    if (env['isInteractive']) {\n      singletons.push('event_dispatcher:main');\n    }\n    singletons.forEach(key => {\n      // SAFETY: We already expect this to be a singleton\n      let singleton = parent.lookup(key);\n      this.register(key, singleton, {\n        instantiate: false\n      });\n    });\n  }\n}\nconst EmberEngineInstance = EngineInstance;\nconst ALL_PERIODS_REGEX = /\\./g;\nfunction extractRouteArgs(args) {\n  // SAFETY: This should just be the same thing\n  args = args.slice();\n  let possibleOptions = args[args.length - 1];\n  let queryParams;\n  if (isRouteOptions(possibleOptions)) {\n    args.pop(); // Remove options\n    queryParams = possibleOptions.queryParams;\n  } else {\n    queryParams = {};\n  }\n  let routeName;\n  if (typeof args[0] === 'string') {\n    routeName = args.shift();\n    // We just checked this!\n     true && !(typeof routeName === 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('routeName is a string', typeof routeName === 'string');\n  }\n\n  // SAFTEY: We removed the name and options if they existed, only models left.\n  let models = args;\n  return {\n    routeName,\n    models,\n    queryParams\n  };\n}\nfunction getActiveTargetName(router) {\n  let routeInfos = router.activeTransition ? router.activeTransition[_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.S].routeInfos : router.state.routeInfos;\n  let lastRouteInfo = routeInfos[routeInfos.length - 1];\n   true && !lastRouteInfo && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has last route info', lastRouteInfo);\n  return lastRouteInfo.name;\n}\nfunction stashParamNames(router, routeInfos) {\n  if (routeInfos['_namesStashed']) {\n    return;\n  }\n\n  // This helper exists because router.js/route-recognizer.js awkwardly\n  // keeps separate a routeInfo's list of parameter names depending\n  // on whether a URL transition or named transition is happening.\n  // Hopefully we can remove this in the future.\n  let routeInfo = routeInfos[routeInfos.length - 1];\n   true && !routeInfo && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has route info', routeInfo);\n  let targetRouteName = routeInfo.name;\n  let recogHandlers = router._routerMicrolib.recognizer.handlersFor(targetRouteName);\n  let dynamicParent;\n  for (let i = 0; i < routeInfos.length; ++i) {\n    let routeInfo = routeInfos[i];\n     true && !routeInfo && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has route info', routeInfo);\n    let names = recogHandlers[i].names;\n    if (names.length) {\n      dynamicParent = routeInfo;\n    }\n    routeInfo['_names'] = names;\n    let route = routeInfo.route;\n    route._stashNames(routeInfo, dynamicParent);\n  }\n  routeInfos['_namesStashed'] = true;\n}\nfunction _calculateCacheValuePrefix(prefix, part) {\n  // calculates the dot separated sections from prefix that are also\n  // at the start of part - which gives us the route name\n\n  // given : prefix = site.article.comments, part = site.article.id\n  //      - returns: site.article (use get(values[site.article], 'id') to get the dynamic part - used below)\n\n  // given : prefix = site.article, part = site.article.id\n  //      - returns: site.article. (use get(values[site.article], 'id') to get the dynamic part - used below)\n\n  let prefixParts = prefix.split('.');\n  let currPrefix = '';\n  for (let i = 0; i < prefixParts.length; i++) {\n    let currPart = prefixParts.slice(0, i + 1).join('.');\n    if (part.indexOf(currPart) !== 0) {\n      break;\n    }\n    currPrefix = currPart;\n  }\n  return currPrefix;\n}\n\n/*\n  Stolen from Controller\n*/\nfunction calculateCacheKey(prefix, parts = [], values) {\n  let suffixes = '';\n  for (let part of parts) {\n    let cacheValuePrefix = _calculateCacheValuePrefix(prefix, part);\n    let value;\n    if (values) {\n      if (cacheValuePrefix && cacheValuePrefix in values) {\n        let partRemovedPrefix = part.indexOf(cacheValuePrefix) === 0 ? part.substring(cacheValuePrefix.length + 1) : part;\n        value = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(values[cacheValuePrefix], partRemovedPrefix);\n      } else {\n        value = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(values, part);\n      }\n    }\n    suffixes += `::${part}:${value}`;\n  }\n  return prefix + suffixes.replace(ALL_PERIODS_REGEX, '-');\n}\n\n/*\n  Controller-defined query parameters can come in three shapes:\n\n  Array\n    queryParams: ['foo', 'bar']\n  Array of simple objects where value is an alias\n    queryParams: [\n      {\n        'foo': 'rename_foo_to_this'\n      },\n      {\n        'bar': 'call_bar_this_instead'\n      }\n    ]\n  Array of fully defined objects\n    queryParams: [\n      {\n        'foo': {\n          as: 'rename_foo_to_this'\n        },\n      }\n      {\n        'bar': {\n          as: 'call_bar_this_instead',\n          scope: 'controller'\n        }\n      }\n    ]\n\n  This helper normalizes all three possible styles into the\n  'Array of fully defined objects' style.\n*/\nfunction normalizeControllerQueryParams(queryParams) {\n  let qpMap = {};\n  for (let queryParam of queryParams) {\n    accumulateQueryParamDescriptors(queryParam, qpMap);\n  }\n  return qpMap;\n}\nfunction accumulateQueryParamDescriptors(_desc, accum) {\n  let desc = typeof _desc === 'string' ? {\n    [_desc]: {\n      as: null\n    }\n  } : _desc;\n  for (let key in desc) {\n    if (!Object.prototype.hasOwnProperty.call(desc, key)) {\n      return;\n    }\n    let _singleDesc = desc[key];\n    let singleDesc = typeof _singleDesc === 'string' ? {\n      as: _singleDesc\n    } : _singleDesc;\n    let partialVal = accum[key] || {\n      as: null,\n      scope: 'model'\n    };\n    let val = {\n      ...partialVal,\n      ...singleDesc\n    };\n    accum[key] = val;\n  }\n}\n\n/*\n  Check if a routeName resembles a url instead\n\n  @private\n*/\nfunction resemblesURL(str) {\n  return typeof str === 'string' && (str === '' || str[0] === '/');\n}\n\n/*\n  Returns an arguments array where the route name arg is prefixed based on the mount point\n\n  @private\n*/\nfunction prefixRouteNameArg(route, args) {\n  let routeName;\n  let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(route);\n   true && !(owner instanceof EmberEngineInstance) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected route to have EngineInstance as owner', owner instanceof EmberEngineInstance);\n  let prefix = owner.mountPoint;\n\n  // only alter the routeName if it's actually referencing a route.\n  if (owner.routable && typeof args[0] === 'string') {\n    routeName = args[0];\n    if (resemblesURL(routeName)) {\n      throw new Error('Programmatic transitions by URL cannot be used within an Engine. Please use the route name instead.');\n    } else {\n      routeName = `${prefix}.${routeName}`;\n      args[0] = routeName;\n    }\n  }\n  return args;\n}\nfunction shallowEqual(a, b) {\n  let aCount = 0;\n  let bCount = 0;\n  for (let kA in a) {\n    if (Object.prototype.hasOwnProperty.call(a, kA)) {\n      if (a[kA] !== b[kA]) {\n        return false;\n      }\n      aCount++;\n    }\n  }\n  for (let kB in b) {\n    if (Object.prototype.hasOwnProperty.call(b, kB)) {\n      bCount++;\n    }\n  }\n  return aCount === bCount;\n}\nfunction isRouteOptions(value) {\n  if (value && typeof value === 'object') {\n    let qps = value.queryParams;\n    if (qps && typeof qps === 'object') {\n      return Object.keys(qps).every(k => typeof k === 'string');\n    }\n  }\n  return false;\n}\nclass RouterState {\n  constructor(emberRouter, router, routerJsState) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"router\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"emberRouter\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"routerJsState\", void 0);\n    this.emberRouter = emberRouter;\n    this.router = router;\n    this.routerJsState = routerJsState;\n  }\n  isActiveIntent(routeName, models, queryParams) {\n    let state = this.routerJsState;\n    if (!this.router.isActiveIntent(routeName, models, undefined, state)) {\n      return false;\n    }\n    if (queryParams !== undefined && Object.keys(queryParams).length > 0) {\n      let visibleQueryParams = Object.assign({}, queryParams);\n      this.emberRouter._prepareQueryParams(routeName, models, visibleQueryParams);\n      return shallowEqual(visibleQueryParams, state.queryParams);\n    }\n    return true;\n  }\n}\nfunction isStoreLike(store) {\n  return typeof store === 'object' && store !== null && typeof store.find === 'function';\n}\nconst RENDER = Symbol('render');\nconst RENDER_STATE = Symbol('render-state');\n\n/**\n@module @ember/routing/route\n*/\n\n/**\n  The `Route` class is used to define individual routes. Refer to\n  the [routing guide](https://guides.emberjs.com/release/routing/) for documentation.\n\n  @class Route\n  @extends EmberObject\n  @uses ActionHandler\n  @uses Evented\n  @since 1.0.0\n  @public\n*/\n\nclass Route extends _index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.E.extend(_ember_internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_33__[\"default\"], _ember_object_evented_js__WEBPACK_IMPORTED_MODULE_48__[\"default\"]) {\n  constructor(owner) {\n    super(owner);\n    // These properties will end up appearing in the public interface because we\n    // `implements IRoute` from `router.js`, which has them as part of *its*\n    // public contract. We mark them as `@internal` so they at least signal to\n    // people subclassing `Route` that they should not use them.\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"context\", {});\n    /** @internal */\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_bucketCache\", void 0);\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_internalName\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_names\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_router\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, RENDER_STATE, undefined);\n    if (owner) {\n      let router = owner.lookup('router:main');\n      let bucketCache = owner.lookup((0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_2__.p)`-bucket-cache:main`);\n       true && !(router instanceof EmberRouter$1 && bucketCache instanceof _ember_routing_lib_cache_js__WEBPACK_IMPORTED_MODULE_46__[\"default\"]) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('ROUTER BUG: Expected route injections to be defined on the route. This is an internal bug, please open an issue on Github if you see this message!', router instanceof EmberRouter$1 && bucketCache instanceof _ember_routing_lib_cache_js__WEBPACK_IMPORTED_MODULE_46__[\"default\"]);\n      this._router = router;\n      this._bucketCache = bucketCache;\n      this._topLevelViewTemplate = owner.lookup('template:-outlet');\n      this._environment = owner.lookup('-environment:main');\n    }\n  }\n\n  /**\n    A hook you can implement to convert the route's model into parameters\n    for the URL.\n     ```app/router.js\n    // ...\n     Router.map(function() {\n      this.route('post', { path: '/posts/:post_id' });\n    });\n     ```\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n     export default class PostRoute extends Route {\n      model({ post_id }) {\n        // the server returns `{ id: 12 }`\n        return fetch(`/posts/${post_id}`;\n      }\n       serialize(model) {\n        // this will make the URL `/posts/12`\n        return { post_id: model.id };\n      }\n    }\n    ```\n     The default `serialize` method will insert the model's `id` into the\n    route's dynamic segment (in this case, `:post_id`) if the segment contains '_id'.\n    If the route has multiple dynamic segments or does not contain '_id', `serialize`\n    will return `getProperties(model, params)`\n     This method is called when `transitionTo` is called with a context\n    in order to populate the URL.\n     @method serialize\n    @param {Object} model the routes model\n    @param {Array} params an Array of parameter names for the current\n      route (in the example, `['post_id']`.\n    @return {Object} the serialized parameters\n    @since 1.0.0\n    @public\n  */\n  serialize(model, params) {\n    if (params.length < 1 || !model) {\n      return;\n    }\n    let object = {};\n    if (params.length === 1) {\n      let [name] = params;\n       true && !name && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has name', name);\n      if (typeof model === 'object' && name in model) {\n        object[name] = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(model, name);\n      } else if (/_id$/.test(name)) {\n        object[name] = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(model, 'id');\n      } else if ((0,_is_proxy_Dmis_70B_js__WEBPACK_IMPORTED_MODULE_49__.i)(model)) {\n        object[name] = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(model, name);\n      }\n    } else {\n      object = (0,_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_50__.g)(model, params);\n    }\n    return object;\n  }\n\n  /**\n    Configuration hash for this route's queryParams. The possible\n    configuration options and their defaults are as follows\n    (assuming a query param whose controller property is `page`):\n     ```javascript\n    queryParams = {\n      page: {\n        // By default, controller query param properties don't\n        // cause a full transition when they are changed, but\n        // rather only cause the URL to update. Setting\n        // `refreshModel` to true will cause an \"in-place\"\n        // transition to occur, whereby the model hooks for\n        // this route (and any child routes) will re-fire, allowing\n        // you to reload models (e.g., from the server) using the\n        // updated query param values.\n        refreshModel: false,\n         // By default, changes to controller query param properties\n        // cause the URL to update via `pushState`, which means an\n        // item will be added to the browser's history, allowing\n        // you to use the back button to restore the app to the\n        // previous state before the query param property was changed.\n        // Setting `replace` to true will use `replaceState` (or its\n        // hash location equivalent), which causes no browser history\n        // item to be added. This options name and default value are\n        // the same as the `link-to` helper's `replace` option.\n        replace: false,\n         // By default, the query param URL key is the same name as\n        // the controller property name. Use `as` to specify a\n        // different URL key.\n        as: 'page'\n      }\n    };\n    ```\n     @property queryParams\n    @for Route\n    @type Object\n    @since 1.6.0\n    @public\n  */\n  // Set in reopen so it can be overriden with extend\n\n  /**\n    The name of the template to use by default when rendering this route's\n    template.\n     ```app/routes/posts/list.js\n    import Route from '@ember/routing/route';\n     export default class PostsListRoute extends Route {\n      templateName = 'posts/list';\n    }\n    ```\n     ```app/routes/posts/index.js\n    import PostsListRoute from '../posts/list';\n     export default class PostsIndexRoute extends PostsListRoute {};\n    ```\n     ```app/routes/posts/archived.js\n    import PostsListRoute from '../posts/list';\n     export default class PostsArchivedRoute extends PostsListRoute {};\n    ```\n     @property templateName\n    @type String\n    @default null\n    @since 1.4.0\n    @public\n  */\n  // Set in reopen so it can be overriden with extend\n\n  /**\n    The name of the controller to associate with this route.\n     By default, Ember will lookup a route's controller that matches the name\n    of the route (i.e. `posts.new`). However,\n    if you would like to define a specific controller to use, you can do so\n    using this property.\n     This is useful in many ways, as the controller specified will be:\n     * passed to the `setupController` method.\n    * used as the controller for the template being rendered by the route.\n    * returned from a call to `controllerFor` for the route.\n     @property controllerName\n    @type String\n    @default null\n    @since 1.4.0\n    @public\n  */\n  // Set in reopen so it can be overriden with extend\n\n  /**\n    The controller associated with this route.\n     Example\n     ```app/routes/form.js\n    import Route from '@ember/routing/route';\n    import { action } from '@ember/object';\n     export default class FormRoute extends Route {\n      @action\n      willTransition(transition) {\n        if (this.controller.get('userHasEnteredData') &&\n            !confirm('Are you sure you want to abandon progress?')) {\n          transition.abort();\n        } else {\n          // Bubble the `willTransition` action so that\n          // parent routes can decide whether or not to abort.\n          return true;\n        }\n      }\n    }\n    ```\n     @property controller\n    @type Controller\n    @since 1.6.0\n    @public\n  */\n\n  /**\n    The name of the route, dot-delimited.\n     For example, a route found at `app/routes/posts/post.js` will have\n    a `routeName` of `posts.post`.\n     @property routeName\n    @for Route\n    @type String\n    @since 1.0.0\n    @public\n  */\n\n  /**\n    The name of the route, dot-delimited, including the engine prefix\n    if applicable.\n     For example, a route found at `addon/routes/posts/post.js` within an\n    engine named `admin` will have a `fullRouteName` of `admin.posts.post`.\n     @property fullRouteName\n    @for Route\n    @type String\n    @since 2.10.0\n    @public\n  */\n\n  /**\n    Sets the name for this route, including a fully resolved name for routes\n    inside engines.\n     @private\n    @method _setRouteName\n    @param {String} name\n  */\n  _setRouteName(name) {\n    this.routeName = name;\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n     true && !(owner instanceof EmberEngineInstance) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected route to have EngineInstance as owner', owner instanceof EmberEngineInstance);\n    this.fullRouteName = getEngineRouteName(owner, name);\n  }\n\n  /**\n    @private\n     @method _stashNames\n  */\n  _stashNames(routeInfo, dynamicParent) {\n    if (this._names) {\n      return;\n    }\n    let names = this._names = routeInfo['_names'];\n    if (!names.length) {\n      routeInfo = dynamicParent;\n      names = routeInfo && routeInfo['_names'] || [];\n    }\n\n    // SAFETY: Since `_qp` is protected we can't infer the type\n    let qps = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, '_qp').qps;\n    let namePaths = new Array(names.length);\n    for (let a = 0; a < names.length; ++a) {\n      namePaths[a] = `${routeInfo.name}.${names[a]}`;\n    }\n    for (let qp of qps) {\n      if (qp.scope === 'model') {\n        qp.parts = namePaths;\n      }\n    }\n  }\n\n  /**\n    @private\n     @property _activeQPChanged\n  */\n  _activeQPChanged(qp, value) {\n    this._router._activeQPChanged(qp.scopedPropertyName, value);\n  }\n\n  /**\n    @private\n    @method _updatingQPChanged\n  */\n  _updatingQPChanged(qp) {\n    this._router._updatingQPChanged(qp.urlKey);\n  }\n\n  /**\n    Returns a hash containing the parameters of an ancestor route.\n     You may notice that `this.paramsFor` sometimes works when referring to a\n    child route, but this behavior should not be relied upon as only ancestor\n    routes are certain to be loaded in time.\n     Example\n     ```app/router.js\n    // ...\n     Router.map(function() {\n      this.route('member', { path: ':name' }, function() {\n        this.route('interest', { path: ':interest' });\n      });\n    });\n    ```\n     ```app/routes/member.js\n    import Route from '@ember/routing/route';\n     export default class MemberRoute extends Route {\n      queryParams = {\n        memberQp: { refreshModel: true }\n      }\n    }\n    ```\n     ```app/routes/member/interest.js\n    import Route from '@ember/routing/route';\n     export default class MemberInterestRoute extends Route {\n      queryParams = {\n        interestQp: { refreshModel: true }\n      }\n       model() {\n        return this.paramsFor('member');\n      }\n    }\n    ```\n     If we visit `/turing/maths?memberQp=member&interestQp=interest` the model for\n    the `member.interest` route is a hash with:\n     * `name`: `turing`\n    * `memberQp`: `member`\n     @method paramsFor\n    @param {String} name\n    @return {Object} hash containing the parameters of the route `name`\n    @since 1.4.0\n    @public\n  */\n  paramsFor(name) {\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Route is unexpectedly missing an owner', owner);\n    let route = owner.lookup(`route:${name}`);\n    if (route === undefined) {\n      return {};\n    }\n    let transition = this._router._routerMicrolib.activeTransition;\n    let state = transition ? transition[_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.S] : this._router._routerMicrolib.state;\n    let fullName = route.fullRouteName;\n    let params = {\n      ...state.params[fullName]\n    };\n    let queryParams = getQueryParamsFor(route, state);\n    return Object.entries(queryParams).reduce((params, [key, value]) => {\n       true && !!params[key] && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The route '${this.routeName}' has both a dynamic segment and query param with name '${key}'. Please rename one to avoid collisions.`, !params[key]);\n      params[key] = value;\n      return params;\n    }, params);\n  }\n\n  /**\n    Serializes the query parameter key\n     @method serializeQueryParamKey\n    @param {String} controllerPropertyName\n    @private\n  */\n  serializeQueryParamKey(controllerPropertyName) {\n    return controllerPropertyName;\n  }\n\n  /**\n    Serializes value of the query parameter based on defaultValueType\n     @method serializeQueryParam\n    @param {Object} value\n    @param {String} urlKey\n    @param {String} defaultValueType\n    @private\n  */\n  serializeQueryParam(value, _urlKey, defaultValueType) {\n    // urlKey isn't used here, but anyone overriding\n    // can use it to provide serialization specific\n    // to a certain query param.\n    return this._router._serializeQueryParam(value, defaultValueType);\n  }\n\n  /**\n    Deserializes value of the query parameter based on defaultValueType\n     @method deserializeQueryParam\n    @param {Object} value\n    @param {String} urlKey\n    @param {String} defaultValueType\n    @private\n  */\n  deserializeQueryParam(value, _urlKey, defaultValueType) {\n    // urlKey isn't used here, but anyone overriding\n    // can use it to provide deserialization specific\n    // to a certain query param.\n    return this._router._deserializeQueryParam(value, defaultValueType);\n  }\n\n  /**\n    @private\n     @property _optionsForQueryParam\n  */\n  _optionsForQueryParam(qp) {\n    const queryParams = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, 'queryParams');\n    return (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(queryParams, qp.urlKey) || (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(queryParams, qp.prop) || queryParams[qp.urlKey] || queryParams[qp.prop] || {};\n  }\n\n  /**\n    A hook you can use to reset controller values either when the model\n    changes or the route is exiting.\n     ```app/routes/articles.js\n    import Route from '@ember/routing/route';\n     export default class ArticlesRoute extends Route {\n      resetController(controller, isExiting, transition) {\n        if (isExiting && transition.targetName !== 'error') {\n          controller.set('page', 1);\n        }\n      }\n    }\n    ```\n     @method resetController\n    @param {Controller} controller instance\n    @param {Boolean} isExiting\n    @param {Object} transition\n    @since 1.7.0\n    @public\n  */\n  resetController(_controller, _isExiting, _transition) {\n    // We document that subclasses do not have to return *anything* and in fact\n    // do not even have to call super, so whiel we *do* return `this`, we need\n    // to be explicit in the types that our return type is *effectively* `void`.\n    return this;\n  }\n\n  /**\n    @private\n     @method exit\n  */\n  exit(transition) {\n    this.deactivate(transition);\n    this.trigger('deactivate', transition);\n    this.teardownViews();\n  }\n\n  /**\n    @private\n     @method _internalReset\n    @since 3.6.0\n  */\n  _internalReset(isExiting, transition) {\n    let controller = this.controller;\n    // SAFETY: Since `_qp` is protected we can't infer the type\n    controller['_qpDelegate'] = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, '_qp').states.inactive;\n    this.resetController(controller, isExiting, transition);\n  }\n\n  /**\n    @private\n     @method enter\n  */\n  enter(transition) {\n    this[RENDER_STATE] = undefined;\n    this.activate(transition);\n    this.trigger('activate', transition);\n  }\n\n  /**\n    This event is triggered when the router enters the route. It is\n    not executed when the model for the route changes.\n     ```app/routes/application.js\n    import { on } from '@ember/object/evented';\n    import Route from '@ember/routing/route';\n     export default Route.extend({\n      collectAnalytics: on('activate', function(){\n        collectAnalytics();\n      })\n    });\n    ```\n     @event activate\n    @since 1.9.0\n    @public\n  */\n\n  /**\n    This event is triggered when the router completely exits this\n    route. It is not executed when the model for the route changes.\n     ```app/routes/index.js\n    import { on } from '@ember/object/evented';\n    import Route from '@ember/routing/route';\n     export default Route.extend({\n      trackPageLeaveAnalytics: on('deactivate', function(){\n        trackPageLeaveAnalytics();\n      })\n    });\n    ```\n     @event deactivate\n    @since 1.9.0\n    @public\n  */\n\n  /**\n    This hook is executed when the router completely exits this route. It is\n    not executed when the model for the route changes.\n     @method deactivate\n    @param {Transition} transition\n    @since 1.0.0\n    @public\n  */\n  deactivate(_transition) {}\n\n  /**\n    This hook is executed when the router enters the route. It is not executed\n    when the model for the route changes.\n     @method activate\n    @param {Transition} transition\n    @since 1.0.0\n    @public\n  */\n  activate(_transition) {}\n\n  /**\n    Perform a synchronous transition into another route without attempting\n    to resolve promises, update the URL, or abort any currently active\n    asynchronous transitions (i.e. regular transitions caused by\n    `transitionTo` or URL changes).\n     This method is handy for performing intermediate transitions on the\n    way to a final destination route, and is called internally by the\n    default implementations of the `error` and `loading` handlers.\n     @method intermediateTransitionTo\n    @param {String} name the name of the route\n    @param {...Object} models the model(s) to be used while transitioning\n    to the route.\n    @since 1.2.0\n    @public\n   */\n  intermediateTransitionTo(...args) {\n    let [name, ...preparedArgs] = prefixRouteNameArg(this, args);\n    this._router.intermediateTransitionTo(name, ...preparedArgs);\n  }\n\n  /**\n    Refresh the model on this route and any child routes, firing the\n    `beforeModel`, `model`, and `afterModel` hooks in a similar fashion\n    to how routes are entered when transitioning in from other route.\n    The current route params (e.g. `article_id`) will be passed in\n    to the respective model hooks, and if a different model is returned,\n    `setupController` and associated route hooks will re-fire as well.\n     An example usage of this method is re-querying the server for the\n    latest information using the same parameters as when the route\n    was first entered.\n     Note that this will cause `model` hooks to fire even on routes\n    that were provided a model object when the route was initially\n    entered.\n     @method refresh\n    @return {Transition} the transition object associated with this\n      attempted transition\n    @since 1.4.0\n    @public\n   */\n  refresh() {\n    return this._router._routerMicrolib.refresh(this);\n  }\n\n  /**\n    This hook is the entry point for router.js\n     @private\n    @method setup\n  */\n  setup(context, transition) {\n    let controllerName = this.controllerName || this.routeName;\n    let definedController = this.controllerFor(controllerName, true);\n    let controller = definedController ?? this.generateController(controllerName);\n\n    // SAFETY: Since `_qp` is protected we can't infer the type\n    let queryParams = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, '_qp');\n\n    // Assign the route's controller so that it can more easily be\n    // referenced in action handlers. Side effects. Side effects everywhere.\n    if (!this.controller) {\n      let propNames = queryParams.propertyNames;\n      addQueryParamsObservers(controller, propNames);\n      this.controller = controller;\n    }\n    let states = queryParams.states;\n    controller._qpDelegate = states.allowOverrides;\n    if (transition) {\n      // Update the model dep values used to calculate cache keys.\n      stashParamNames(this._router, transition[_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.S].routeInfos);\n      let cache = this._bucketCache;\n      let params = transition[_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.P];\n      let allParams = queryParams.propertyNames;\n      allParams.forEach(prop => {\n        let aQp = queryParams.map[prop];\n         true && !aQp && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected aQp', aQp);\n        aQp.values = params;\n        let cacheKey = calculateCacheKey(aQp.route.fullRouteName, aQp.parts, aQp.values);\n        let value = cache.lookup(cacheKey, prop, aQp.undecoratedDefaultValue);\n        (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s)(controller, prop, value);\n      });\n      let qpValues = getQueryParamsFor(this, transition[_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.S]);\n      (0,_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_50__.s)(controller, qpValues);\n    }\n    this.setupController(controller, context, transition);\n    if (this._environment.options.shouldRender) {\n      this[RENDER]();\n    }\n\n    // Setup can cause changes to QPs which need to be propogated immediately in\n    // some situations. Eventually, we should work on making these async somehow.\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.ac)(false);\n  }\n\n  /*\n    Called when a query parameter for this route changes, regardless of whether the route\n    is currently part of the active route hierarchy. This will update the query parameter's\n    value in the cache so if this route becomes active, the cache value has been updated.\n  */\n  _qpChanged(prop, value, qp) {\n    if (!qp) {\n      return;\n    }\n\n    // Update model-dep cache\n    let cache = this._bucketCache;\n    let cacheKey = calculateCacheKey(qp.route.fullRouteName, qp.parts, qp.values);\n    cache.stash(cacheKey, prop, value);\n  }\n\n  /**\n    This hook is the first of the route entry validation hooks\n    called when an attempt is made to transition into a route\n    or one of its children. It is called before `model` and\n    `afterModel`, and is appropriate for cases when:\n     1) A decision can be made to redirect elsewhere without\n       needing to resolve the model first.\n    2) Any async operations need to occur first before the\n       model is attempted to be resolved.\n     This hook is provided the current `transition` attempt\n    as a parameter, which can be used to `.abort()` the transition,\n    save it for a later `.retry()`, or retrieve values set\n    on it from a previous hook. You can also just call\n    `router.transitionTo` to another route to implicitly\n    abort the `transition`.\n     You can return a promise from this hook to pause the\n    transition until the promise resolves (or rejects). This could\n    be useful, for instance, for retrieving async code from\n    the server that is required to enter a route.\n     @method beforeModel\n    @param {Transition} transition\n    @return {any | Promise<any>} if the value returned from this hook is\n      a promise, the transition will pause until the transition\n      resolves. Otherwise, non-promise return values are not\n      utilized in any way.\n    @since 1.0.0\n    @public\n  */\n\n  beforeModel(_transition) {}\n\n  /**\n    This hook is called after this route's model has resolved.\n    It follows identical async/promise semantics to `beforeModel`\n    but is provided the route's resolved model in addition to\n    the `transition`, and is therefore suited to performing\n    logic that can only take place after the model has already\n    resolved.\n     ```app/routes/posts.js\n    import Route from '@ember/routing/route';\n    import { service } from '@ember/service';\n     export default class PostsRoute extends Route {\n      @service router;\n       afterModel(posts, transition) {\n        if (posts.get('length') === 1) {\n          this.router.transitionTo('post.show', posts.get('firstObject'));\n        }\n      }\n    }\n    ```\n     Refer to documentation for `beforeModel` for a description\n    of transition-pausing semantics when a promise is returned\n    from this hook.\n     @method afterModel\n    @param {Object} resolvedModel the value returned from `model`,\n      or its resolved value if it was a promise\n    @param {Transition} transition\n    @return {any | Promise<any>} if the value returned from this hook is\n      a promise, the transition will pause until the transition\n      resolves. Otherwise, non-promise return values are not\n      utilized in any way.\n    @since 1.0.0\n    @public\n   */\n\n  afterModel(_resolvedModel, _transition) {}\n\n  /**\n    A hook you can implement to optionally redirect to another route.\n     Calling `this.router.transitionTo` from inside of the `redirect` hook will\n    abort the current transition (into the route that has implemented `redirect`).\n     `redirect` and `afterModel` behave very similarly and are\n    called almost at the same time, but they have an important\n    distinction when calling `this.router.transitionTo` to a child route\n    of the current route. From `afterModel`, this new transition\n    invalidates the current transition, causing `beforeModel`,\n    `model`, and `afterModel` hooks to be called again. But the\n    same transition started from `redirect` does _not_ invalidate\n    the current transition. In other words, by the time the `redirect`\n    hook has been called, both the resolved model and the attempted\n    entry into this route are considered fully validated.\n     @method redirect\n    @param {Object} model the model for this route\n    @param {Transition} transition the transition object associated with the current transition\n    @since 1.0.0\n    @public\n  */\n  redirect(_model, _transition) {}\n\n  /**\n    Called when the context is changed by router.js.\n     @private\n    @method contextDidChange\n  */\n  contextDidChange() {\n    this.currentModel = this.context;\n  }\n\n  /**\n    A hook you can implement to convert the URL into the model for\n    this route.\n     ```app/router.js\n    // ...\n     Router.map(function() {\n      this.route('post', { path: '/posts/:post_id' });\n    });\n     export default Router;\n    ```\n     Note that for routes with dynamic segments, this hook is not always\n    executed. If the route is entered through a transition (e.g. when\n    using the `link-to` Handlebars helper or the `transitionTo` method\n    of routes), and a model context is already provided this hook\n    is not called.\n     A model context does not include a primitive string or number,\n    which does cause the model hook to be called.\n     Routes without dynamic segments will always execute the model hook.\n     ```javascript\n    // no dynamic segment, model hook always called\n    this.router.transitionTo('posts');\n     // model passed in, so model hook not called\n    thePost = store.findRecord('post', 1);\n    this.router.transitionTo('post', thePost);\n     // integer passed in, model hook is called\n    this.router.transitionTo('post', 1);\n     // model id passed in, model hook is called\n    // useful for forcing the hook to execute\n    thePost = store.findRecord('post', 1);\n    this.router.transitionTo('post', thePost.id);\n    ```\n     This hook follows the asynchronous/promise semantics\n    described in the documentation for `beforeModel`. In particular,\n    if a promise returned from `model` fails, the error will be\n    handled by the `error` hook on `Route`.\n     Note that the legacy behavior of automatically defining a model\n    hook when a dynamic segment ending in `_id` is present is\n    [deprecated](https://deprecations.emberjs.com/v5.x#toc_deprecate-implicit-route-model).\n    You should explicitly define a model hook whenever any segments are\n    present.\n     Example\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n    import { service } from '@ember/service';\n     export default class PostRoute extends Route {\n      @service store;\n       model(params) {\n        return this.store.findRecord('post', params.post_id);\n      }\n    }\n    ```\n     @method model\n    @param {Object} params the parameters extracted from the URL\n    @param {Transition} transition\n    @return {any | Promise<any>} the model for this route. If\n      a promise is returned, the transition will pause until\n      the promise resolves, and the resolved value of the promise\n      will be used as the model for this route.\n    @since 1.0.0\n    @public\n  */\n  model(params, transition) {\n    let name, sawParams, value;\n    // SAFETY: Since `_qp` is protected we can't infer the type\n    let queryParams = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, '_qp').map;\n    for (let prop in params) {\n      if (prop === 'queryParams' || queryParams && prop in queryParams) {\n        continue;\n      }\n      let match = prop.match(/^(.*)_id$/);\n      if (match !== null) {\n        name = match[1];\n        value = params[prop];\n      }\n      sawParams = true;\n    }\n    if (!name) {\n      if (sawParams) {\n        // SAFETY: This should be equivalent\n        return Object.assign({}, params);\n      } else {\n        if (transition.resolveIndex < 1) {\n          return;\n        }\n        // SAFETY: This should be correct, but TS is unable to infer this.\n        return transition[_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.S].routeInfos[transition.resolveIndex - 1].context;\n      }\n    }\n    return this.findModel(name, value);\n  }\n\n  /**\n    @private\n    @method deserialize\n    @param {Object} params the parameters extracted from the URL\n    @param {Transition} transition\n    @return {any | Promise<any>} the model for this route.\n     Router.js hook.\n   */\n  deserialize(_params, transition) {\n    return this.model(this._paramsFor(this.routeName, _params), transition);\n  }\n\n  /**\n     @method findModel\n    @param {String} type the model type\n    @param {Object} value the value passed to find\n    @private\n  */\n  findModel(type, value) {\n    if (_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_15__.E._NO_IMPLICIT_ROUTE_MODEL) {\n      return;\n    }\n    (0,_ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_52__.deprecateUntil)(`The implicit model loading behavior for routes is deprecated. ` + `Please define an explicit model hook for ${this.fullRouteName}.`, _ember_internals_deprecations_index_js__WEBPACK_IMPORTED_MODULE_52__.DEPRECATIONS.DEPRECATE_IMPLICIT_ROUTE_MODEL);\n    const store = 'store' in this ? this.store : (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, '_store');\n     true && !isStoreLike(store) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected route to have a store with a find method', isStoreLike(store)); // SAFETY: We don't actually know it will return this, but this code path is also deprecated.\n    return store.find(type, value);\n  }\n\n  /**\n    A hook you can use to setup the controller for the current route.\n     This method is called with the controller for the current route and the\n    model supplied by the `model` hook.\n     By default, the `setupController` hook sets the `model` property of\n    the controller to the specified `model` when it is not `undefined`.\n     If you implement the `setupController` hook in your Route, it will\n    prevent this default behavior. If you want to preserve that behavior\n    when implementing your `setupController` function, make sure to call\n    `super`:\n     ```app/routes/photos.js\n    import Route from '@ember/routing/route';\n    import { service } from '@ember/service';\n     export default class PhotosRoute extends Route {\n      @service store;\n       model() {\n        return this.store.findAll('photo');\n      }\n       setupController(controller, model) {\n        super.setupController(controller, model);\n         this.controllerFor('application').set('showingPhotos', true);\n      }\n    }\n    ```\n     The provided controller will be one resolved based on the name\n    of this route.\n     If no explicit controller is defined, Ember will automatically create one.\n     As an example, consider the router:\n     ```app/router.js\n    // ...\n     Router.map(function() {\n      this.route('post', { path: '/posts/:post_id' });\n    });\n     export default Router;\n    ```\n     If you have defined a file for the post controller,\n    the framework will use it.\n    If it is not defined, a basic `Controller` instance would be used.\n     @example Behavior of a basic Controller\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n     export default class PostRoute extends Route {\n      setupController(controller, model) {\n        controller.set('model', model);\n      }\n    });\n    ```\n     @method setupController\n    @param {Controller} controller instance\n    @param {Object} model\n    @param {Transition} [transition]\n    @since 1.0.0\n    @public\n  */\n  setupController(controller, context, _transition) {\n    if (controller && context !== undefined) {\n      (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s)(controller, 'model', context);\n    }\n  }\n\n  /**\n    Returns the controller of the current route, or a parent (or any ancestor)\n    route in a route hierarchy.\n     The controller instance must already have been created, either through entering the\n    associated route or using `generateController`.\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n     export default class PostRoute extends Route {\n      setupController(controller, post) {\n        super.setupController(controller, post);\n         this.controllerFor('posts').set('currentPost', post);\n      }\n    }\n    ```\n     @method controllerFor\n    @param {String} name the name of the route or controller\n    @return {Controller | undefined}\n    @since 1.0.0\n    @public\n  */\n\n  controllerFor(name, _skipAssert = false) {\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Route is unexpectedly missing an owner', owner);\n    let route = owner.lookup(`route:${name}`);\n    if (route && route.controllerName) {\n      name = route.controllerName;\n    }\n    let controller = owner.lookup(`controller:${name}`);\n\n    // NOTE: We're specifically checking that skipAssert is true, because according\n    //   to the old API the second parameter was model. We do not want people who\n    //   passed a model to skip the assertion.\n     true && !(controller !== undefined || _skipAssert === true) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The controller named '${name}' could not be found. Make sure that this route exists and has already been entered at least once. If you are accessing a controller not associated with a route, make sure the controller class is explicitly defined.`, controller !== undefined || _skipAssert === true);\n     true && !(controller === undefined || controller instanceof _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Expected controller:${name} to be an instance of Controller`, controller === undefined || controller instanceof _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]);\n    return controller;\n  }\n\n  /**\n    Generates a controller for a route.\n     Example\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n     export default class Post extends Route {\n      setupController(controller, post) {\n        super.setupController(controller, post);\n         this.generateController('posts');\n      }\n    }\n    ```\n     @method generateController\n    @param {String} name the name of the controller\n    @private\n  */\n  generateController(name) {\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Route is unexpectedly missing an owner', owner);\n    return (0,_ember_routing_lib_generate_controller_js__WEBPACK_IMPORTED_MODULE_51__[\"default\"])(owner, name);\n  }\n\n  /**\n    Returns the resolved model of a parent (or any ancestor) route\n    in a route hierarchy.  During a transition, all routes\n    must resolve a model object, and if a route\n    needs access to a parent route's model in order to\n    resolve a model (or just reuse the model from a parent),\n    it can call `this.modelFor(theNameOfParentRoute)` to\n    retrieve it. If the ancestor route's model was a promise,\n    its resolved result is returned.\n     Example\n     ```app/router.js\n    // ...\n     Router.map(function() {\n      this.route('post', { path: '/posts/:post_id' }, function() {\n        this.route('comments');\n      });\n    });\n     export default Router;\n    ```\n     ```app/routes/post/comments.js\n    import Route from '@ember/routing/route';\n     export default class PostCommentsRoute extends Route {\n      model() {\n        let post = this.modelFor('post');\n         return post.comments;\n      }\n    }\n    ```\n     @method modelFor\n    @param {String} name the name of the route\n    @return {Object} the model object\n    @since 1.0.0\n    @public\n  */\n  modelFor(_name) {\n    let name;\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n     true && !(owner instanceof EmberEngineInstance) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected router owner to be an EngineInstance', owner instanceof EmberEngineInstance);\n    let transition = this._router && this._router._routerMicrolib ? this._router._routerMicrolib.activeTransition : undefined;\n\n    // Only change the route name when there is an active transition.\n    // Otherwise, use the passed in route name.\n    if (owner.routable && transition !== undefined) {\n      name = getEngineRouteName(owner, _name);\n    } else {\n      name = _name;\n    }\n    let route = owner.lookup(`route:${name}`);\n    // If we are mid-transition, we want to try and look up\n    // resolved parent contexts on the current transitionEvent.\n    if (transition !== undefined && transition !== null) {\n      let modelLookupName = route && route.routeName || name;\n      if (Object.prototype.hasOwnProperty.call(transition.resolvedModels, modelLookupName)) {\n        return transition.resolvedModels[modelLookupName];\n      }\n    }\n    return route?.currentModel;\n  }\n  /**\n    `this[RENDER]` is used to set up the rendering option for the outlet state.\n    @method this[RENDER]\n    @private\n   */\n  [RENDER]() {\n    this[RENDER_STATE] = buildRenderState(this);\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.N)(this._router, '_setOutlets');\n  }\n  willDestroy() {\n    this.teardownViews();\n  }\n\n  /**\n    @private\n     @method teardownViews\n  */\n  teardownViews() {\n    if (this[RENDER_STATE]) {\n      this[RENDER_STATE] = undefined;\n      (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.N)(this._router, '_setOutlets');\n    }\n  }\n\n  /**\n    Allows you to produce custom metadata for the route.\n    The return value of this method will be attached to\n    its corresponding RouteInfoWithAttributes object.\n     Example\n     ```app/routes/posts/index.js\n    import Route from '@ember/routing/route';\n     export default class PostsIndexRoute extends Route {\n      buildRouteInfoMetadata() {\n        return { title: 'Posts Page' }\n      }\n    }\n    ```\n     ```app/routes/application.js\n    import Route from '@ember/routing/route';\n    import { service } from '@ember/service';\n     export default class ApplicationRoute extends Route {\n      @service router\n       constructor() {\n        super(...arguments);\n         this.router.on('routeDidChange', transition => {\n          document.title = transition.to.metadata.title;\n          // would update document's title to \"Posts Page\"\n        });\n      }\n    }\n    ```\n    @method buildRouteInfoMetadata\n    @return any\n    @since 3.10.0\n    @public\n   */\n\n  buildRouteInfoMetadata() {}\n  _paramsFor(routeName, params) {\n    let transition = this._router._routerMicrolib.activeTransition;\n    if (transition !== undefined) {\n      return this.paramsFor(routeName);\n    }\n    return params;\n  }\n\n  /** @deprecated Manually define your own store, such as with `@service store` */\n  get _store() {\n    const owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Route is unexpectedly missing an owner', owner);\n    let routeName = this.routeName;\n    return {\n      find(name, value) {\n        let modelClass = owner.factoryFor(`model:${name}`);\n         true && !Boolean(modelClass) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You used the dynamic segment \\`${name}_id\\` in your route ` + `\\`${routeName}\\` for which Ember requires you provide a ` + `data-loading implementation. Commonly, that is done by ` + `adding a model hook implementation on the route ` + `(\\`model({${name}_id}) {\\`) or by injecting an implemention of ` + `a data store: \\`@service store;\\`.`, Boolean(modelClass));\n        if (!modelClass) {\n          return;\n        }\n        modelClass = modelClass.class;\n         true && !(typeof modelClass.find === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You used the dynamic segment \\`${name}_id\\` in your route ` + `\\`${routeName}\\` for which Ember requires you provide a ` + `data-loading implementation. Commonly, that is done by ` + `adding a model hook implementation on the route ` + `(\\`model({${name}_id}) {\\`) or by injecting an implemention of ` + `a data store: \\`@service store;\\`.\\n\\n` + `Rarely, applications may attempt to use a legacy behavior where ` + `the model class (in this case \\`${name}\\`) is resolved and the ` + `\\`find\\` method on that class is invoked to load data. In this ` + `application, a model of \\`${name}\\` was found but it did not ` + `provide a \\`find\\` method. You should not add a \\`find\\` ` + `method to your model. Instead, please implement an appropriate ` + `\\`model\\` hook on the \\`${routeName}\\` route.`, typeof modelClass.find === 'function');\n        return modelClass.find(value);\n      }\n    };\n  }\n\n  /**\n    @private\n    @property _qp\n    */\n\n  get _qp() {\n    let combinedQueryParameterConfiguration = {};\n    let controllerName = this.controllerName || this.routeName;\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Route is unexpectedly missing an owner', owner);\n    let controller = owner.lookup(`controller:${controllerName}`);\n    let queryParameterConfiguraton = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, 'queryParams');\n    let hasRouterDefinedQueryParams = Object.keys(queryParameterConfiguraton).length > 0;\n    if (controller) {\n       true && !(controller instanceof _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected an instance of controller', controller instanceof _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]); // the developer has authored a controller class in their application for\n      // this route find its query params and normalize their object shape them\n      // merge in the query params for the route. As a mergedProperty,\n      // Route#queryParams is always at least `{}`\n      let controllerDefinedQueryParameterConfiguration = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(controller, 'queryParams') || [];\n      let normalizedControllerQueryParameterConfiguration = normalizeControllerQueryParams(controllerDefinedQueryParameterConfiguration);\n      combinedQueryParameterConfiguration = mergeEachQueryParams(normalizedControllerQueryParameterConfiguration, queryParameterConfiguraton);\n    } else if (hasRouterDefinedQueryParams) {\n      // the developer has not defined a controller but *has* supplied route query params.\n      // Generate a class for them so we can later insert default values\n      controller = (0,_ember_routing_lib_generate_controller_js__WEBPACK_IMPORTED_MODULE_51__[\"default\"])(owner, controllerName);\n      combinedQueryParameterConfiguration = queryParameterConfiguraton;\n    }\n    let qps = [];\n    let map = {};\n    let propertyNames = [];\n    for (let propName in combinedQueryParameterConfiguration) {\n      if (!Object.prototype.hasOwnProperty.call(combinedQueryParameterConfiguration, propName)) {\n        continue;\n      }\n\n      // to support the dubious feature of using unknownProperty\n      // on queryParams configuration\n      if (propName === 'unknownProperty' || propName === '_super') {\n        // possible todo: issue deprecation warning?\n        continue;\n      }\n      let desc = combinedQueryParameterConfiguration[propName];\n       true && !desc && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`[BUG] missing query parameter configuration for ${propName}`, desc);\n      let scope = desc.scope || 'model';\n      let parts = undefined;\n      if (scope === 'controller') {\n        parts = [];\n      }\n      let urlKey = desc.as || this.serializeQueryParamKey(propName);\n      let defaultValue = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(controller, propName);\n      defaultValue = copyDefaultValue(defaultValue);\n      let type = desc.type || (0,_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.t)(defaultValue);\n      let defaultValueSerialized = this.serializeQueryParam(defaultValue, urlKey, type);\n      let scopedPropertyName = `${controllerName}:${propName}`;\n      let qp = {\n        undecoratedDefaultValue: (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(controller, propName),\n        defaultValue,\n        serializedDefaultValue: defaultValueSerialized,\n        serializedValue: defaultValueSerialized,\n        type,\n        urlKey,\n        prop: propName,\n        scopedPropertyName,\n        controllerName,\n        route: this,\n        parts,\n        // provided later when stashNames is called if 'model' scope\n        values: null,\n        // provided later when setup is called. no idea why.\n        scope\n      };\n      map[propName] = map[urlKey] = map[scopedPropertyName] = qp;\n      qps.push(qp);\n      propertyNames.push(propName);\n    }\n    return {\n      qps,\n      map,\n      propertyNames,\n      states: {\n        /*\n          Called when a query parameter changes in the URL, this route cares\n          about that query parameter, but the route is not currently\n          in the active route hierarchy.\n        */\n        inactive: (prop, value) => {\n          let qp = map[prop];\n           true && !qp && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected inactive callback to only be called for registered qps', qp);\n          this._qpChanged(prop, value, qp);\n        },\n        /*\n          Called when a query parameter changes in the URL, this route cares\n          about that query parameter, and the route is currently\n          in the active route hierarchy.\n        */\n        active: (prop, value) => {\n          let qp = map[prop];\n           true && !qp && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected active callback to only be called for registered qps', qp);\n          this._qpChanged(prop, value, qp);\n          return this._activeQPChanged(qp, value);\n        },\n        /*\n          Called when a value of a query parameter this route handles changes in a controller\n          and the route is currently in the active route hierarchy.\n        */\n        allowOverrides: (prop, value) => {\n          let qp = map[prop];\n           true && !qp && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected allowOverrides callback to only be called for registered qps', qp);\n          this._qpChanged(prop, value, qp);\n          return this._updatingQPChanged(qp);\n        }\n      }\n    };\n  }\n\n  // Set in reopen\n\n  /**\n    Sends an action to the router, which will delegate it to the currently\n    active route hierarchy per the bubbling rules explained under `actions`.\n     Example\n     ```app/router.js\n    // ...\n     Router.map(function() {\n      this.route('index');\n    });\n     export default Router;\n    ```\n     ```app/routes/application.js\n    import Route from '@ember/routing/route';\n    import { action } from '@ember/object';\n     export default class ApplicationRoute extends Route {\n      @action\n      track(arg) {\n        console.log(arg, 'was clicked');\n      }\n    }\n    ```\n     ```app/routes/index.js\n    import Route from '@ember/routing/route';\n    import { action } from '@ember/object';\n     export default class IndexRoute extends Route {\n      @action\n      trackIfDebug(arg) {\n        if (debug) {\n          this.send('track', arg);\n        }\n      }\n    }\n    ```\n     @method send\n    @param {String} name the name of the action to trigger\n    @param {...*} args\n    @since 1.0.0\n    @public\n  */\n  // Set with reopen to override parent behavior\n}\n_Route = Route;\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Route, \"isRouteFactory\", true);\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.a)(_Route.prototype, \"_store\", [_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.c]);\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.a)(_Route.prototype, \"_qp\", [_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.c]);\nfunction getRenderState(route) {\n  return route[RENDER_STATE];\n}\nfunction buildRenderState(route) {\n  let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(route);\n   true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Route is unexpectedly missing an owner', owner);\n  let name = route.routeName;\n  let controller = owner.lookup(`controller:${route.controllerName || name}`);\n   true && !(controller instanceof _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected an instance of controller', controller instanceof _ember_controller_index_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]);\n  let model = route.currentModel;\n  let template = owner.lookup(`template:${route.templateName || name}`);\n  let render = {\n    owner,\n    into: undefined,\n    outlet: 'main',\n    name,\n    controller,\n    model,\n    template: template?.(owner) ?? route._topLevelViewTemplate(owner)\n  };\n  if (true) {\n    let LOG_VIEW_LOOKUPS = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(route._router, 'namespace.LOG_VIEW_LOOKUPS');\n    if (LOG_VIEW_LOOKUPS && !template) {\n      (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.i)(`Could not find \"${name}\" template. Nothing will be rendered`, {\n        fullName: `template:${name}`\n      });\n    }\n  }\n  return render;\n}\nfunction getFullQueryParams(router, state) {\n  if (state.fullQueryParams) {\n    return state.fullQueryParams;\n  }\n  let haveAllRouteInfosResolved = state.routeInfos.every(routeInfo => routeInfo.route);\n  let fullQueryParamsState = {\n    ...state.queryParams\n  };\n  router._deserializeQueryParams(state.routeInfos, fullQueryParamsState);\n\n  // only cache query params state if all routeinfos have resolved; it's possible\n  // for lazy routes to not have resolved when `getFullQueryParams` is called, so\n  // we wait until all routes have resolved prior to caching query params state\n  if (haveAllRouteInfosResolved) {\n    state.fullQueryParams = fullQueryParamsState;\n  }\n  return fullQueryParamsState;\n}\nfunction getQueryParamsFor(route, state) {\n  state.queryParamsFor = state.queryParamsFor || {};\n  let name = route.fullRouteName;\n  let existing = state.queryParamsFor[name];\n  if (existing) {\n    return existing;\n  }\n  let fullQueryParams = getFullQueryParams(route._router, state);\n  let params = state.queryParamsFor[name] = {};\n\n  // Copy over all the query params for this route/controller into params hash.\n  // SAFETY: Since `_qp` is protected we can't infer the type\n  let qps = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(route, '_qp').qps;\n  for (let qp of qps) {\n    // Put deserialized qp on params hash.\n    let qpValueWasPassedIn = qp.prop in fullQueryParams;\n    params[qp.prop] = qpValueWasPassedIn ? fullQueryParams[qp.prop] : copyDefaultValue(qp.defaultValue);\n  }\n  return params;\n}\n\n// FIXME: This should probably actually return a `NativeArray` if the passed in value is an Array.\nfunction copyDefaultValue(value) {\n  if (Array.isArray(value)) {\n    // SAFETY: We lost the type data about the array if we don't cast.\n    return (0,_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.A)(value.slice());\n  }\n  return value;\n}\n\n/*\n  Merges all query parameters from a controller with those from\n  a route, returning a new object and avoiding any mutations to\n  the existing objects.\n*/\nfunction mergeEachQueryParams(controllerQP, routeQP) {\n  let qps = {};\n  let keysAlreadyMergedOrSkippable = {\n    defaultValue: true,\n    type: true,\n    scope: true,\n    as: true\n  };\n\n  // first loop over all controller qps, merging them with any matching route qps\n  // into a new empty object to avoid mutating.\n  for (let cqpName in controllerQP) {\n    if (!Object.prototype.hasOwnProperty.call(controllerQP, cqpName)) {\n      continue;\n    }\n    qps[cqpName] = {\n      ...controllerQP[cqpName],\n      ...routeQP[cqpName]\n    };\n\n    // allows us to skip this QP when we check route QPs.\n    keysAlreadyMergedOrSkippable[cqpName] = true;\n  }\n\n  // loop over all route qps, skipping those that were merged in the first pass\n  // because they also appear in controller qps\n  for (let rqpName in routeQP) {\n    if (!Object.prototype.hasOwnProperty.call(routeQP, rqpName) || keysAlreadyMergedOrSkippable[rqpName]) {\n      continue;\n    }\n    qps[rqpName] = {\n      ...routeQP[rqpName],\n      ...controllerQP[rqpName]\n    };\n  }\n  return qps;\n}\nfunction addQueryParamsObservers(controller, propNames) {\n  propNames.forEach(prop => {\n    if ((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.B)(controller, prop) === undefined) {\n      let desc = (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_13__.l)(controller, prop);\n      if (desc !== null && (typeof desc.get === 'function' || typeof desc.set === 'function')) {\n        (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.d)(controller, prop, (0,_ember_object_compat_js__WEBPACK_IMPORTED_MODULE_53__.dependentKeyCompat)({\n          get: desc.get,\n          set: desc.set\n        }));\n      }\n    }\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.x)(controller, `${prop}.[]`, controller, controller._qpChanged, false);\n  });\n}\nfunction getEngineRouteName(engine, routeName) {\n  if (engine.routable) {\n    let prefix = engine.mountPoint;\n    if (routeName === 'application') {\n      return prefix;\n    } else {\n      return `${prefix}.${routeName}`;\n    }\n  }\n  return routeName;\n}\nconst defaultSerialize = Route.prototype.serialize;\nfunction hasDefaultSerialize(route) {\n  return route.serialize === defaultSerialize;\n}\n\n// Set these here so they can be overridden with extend\nRoute.reopen({\n  mergedProperties: ['queryParams'],\n  queryParams: {},\n  templateName: null,\n  controllerName: null,\n  send(...args) {\n     true && !(!this.isDestroying && !this.isDestroyed) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Attempted to call .send() with the action '${args[0]}' on the destroyed route '${this.routeName}'.`, !this.isDestroying && !this.isDestroyed);\n    if (this._router && this._router._routerMicrolib || !(0,_ember_debug_lib_testing_js__WEBPACK_IMPORTED_MODULE_54__.isTesting)()) {\n      this._router.send(...args);\n    } else {\n      let name = args.shift();\n      let action = this.actions[name];\n      if (action) {\n        return action.apply(this, args);\n      }\n    }\n  },\n  /**\n    The controller associated with this route.\n     Example\n     ```app/routes/form.js\n    import Route from '@ember/routing/route';\n    import { action } from '@ember/object';\n     export default class FormRoute extends Route {\n      @action\n      willTransition(transition) {\n        if (this.controller.get('userHasEnteredData') &&\n            !confirm('Are you sure you want to abandon progress?')) {\n          transition.abort();\n        } else {\n          // Bubble the `willTransition` action so that\n          // parent routes can decide whether or not to abort.\n          return true;\n        }\n      }\n    }\n    ```\n     @property controller\n    @type Controller\n    @since 1.6.0\n    @public\n  */\n\n  actions: {\n    /**\n    This action is called when one or more query params have changed. Bubbles.\n     @method queryParamsDidChange\n    @param changed {Object} Keys are names of query params that have changed.\n    @param totalPresent {Object} Keys are names of query params that are currently set.\n    @param removed {Object} Keys are names of query params that have been removed.\n    @returns {boolean}\n    @private\n    */\n    queryParamsDidChange(changed, _totalPresent, removed) {\n      // SAFETY: Since `_qp` is protected we can't infer the type\n      let qpMap = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, '_qp').map;\n      let totalChanged = Object.keys(changed).concat(Object.keys(removed));\n      for (let change of totalChanged) {\n        let qp = qpMap[change];\n        if (qp) {\n          let options = this._optionsForQueryParam(qp);\n           true && !(options && typeof options === 'object') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('options exists', options && typeof options === 'object');\n          if ((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(options, 'refreshModel') && this._router.currentState) {\n            this.refresh();\n            break;\n          }\n        }\n      }\n      return true;\n    },\n    finalizeQueryParamChange(params, finalParams, transition) {\n      if (this.fullRouteName !== 'application') {\n        return true;\n      }\n\n      // Transition object is absent for intermediate transitions.\n      if (!transition) {\n        return;\n      }\n      let routeInfos = transition[_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.S].routeInfos;\n      let router = this._router;\n      let qpMeta = router._queryParamsFor(routeInfos);\n      let changes = router._qpUpdates;\n      let qpUpdated = false;\n      let replaceUrl;\n      stashParamNames(router, routeInfos);\n      for (let qp of qpMeta.qps) {\n        let route = qp.route;\n        let controller = route.controller;\n        let presentKey = qp.urlKey in params && qp.urlKey;\n\n        // Do a reverse lookup to see if the changed query\n        // param URL key corresponds to a QP property on\n        // this controller.\n        let value;\n        let svalue;\n        if (changes.has(qp.urlKey)) {\n          // Value updated in/before setupController\n          value = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(controller, qp.prop);\n          svalue = route.serializeQueryParam(value, qp.urlKey, qp.type);\n        } else {\n          if (presentKey) {\n            svalue = params[presentKey];\n            if (svalue !== undefined) {\n              value = route.deserializeQueryParam(svalue, qp.urlKey, qp.type);\n            }\n          } else {\n            // No QP provided; use default value.\n            svalue = qp.serializedDefaultValue;\n            value = copyDefaultValue(qp.defaultValue);\n          }\n        }\n\n        // SAFETY: Since `_qp` is protected we can't infer the type\n        controller._qpDelegate = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(route, '_qp').states.inactive;\n        let thisQueryParamChanged = svalue !== qp.serializedValue;\n        if (thisQueryParamChanged) {\n          if (transition.queryParamsOnly && replaceUrl !== false) {\n            let options = route._optionsForQueryParam(qp);\n            let replaceConfigValue = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(options, 'replace');\n            if (replaceConfigValue) {\n              replaceUrl = true;\n            } else if (replaceConfigValue === false) {\n              // Explicit pushState wins over any other replaceStates.\n              replaceUrl = false;\n            }\n          }\n          (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s)(controller, qp.prop, value);\n          qpUpdated = true;\n        }\n\n        // Stash current serialized value of controller.\n        qp.serializedValue = svalue;\n        let thisQueryParamHasDefaultValue = qp.serializedDefaultValue === svalue;\n        if (!thisQueryParamHasDefaultValue) {\n          finalParams.push({\n            value: svalue,\n            visible: true,\n            key: presentKey || qp.urlKey\n          });\n        }\n      }\n\n      // Some QPs have been updated, and those changes need to be propogated\n      // immediately. Eventually, we should work on making this async somehow.\n      if (qpUpdated === true) {\n        (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.ac)(false);\n      }\n      if (replaceUrl) {\n        transition.method('replace');\n      }\n      qpMeta.qps.forEach(qp => {\n        // SAFETY: Since `_qp` is protected we can't infer the type\n        let routeQpMeta = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(qp.route, '_qp');\n        let finalizedController = qp.route.controller;\n        finalizedController['_qpDelegate'] = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(routeQpMeta, 'states.active');\n      });\n      router._qpUpdates.clear();\n      return;\n    }\n  }\n});\n\n/**\n@module @ember/routing/router\n*/\n\nfunction defaultDidTransition(infos) {\n  updatePaths(this);\n  this._cancelSlowTransitionTimer();\n  this.notifyPropertyChange('url');\n  this.set('currentState', this.targetState);\n  if (true) {\n    // @ts-expect-error namespace isn't public\n    if (this.namespace.LOG_TRANSITIONS) {\n      // eslint-disable-next-line no-console\n      console.log(`Transitioned into '${EmberRouter._routePath(infos)}'`);\n    }\n  }\n}\nfunction defaultWillTransition(oldInfos, newInfos) {\n  if (true) {\n    // @ts-expect-error namespace isn't public\n    if (this.namespace.LOG_TRANSITIONS) {\n      // eslint-disable-next-line no-console\n      console.log(`Preparing to transition from '${EmberRouter._routePath(oldInfos)}' to '${EmberRouter._routePath(newInfos)}'`);\n    }\n  }\n}\nlet freezeRouteInfo;\nif (true) {\n  freezeRouteInfo = transition => {\n    if (transition.from !== null && !Object.isFrozen(transition.from)) {\n      Object.freeze(transition.from);\n    }\n    if (transition.to !== null && !Object.isFrozen(transition.to)) {\n      Object.freeze(transition.to);\n    }\n  };\n}\nfunction K() {\n  return this;\n}\nconst {\n  slice\n} = Array.prototype;\n\n/**\n  The `EmberRouter` class manages the application state and URLs. Refer to\n  the [routing guide](https://guides.emberjs.com/release/routing/) for documentation.\n\n  @class EmberRouter\n  @extends EmberObject\n  @uses Evented\n  @public\n*/\nclass EmberRouter extends _index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.E.extend(_ember_object_evented_js__WEBPACK_IMPORTED_MODULE_48__[\"default\"]) {\n  /**\n    The `Router.map` function allows you to define mappings from URLs to routes\n    in your application. These mappings are defined within the\n    supplied callback function using `this.route`.\n     The first parameter is the name of the route which is used by default as the\n    path name as well.\n     The second parameter is the optional options hash. Available options are:\n       * `path`: allows you to provide your own path as well as mark dynamic\n        segments.\n      * `resetNamespace`: false by default; when nesting routes, ember will\n        combine the route names to form the fully-qualified route name, which is\n        used with `{{link-to}}` or manually transitioning to routes. Setting\n        `resetNamespace: true` will cause the route not to inherit from its\n        parent route's names. This is handy for preventing extremely long route names.\n        Keep in mind that the actual URL path behavior is still retained.\n     The third parameter is a function, which can be used to nest routes.\n    Nested routes, by default, will have the parent route tree's route name and\n    path prepended to it's own.\n     ```app/router.js\n    Router.map(function(){\n      this.route('post', { path: '/post/:post_id' }, function() {\n        this.route('edit');\n        this.route('comments', { resetNamespace: true }, function() {\n          this.route('new');\n        });\n      });\n    });\n    ```\n     @method map\n    @param callback\n    @public\n  */\n  static map(callback) {\n    if (!this.dslCallbacks) {\n      this.dslCallbacks = [];\n      // FIXME: Can we remove this?\n      this.reopenClass({\n        dslCallbacks: this.dslCallbacks\n      });\n    }\n    this.dslCallbacks.push(callback);\n    return this;\n  }\n  static _routePath(routeInfos) {\n    let path = [];\n\n    // We have to handle coalescing resource names that\n    // are prefixed with their parent's names, e.g.\n    // ['foo', 'foo.bar.baz'] => 'foo.bar.baz', not 'foo.foo.bar.baz'\n\n    function intersectionMatches(a1, a2) {\n      for (let i = 0; i < a1.length; ++i) {\n        if (a1[i] !== a2[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    let name, nameParts, oldNameParts;\n    for (let i = 1; i < routeInfos.length; i++) {\n      let routeInfo = routeInfos[i];\n       true && !routeInfo && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has routeInfo', routeInfo);\n      name = routeInfo.name;\n      nameParts = name.split('.');\n      oldNameParts = slice.call(path);\n      while (oldNameParts.length) {\n        if (intersectionMatches(oldNameParts, nameParts)) {\n          break;\n        }\n        oldNameParts.shift();\n      }\n      path.push(...nameParts.slice(oldNameParts.length));\n    }\n    return path.join('.');\n  }\n\n  // Note that owner is actually required in this scenario, but since it is strictly\n  // optional in other contexts trying to make it required here confuses TS.\n  constructor(owner) {\n    super(owner);\n    /**\n     Represents the URL of the root of the application, often '/'. This prefix is\n      assumed on all routes defined on this router.\n       @property rootURL\n      @default '/'\n      @public\n    */\n    // Set with reopen to allow overriding via extend\n    /**\n     The `location` property determines the type of URL's that your\n      application will use.\n       The following location types are currently available:\n       * `history` - use the browser's history API to make the URLs look just like any standard URL\n      * `hash` - use `#` to separate the server part of the URL from the Ember part: `/blog/#/posts/new`\n      * `none` - do not store the Ember URL in the actual browser URL (mainly used for testing)\n      * `auto` - use the best option based on browser capabilities: `history` if possible, then `hash` if possible, otherwise `none`\n       This value is defaulted to `history` by the `locationType` setting of `/config/environment.js`\n       @property location\n      @default 'hash'\n      @see {Location}\n      @public\n    */\n    // Set with reopen to allow overriding via extend\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_routerMicrolib\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_didSetupRouter\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_initialTransitionStarted\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentURL\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentRouteName\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentPath\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentRoute\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_qpCache\", Object.create(null));\n    // Set of QueryParam['urlKey']\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_qpUpdates\", new Set());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_queuedQPChanges\", {});\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_bucketCache\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_toplevelView\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_handledErrors\", new Set());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_engineInstances\", Object.create(null));\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_engineInfoByRoute\", Object.create(null));\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_routerService\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_slowTransitionTimer\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"namespace\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentState\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"targetState\", null);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('BUG: Missing owner', owner);\n    this._resetQueuedQueryParameterChanges();\n    this.namespace = owner.lookup('application:main');\n    let bucketCache = owner.lookup((0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_2__.p)`-bucket-cache:main`);\n     true && !(bucketCache instanceof _ember_routing_lib_cache_js__WEBPACK_IMPORTED_MODULE_46__[\"default\"]) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('BUG: BucketCache should always be present', bucketCache instanceof _ember_routing_lib_cache_js__WEBPACK_IMPORTED_MODULE_46__[\"default\"]);\n    this._bucketCache = bucketCache;\n    let routerService = owner.lookup('service:router');\n     true && !(routerService !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('BUG: RouterService should always be present', routerService !== undefined);\n    this._routerService = routerService;\n  }\n  _initRouterJs() {\n    let location = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, 'location');\n    let router = this;\n    const owner = (0,_ember_owner_index_js__WEBPACK_IMPORTED_MODULE_45__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Router is unexpectedly missing an owner', owner);\n    let seen = Object.create(null);\n    class PrivateRouter extends _router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.R {\n      getRoute(name) {\n        let routeName = name;\n        let routeOwner = owner;\n        let engineInfo = router._engineInfoByRoute[routeName];\n        if (engineInfo) {\n          let engineInstance = router._getEngineInstance(engineInfo);\n          routeOwner = engineInstance;\n          routeName = engineInfo.localFullName;\n        }\n        let fullRouteName = `route:${routeName}`;\n         true && !routeOwner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Route is unexpectedly missing an owner', routeOwner);\n        let route = routeOwner.lookup(fullRouteName);\n        if (seen[name]) {\n           true && !route && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('seen routes should exist', route);\n          return route;\n        }\n        seen[name] = true;\n        if (!route) {\n          // SAFETY: this is configured in `commonSetupRegistry` in the\n          // `@ember/application/lib` package.\n          let DefaultRoute = routeOwner.factoryFor('route:basic').class;\n          routeOwner.register(fullRouteName, DefaultRoute.extend());\n          route = routeOwner.lookup(fullRouteName);\n          if (true) {\n            if (router.namespace.LOG_ACTIVE_GENERATION) {\n              (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.i)(`generated -> ${fullRouteName}`, {\n                fullName: fullRouteName\n              });\n            }\n          }\n        }\n        route._setRouteName(routeName);\n        if (engineInfo && !hasDefaultSerialize(route)) {\n          throw new Error('Defining a custom serialize method on an Engine route is not supported.');\n        }\n        return route;\n      }\n      getSerializer(name) {\n        let engineInfo = router._engineInfoByRoute[name];\n\n        // If this is not an Engine route, we fall back to the handler for serialization\n        if (!engineInfo) {\n          return;\n        }\n        return engineInfo.serializeMethod || defaultSerialize;\n      }\n      updateURL(path) {\n        (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.N)(() => {\n          location.setURL(path);\n          (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s)(router, 'currentURL', path);\n        });\n      }\n\n      // TODO: merge into routeDidChange\n      didTransition(infos) {\n         true && !(router.didTransition === defaultDidTransition) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to override the \"didTransition\" method which has been deprecated. Please inject the router service and listen to the \"routeDidChange\" event.', router.didTransition === defaultDidTransition);\n        router.didTransition(infos);\n      }\n\n      // TODO: merge into routeWillChange\n      willTransition(oldInfos, newInfos) {\n         true && !(router.willTransition === defaultWillTransition) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('You attempted to override the \"willTransition\" method which has been deprecated. Please inject the router service and listen to the \"routeWillChange\" event.', router.willTransition === defaultWillTransition);\n        router.willTransition(oldInfos, newInfos);\n      }\n      triggerEvent(routeInfos, ignoreFailure, name, args) {\n        return triggerEvent.bind(router)(routeInfos, ignoreFailure, name, args);\n      }\n      routeWillChange(transition) {\n        router.trigger('routeWillChange', transition);\n        if (true) {\n          freezeRouteInfo(transition);\n        }\n        router._routerService.trigger('routeWillChange', transition);\n\n        // in case of intermediate transition we update the current route\n        // to make router.currentRoute.name consistent with router.currentRouteName\n        // see https://github.com/emberjs/ember.js/issues/19449\n        if (transition.isIntermediate) {\n          router.set('currentRoute', transition.to);\n        }\n      }\n      routeDidChange(transition) {\n        router.set('currentRoute', transition.to);\n        (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.N)(() => {\n          router.trigger('routeDidChange', transition);\n          if (true) {\n            freezeRouteInfo(transition);\n          }\n          router._routerService.trigger('routeDidChange', transition);\n        });\n      }\n      transitionDidError(error, transition) {\n        if (error.wasAborted || transition.isAborted) {\n          // If the error was a transition erorr or the transition aborted\n          // log the abort.\n          return (0,_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.l)(transition);\n        } else {\n          // Otherwise trigger the \"error\" event to attempt an intermediate\n          // transition into an error substate\n          transition.trigger(false, 'error', error.error, transition, error.route);\n          if (router._isErrorHandled(error.error)) {\n            // If we handled the error with a substate just roll the state back on\n            // the transition and send the \"routeDidChange\" event for landing on\n            // the error substate and return the error.\n            transition.rollback();\n            this.routeDidChange(transition);\n            return error.error;\n          } else {\n            // If it was not handled, abort the transition completely and return\n            // the error.\n            transition.abort();\n            return error.error;\n          }\n        }\n      }\n      replaceURL(url) {\n        if (location.replaceURL) {\n          let doReplaceURL = () => {\n            location.replaceURL(url);\n            (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s)(router, 'currentURL', url);\n          };\n          (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.N)(doReplaceURL);\n        } else {\n          this.updateURL(url);\n        }\n      }\n    }\n    let routerMicrolib = this._routerMicrolib = new PrivateRouter();\n    let dslCallbacks = this.constructor.dslCallbacks || [K];\n    let dsl = this._buildDSL();\n    dsl.route('application', {\n      path: '/',\n      resetNamespace: true,\n      overrideNameAssertion: true\n    }, function () {\n      for (let i = 0; i < dslCallbacks.length; i++) {\n        dslCallbacks[i].call(this);\n      }\n    });\n    if (true) {\n      if (this.namespace.LOG_TRANSITIONS_INTERNAL) {\n        routerMicrolib.log = console.log.bind(console); // eslint-disable-line no-console\n      }\n    }\n    routerMicrolib.map(dsl.generate());\n  }\n  _buildDSL() {\n    let enableLoadingSubstates = this._hasModuleBasedResolver();\n    let router = this;\n    const owner = (0,_ember_owner_index_js__WEBPACK_IMPORTED_MODULE_45__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Router is unexpectedly missing an owner', owner);\n    let options = {\n      enableLoadingSubstates,\n      resolveRouteMap(name) {\n        return owner.factoryFor(`route-map:${name}`);\n      },\n      addRouteForEngine(name, engineInfo) {\n        if (!router._engineInfoByRoute[name]) {\n          router._engineInfoByRoute[name] = engineInfo;\n        }\n      }\n    };\n    return new _ember_routing_lib_dsl_js__WEBPACK_IMPORTED_MODULE_47__[\"default\"](null, options);\n  }\n\n  /*\n    Resets all pending query parameter changes.\n    Called after transitioning to a new route\n    based on query parameter changes.\n  */\n  _resetQueuedQueryParameterChanges() {\n    this._queuedQPChanges = {};\n  }\n  _hasModuleBasedResolver() {\n    let owner = (0,_ember_owner_index_js__WEBPACK_IMPORTED_MODULE_45__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Router is unexpectedly missing an owner', owner);\n    let resolver = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(owner, 'application.__registry__.resolver.moduleBasedResolver');\n    return Boolean(resolver);\n  }\n\n  /**\n    Initializes the current router instance and sets up the change handling\n    event listeners used by the instances `location` implementation.\n     A property named `initialURL` will be used to determine the initial URL.\n    If no value is found `/` will be used.\n     @method startRouting\n    @private\n  */\n  startRouting() {\n    if (this.setupRouter()) {\n      let initialURL = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, 'initialURL');\n      if (initialURL === undefined) {\n        initialURL = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, 'location').getURL();\n      }\n      let initialTransition = this.handleURL(initialURL);\n      if (initialTransition && initialTransition.error) {\n        throw initialTransition.error;\n      }\n    }\n  }\n  setupRouter() {\n    if (this._didSetupRouter) {\n      return false;\n    }\n    this._didSetupRouter = true;\n    this._setupLocation();\n    let location = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, 'location');\n\n    // Allow the Location class to cancel the router setup while it refreshes\n    // the page\n    if ((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(location, 'cancelRouterSetup')) {\n      return false;\n    }\n    this._initRouterJs();\n    location.onUpdateURL(url => {\n      this.handleURL(url);\n    });\n    return true;\n  }\n  _setOutlets() {\n    // This is triggered async during Route#willDestroy.\n    // If the router is also being destroyed we do not want to\n    // to create another this._toplevelView (and leak the renderer)\n    if (this.isDestroying || this.isDestroyed) {\n      return;\n    }\n    let routeInfos = this._routerMicrolib.currentRouteInfos;\n    if (!routeInfos) {\n      return;\n    }\n    let root = null;\n    let parent = null;\n    for (let routeInfo of routeInfos) {\n      let route = routeInfo.route;\n      let render = getRenderState(route);\n      if (render) {\n        let state = {\n          render,\n          outlets: {\n            main: undefined\n          }\n        };\n        if (parent) {\n          parent.outlets.main = state;\n        } else {\n          root = state;\n        }\n        parent = state;\n      } else {\n        // It used to be that we would create a stub entry and keep traversing,\n        // but I don't think that is necessary anymore – if a parent route did\n        // not render, then the child routes have nowhere to render into these\n        // days. That wasn't always the case since in the past any route can\n        // render into any other route's outlets.\n        break;\n      }\n    }\n\n    // when a transitionTo happens after the validation phase\n    // during the initial transition _setOutlets is called\n    // when no routes are active. However, it will get called\n    // again with the correct values during the next turn of\n    // the runloop\n    if (root === null) {\n      return;\n    }\n    if (!this._toplevelView) {\n      let owner = (0,_ember_owner_index_js__WEBPACK_IMPORTED_MODULE_45__.getOwner)(this);\n       true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Router is unexpectedly missing an owner', owner); // SAFETY: we don't presently have any type registries internally to make\n      // this safe, so in each of these cases we assume that nothing *else* is\n      // registered at this `FullName`, and simply check to make sure that\n      // *something* is.\n      let OutletView = owner.factoryFor('view:-outlet');\n       true && !(OutletView !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] unexpectedly missing `view:-outlet`', OutletView !== undefined);\n      let application = owner.lookup('application:main');\n       true && !(application !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] unexpectedly missing `application:-main`', application !== undefined);\n      let environment = owner.lookup('-environment:main');\n       true && !(environment !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] unexpectedly missing `-environment:main`', environment !== undefined);\n      let template = owner.lookup('template:-outlet');\n       true && !(template !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] unexpectedly missing `template:-outlet`', template !== undefined);\n      this._toplevelView = OutletView.create({\n        environment,\n        template,\n        application\n      });\n      this._toplevelView.setOutletState(root);\n\n      // TODO(SAFETY): At least one test runs without this set correctly. At a\n      // later time, update the test to configure this correctly. The test ID:\n      // `Router Service - non application test:  RouterService#transitionTo with basic route`\n      let instance = owner.lookup('-application-instance:main');\n      // let instance = owner.lookup('-application-instance:main') as ApplicationInstance | undefined;\n      // assert('[BUG] unexpectedly missing `-application-instance:main`', instance !== undefined);\n\n      if (instance) {\n        // SAFETY: LOL. This is calling a deprecated API with a type that we\n        // cannot actually confirm at a type level *is* a `ViewMixin`. Seems:\n        // not great on multiple fronts!\n        instance.didCreateRootView(this._toplevelView);\n      }\n    } else {\n      this._toplevelView.setOutletState(root);\n    }\n  }\n  handleURL(url) {\n    // Until we have an ember-idiomatic way of accessing #hashes, we need to\n    // remove it because router.js doesn't know how to handle it.\n    let _url = url.split(/#(.+)?/)[0];\n    return this._doURLTransition('handleURL', _url);\n  }\n  _doURLTransition(routerJsMethod, url) {\n    this._initialTransitionStarted = true;\n    let transition = this._routerMicrolib[routerJsMethod](url || '/');\n    didBeginTransition(transition, this);\n    return transition;\n  }\n\n  /**\n    Transition the application into another route. The route may\n    be either a single route or route path:\n     @method transitionTo\n    @param {String} [name] the name of the route or a URL\n    @param {...Object} models the model(s) or identifier(s) to be used while\n      transitioning to the route.\n    @param {Object} [options] optional hash with a queryParams property\n      containing a mapping of query parameters\n    @return {Transition} the transition object associated with this\n      attempted transition\n    @public\n  */\n  transitionTo(...args) {\n    if (resemblesURL(args[0])) {\n       true && !(!this.isDestroying && !this.isDestroyed) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`A transition was attempted from '${this.currentRouteName}' to '${args[0]}' but the application instance has already been destroyed.`, !this.isDestroying && !this.isDestroyed);\n      return this._doURLTransition('transitionTo', args[0]);\n    }\n    let {\n      routeName,\n      models,\n      queryParams\n    } = extractRouteArgs(args);\n     true && !(!this.isDestroying && !this.isDestroyed) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`A transition was attempted from '${this.currentRouteName}' to '${routeName}' but the application instance has already been destroyed.`, !this.isDestroying && !this.isDestroyed);\n    return this._doTransition(routeName, models, queryParams);\n  }\n  intermediateTransitionTo(name, ...args) {\n    this._routerMicrolib.intermediateTransitionTo(name, ...args);\n    updatePaths(this);\n    if (true) {\n      let infos = this._routerMicrolib.currentRouteInfos;\n      if (this.namespace.LOG_TRANSITIONS) {\n         true && !infos && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected infos to be set', infos); // eslint-disable-next-line no-console\n        console.log(`Intermediate-transitioned into '${EmberRouter._routePath(infos)}'`);\n      }\n    }\n  }\n\n  /**\n    Similar to `transitionTo`, but instead of adding the destination to the browser's URL history,\n    it replaces the entry for the current route.\n    When the user clicks the \"back\" button in the browser, there will be fewer steps.\n    This is most commonly used to manage redirects in a way that does not cause confusing additions\n    to the user's browsing history.\n     @method replaceWith\n    @param {String} [name] the name of the route or a URL\n    @param {...Object} models the model(s) or identifier(s) to be used while\n      transitioning to the route.\n    @param {Object} [options] optional hash with a queryParams property\n      containing a mapping of query parameters\n    @return {Transition} the transition object associated with this\n      attempted transition\n    @public\n  */\n  replaceWith(...args) {\n    return this.transitionTo(...args).method('replace');\n  }\n  generate(name, ...args) {\n    let url = this._routerMicrolib.generate(name, ...args);\n     true && !(typeof this.location !== 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected non-string location', typeof this.location !== 'string');\n    return this.location.formatURL(url);\n  }\n\n  /**\n    Determines if the supplied route is currently active.\n     @method isActive\n    @param routeName\n    @return {Boolean}\n    @private\n  */\n  isActive(routeName) {\n    return this._routerMicrolib.isActive(routeName);\n  }\n\n  /**\n    An alternative form of `isActive` that doesn't require\n    manual concatenation of the arguments into a single\n    array.\n     @method isActiveIntent\n    @param routeName\n    @param models\n    @param queryParams\n    @return {Boolean}\n    @private\n    @since 1.7.0\n  */\n  isActiveIntent(routeName, models, queryParams) {\n    return this.currentState.isActiveIntent(routeName, models, queryParams);\n  }\n  send(name, ...args) {\n    /*name, context*/\n    this._routerMicrolib.trigger(name, ...args);\n  }\n\n  /**\n    Does this router instance have the given route.\n     @method hasRoute\n    @return {Boolean}\n    @private\n  */\n  hasRoute(route) {\n    return this._routerMicrolib.hasRoute(route);\n  }\n\n  /**\n    Resets the state of the router by clearing the current route\n    handlers and deactivating them.\n     @private\n    @method reset\n   */\n  reset() {\n    this._didSetupRouter = false;\n    this._initialTransitionStarted = false;\n    if (this._routerMicrolib) {\n      this._routerMicrolib.reset();\n    }\n  }\n  willDestroy() {\n    if (this._toplevelView) {\n      this._toplevelView.destroy();\n      this._toplevelView = null;\n    }\n    super.willDestroy();\n    this.reset();\n    let instances = this._engineInstances;\n    for (let name in instances) {\n      let instanceMap = instances[name];\n       true && !instanceMap && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has instanceMap', instanceMap);\n      for (let id in instanceMap) {\n        let instance = instanceMap[id];\n         true && !instance && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has instance', instance);\n        (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.O)(instance, 'destroy');\n      }\n    }\n  }\n\n  /*\n    Called when an active route's query parameter has changed.\n    These changes are batched into a runloop run and trigger\n    a single transition.\n  */\n  _activeQPChanged(queryParameterName, newValue) {\n    this._queuedQPChanges[queryParameterName] = newValue;\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.N)(this, this._fireQueryParamTransition);\n  }\n\n  // The queryParameterName is QueryParam['urlKey']\n  _updatingQPChanged(queryParameterName) {\n    this._qpUpdates.add(queryParameterName);\n  }\n\n  /*\n    Triggers a transition to a route based on query parameter changes.\n    This is called once per runloop, to batch changes.\n     e.g.\n     if these methods are called in succession:\n    this._activeQPChanged('foo', '10');\n      // results in _queuedQPChanges = { foo: '10' }\n    this._activeQPChanged('bar', false);\n      // results in _queuedQPChanges = { foo: '10', bar: false }\n     _queuedQPChanges will represent both of these changes\n    and the transition using `transitionTo` will be triggered\n    once.\n  */\n  _fireQueryParamTransition() {\n    this.transitionTo({\n      queryParams: this._queuedQPChanges\n    });\n    this._resetQueuedQueryParameterChanges();\n  }\n  _setupLocation() {\n    let location = this.location;\n    let rootURL = this.rootURL;\n    let owner = (0,_ember_owner_index_js__WEBPACK_IMPORTED_MODULE_45__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Router is unexpectedly missing an owner', owner);\n    if ('string' === typeof location) {\n      let resolvedLocation = owner.lookup(`location:${location}`);\n       true && !resolvedLocation && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Could not resolve a location class at 'location:${location}'`, resolvedLocation);\n      location = (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s)(this, 'location', resolvedLocation);\n    }\n    if (location !== null && typeof location === 'object') {\n      if (rootURL) {\n        (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s)(location, 'rootURL', rootURL);\n      }\n\n      // ensure that initState is called AFTER the rootURL is set on\n      // the location instance\n      if (typeof location.initState === 'function') {\n        location.initState();\n      }\n    }\n  }\n\n  /**\n    Serializes the given query params according to their QP meta information.\n     @private\n    @method _serializeQueryParams\n    @param {Arrray<RouteInfo>} routeInfos\n    @param {Object} queryParams\n    @return {Void}\n  */\n  _serializeQueryParams(routeInfos, queryParams) {\n    forEachQueryParam(this, routeInfos, queryParams, (key, value, qp) => {\n      if (qp) {\n        delete queryParams[key];\n        queryParams[qp.urlKey] = qp.route.serializeQueryParam(value, qp.urlKey, qp.type);\n      } else if (value === undefined) {\n        return; // We don't serialize undefined values\n      } else {\n        queryParams[key] = this._serializeQueryParam(value, (0,_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.t)(value));\n      }\n    });\n  }\n\n  /**\n    Serializes the value of a query parameter based on a type\n     @private\n    @method _serializeQueryParam\n    @param {Object} value\n    @param {String} type\n  */\n  _serializeQueryParam(value, type) {\n    if (value === null || value === undefined) {\n      return value;\n    } else if (type === 'array') {\n      return JSON.stringify(value);\n    }\n    return `${value}`;\n  }\n\n  /**\n    Deserializes the given query params according to their QP meta information.\n     @private\n    @method _deserializeQueryParams\n    @param {Array<RouteInfo>} routeInfos\n    @param {Object} queryParams\n    @return {Void}\n  */\n  _deserializeQueryParams(routeInfos, queryParams) {\n    forEachQueryParam(this, routeInfos, queryParams, (key, value, qp) => {\n      // If we don't have QP meta info for a given key, then we do nothing\n      // because all values will be treated as strings\n      if (qp) {\n        delete queryParams[key];\n        queryParams[qp.prop] = qp.route.deserializeQueryParam(value, qp.urlKey, qp.type);\n      }\n    });\n  }\n\n  /**\n    Deserializes the value of a query parameter based on a default type\n     @private\n    @method _deserializeQueryParam\n    @param {Object} value\n    @param {String} defaultType\n  */\n  _deserializeQueryParam(value, defaultType) {\n    if (value === null || value === undefined) {\n      return value;\n    } else if (defaultType === 'boolean') {\n      return value === 'true';\n    } else if (defaultType === 'number') {\n      return Number(value).valueOf();\n    } else if (defaultType === 'array') {\n      return (0,_index_PYiGj1jp_js__WEBPACK_IMPORTED_MODULE_10__.A)(JSON.parse(value));\n    }\n    return value;\n  }\n\n  /**\n    Removes (prunes) any query params with default values from the given QP\n    object. Default values are determined from the QP meta information per key.\n     @private\n    @method _pruneDefaultQueryParamValues\n    @param {Array<RouteInfo>} routeInfos\n    @param {Object} queryParams\n    @return {Void}\n  */\n  _pruneDefaultQueryParamValues(routeInfos, queryParams) {\n    let qps = this._queryParamsFor(routeInfos);\n    for (let key in queryParams) {\n      let qp = qps.map[key];\n      if (qp && qp.serializedDefaultValue === queryParams[key]) {\n        delete queryParams[key];\n      }\n    }\n  }\n  _doTransition(_targetRouteName, models, _queryParams, _fromRouterService) {\n    let targetRouteName = _targetRouteName || getActiveTargetName(this._routerMicrolib);\n     true && !(Boolean(targetRouteName) && this._routerMicrolib.hasRoute(targetRouteName)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The route ${targetRouteName} was not found`, Boolean(targetRouteName) && this._routerMicrolib.hasRoute(targetRouteName));\n    this._initialTransitionStarted = true;\n    let queryParams = {};\n    this._processActiveTransitionQueryParams(targetRouteName, models, queryParams, _queryParams);\n    Object.assign(queryParams, _queryParams);\n    this._prepareQueryParams(targetRouteName, models, queryParams, Boolean(_fromRouterService));\n    let transition = this._routerMicrolib.transitionTo(targetRouteName, ...models, {\n      queryParams\n    });\n    didBeginTransition(transition, this);\n    return transition;\n  }\n  _processActiveTransitionQueryParams(targetRouteName, models, queryParams, _queryParams) {\n    // merge in any queryParams from the active transition which could include\n    // queryParams from the url on initial load.\n    if (!this._routerMicrolib.activeTransition) {\n      return;\n    }\n    let unchangedQPs = {};\n    let qpUpdates = this._qpUpdates;\n    let params = getFullQueryParams(this, this._routerMicrolib.activeTransition[_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.S]);\n    for (let key in params) {\n      if (!qpUpdates.has(key)) {\n        unchangedQPs[key] = params[key];\n      }\n    }\n\n    // We need to fully scope queryParams so that we can create one object\n    // that represents both passed-in queryParams and ones that aren't changed\n    // from the active transition.\n    this._fullyScopeQueryParams(targetRouteName, models, _queryParams);\n    this._fullyScopeQueryParams(targetRouteName, models, unchangedQPs);\n    Object.assign(queryParams, unchangedQPs);\n  }\n\n  /**\n    Prepares the query params for a URL or Transition. Restores any undefined QP\n    keys/values, serializes all values, and then prunes any default values.\n     @private\n    @method _prepareQueryParams\n    @param {String} targetRouteName\n    @param {Array<Object>} models\n    @param {Object} queryParams\n    @param {boolean} keepDefaultQueryParamValues\n    @return {Void}\n  */\n  _prepareQueryParams(targetRouteName, models, queryParams, _fromRouterService) {\n    let state = calculatePostTransitionState(this, targetRouteName, models);\n    this._hydrateUnsuppliedQueryParams(state, queryParams, Boolean(_fromRouterService));\n    this._serializeQueryParams(state.routeInfos, queryParams);\n    if (!_fromRouterService) {\n      this._pruneDefaultQueryParamValues(state.routeInfos, queryParams);\n    }\n  }\n\n  /**\n    Returns the meta information for the query params of a given route. This\n    will be overridden to allow support for lazy routes.\n     @private\n    @method _getQPMeta\n    @param {RouteInfo} routeInfo\n    @return {Object}\n  */\n  _getQPMeta(routeInfo) {\n    let route = routeInfo.route;\n    return route && (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(route, '_qp');\n  }\n\n  /**\n    Returns a merged query params meta object for a given set of routeInfos.\n    Useful for knowing what query params are available for a given route hierarchy.\n     @private\n    @method _queryParamsFor\n    @param {Array<RouteInfo>} routeInfos\n    @return {Object}\n   */\n  _queryParamsFor(routeInfos) {\n    let routeInfoLength = routeInfos.length;\n    let leafRouteName = routeInfos[routeInfoLength - 1].name;\n    let cached = this._qpCache[leafRouteName];\n    if (cached !== undefined) {\n      return cached;\n    }\n    let shouldCache = true;\n    let map = {};\n    let qps = [];\n    let qpsByUrlKey =  true ? {} : 0;\n    let qpMeta;\n    let urlKey;\n    let qpOther;\n    for (let routeInfo of routeInfos) {\n      qpMeta = this._getQPMeta(routeInfo);\n      if (!qpMeta) {\n        shouldCache = false;\n        continue;\n      }\n\n      // Loop over each QP to make sure we don't have any collisions by urlKey\n      for (let qp of qpMeta.qps) {\n        if (true) {\n          urlKey = qp.urlKey;\n          qpOther = qpsByUrlKey[urlKey];\n          if (qpOther && qpOther.controllerName !== qp.controllerName) {\n             true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You're not allowed to have more than one controller property map to the same query param key, but both \\`${qpOther.scopedPropertyName}\\` and \\`${qp.scopedPropertyName}\\` map to \\`${urlKey}\\`. You can fix this by mapping one of the controller properties to a different query param key via the \\`as\\` config option, e.g. \\`${qpOther.prop}: { as: 'other-${qpOther.prop}' }\\``, false);\n          }\n          qpsByUrlKey[urlKey] = qp;\n        }\n        qps.push(qp);\n      }\n      Object.assign(map, qpMeta.map);\n    }\n    let finalQPMeta = {\n      qps,\n      map\n    };\n    if (shouldCache) {\n      this._qpCache[leafRouteName] = finalQPMeta;\n    }\n    return finalQPMeta;\n  }\n\n  /**\n    Maps all query param keys to their fully scoped property name of the form\n    `controllerName:propName`.\n     @private\n    @method _fullyScopeQueryParams\n    @param {String} leafRouteName\n    @param {Array<Object>} contexts\n    @param {Object} queryParams\n    @return {Void}\n  */\n  _fullyScopeQueryParams(leafRouteName, contexts, queryParams) {\n    let state = calculatePostTransitionState(this, leafRouteName, contexts);\n    let routeInfos = state.routeInfos;\n    let qpMeta;\n    for (let routeInfo of routeInfos) {\n      qpMeta = this._getQPMeta(routeInfo);\n      if (!qpMeta) {\n        continue;\n      }\n      for (let qp of qpMeta.qps) {\n        let presentProp = qp.prop in queryParams && qp.prop || qp.scopedPropertyName in queryParams && qp.scopedPropertyName || qp.urlKey in queryParams && qp.urlKey;\n        if (presentProp) {\n          if (presentProp !== qp.scopedPropertyName) {\n            queryParams[qp.scopedPropertyName] = queryParams[presentProp];\n            delete queryParams[presentProp];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n    Hydrates (adds/restores) any query params that have pre-existing values into\n    the given queryParams hash. This is what allows query params to be \"sticky\"\n    and restore their last known values for their scope.\n     @private\n    @method _hydrateUnsuppliedQueryParams\n    @param {TransitionState} state\n    @param {Object} queryParams\n    @return {Void}\n  */\n  _hydrateUnsuppliedQueryParams(state, queryParams, _fromRouterService) {\n    let routeInfos = state.routeInfos;\n    let appCache = this._bucketCache;\n    let qpMeta;\n    let qp;\n    let presentProp;\n    for (let routeInfo of routeInfos) {\n      qpMeta = this._getQPMeta(routeInfo);\n      if (!qpMeta) {\n        continue;\n      }\n\n      // Needs to stay for index loop to avoid throwIfClosureRequired\n      for (let j = 0, qpLen = qpMeta.qps.length; j < qpLen; ++j) {\n        qp = qpMeta.qps[j];\n         true && !qp && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected qp', qp);\n        presentProp = qp.prop in queryParams && qp.prop || qp.scopedPropertyName in queryParams && qp.scopedPropertyName || qp.urlKey in queryParams && qp.urlKey;\n         true && !function () {\n          if (qp.urlKey === presentProp || qp.scopedPropertyName === presentProp) {\n            return true;\n          }\n          if (_fromRouterService && presentProp !== false && qp.urlKey !== qp.prop) {\n            // assumptions (mainly from current transitionTo_test):\n            // - this is only supposed to be run when there is an alias to a query param and the alias is used to set the param\n            // - when there is no alias: qp.urlKey == qp.prop\n            return false;\n          }\n          return true;\n        }() && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You passed the \\`${presentProp}\\` query parameter during a transition into ${qp.route.routeName}, please update to ${qp.urlKey}`, function () {\n          if (qp.urlKey === presentProp || qp.scopedPropertyName === presentProp) {\n            return true;\n          }\n          if (_fromRouterService && presentProp !== false && qp.urlKey !== qp.prop) {\n            return false;\n          }\n          return true;\n        }());\n        if (presentProp) {\n          if (presentProp !== qp.scopedPropertyName) {\n            queryParams[qp.scopedPropertyName] = queryParams[presentProp];\n            delete queryParams[presentProp];\n          }\n        } else {\n          let cacheKey = calculateCacheKey(qp.route.fullRouteName, qp.parts, state.params);\n           true && !appCache && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('ROUTER BUG: expected appCache to be defined. This is an internal bug, please open an issue on Github if you see this message!', appCache);\n          queryParams[qp.scopedPropertyName] = appCache.lookup(cacheKey, qp.prop, qp.defaultValue);\n        }\n      }\n    }\n  }\n  _scheduleLoadingEvent(transition, originRoute) {\n    this._cancelSlowTransitionTimer();\n    this._slowTransitionTimer = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.ag)('routerTransitions', this, this._handleSlowTransition, transition, originRoute);\n  }\n  _handleSlowTransition(transition, originRoute) {\n    if (!this._routerMicrolib.activeTransition) {\n      // Don't fire an event if we've since moved on from\n      // the transition that put us in a loading state.\n      return;\n    }\n    let targetState = new RouterState(this, this._routerMicrolib, this._routerMicrolib.activeTransition[_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.S]);\n    this.set('targetState', targetState);\n    transition.trigger(true, 'loading', transition, originRoute);\n  }\n  _cancelSlowTransitionTimer() {\n    if (this._slowTransitionTimer) {\n      (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.ah)(this._slowTransitionTimer);\n    }\n    this._slowTransitionTimer = null;\n  }\n\n  // These three helper functions are used to ensure errors aren't\n  // re-raised if they're handled in a route's error action.\n  _markErrorAsHandled(error) {\n    this._handledErrors.add(error);\n  }\n  _isErrorHandled(error) {\n    return this._handledErrors.has(error);\n  }\n  _clearHandledError(error) {\n    this._handledErrors.delete(error);\n  }\n  _getEngineInstance({\n    name,\n    instanceId,\n    mountPoint\n  }) {\n    let engineInstances = this._engineInstances;\n    let namedInstances = engineInstances[name];\n    if (!namedInstances) {\n      namedInstances = Object.create(null);\n      engineInstances[name] = namedInstances;\n    }\n\n    // We just set these!\n     true && !namedInstances && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has namedInstances', namedInstances);\n    let engineInstance = namedInstances[instanceId];\n    if (!engineInstance) {\n      let owner = (0,_ember_owner_index_js__WEBPACK_IMPORTED_MODULE_45__.getOwner)(this);\n       true && !(owner instanceof EmberEngineInstance) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Expected router to have EngineInstance as owner', owner instanceof EmberEngineInstance);\n       true && !owner.hasRegistration(`engine:${name}`) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You attempted to mount the engine '${name}' in your router map, but the engine can not be found.`, owner.hasRegistration(`engine:${name}`));\n      engineInstance = owner.buildChildEngineInstance(name, {\n        routable: true,\n        mountPoint\n      });\n      engineInstance.boot();\n      namedInstances[instanceId] = engineInstance;\n    }\n    return engineInstance;\n  }\n\n  /**\n    Handles updating the paths and notifying any listeners of the URL\n    change.\n     Triggers the router level `didTransition` hook.\n     For example, to notify google analytics when the route changes,\n    you could use this hook.  (Note: requires also including GA scripts, etc.)\n     ```javascript\n    import config from './config/environment';\n    import EmberRouter from '@ember/routing/router';\n    import { service } from '@ember/service';\n     let Router = EmberRouter.extend({\n      location: config.locationType,\n       router: service(),\n       didTransition: function() {\n        this._super(...arguments);\n         ga('send', 'pageview', {\n          page: this.router.currentURL,\n          title: this.router.currentRouteName,\n        });\n      }\n    });\n    ```\n     @method didTransition\n    @private\n    @since 1.2.0\n  */\n  // Set with reopen to allow overriding via extend\n\n  /**\n    Handles notifying any listeners of an impending URL\n    change.\n     Triggers the router level `willTransition` hook.\n     @method willTransition\n    @private\n    @since 1.11.0\n  */\n  // Set with reopen to allow overriding via extend\n\n  /**\n   Represents the current URL.\n     @property url\n    @type {String}\n    @private\n  */\n  // Set with reopen to allow overriding via extend\n}\n\n/*\n  Helper function for iterating over routes in a set of routeInfos that are\n  at or above the given origin route. Example: if `originRoute` === 'foo.bar'\n  and the routeInfos given were for 'foo.bar.baz', then the given callback\n  will be invoked with the routes for 'foo.bar', 'foo', and 'application'\n  individually.\n\n  If the callback returns anything other than `true`, then iteration will stop.\n\n  @private\n  @param {Route} originRoute\n  @param {Array<RouteInfo>} routeInfos\n  @param {Function} callback\n  @return {Void}\n */\n// Begin Evented\n// End Evented\n// Set with reopenClass\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(EmberRouter, \"dslCallbacks\", void 0);\nfunction forEachRouteAbove(routeInfos, callback) {\n  for (let i = routeInfos.length - 1; i >= 0; --i) {\n    let routeInfo = routeInfos[i];\n     true && !routeInfo && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has routeInfo', routeInfo);\n    let route = routeInfo.route;\n\n    // routeInfo.handler being `undefined` generally means either:\n    //\n    // 1. an error occurred during creation of the route in question\n    // 2. the route is across an async boundary (e.g. within an engine)\n    //\n    // In both of these cases, we cannot invoke the callback on that specific\n    // route, because it just doesn't exist...\n    if (route === undefined) {\n      continue;\n    }\n    if (callback(route, routeInfo) !== true) {\n      return;\n    }\n  }\n}\n\n// These get invoked when an action bubbles above ApplicationRoute\n// and are not meant to be overridable.\nlet defaultActionHandlers = {\n  willResolveModel(_routeInfos, transition, originRoute) {\n    this._scheduleLoadingEvent(transition, originRoute);\n  },\n  // Attempt to find an appropriate error route or substate to enter.\n  error(routeInfos, error, transition) {\n    let router = this;\n    let routeInfoWithError = routeInfos[routeInfos.length - 1];\n    forEachRouteAbove(routeInfos, (route, routeInfo) => {\n      // We don't check the leaf most routeInfo since that would\n      // technically be below where we're at in the route hierarchy.\n      if (routeInfo !== routeInfoWithError) {\n        // Check for the existence of an 'error' route.\n        let errorRouteName = findRouteStateName(route, 'error');\n        if (errorRouteName) {\n          router._markErrorAsHandled(error);\n          router.intermediateTransitionTo(errorRouteName, error);\n          return false;\n        }\n      }\n\n      // Check for an 'error' substate route\n      let errorSubstateName = findRouteSubstateName(route, 'error');\n      if (errorSubstateName) {\n        router._markErrorAsHandled(error);\n        router.intermediateTransitionTo(errorSubstateName, error);\n        return false;\n      }\n      return true;\n    });\n    logError(error, `Error while processing route: ${transition.targetName}`);\n  },\n  // Attempt to find an appropriate loading route or substate to enter.\n  loading(routeInfos, transition) {\n    let router = this;\n    let routeInfoWithSlowLoading = routeInfos[routeInfos.length - 1];\n    forEachRouteAbove(routeInfos, (route, routeInfo) => {\n      // We don't check the leaf most routeInfos since that would\n      // technically be below where we're at in the route hierarchy.\n      if (routeInfo !== routeInfoWithSlowLoading) {\n        // Check for the existence of a 'loading' route.\n        let loadingRouteName = findRouteStateName(route, 'loading');\n        if (loadingRouteName) {\n          router.intermediateTransitionTo(loadingRouteName);\n          return false;\n        }\n      }\n\n      // Check for loading substate\n      let loadingSubstateName = findRouteSubstateName(route, 'loading');\n      if (loadingSubstateName) {\n        router.intermediateTransitionTo(loadingSubstateName);\n        return false;\n      }\n\n      // Don't bubble above pivot route.\n      return transition.pivotHandler !== route;\n    });\n  }\n};\nfunction logError(_error, initialMessage) {\n  let errorArgs = [];\n  let error;\n  if (_error && typeof _error === 'object' && typeof _error.errorThrown === 'object') {\n    error = _error.errorThrown;\n  } else {\n    error = _error;\n  }\n  if (initialMessage) {\n    errorArgs.push(initialMessage);\n  }\n  if (error) {\n    if (error.message) {\n      errorArgs.push(error.message);\n    }\n    if (error.stack) {\n      errorArgs.push(error.stack);\n    }\n    if (typeof error === 'string') {\n      errorArgs.push(error);\n    }\n  }\n  console.error(...errorArgs); //eslint-disable-line no-console\n}\n\n/**\n  Finds the name of the substate route if it exists for the given route. A\n  substate route is of the form `route_state`, such as `foo_loading`.\n\n  @private\n  @param {Route} route\n  @param {String} state\n  @return {String}\n*/\nfunction findRouteSubstateName(route, state) {\n  let owner = (0,_ember_owner_index_js__WEBPACK_IMPORTED_MODULE_45__.getOwner)(route);\n   true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Route is unexpectedly missing an owner', owner);\n  let {\n    routeName,\n    fullRouteName,\n    _router: router\n  } = route;\n  let substateName = `${routeName}_${state}`;\n  let substateNameFull = `${fullRouteName}_${state}`;\n  return routeHasBeenDefined(owner, router, substateName, substateNameFull) ? substateNameFull : '';\n}\n\n/**\n  Finds the name of the state route if it exists for the given route. A state\n  route is of the form `route.state`, such as `foo.loading`. Properly Handles\n  `application` named routes.\n\n  @private\n  @param {Route} route\n  @param {String} state\n  @return {String}\n*/\nfunction findRouteStateName(route, state) {\n  let owner = (0,_ember_owner_index_js__WEBPACK_IMPORTED_MODULE_45__.getOwner)(route);\n   true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('Route is unexpectedly missing an owner', owner);\n  let {\n    routeName,\n    fullRouteName,\n    _router: router\n  } = route;\n  let stateName = routeName === 'application' ? state : `${routeName}.${state}`;\n  let stateNameFull = fullRouteName === 'application' ? state : `${fullRouteName}.${state}`;\n  return routeHasBeenDefined(owner, router, stateName, stateNameFull) ? stateNameFull : '';\n}\n\n/**\n  Determines whether or not a route has been defined by checking that the route\n  is in the Router's map and the owner has a registration for that route.\n\n  @private\n  @param {Owner} owner\n  @param {Router} router\n  @param {String} localName\n  @param {String} fullName\n  @return {Boolean}\n*/\nfunction routeHasBeenDefined(owner, router, localName, fullName) {\n  let routerHasRoute = router.hasRoute(fullName);\n  let ownerHasRoute = owner.factoryFor(`template:${localName}`) || owner.factoryFor(`route:${localName}`);\n  return routerHasRoute && ownerHasRoute;\n}\nfunction triggerEvent(routeInfos, ignoreFailure, name, args) {\n  if (!routeInfos) {\n    if (ignoreFailure) {\n      return;\n    }\n    // TODO: update?\n    throw new Error(`Can't trigger action '${name}' because your app hasn't finished transitioning into its first route. To trigger an action on destination routes during a transition, you can call \\`.send()\\` on the \\`Transition\\` object passed to the \\`model/beforeModel/afterModel\\` hooks.`);\n  }\n  let eventWasHandled = false;\n  let routeInfo, handler, actionHandler;\n  for (let i = routeInfos.length - 1; i >= 0; i--) {\n    routeInfo = routeInfos[i];\n     true && !routeInfo && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] Missing routeInfo', routeInfo);\n    handler = routeInfo.route;\n    actionHandler = handler && handler.actions && handler.actions[name];\n    if (actionHandler) {\n      if (actionHandler.apply(handler, args) === true) {\n        eventWasHandled = true;\n      } else {\n        // Should only hit here if a non-bubbling error action is triggered on a route.\n        if (name === 'error') {\n           true && !handler && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('[BUG] Missing handler', handler);\n          handler._router._markErrorAsHandled(args[0]);\n        }\n        return;\n      }\n    }\n  }\n  let defaultHandler = defaultActionHandlers[name];\n  if (defaultHandler) {\n    defaultHandler.call(this, routeInfos, ...args);\n    return;\n  }\n  if (!eventWasHandled && !ignoreFailure) {\n    throw new Error(`Nothing handled the action '${name}'. If you did handle the action, this error can be caused by returning true from an action handler in a controller, causing the action to bubble.`);\n  }\n}\nfunction calculatePostTransitionState(emberRouter, leafRouteName, contexts) {\n  let state = emberRouter._routerMicrolib.applyIntent(leafRouteName, contexts);\n  let {\n    routeInfos,\n    params\n  } = state;\n  for (let routeInfo of routeInfos) {\n    // If the routeInfo is not resolved, we serialize the context into params\n    if (!routeInfo.isResolved) {\n      params[routeInfo.name] = routeInfo.serialize(routeInfo.context);\n    } else {\n      params[routeInfo.name] = routeInfo.params;\n    }\n  }\n  return state;\n}\nfunction updatePaths(router) {\n  let infos = router._routerMicrolib.currentRouteInfos;\n  if (infos.length === 0) {\n    return;\n  }\n  let path = EmberRouter._routePath(infos);\n  let info = infos[infos.length - 1];\n   true && !info && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected info', info);\n  let currentRouteName = info.name;\n  let location = router.location;\n   true && !(typeof location !== 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('expected location to not be a string', typeof location !== 'string');\n  let currentURL = location.getURL();\n  (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s)(router, 'currentPath', path);\n  (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s)(router, 'currentRouteName', currentRouteName);\n  (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_40__.s)(router, 'currentURL', currentURL);\n}\nfunction didBeginTransition(transition, router) {\n  let routerState = new RouterState(router, router._routerMicrolib, transition[_router_B_Q1aYBn_js__WEBPACK_IMPORTED_MODULE_42__.S]);\n  if (!router.currentState) {\n    router.set('currentState', routerState);\n  }\n  router.set('targetState', routerState);\n  transition.promise = transition.catch(error => {\n    if (router._isErrorHandled(error)) {\n      router._clearHandledError(error);\n    } else {\n      throw error;\n    }\n  }, 'Transition Error');\n}\nfunction forEachQueryParam(router, routeInfos, queryParams, callback) {\n  let qpCache = router._queryParamsFor(routeInfos);\n  for (let key in queryParams) {\n    if (!Object.prototype.hasOwnProperty.call(queryParams, key)) {\n      continue;\n    }\n    let value = queryParams[key];\n    let qp = qpCache.map[key];\n    callback(key, value, qp);\n  }\n}\nEmberRouter.reopen({\n  didTransition: defaultDidTransition,\n  willTransition: defaultWillTransition,\n  rootURL: '/',\n  location: 'hash',\n  // FIXME: Does this need to be overrideable via extend?\n  url: (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.c)(function () {\n    let location = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_5__.g)(this, 'location');\n    if (typeof location === 'string') {\n      return undefined;\n    }\n    return location.getURL();\n  })\n});\nconst EmberRouter$1 = EmberRouter;\n\n/**\n * @module @ember/routing/router-service\n */\nconst ROUTER = Symbol('ROUTER');\nfunction cleanURL(url, rootURL) {\n  if (rootURL === '/') {\n    return url;\n  }\n  return url.substring(rootURL.length);\n}\n\n/**\n   The Router service is the public API that provides access to the router.\n\n   The immediate benefit of the Router service is that you can inject it into components,\n   giving them a friendly way to initiate transitions and ask questions about the current\n   global router state.\n\n   In this example, the Router service is injected into a component to initiate a transition\n   to a dedicated route:\n\n   ```app/components/example.js\n   import Component from '@glimmer/component';\n   import { action } from '@ember/object';\n   import { service } from '@ember/service';\n\n   export default class ExampleComponent extends Component {\n     @service router;\n\n     @action\n     next() {\n       this.router.transitionTo('other.route');\n     }\n   }\n   ```\n\n   Like any service, it can also be injected into helpers, routes, etc.\n\n   @public\n   @extends Service\n   @class RouterService\n */\nvar _currentRouteName = /*#__PURE__*/new WeakMap();\nvar _currentURL = /*#__PURE__*/new WeakMap();\nvar _location = /*#__PURE__*/new WeakMap();\nvar _rootURL = /*#__PURE__*/new WeakMap();\nvar _currentRoute = /*#__PURE__*/new WeakMap();\nclass RouterService extends _ember_service_index_js__WEBPACK_IMPORTED_MODULE_44__[\"default\"].extend(_ember_object_evented_js__WEBPACK_IMPORTED_MODULE_48__[\"default\"]) {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ROUTER, void 0);\n    _classPrivateFieldInitSpec(this, _currentRouteName, ((0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.i)(this, \"currentRouteName\"), void 0));\n    _classPrivateFieldInitSpec(this, _currentURL, ((0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.i)(this, \"currentURL\"), void 0));\n    _classPrivateFieldInitSpec(this, _location, ((0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.i)(this, \"location\"), void 0));\n    _classPrivateFieldInitSpec(this, _rootURL, ((0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.i)(this, \"rootURL\"), void 0));\n    _classPrivateFieldInitSpec(this, _currentRoute, ((0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.i)(this, \"currentRoute\"), void 0));\n  }\n  get _router() {\n    let router = this[ROUTER];\n    if (router !== undefined) {\n      return router;\n    }\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('RouterService is unexpectedly missing an owner', owner);\n    let _router = owner.lookup('router:main');\n     true && !(_router instanceof EmberRouter$1) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('ROUTER SERVICE BUG: Expected router to be an instance of EmberRouter', _router instanceof EmberRouter$1);\n    return this[ROUTER] = _router;\n  }\n  willDestroy() {\n    super.willDestroy();\n    this[ROUTER] = undefined;\n  }\n\n  /**\n     Transition the application into another route. The route may\n     be either a single route or route path:\n      Calling `transitionTo` from the Router service will cause default query parameter values to be included in the URL.\n     This behavior is different from calling `transitionTo` on a route or `transitionToRoute` on a controller.\n     See the [Router Service RFC](https://github.com/emberjs/rfcs/blob/master/text/0095-router-service.md#query-parameter-semantics) for more info.\n      In the following example we use the Router service to navigate to a route with a\n     specific model from a Component in the first action, and in the second we trigger\n     a query-params only transition.\n      ```app/components/example.js\n     import Component from '@glimmer/component';\n     import { action } from '@ember/object';\n     import { service } from '@ember/service';\n      export default class extends Component {\n       @service router;\n        @action\n       goToComments(post) {\n         this.router.transitionTo('comments', post);\n       }\n        @action\n       fetchMoreComments(latestComment) {\n         this.router.transitionTo({\n           queryParams: { commentsAfter: latestComment }\n         });\n       }\n     }\n     ```\n      @method transitionTo\n     @param {String} [routeNameOrUrl] the name of the route or a URL\n     @param {...Object} [models] the model(s) or identifier(s) to be used while\n       transitioning to the route.\n     @param {Object} [options] optional hash with a queryParams property\n       containing a mapping of query parameters. May be supplied as the only\n      parameter to trigger a query-parameter-only transition.\n     @return {Transition} the transition object associated with this\n       attempted transition\n     @public\n   */\n  transitionTo(...args) {\n    if (resemblesURL(args[0])) {\n      // NOTE: this `args[0] as string` cast is safe and TS correctly infers it\n      // in 3.6+, so it can be removed when TS is upgraded.\n      return this._router._doURLTransition('transitionTo', args[0]);\n    }\n    let {\n      routeName,\n      models,\n      queryParams\n    } = extractRouteArgs(args);\n    let transition = this._router._doTransition(routeName, models, queryParams, true);\n    return transition;\n  }\n\n  /**\n     Similar to `transitionTo`, but instead of adding the destination to the browser's URL history,\n     it replaces the entry for the current route.\n     When the user clicks the \"back\" button in the browser, there will be fewer steps.\n     This is most commonly used to manage redirects in a way that does not cause confusing additions\n     to the user's browsing history.\n      Calling `replaceWith` from the Router service will cause default query parameter values to be included in the URL.\n     This behavior is different from calling `replaceWith` on a route.\n     See the [Router Service RFC](https://github.com/emberjs/rfcs/blob/master/text/0095-router-service.md#query-parameter-semantics) for more info.\n      Usage example:\n      ```app/routes/application.js\n     import Route from '@ember/routing/route';\n     import { service } from '@ember/service';\n      export default class extends Route {\n       @service router;\n       beforeModel() {\n         if (!authorized()){\n           this.router.replaceWith('unauthorized');\n         }\n       }\n     });\n     ```\n      @method replaceWith\n     @param {String} routeNameOrUrl the name of the route or a URL of the desired destination\n     @param {...Object} models the model(s) or identifier(s) to be used while\n       transitioning to the route i.e. an object of params to pass to the destination route\n     @param {Object} [options] optional hash with a queryParams property\n       containing a mapping of query parameters\n     @return {Transition} the transition object associated with this\n       attempted transition\n     @public\n   */\n  replaceWith(...args) {\n    return this.transitionTo(...args).method('replace');\n  }\n\n  /**\n    Generate a URL based on the supplied route name and optionally a model. The\n    URL is returned as a string that can be used for any purpose.\n     In this example, the URL for the `author.books` route for a given author\n    is copied to the clipboard.\n     ```app/templates/application.hbs\n    <CopyLink @author={{hash id=\"tomster\" name=\"Tomster\"}} />\n    ```\n     ```app/components/copy-link.js\n    import Component from '@glimmer/component';\n    import { service } from '@ember/service';\n    import { action } from '@ember/object';\n     export default class CopyLinkComponent extends Component {\n      @service router;\n      @service clipboard;\n       @action\n      copyBooksURL() {\n        if (this.author) {\n          const url = this.router.urlFor('author.books', this.args.author);\n          this.clipboard.set(url);\n          // Clipboard now has /author/tomster/books\n        }\n      }\n    }\n    ```\n     Just like with `transitionTo` and `replaceWith`, `urlFor` can also handle\n    query parameters.\n     ```app/templates/application.hbs\n    <CopyLink @author={{hash id=\"tomster\" name=\"Tomster\"}} />\n    ```\n     ```app/components/copy-link.js\n    import Component from '@glimmer/component';\n    import { service } from '@ember/service';\n    import { action } from '@ember/object';\n     export default class CopyLinkComponent extends Component {\n      @service router;\n      @service clipboard;\n       @action\n      copyOnlyEmberBooksURL() {\n        if (this.author) {\n          const url = this.router.urlFor('author.books', this.author, {\n            queryParams: { filter: 'emberjs' }\n          });\n          this.clipboard.set(url);\n          // Clipboard now has /author/tomster/books?filter=emberjs\n        }\n      }\n    }\n    ```\n      @method urlFor\n     @param {String} routeName the name of the route\n     @param {...Object} models the model(s) for the route.\n     @param {Object} [options] optional hash with a queryParams property\n       containing a mapping of query parameters\n     @return {String} the string representing the generated URL\n     @public\n   */\n  urlFor(routeName, ...args) {\n    this._router.setupRouter();\n    return this._router.generate(routeName, ...args);\n  }\n\n  /**\n     Returns `true` if `routeName/models/queryParams` is the active route, where `models` and `queryParams` are optional.\n     See [model](api/ember/release/classes/Route/methods/model?anchor=model) and\n     [queryParams](/api/ember/3.7/classes/Route/properties/queryParams?anchor=queryParams) for more information about these arguments.\n      In the following example, `isActive` will return `true` if the current route is `/posts`.\n      ```app/components/posts.js\n     import Component from '@glimmer/component';\n     import { service } from '@ember/service';\n      export default class extends Component {\n       @service router;\n        displayComments() {\n         return this.router.isActive('posts');\n       }\n     });\n     ```\n      The next example includes a dynamic segment, and will return `true` if the current route is `/posts/1`,\n     assuming the post has an id of 1:\n      ```app/components/posts.js\n     import Component from '@glimmer/component';\n     import { service } from '@ember/service';\n      export default class extends Component {\n       @service router;\n        displayComments(post) {\n         return this.router.isActive('posts', post.id);\n       }\n     });\n     ```\n      Where `post.id` is the id of a specific post, which is represented in the route as /posts/[post.id].\n     If `post.id` is equal to 1, then isActive will return true if the current route is /posts/1, and false if the route is anything else.\n      @method isActive\n     @param {String} routeName the name of the route\n     @param {...Object} models the model(s) or identifier(s) to be used when determining the active route.\n     @param {Object} [options] optional hash with a queryParams property\n       containing a mapping of query parameters\n     @return {boolean} true if the provided routeName/models/queryParams are active\n     @public\n   */\n  isActive(...args) {\n    let {\n      routeName,\n      models,\n      queryParams\n    } = extractRouteArgs(args);\n    let routerMicrolib = this._router._routerMicrolib;\n\n    // When using isActive() in a getter, we want to entagle with the auto-tracking system\n    // for example,\n    // in\n    // get isBarActive() {\n    //   return isActive('foo.bar');\n    // }\n    //\n    // you'd expect isBarActive to be dirtied when the route changes.\n    //\n    // https://github.com/emberjs/ember.js/issues/19004\n    (0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.consumeTag)((0,_glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_7__.tagFor)(this._router, 'currentURL'));\n\n    // UNSAFE: casting `routeName as string` here encodes the existing\n    // assumption but may be wrong: `extractRouteArgs` correctly returns it as\n    // `string | undefined`. There may be bugs if `isActiveIntent` does\n    // not correctly account for `undefined` values for `routeName`. Spoilers:\n    // it *does not* account for this being `undefined`.\n    if (!routerMicrolib.isActiveIntent(routeName, models)) {\n      return false;\n    }\n    let hasQueryParams = Object.keys(queryParams).length > 0;\n    if (hasQueryParams) {\n      // UNSAFE: casting `routeName as string` here encodes the existing\n      // assumption but may be wrong: `extractRouteArgs` correctly returns it\n      // as `string | undefined`. There may be bugs if `_prepareQueryParams`\n      // does not correctly account for `undefined` values for `routeName`.\n      //  Spoilers: under the hood this currently uses router.js APIs which\n      // *do not* account for this being `undefined`.\n      let targetRouteName = routeName;\n      queryParams = Object.assign({}, queryParams);\n      this._router._prepareQueryParams(targetRouteName, models, queryParams, true /* fromRouterService */);\n      let currentQueryParams = Object.assign({}, routerMicrolib.state.queryParams);\n      this._router._prepareQueryParams(targetRouteName, models, currentQueryParams, true /* fromRouterService */);\n      return shallowEqual(queryParams, currentQueryParams);\n    }\n    return true;\n  }\n\n  /**\n     Takes a string URL and returns a `RouteInfo` for the leafmost route represented\n     by the URL. Returns `null` if the URL is not recognized. This method expects to\n     receive the actual URL as seen by the browser including the app's `rootURL`.\n      See [RouteInfo](/ember/release/classes/RouteInfo) for more info.\n      In the following example `recognize` is used to verify if a path belongs to our\n     application before transitioning to it.\n      ```\n     import Component from '@ember/component';\n     import { service } from '@ember/service';\n      export default class extends Component {\n       @service router;\n       path = '/';\n        click() {\n         if (this.router.recognize(this.path)) {\n           this.router.transitionTo(this.path);\n         }\n       }\n     }\n     ```\n       @method recognize\n      @param {String} url\n      @return {RouteInfo | null}\n      @public\n    */\n  recognize(url) {\n     true && !(url.indexOf(this.rootURL) === 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You must pass a url that begins with the application's rootURL \"${this.rootURL}\"`, url.indexOf(this.rootURL) === 0);\n    this._router.setupRouter();\n    let internalURL = cleanURL(url, this.rootURL);\n    return this._router._routerMicrolib.recognize(internalURL);\n  }\n\n  /**\n    Takes a string URL and returns a promise that resolves to a\n    `RouteInfoWithAttributes` for the leafmost route represented by the URL.\n    The promise rejects if the URL is not recognized or an unhandled exception\n    is encountered. This method expects to receive the actual URL as seen by\n    the browser including the app's `rootURL`.\n       @method recognizeAndLoad\n      @param {String} url\n      @return {RouteInfo}\n      @public\n   */\n  recognizeAndLoad(url) {\n     true && !(url.indexOf(this.rootURL) === 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`You must pass a url that begins with the application's rootURL \"${this.rootURL}\"`, url.indexOf(this.rootURL) === 0);\n    this._router.setupRouter();\n    let internalURL = cleanURL(url, this.rootURL);\n    return this._router._routerMicrolib.recognizeAndLoad(internalURL);\n  }\n\n  /**\n    You can register a listener for events emitted by this service with `.on()`:\n     ```app/routes/contact-form.js\n    import Route from '@ember/routing';\n    import { service } from '@ember/service';\n     export default class extends Route {\n      @service router;\n       activate() {\n        this.router.on('routeWillChange', (transition) => {\n          if (!transition.to.find(route => route.name === this.routeName)) {\n            alert(\"Please save or cancel your changes.\");\n            transition.abort();\n          }\n        })\n      }\n    }\n    ```\n     @method on\n    @param {String} eventName\n    @param {Function} callback\n    @public\n  */\n\n  /**\n    You can unregister a listener for events emitted by this service with `.off()`:\n     ```app/routes/contact-form.js\n    import Route from '@ember/routing';\n    import { service } from '@ember/service';\n     export default class ContactFormRoute extends Route {\n      @service router;\n       callback = (transition) => {\n        if (!transition.to.find(route => route.name === this.routeName)) {\n          alert('Please save or cancel your changes.');\n          transition.abort();\n        }\n      };\n       activate() {\n        this.router.on('routeWillChange', this.callback);\n      }\n       deactivate() {\n        this.router.off('routeWillChange', this.callback);\n      }\n    }\n    ```\n     @method off\n    @param {String} eventName\n    @param {Function} callback\n    @public\n  */\n\n  /**\n    The `routeWillChange` event is fired at the beginning of any\n    attempted transition with a `Transition` object as the sole\n    argument. This action can be used for aborting, redirecting,\n    or decorating the transition from the currently active routes.\n     A good example is preventing navigation when a form is\n    half-filled out:\n     ```app/routes/contact-form.js\n    import Route from '@ember/routing';\n    import { service } from '@ember/service';\n     export default class extends Route {\n      @service router;\n       activate() {\n        this.router.on('routeWillChange', (transition) => {\n          if (!transition.to.find(route => route.name === this.routeName)) {\n            alert(\"Please save or cancel your changes.\");\n            transition.abort();\n          }\n        })\n      }\n    }\n    ```\n     The `routeWillChange` event fires whenever a new route is chosen as the desired target of a transition. This includes `transitionTo`, `replaceWith`, all redirection for any reason including error handling, and abort. Aborting implies changing the desired target back to where you already were. Once a transition has completed, `routeDidChange` fires.\n     @event routeWillChange\n    @param {Transition} transition\n    @public\n  */\n\n  /**\n    The `routeDidChange` event only fires once a transition has settled.\n    This includes aborts and error substates. Like the `routeWillChange` event\n    it receives a Transition as the sole argument.\n     A good example is sending some analytics when the route has transitioned:\n     ```app/routes/contact-form.js\n    import Route from '@ember/routing';\n    import { service } from '@ember/service';\n     export default class extends Route {\n      @service router;\n       activate() {\n        this.router.on('routeDidChange', (transition) => {\n          ga.send('pageView', {\n            current: transition.to.name,\n            from: transition.from.name\n          });\n        })\n      }\n    }\n    ```\n     `routeDidChange` will be called after any `Route`'s\n    [didTransition](/ember/release/classes/Route/events/didTransition?anchor=didTransition)\n    action has been fired.\n    The updates of properties\n    [currentURL](/ember/release/classes/RouterService/properties/currentURL?anchor=currentURL),\n    [currentRouteName](/ember/release/classes/RouterService/properties/currentURL?anchor=currentRouteName)\n    and\n    [currentRoute](/ember/release/classes/RouterService/properties/currentURL?anchor=currentRoute)\n    are completed at the time `routeDidChange` is called.\n     @event routeDidChange\n    @param {Transition} transition\n    @public\n  */\n\n  /**\n   * Refreshes all currently active routes, doing a full transition.\n   * If a route name is provided and refers to a currently active route,\n   * it will refresh only that route and its descendents.\n   * Returns a promise that will be resolved once the refresh is complete.\n   * All resetController, beforeModel, model, afterModel, redirect, and setupController\n   * hooks will be called again. You will get new data from the model hook.\n   *\n   * @method refresh\n   * @param {String} [routeName] the route to refresh (along with all child routes)\n   * @return Transition\n   * @public\n   */\n  refresh(pivotRouteName) {\n    if (!pivotRouteName) {\n      return this._router._routerMicrolib.refresh();\n    }\n     true && !this._router.hasRoute(pivotRouteName) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The route \"${pivotRouteName}\" was not found`, this._router.hasRoute(pivotRouteName));\n     true && !this.isActive(pivotRouteName) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`The route \"${pivotRouteName}\" is currently not active`, this.isActive(pivotRouteName));\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('RouterService is unexpectedly missing an owner', owner);\n    let pivotRoute = owner.lookup(`route:${pivotRouteName}`);\n    return this._router._routerMicrolib.refresh(pivotRoute);\n  }\n\n  /**\n   Name of the current route.\n     This property represents the logical name of the route,\n    which is dot separated.\n    For the following router:\n     ```app/router.js\n    Router.map(function() {\n      this.route('about');\n      this.route('blog', function () {\n        this.route('post', { path: ':post_id' });\n      });\n    });\n    ```\n     It will return:\n     * `index` when you visit `/`\n    * `about` when you visit `/about`\n    * `blog.index` when you visit `/blog`\n    * `blog.post` when you visit `/blog/some-post-id`\n     @property currentRouteName\n    @type {String | null}\n    @public\n  */\n\n  /**\n    The `currentRoute` property contains metadata about the current leaf route.\n    It returns a `RouteInfo` object that has information like the route name,\n    params, query params and more.\n     See [RouteInfo](/ember/release/classes/RouteInfo) for more info.\n     This property is guaranteed to change whenever a route transition\n    happens (even when that transition only changes parameters\n    and doesn't change the active route).\n     Usage example:\n    ```app/components/header.js\n      import Component from '@glimmer/component';\n      import { service } from '@ember/service';\n      import { notEmpty } from '@ember/object/computed';\n       export default class extends Component {\n        @service router;\n         @notEmpty('router.currentRoute.child') isChildRoute;\n      });\n    ```\n     @property currentRoute\n    @type RouteInfo\n    @public\n  */\n}\n\n/**\n@module ember\n*/\n_RouterService = RouterService;\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.d)(_RouterService.prototype, \"currentRouteName\", [(0,_ember_object_lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_43__.readOnly)('_router.currentRouteName')]);\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.d)(_RouterService.prototype, \"currentURL\", [(0,_ember_object_lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_43__.readOnly)('_router.currentURL')]);\n/**\n Current URL for the application.\n This property represents the URL path for this route.\nFor the following router:\n   ```app/router.js\n  Router.map(function() {\n    this.route('about');\n    this.route('blog', function () {\n      this.route('post', { path: ':post_id' });\n    });\n  });\n  ```\n   It will return:\n   * `/` when you visit `/`\n  * `/about` when you visit `/about`\n  * `/blog` when you visit `/blog`\n  * `/blog/some-post-id` when you visit `/blog/some-post-id`\n   @property currentURL\n  @type String\n  @public\n*/\n\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.d)(_RouterService.prototype, \"location\", [(0,_ember_object_lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_43__.readOnly)('_router.location')]);\n/**\n  The `location` property returns what implementation of the `location` API\n  your application is using, which determines what type of URL is being used.\n   See [Location](/ember/release/classes/Location) for more information.\n   To force a particular `location` API implementation to be used in your\n  application you can set a location type on your `config/environment`.\n  For example, to set the `history` type:\n   ```config/environment.js\n  'use strict';\n   module.exports = function(environment) {\n    let ENV = {\n      modulePrefix: 'router-service',\n      environment,\n      rootURL: '/',\n      locationType: 'history',\n      ...\n    }\n  }\n  ```\n   The following location types are available by default:\n  `hash`, `history`, `none`.\n   See [HashLocation](/ember/release/classes/HashLocation).\n  See [HistoryLocation](/ember/release/classes/HistoryLocation).\n  See [NoneLocation](/ember/release/classes/NoneLocation).\n   @property location\n  @default 'hash'\n  @see {Location}\n  @public\n*/\n\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.d)(_RouterService.prototype, \"rootURL\", [(0,_ember_object_lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_43__.readOnly)('_router.rootURL')]);\n/**\n  The `rootURL` property represents the URL of the root of\n  the application, '/' by default.\n  This prefix is assumed on all routes defined on this app.\n   If you change the `rootURL` in your environment configuration\n  like so:\n   ```config/environment.js\n  'use strict';\n   module.exports = function(environment) {\n    let ENV = {\n      modulePrefix: 'router-service',\n      environment,\n      rootURL: '/my-root',\n    …\n    }\n  ]\n  ```\n   This property will return `/my-root`.\n   @property rootURL\n  @default '/'\n  @public\n*/\n\n(0,_core_view_Cxne2_wu_js__WEBPACK_IMPORTED_MODULE_18__.d)(_RouterService.prototype, \"currentRoute\", [(0,_ember_object_lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_43__.readOnly)('_router.currentRoute')]);\nclass RoutingService extends _ember_service_index_js__WEBPACK_IMPORTED_MODULE_44__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ROUTER, void 0);\n  }\n  get router() {\n    let router = this[ROUTER];\n    if (router !== undefined) {\n      return router;\n    }\n    let owner = (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_38__.getOwner)(this);\n     true && !owner && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('RoutingService is unexpectedly missing an owner', owner);\n    let _router = owner.lookup('router:main');\n     true && !(_router instanceof EmberRouter$1) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('ROUTING SERVICE BUG: Expected router to be an instance of EmberRouter', _router instanceof EmberRouter$1);\n    _router.setupRouter();\n    return this[ROUTER] = _router;\n  }\n  hasRoute(routeName) {\n    return this.router.hasRoute(routeName);\n  }\n  transitionTo(routeName, models, queryParams, shouldReplace) {\n    let transition = this.router._doTransition(routeName, models, queryParams);\n    if (shouldReplace) {\n      transition.method('replace');\n    }\n    return transition;\n  }\n  normalizeQueryParams(routeName, models, queryParams) {\n    this.router._prepareQueryParams(routeName, models, queryParams);\n  }\n  _generateURL(routeName, models, queryParams) {\n    let visibleQueryParams = {};\n    if (queryParams) {\n      Object.assign(visibleQueryParams, queryParams);\n      this.normalizeQueryParams(routeName, models, visibleQueryParams);\n    }\n    return this.router.generate(routeName, ...models, {\n      queryParams: visibleQueryParams\n    });\n  }\n  generateURL(routeName, models, queryParams) {\n    if (this.router._initialTransitionStarted) {\n      return this._generateURL(routeName, models, queryParams);\n    } else {\n      // Swallow error when transition has not started.\n      // When rendering in tests without visit(), we cannot infer the route context which <LinkTo/> needs be aware of\n      try {\n        return this._generateURL(routeName, models, queryParams);\n      } catch (_e) {\n        return;\n      }\n    }\n  }\n  isActiveForRoute(contexts, queryParams, routeName, routerState) {\n    let handlers = this.router._routerMicrolib.recognizer.handlersFor(routeName);\n    let leafName = handlers[handlers.length - 1].handler;\n    let maximumContexts = numberOfContextsAcceptedByHandler(routeName, handlers);\n\n    // NOTE: any ugliness in the calculation of activeness is largely\n    // due to the fact that we support automatic normalizing of\n    // `resource` -> `resource.index`, even though there might be\n    // dynamic segments / query params defined on `resource.index`\n    // which complicates (and makes somewhat ambiguous) the calculation\n    // of activeness for links that link to `resource` instead of\n    // directly to `resource.index`.\n\n    // if we don't have enough contexts revert back to full route name\n    // this is because the leaf route will use one of the contexts\n    if (contexts.length > maximumContexts) {\n      routeName = leafName;\n    }\n    return routerState.isActiveIntent(routeName, contexts, queryParams);\n  }\n}\nRoutingService.reopen({\n  targetState: (0,_ember_object_lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_43__.readOnly)('router.targetState'),\n  currentState: (0,_ember_object_lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_43__.readOnly)('router.currentState'),\n  currentRouteName: (0,_ember_object_lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_43__.readOnly)('router.currentRouteName'),\n  currentPath: (0,_ember_object_lib_computed_computed_macros_js__WEBPACK_IMPORTED_MODULE_43__.readOnly)('router.currentPath')\n});\nfunction numberOfContextsAcceptedByHandler(handlerName, handlerInfos) {\n  let req = 0;\n  for (let i = 0; i < handlerInfos.length; i++) {\n    req += handlerInfos[i].names.length;\n    if (handlerInfos[i].handler === handlerName) {\n      break;\n    }\n  }\n  return req;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BXPoca1S.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ _deprecate),\n/* harmony export */   a: () => (/* binding */ assert),\n/* harmony export */   b: () => (/* binding */ inspect),\n/* harmony export */   c: () => (/* binding */ debug),\n/* harmony export */   d: () => (/* binding */ deprecate),\n/* harmony export */   e: () => (/* binding */ deprecateFunc),\n/* harmony export */   f: () => (/* binding */ registerHandler$1),\n/* harmony export */   g: () => (/* binding */ registerHandler),\n/* harmony export */   h: () => (/* binding */ debugFreeze),\n/* harmony export */   i: () => (/* binding */ info),\n/* harmony export */   j: () => (/* binding */ missingOptionsIdDeprecation$1),\n/* harmony export */   k: () => (/* binding */ missingOptionDeprecation),\n/* harmony export */   l: () => (/* binding */ _warn),\n/* harmony export */   m: () => (/* binding */ missingOptionsDeprecation$1),\n/* harmony export */   n: () => (/* binding */ missingOptionsIdDeprecation),\n/* harmony export */   o: () => (/* binding */ missingOptionsDeprecation),\n/* harmony export */   p: () => (/* binding */ debugSeal),\n/* harmony export */   q: () => (/* binding */ getDebugFunction),\n/* harmony export */   r: () => (/* binding */ runInDebug),\n/* harmony export */   s: () => (/* binding */ setDebugFunction),\n/* harmony export */   t: () => (/* binding */ _warnIfUsingStrippedFeatureFlags),\n/* harmony export */   w: () => (/* binding */ warn)\n/* harmony export */ });\n/* harmony import */ var _index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-BGP1rw3B.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-BGP1rw3B.js\");\n/* harmony import */ var _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _ember_debug_lib_testing_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../@ember/debug/lib/testing.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/testing.js\");\n/* harmony import */ var _ember_debug_lib_handlers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../@ember/debug/lib/handlers.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/handlers.js\");\n/* harmony import */ var _ember_debug_lib_capture_render_tree_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../@ember/debug/lib/capture-render-tree.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/lib/capture-render-tree.js\");\n\n\n\n\n\n\n/**\n @module @ember/debug\n @public\n*/\n/**\n  Allows for runtime registration of handler functions that override the default deprecation behavior.\n  Deprecations are invoked by calls to [@ember/debug/deprecate](/ember/release/classes/@ember%2Fdebug/methods/deprecate?anchor=deprecate).\n  The following example demonstrates its usage by registering a handler that throws an error if the\n  message contains the word \"should\", otherwise defers to the default handler.\n\n  ```javascript\n  import { registerDeprecationHandler } from '@ember/debug';\n\n  registerDeprecationHandler((message, options, next) => {\n    if (message.indexOf('should') !== -1) {\n      throw new Error(`Deprecation message with should: ${message}`);\n    } else {\n      // defer to whatever handler was registered before this one\n      next(message, options);\n    }\n  });\n  ```\n\n  The handler function takes the following arguments:\n\n  <ul>\n    <li> <code>message</code> - The message received from the deprecation call.</li>\n    <li> <code>options</code> - An object passed in with the deprecation call containing additional information including:</li>\n      <ul>\n        <li> <code>id</code> - An id of the deprecation in the form of <code>package-name.specific-deprecation</code>.</li>\n        <li> <code>until</code> - The Ember version number the feature and deprecation will be removed in.</li>\n      </ul>\n    <li> <code>next</code> - A function that calls into the previously registered handler.</li>\n  </ul>\n\n  @public\n  @static\n  @method registerDeprecationHandler\n  @for @ember/debug\n  @param handler {Function} A function to handle deprecation calls.\n  @since 2.1.0\n*/\nlet registerHandler$1 = () => {};\nlet missingOptionsDeprecation$1;\nlet missingOptionsIdDeprecation$1;\nlet missingOptionDeprecation = () => '';\nlet deprecate$1 = () => {};\nif (true) {\n  registerHandler$1 = function registerHandler(handler) {\n    (0,_ember_debug_lib_handlers_js__WEBPACK_IMPORTED_MODULE_3__.registerHandler)('deprecate', handler);\n  };\n  let formatMessage = function formatMessage(_message, options) {\n    let message = _message;\n    if (options?.id) {\n      message = message + ` [deprecation id: ${options.id}]`;\n    }\n    if (options?.until) {\n      message = message + ` This will be removed in ${options.for} ${options.until}.`;\n    }\n    if (options?.url) {\n      message += ` See ${options.url} for more details.`;\n    }\n    return message;\n  };\n  registerHandler$1(function logDeprecationToConsole(message, options) {\n    let updatedMessage = formatMessage(message, options);\n    console.warn(`DEPRECATION: ${updatedMessage}`); // eslint-disable-line no-console\n  });\n  let captureErrorForStack;\n  if (new Error().stack) {\n    captureErrorForStack = () => new Error();\n  } else {\n    captureErrorForStack = () => {\n      try {\n        __fail__.fail();\n        return;\n      } catch (e) {\n        return e;\n      }\n    };\n  }\n  registerHandler$1(function logDeprecationStackTrace(message, options, next) {\n    if (_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_1__.E.LOG_STACKTRACE_ON_DEPRECATION) {\n      let stackStr = '';\n      let error = captureErrorForStack();\n      let stack;\n      if (error instanceof Error) {\n        if (error.stack) {\n          if (error['arguments']) {\n            // Chrome\n            stack = error.stack.replace(/^\\s+at\\s+/gm, '').replace(/^([^(]+?)([\\n$])/gm, '{anonymous}($1)$2').replace(/^Object.<anonymous>\\s*\\(([^)]+)\\)/gm, '{anonymous}($1)').split('\\n');\n            stack.shift();\n          } else {\n            // Firefox\n            stack = error.stack.replace(/(?:\\n@:0)?\\s+$/m, '').replace(/^\\(/gm, '{anonymous}(').split('\\n');\n          }\n          stackStr = `\\n    ${stack.slice(2).join('\\n    ')}`;\n        }\n      }\n      let updatedMessage = formatMessage(message, options);\n      console.warn(`DEPRECATION: ${updatedMessage}${stackStr}`); // eslint-disable-line no-console\n    } else {\n      next(message, options);\n    }\n  });\n  registerHandler$1(function raiseOnDeprecation(message, options, next) {\n    if (_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_1__.E.RAISE_ON_DEPRECATION) {\n      let updatedMessage = formatMessage(message);\n      throw new Error(updatedMessage);\n    } else {\n      next(message, options);\n    }\n  });\n  missingOptionsDeprecation$1 = 'When calling `deprecate` you ' + 'must provide an `options` hash as the third parameter.  ' + '`options` should include `id` and `until` properties.';\n  missingOptionsIdDeprecation$1 = 'When calling `deprecate` you must provide `id` in options.';\n  missingOptionDeprecation = (id, missingOption) => {\n    return `When calling \\`deprecate\\` you must provide \\`${missingOption}\\` in options. Missing options.${missingOption} in \"${id}\" deprecation`;\n  };\n  /**\n   @module @ember/debug\n   @public\n   */\n  /**\n    Display a deprecation warning with the provided message and a stack trace\n    (Chrome and Firefox only).\n     Ember itself leverages [Semantic Versioning](https://semver.org) to aid\n    projects in keeping up with changes to the framework. Before any\n    functionality or API is removed, it first flows linearly through a\n    deprecation staging process. The staging process currently contains two\n    stages: available and enabled.\n     Deprecations are initially released into the 'available' stage.\n    Deprecations will stay in this stage until the replacement API has been\n    marked as a recommended practice via the RFC process and the addon\n    ecosystem has generally adopted the change.\n     Once a deprecation meets the above criteria, it will move into the\n    'enabled' stage where it will remain until the functionality or API is\n    eventually removed.\n     For application and addon developers, \"available\" deprecations are not\n    urgent and \"enabled\" deprecations require action.\n     * In a production build, this method is defined as an empty function (NOP).\n    Uses of this method in Ember itself are stripped from the ember.prod.js build.\n     ```javascript\n    import { deprecate } from '@ember/debug';\n     deprecate(\n      'Use of `assign` has been deprecated. Please use `Object.assign` or the spread operator instead.',\n      false,\n      {\n        id: 'ember-polyfills.deprecate-assign',\n        until: '5.0.0',\n        url: 'https://deprecations.emberjs.com/v4.x/#toc_ember-polyfills-deprecate-assign',\n        for: 'ember-source',\n        since: {\n          available: '4.0.0',\n          enabled: '4.0.0',\n        },\n      }\n    );\n    ```\n     @method deprecate\n    @for @ember/debug\n    @param {String} message A description of the deprecation.\n    @param {Boolean} test A boolean. If falsy, the deprecation will be displayed.\n    @param {Object} options\n    @param {String} options.id A unique id for this deprecation. The id can be\n      used by Ember debugging tools to change the behavior (raise, log or silence)\n      for that specific deprecation. The id should be namespaced by dots, e.g.\n      \"view.helper.select\".\n    @param {string} options.until The version of Ember when this deprecation\n      warning will be removed.\n    @param {String} options.for A namespace for the deprecation, usually the package name\n    @param {Object} options.since Describes when the deprecation became available and enabled.\n    @param {String} [options.url] An optional url to the transition guide on the\n          emberjs.com website.\n    @static\n    @public\n    @since 1.0.0\n  */\n  deprecate$1 = function deprecate(message, test, options) {\n    assert(missingOptionsDeprecation$1, Boolean(options && (options.id || options.until)));\n    assert(missingOptionsIdDeprecation$1, Boolean(options.id));\n    assert(missingOptionDeprecation(options.id, 'until'), Boolean(options.until));\n    assert(missingOptionDeprecation(options.id, 'for'), Boolean(options.for));\n    assert(missingOptionDeprecation(options.id, 'since'), Boolean(options.since));\n    (0,_ember_debug_lib_handlers_js__WEBPACK_IMPORTED_MODULE_3__.invoke)('deprecate', message, test, options);\n  };\n}\nconst _deprecate = deprecate$1;\nlet registerHandler = () => {};\nlet warn$1 = () => {};\nlet missingOptionsDeprecation;\nlet missingOptionsIdDeprecation;\n\n/**\n@module @ember/debug\n*/\n\nif (true) {\n  /**\n    Allows for runtime registration of handler functions that override the default warning behavior.\n    Warnings are invoked by calls made to [@ember/debug/warn](/ember/release/classes/@ember%2Fdebug/methods/warn?anchor=warn).\n    The following example demonstrates its usage by registering a handler that does nothing overriding Ember's\n    default warning behavior.\n     ```javascript\n    import { registerWarnHandler } from '@ember/debug';\n     // next is not called, so no warnings get the default behavior\n    registerWarnHandler(() => {});\n    ```\n     The handler function takes the following arguments:\n     <ul>\n      <li> <code>message</code> - The message received from the warn call. </li>\n      <li> <code>options</code> - An object passed in with the warn call containing additional information including:</li>\n        <ul>\n          <li> <code>id</code> - An id of the warning in the form of <code>package-name.specific-warning</code>.</li>\n        </ul>\n      <li> <code>next</code> - A function that calls into the previously registered handler.</li>\n    </ul>\n     @public\n    @static\n    @method registerWarnHandler\n    @for @ember/debug\n    @param handler {Function} A function to handle warnings.\n    @since 2.1.0\n  */\n  registerHandler = function registerHandler(handler) {\n    (0,_ember_debug_lib_handlers_js__WEBPACK_IMPORTED_MODULE_3__.registerHandler)('warn', handler);\n  };\n  registerHandler(function logWarning(message) {\n    /* eslint-disable no-console */\n    console.warn(`WARNING: ${message}`);\n    /* eslint-enable no-console */\n  });\n  missingOptionsDeprecation = 'When calling `warn` you ' + 'must provide an `options` hash as the third parameter.  ' + '`options` should include an `id` property.';\n  missingOptionsIdDeprecation = 'When calling `warn` you must provide `id` in options.';\n\n  /**\n    Display a warning with the provided message.\n     * In a production build, this method is defined as an empty function (NOP).\n    Uses of this method in Ember itself are stripped from the ember.prod.js build.\n     ```javascript\n    import { warn } from '@ember/debug';\n    import tomsterCount from './tomster-counter'; // a module in my project\n     // Log a warning if we have more than 3 tomsters\n    warn('Too many tomsters!', tomsterCount <= 3, {\n      id: 'ember-debug.too-many-tomsters'\n    });\n    ```\n     @method warn\n    @for @ember/debug\n    @static\n    @param {String} message A warning to display.\n    @param {Boolean|Object} test An optional boolean. If falsy, the warning\n      will be displayed. If `test` is an object, the `test` parameter can\n      be used as the `options` parameter and the warning is displayed.\n    @param {Object} options\n    @param {String} options.id The `id` can be used by Ember debugging tools\n      to change the behavior (raise, log, or silence) for that specific warning.\n      The `id` should be namespaced by dots, e.g. \"ember-debug.feature-flag-with-features-stripped\"\n    @public\n    @since 1.0.0\n  */\n  warn$1 = function warn(message, test, options) {\n    if (arguments.length === 2 && typeof test === 'object') {\n      options = test;\n      test = false;\n    }\n    assert(missingOptionsDeprecation, Boolean(options));\n    assert(missingOptionsIdDeprecation, Boolean(options && options.id));\n\n    // SAFETY: we have explicitly assigned `false` if the user invoked the\n    // arity-2 version of the overload, so we know `test` is always either\n    // `undefined` or a `boolean` for type-safe callers.\n    (0,_ember_debug_lib_handlers_js__WEBPACK_IMPORTED_MODULE_3__.invoke)('warn', message, test, options);\n  };\n}\nconst _warn = warn$1;\nconst {\n  toString: objectToString\n} = Object.prototype;\nconst {\n  toString: functionToString\n} = Function.prototype;\nconst {\n  isArray\n} = Array;\nconst {\n  keys: objectKeys\n} = Object;\nconst {\n  stringify\n} = JSON;\nconst LIST_LIMIT = 100;\nconst DEPTH_LIMIT = 4;\nconst SAFE_KEY = /^[\\w$]+$/;\n\n/**\n @module @ember/debug\n*/\n/**\n  Convenience method to inspect an object. This method will attempt to\n  convert the object into a useful string description.\n\n  It is a pretty simple implementation. If you want something more robust,\n  use something like JSDump: https://github.com/NV/jsDump\n\n  @method inspect\n  @static\n  @param {Object} obj The object you want to inspect.\n  @return {String} A description of the object\n  @since 1.4.0\n  @private\n*/\nfunction inspect(obj) {\n  // detect Node util.inspect call inspect(depth: number, opts: object)\n  if (typeof obj === 'number' && arguments.length === 2) {\n    return this;\n  }\n  return inspectValue(obj, 0);\n}\nfunction inspectValue(value, depth, seen) {\n  let valueIsArray = false;\n  switch (typeof value) {\n    case 'undefined':\n      return 'undefined';\n    case 'object':\n      if (value === null) return 'null';\n      if (isArray(value)) {\n        valueIsArray = true;\n        break;\n      }\n      // is toString Object.prototype.toString or undefined then traverse\n      if (value.toString === objectToString || value.toString === undefined) {\n        break;\n      }\n      // custom toString\n      return value.toString();\n    case 'function':\n      return value.toString === functionToString ? value.name ? `[Function:${value.name}]` : `[Function]` : value.toString();\n    case 'string':\n      return stringify(value);\n    case 'symbol':\n    case 'boolean':\n    case 'number':\n    default:\n      return value.toString();\n  }\n  if (seen === undefined) {\n    seen = new WeakSet();\n  } else {\n    if (seen.has(value)) return `[Circular]`;\n  }\n  seen.add(value);\n  return valueIsArray ? inspectArray(value, depth + 1, seen) : inspectObject(value, depth + 1, seen);\n}\nfunction inspectKey(key) {\n  return SAFE_KEY.test(key) ? key : stringify(key);\n}\nfunction inspectObject(obj, depth, seen) {\n  if (depth > DEPTH_LIMIT) {\n    return '[Object]';\n  }\n  let s = '{';\n  let keys = objectKeys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    s += i === 0 ? ' ' : ', ';\n    if (i >= LIST_LIMIT) {\n      s += `... ${keys.length - LIST_LIMIT} more keys`;\n      break;\n    }\n    let key = keys[i];\n     true && !key && assert('has key', key); // Looping over array\n    s += `${inspectKey(String(key))}: ${inspectValue(obj[key], depth, seen)}`;\n  }\n  s += ' }';\n  return s;\n}\nfunction inspectArray(arr, depth, seen) {\n  if (depth > DEPTH_LIMIT) {\n    return '[Array]';\n  }\n  let s = '[';\n  for (let i = 0; i < arr.length; i++) {\n    s += i === 0 ? ' ' : ', ';\n    if (i >= LIST_LIMIT) {\n      s += `... ${arr.length - LIST_LIMIT} more items`;\n      break;\n    }\n    s += inspectValue(arr[i], depth, seen);\n  }\n  s += ' ]';\n  return s;\n}\n\n// These are the default production build versions:\nconst noop = () => {};\n\n// SAFETY: these casts are just straight-up lies, but the point is that they do\n// not do anything in production builds.\nlet assert = noop;\nlet info = noop;\nlet warn = noop;\nlet debug = noop;\nlet deprecate = noop;\nlet debugSeal = noop;\nlet debugFreeze = noop;\nlet runInDebug = noop;\nlet setDebugFunction = noop;\nlet getDebugFunction = noop;\nlet deprecateFunc = function () {\n  return arguments[arguments.length - 1];\n};\nif (true) {\n  setDebugFunction = function (type, callback) {\n    switch (type) {\n      case 'assert':\n        return assert = callback;\n      case 'info':\n        return info = callback;\n      case 'warn':\n        return warn = callback;\n      case 'debug':\n        return debug = callback;\n      case 'deprecate':\n        return deprecate = callback;\n      case 'debugSeal':\n        return debugSeal = callback;\n      case 'debugFreeze':\n        return debugFreeze = callback;\n      case 'runInDebug':\n        return runInDebug = callback;\n      case 'deprecateFunc':\n        return deprecateFunc = callback;\n    }\n  };\n  getDebugFunction = function (type) {\n    switch (type) {\n      case 'assert':\n        return assert;\n      case 'info':\n        return info;\n      case 'warn':\n        return warn;\n      case 'debug':\n        return debug;\n      case 'deprecate':\n        return deprecate;\n      case 'debugSeal':\n        return debugSeal;\n      case 'debugFreeze':\n        return debugFreeze;\n      case 'runInDebug':\n        return runInDebug;\n      case 'deprecateFunc':\n        return deprecateFunc;\n    }\n  };\n}\n\n/**\n@module @ember/debug\n*/\n\nif (true) {\n  /**\n    Verify that a certain expectation is met, or throw a exception otherwise.\n     This is useful for communicating assumptions in the code to other human\n    readers as well as catching bugs that accidentally violates these\n    expectations.\n     Assertions are removed from production builds, so they can be freely added\n    for documentation and debugging purposes without worries of incuring any\n    performance penalty. However, because of that, they should not be used for\n    checks that could reasonably fail during normal usage. Furthermore, care\n    should be taken to avoid accidentally relying on side-effects produced from\n    evaluating the condition itself, since the code will not run in production.\n     ```javascript\n    import { assert } from '@ember/debug';\n     // Test for truthiness\n    assert('Must pass a string', typeof str === 'string');\n     // Fail unconditionally\n    assert('This code path should never be run');\n    ```\n     @method assert\n    @static\n    @for @ember/debug\n    @param {String} description Describes the expectation. This will become the\n      text of the Error thrown if the assertion fails.\n    @param {any} condition Must be truthy for the assertion to pass. If\n      falsy, an exception will be thrown.\n    @public\n    @since 1.0.0\n  */\n\n  // eslint-disable-next-line no-inner-declarations\n  function assert(desc, test) {\n    if (!test) {\n      throw new Error(`Assertion Failed: ${desc}`);\n    }\n  }\n  setDebugFunction('assert', assert);\n\n  /**\n    Display a debug notice.\n     Calls to this function are not invoked in production builds.\n     ```javascript\n    import { debug } from '@ember/debug';\n     debug('I\\'m a debug notice!');\n    ```\n     @method debug\n    @for @ember/debug\n    @static\n    @param {String} message A debug message to display.\n    @public\n  */\n  setDebugFunction('debug', function debug(message) {\n    console.debug(`DEBUG: ${message}`); /* eslint-disable-line no-console */\n  });\n\n  /**\n    Display an info notice.\n     Calls to this function are removed from production builds, so they can be\n    freely added for documentation and debugging purposes without worries of\n    incuring any performance penalty.\n     @method info\n    @private\n  */\n  setDebugFunction('info', function info() {\n    console.info(...arguments); /* eslint-disable-line no-console */\n  });\n\n  /**\n   @module @ember/debug\n   @public\n  */\n\n  /**\n    Alias an old, deprecated method with its new counterpart.\n     Display a deprecation warning with the provided message and a stack trace\n    (Chrome and Firefox only) when the assigned method is called.\n     Calls to this function are removed from production builds, so they can be\n    freely added for documentation and debugging purposes without worries of\n    incuring any performance penalty.\n     ```javascript\n    import { deprecateFunc } from '@ember/debug';\n     Ember.oldMethod = deprecateFunc('Please use the new, updated method', options, Ember.newMethod);\n    ```\n     @method deprecateFunc\n    @static\n    @for @ember/debug\n    @param {String} message A description of the deprecation.\n    @param {Object} [options] The options object for `deprecate`.\n    @param {Function} func The new function called to replace its deprecated counterpart.\n    @return {Function} A new function that wraps the original function with a deprecation warning\n    @private\n  */\n  setDebugFunction('deprecateFunc', function deprecateFunc(...args) {\n    if (args.length === 3) {\n      let [message, options, func] = args;\n      return function (...args) {\n        deprecate(message, false, options);\n        return func.apply(this, args);\n      };\n    } else {\n      let [message, func] = args;\n      return function () {\n        deprecate(message);\n        return func.apply(this, arguments);\n      };\n    }\n  });\n\n  /**\n   @module @ember/debug\n   @public\n  */\n  /**\n    Run a function meant for debugging.\n     Calls to this function are removed from production builds, so they can be\n    freely added for documentation and debugging purposes without worries of\n    incuring any performance penalty.\n     ```javascript\n    import Component from '@ember/component';\n    import { runInDebug } from '@ember/debug';\n     runInDebug(() => {\n      Component.reopen({\n        didInsertElement() {\n          console.log(\"I'm happy\");\n        }\n      });\n    });\n    ```\n     @method runInDebug\n    @for @ember/debug\n    @static\n    @param {Function} func The function to be executed.\n    @since 1.5.0\n    @public\n  */\n  setDebugFunction('runInDebug', function runInDebug(func) {\n    func();\n  });\n  setDebugFunction('debugSeal', function debugSeal(obj) {\n    Object.seal(obj);\n  });\n  setDebugFunction('debugFreeze', function debugFreeze(obj) {\n    // re-freezing an already frozen object introduces a significant\n    // performance penalty on Chrome (tested through 59).\n    //\n    // See: https://bugs.chromium.org/p/v8/issues/detail?id=6450\n    if (!Object.isFrozen(obj)) {\n      Object.freeze(obj);\n    }\n  });\n  setDebugFunction('deprecate', _deprecate);\n  setDebugFunction('warn', _warn);\n}\nlet _warnIfUsingStrippedFeatureFlags;\nif ( true && !(0,_ember_debug_lib_testing_js__WEBPACK_IMPORTED_MODULE_2__.isTesting)()) {\n  if (typeof window !== 'undefined' && (_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_0__.i || _index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_0__.a) && window.addEventListener) {\n    window.addEventListener('load', () => {\n      if (document.documentElement && document.documentElement.dataset && !document.documentElement.dataset['emberExtension']) {\n        let downloadURL;\n        if (_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_0__.a) {\n          downloadURL = 'https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi';\n        } else if (_index_BGP1rw3B_js__WEBPACK_IMPORTED_MODULE_0__.i) {\n          downloadURL = 'https://addons.mozilla.org/en-US/firefox/addon/ember-inspector/';\n        }\n        debug(`For more advanced debugging, install the Ember Inspector from ${downloadURL}`);\n      }\n    }, false);\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ A),\n/* harmony export */   E: () => (/* binding */ EmberObject),\n/* harmony export */   M: () => (/* binding */ MutableArray),\n/* harmony export */   N: () => (/* binding */ NativeArray),\n/* harmony export */   O: () => (/* binding */ Observable),\n/* harmony export */   a: () => (/* binding */ EmberArray),\n/* harmony export */   b: () => (/* binding */ action),\n/* harmony export */   c: () => (/* binding */ compare),\n/* harmony export */   d: () => (/* binding */ EmberCoreObject),\n/* harmony export */   i: () => (/* binding */ isArray),\n/* harmony export */   o: () => (/* binding */ observer),\n/* harmony export */   r: () => (/* binding */ removeAt),\n/* harmony export */   t: () => (/* binding */ typeOf),\n/* harmony export */   u: () => (/* binding */ uniqBy)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../@ember/-internals/meta/lib/meta.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/meta/lib/meta.js\");\n/* harmony import */ var _glimmer_validator_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../@glimmer/validator/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../@glimmer/destroyable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/destroyable/index.js\");\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n/* harmony import */ var _property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n/* harmony import */ var _set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./set_properties-DvalyQdu.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/set_properties-DvalyQdu.js\");\n/* harmony import */ var _registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./registry-DzfcDwii.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js\");\n/* harmony import */ var _ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../@ember/-internals/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n/* harmony import */ var _to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./to-string-D8i3mjEU.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/to-string-D8i3mjEU.js\");\n/* harmony import */ var _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../@ember/object/mixin.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/mixin.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_registry_proxy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/registry_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/registry_proxy.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_container_proxy_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/container_proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/container_proxy.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/comparable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/comparable.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/action_handler.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/action_handler.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_proxy_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/-proxy.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/-proxy.js\");\n/* harmony import */ var _ember_enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../@ember/enumerable/mutable.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/mutable.js\");\n/* harmony import */ var _ember_internals_runtime_lib_mixins_target_action_support_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/mixins/target_action_support.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/mixins/target_action_support.js\");\n/* harmony import */ var _ember_internals_runtime_lib_ext_rsvp_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../@ember/-internals/runtime/lib/ext/rsvp.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/runtime/lib/ext/rsvp.js\");\n/* harmony import */ var _ember_enumerable_index_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../@ember/enumerable/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/enumerable/index.js\");\n/* harmony import */ var _ember_array_internals_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../@ember/array/-internals.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/-internals.js\");\n/* harmony import */ var _ember_array_lib_make_array_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../@ember/array/lib/make-array.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/lib/make-array.js\");\n/* harmony import */ var _glimmer_owner_index_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../@glimmer/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/owner/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ........................................\n// TYPING & ARRAY MESSAGING\n//\nconst TYPE_MAP = {\n  '[object Boolean]': 'boolean',\n  '[object Number]': 'number',\n  '[object String]': 'string',\n  '[object Function]': 'function',\n  '[object AsyncFunction]': 'function',\n  '[object Array]': 'array',\n  '[object Date]': 'date',\n  '[object RegExp]': 'regexp',\n  '[object Object]': 'object',\n  '[object FileList]': 'filelist'\n};\nconst {\n  toString\n} = Object.prototype;\n\n/**\n @module @ember/utils\n*/\n/**\n  Returns a consistent type for the passed object.\n\n  Use this instead of the built-in `typeof` to get the type of an item.\n  It will return the same result across all browsers and includes a bit\n  more detail. Here is what will be returned:\n\n      | Return Value  | Meaning                                              |\n      |---------------|------------------------------------------------------|\n      | 'string'      | String primitive or String object.                   |\n      | 'number'      | Number primitive or Number object.                   |\n      | 'boolean'     | Boolean primitive or Boolean object.                 |\n      | 'null'        | Null value                                           |\n      | 'undefined'   | Undefined value                                      |\n      | 'function'    | A function                                           |\n      | 'array'       | An instance of Array                                 |\n      | 'regexp'      | An instance of RegExp                                |\n      | 'date'        | An instance of Date                                  |\n      | 'filelist'    | An instance of FileList                              |\n      | 'class'       | An Ember class (created using EmberObject.extend())  |\n      | 'instance'    | An Ember object instance                             |\n      | 'error'       | An instance of the Error object                      |\n      | 'object'      | A JavaScript object not inheriting from EmberObject  |\n\n  Examples:\n\n  ```javascript\n  import { A } from '@ember/array';\n  import { typeOf } from '@ember/utils';\n  import EmberObject from '@ember/object';\n\n  typeOf();                       // 'undefined'\n  typeOf(null);                   // 'null'\n  typeOf(undefined);              // 'undefined'\n  typeOf('michael');              // 'string'\n  typeOf(new String('michael'));  // 'string'\n  typeOf(101);                    // 'number'\n  typeOf(new Number(101));        // 'number'\n  typeOf(true);                   // 'boolean'\n  typeOf(new Boolean(true));      // 'boolean'\n  typeOf(A);                      // 'function'\n  typeOf(A());                    // 'array'\n  typeOf([1, 2, 90]);             // 'array'\n  typeOf(/abc/);                  // 'regexp'\n  typeOf(new Date());             // 'date'\n  typeOf(event.target.files);     // 'filelist'\n  typeOf(EmberObject.extend());   // 'class'\n  typeOf(EmberObject.create());   // 'instance'\n  typeOf(new Error('teamocil'));  // 'error'\n\n  // 'normal' JavaScript object\n  typeOf({ a: 'b' });             // 'object'\n  ```\n\n  @method typeOf\n  @for @ember/utils\n  @param item the item to check\n  @return {String} the type\n  @public\n  @static\n*/\nfunction typeOf(item) {\n  if (item === null) {\n    return 'null';\n  }\n  if (item === undefined) {\n    return 'undefined';\n  }\n  let ret = TYPE_MAP[toString.call(item)] || 'object';\n  if (ret === 'function') {\n    if (EmberCoreObject.detect(item)) {\n      ret = 'class';\n    }\n  } else if (ret === 'object') {\n    if (item instanceof Error) {\n      ret = 'error';\n    } else if (item instanceof EmberCoreObject) {\n      ret = 'instance';\n    } else if (item instanceof Date) {\n      ret = 'date';\n    }\n  }\n  return ret;\n}\nconst TYPE_ORDER = {\n  undefined: 0,\n  null: 1,\n  boolean: 2,\n  number: 3,\n  string: 4,\n  array: 5,\n  object: 6,\n  instance: 7,\n  function: 8,\n  class: 9,\n  date: 10,\n  regexp: 11,\n  filelist: 12,\n  error: 13\n};\n//\n// the spaceship operator\n//\n//                      `. ___\n//                     __,' __`.                _..----....____\n//         __...--.'``;.   ,.   ;``--..__     .'    ,-._    _.-'\n//   _..-''-------'   `'   `'   `'     O ``-''._   (,;') _,'\n// ,'________________                          \\`-._`-','\n//  `._              ```````````------...___   '-.._'-:\n//     ```--.._      ,.                     ````--...__\\-.\n//             `.--. `-` \"INFINITY IS LESS     ____    |  |`\n//               `. `.   THAN BEYOND\"        ,'`````.  ;  ;`\n//                 `._`.        __________   `.      \\'__/`\n//                    `-:._____/______/___/____`.     \\  `\n//                                |       `._    `.    \\\n//                                `._________`-.   `.   `.___\n//                                              SSt  `------'`\nfunction spaceship(a, b) {\n  // SAFETY: `Math.sign` always returns `-1` for negative, `0` for zero, and `1`\n  // for positive numbers. (The extra precision is useful for the way we use\n  // this in the context of `compare`.)\n  return Math.sign(a - b);\n}\n\n/**\n @module @ember/utils\n*/\n\n/**\n Compares two javascript values and returns:\n\n  - -1 if the first is smaller than the second,\n  - 0 if both are equal,\n  - 1 if the first is greater than the second.\n\n  ```javascript\n  import { compare } from '@ember/utils';\n\n  compare('hello', 'hello');  // 0\n  compare('abc', 'dfg');      // -1\n  compare(2, 1);              // 1\n  ```\n\n If the types of the two objects are different precedence occurs in the\n following order, with types earlier in the list considered `<` types\n later in the list:\n\n  - undefined\n  - null\n  - boolean\n  - number\n  - string\n  - array\n  - object\n  - instance\n  - function\n  - class\n  - date\n\n  ```javascript\n  import { compare } from '@ember/utils';\n\n  compare('hello', 50);       // 1\n  compare(50, 'hello');       // -1\n  ```\n\n @method compare\n @for @ember/utils\n @static\n @param {Object} v First value to compare\n @param {Object} w Second value to compare\n @return {Number} -1 if v < w, 0 if v = w and 1 if v > w.\n @public\n*/\nfunction compare(v, w) {\n  if (v === w) {\n    return 0;\n  }\n  let type1 = typeOf(v);\n  let type2 = typeOf(w);\n  if (type1 === 'instance' && isComparable(v) && v.constructor.compare) {\n    return v.constructor.compare(v, w);\n  }\n  if (type2 === 'instance' && isComparable(w) && w.constructor.compare) {\n    // SAFETY: Multiplying by a negative just changes the sign\n    return w.constructor.compare(w, v) * -1;\n  }\n  let res = spaceship(TYPE_ORDER[type1], TYPE_ORDER[type2]);\n  if (res !== 0) {\n    return res;\n  }\n\n  // types are equal - so we have to check values now\n  switch (type1) {\n    case 'boolean':\n       true && !(typeof v === 'boolean' && typeof w === 'boolean') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('both are boolean', typeof v === 'boolean' && typeof w === 'boolean');\n      return spaceship(Number(v), Number(w));\n    case 'number':\n       true && !(typeof v === 'number' && typeof w === 'number') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('both are numbers', typeof v === 'number' && typeof w === 'number');\n      return spaceship(v, w);\n    case 'string':\n       true && !(typeof v === 'string' && typeof w === 'string') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('both are strings', typeof v === 'string' && typeof w === 'string');\n      return spaceship(v.localeCompare(w), 0);\n    case 'array':\n      {\n         true && !(Array.isArray(v) && Array.isArray(w)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('both are arrays', Array.isArray(v) && Array.isArray(w));\n        let vLen = v.length;\n        let wLen = w.length;\n        let len = Math.min(vLen, wLen);\n        for (let i = 0; i < len; i++) {\n          let r = compare(v[i], w[i]);\n          if (r !== 0) {\n            return r;\n          }\n        }\n\n        // all elements are equal now\n        // shorter array should be ordered first\n        return spaceship(vLen, wLen);\n      }\n    case 'instance':\n      if (isComparable(v) && v.compare) {\n        return v.compare(v, w);\n      }\n      return 0;\n    case 'date':\n       true && !(v instanceof Date && w instanceof Date) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('both are dates', v instanceof Date && w instanceof Date);\n      return spaceship(v.getTime(), w.getTime());\n    default:\n      return 0;\n  }\n}\nfunction isComparable(value) {\n  return _ember_internals_runtime_lib_mixins_comparable_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"].detect(value);\n}\n\n/**\n@module @ember/object/observable\n*/\n\nconst Observable = _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"].create({\n  get(keyName) {\n    return (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(this, keyName);\n  },\n  getProperties(...args) {\n    return (0,_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_10__.g)(this, ...args);\n  },\n  set(keyName, value) {\n    return (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_9__.s)(this, keyName, value);\n  },\n  setProperties(hash) {\n    return (0,_set_properties_DvalyQdu_js__WEBPACK_IMPORTED_MODULE_10__.s)(this, hash);\n  },\n  /**\n    Begins a grouping of property changes.\n     You can use this method to group property changes so that notifications\n    will not be sent until the changes are finished. If you plan to make a\n    large number of changes to an object at one time, you should call this\n    method at the beginning of the changes to begin deferring change\n    notifications. When you are done making changes, call\n    `endPropertyChanges()` to deliver the deferred change notifications and end\n    deferring.\n     @method beginPropertyChanges\n    @return {Observable}\n    @private\n  */\n  beginPropertyChanges() {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.a1)();\n    return this;\n  },\n  /**\n    Ends a grouping of property changes.\n     You can use this method to group property changes so that notifications\n    will not be sent until the changes are finished. If you plan to make a\n    large number of changes to an object at one time, you should call\n    `beginPropertyChanges()` at the beginning of the changes to defer change\n    notifications. When you are done making changes, call this method to\n    deliver the deferred change notifications and end deferring.\n     @method endPropertyChanges\n    @return {Observable}\n    @private\n  */\n  endPropertyChanges() {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.a3)();\n    return this;\n  },\n  notifyPropertyChange(keyName) {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.n)(this, keyName);\n    return this;\n  },\n  addObserver(key, target, method, sync) {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.x)(this, key, target, method, sync);\n    return this;\n  },\n  removeObserver(key, target, method, sync) {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.y)(this, key, target, method, sync);\n    return this;\n  },\n  /**\n    Returns `true` if the object currently has observers registered for a\n    particular key. You can use this method to potentially defer performing\n    an expensive action until someone begins observing a particular property\n    on the object.\n     @method hasObserverFor\n    @param {String} key Key to check\n    @return {Boolean}\n    @private\n  */\n  hasObserverFor(key) {\n    return (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.J)(this, `${key}:change`);\n  },\n  incrementProperty(keyName, increment = 1) {\n     true && !(!isNaN(parseFloat(String(increment))) && isFinite(increment)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('Must pass a numeric value to incrementProperty', !isNaN(parseFloat(String(increment))) && isFinite(increment));\n    return (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_9__.s)(this, keyName, (parseFloat((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(this, keyName)) || 0) + increment);\n  },\n  decrementProperty(keyName, decrement = 1) {\n     true && !((typeof decrement === 'number' || !isNaN(parseFloat(decrement))) && isFinite(decrement)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('Must pass a numeric value to decrementProperty', (typeof decrement === 'number' || !isNaN(parseFloat(decrement))) && isFinite(decrement));\n    return (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_9__.s)(this, keyName, ((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(this, keyName) || 0) - decrement);\n  },\n  toggleProperty(keyName) {\n    return (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_9__.s)(this, keyName, !(0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(this, keyName));\n  },\n  cacheFor(keyName) {\n    let meta = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_4__.peekMeta)(this);\n    return meta !== null ? meta.valueFor(keyName) : undefined;\n  }\n});\n\n/**\n@module @ember/array\n*/\n\nconst EMPTY_ARRAY = Object.freeze([]);\nconst identityFunction = item => item;\nfunction uniqBy(array, keyOrFunc = identityFunction) {\n   true && !isArray(array) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(`first argument passed to \\`uniqBy\\` should be array`, isArray(array));\n  let ret = A();\n  let seen = new Set();\n  let getter = typeof keyOrFunc === 'function' ? keyOrFunc : item => (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(item, keyOrFunc);\n  array.forEach(item => {\n    let val = getter(item);\n    if (!seen.has(val)) {\n      seen.add(val);\n      ret.push(item);\n    }\n  });\n  return ret;\n}\nfunction iter(...args) {\n  let valueProvided = args.length === 2;\n  let [key, value] = args;\n  return valueProvided ? item => value === (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(item, key) : item => Boolean((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(item, key));\n}\nfunction findIndex(array, predicate, startAt) {\n  let len = array.length;\n  for (let index = startAt; index < len; index++) {\n    // SAFETY: Because we're checking the index this value should always be set.\n    let item = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.R)(array, index);\n    if (predicate(item, index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\nfunction find(array, callback, target = null) {\n  let predicate = callback.bind(target);\n  let index = findIndex(array, predicate, 0);\n  return index === -1 ? undefined : (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.R)(array, index);\n}\nfunction any(array, callback, target = null) {\n  let predicate = callback.bind(target);\n  return findIndex(array, predicate, 0) !== -1;\n}\nfunction every(array, callback, target = null) {\n  let cb = callback.bind(target);\n  let predicate = (item, index, array) => !cb(item, index, array);\n  return findIndex(array, predicate, 0) === -1;\n}\nfunction indexOf(array, val, startAt = 0, withNaNCheck) {\n  let len = array.length;\n  if (startAt < 0) {\n    startAt += len;\n  }\n\n  // SameValueZero comparison (NaN !== NaN)\n  let predicate = withNaNCheck && val !== val ? item => item !== item : item => item === val;\n  return findIndex(array, predicate, startAt);\n}\nfunction removeAt(array, index, len) {\n   true && !(index > -1 && index < array.length) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(`\\`removeAt\\` index provided is out of range`, index > -1 && index < array.length);\n  (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.S)(array, index, len ?? 1, EMPTY_ARRAY);\n  return array;\n}\nfunction insertAt(array, index, item) {\n   true && !(index > -1 && index <= array.length) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(`\\`insertAt\\` index provided is out of range`, index > -1 && index <= array.length);\n  (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.S)(array, index, 0, [item]);\n  return item;\n}\n\n/**\n  Returns true if the passed object is an array or Array-like.\n\n  Objects are considered Array-like if any of the following are true:\n\n    - the object is a native Array\n    - the object has an objectAt property\n    - the object is an Object, and has a length property\n\n  Unlike `typeOf` this method returns true even if the passed object is\n  not formally an array but appears to be array-like (i.e. implements `Array`)\n\n  ```javascript\n  import { isArray } from '@ember/array';\n  import ArrayProxy from '@ember/array/proxy';\n\n  isArray();                                      // false\n  isArray([]);                                    // true\n  isArray(ArrayProxy.create({ content: [] }));    // true\n  ```\n\n  @method isArray\n  @static\n  @for @ember/array\n  @param {Object} obj The object to test\n  @return {Boolean} true if the passed object is an array or Array-like\n  @public\n*/\nfunction isArray(obj) {\n  if ( true && typeof obj === 'object' && obj !== null) {\n    // SAFETY: Property read checks are safe if it's an object\n    let possibleProxyContent = obj[_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.a5];\n    if (possibleProxyContent !== undefined) {\n      obj = possibleProxyContent;\n    }\n  }\n\n  // SAFETY: Property read checks are safe if it's an object\n  if (!obj || obj.setInterval) {\n    return false;\n  }\n  if (Array.isArray(obj) || EmberArray.detect(obj)) {\n    return true;\n  }\n  let type = typeOf(obj);\n  if ('array' === type) {\n    return true;\n  }\n\n  // SAFETY: Property read checks are safe if it's an object\n  let length = obj.length;\n  if (typeof length === 'number' && length === length && 'object' === type) {\n    return true;\n  }\n  return false;\n}\n\n/*\n  This allows us to define computed properties that are not enumerable.\n  The primary reason this is important is that when `NativeArray` is\n  applied to `Array.prototype` we need to ensure that we do not add _any_\n  new enumerable properties.\n*/\nfunction nonEnumerableComputed(callback) {\n  let property = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.c)(callback);\n  property.enumerable = false;\n  return property;\n}\nfunction mapBy(key) {\n  return this.map(next => (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(next, key));\n}\n\n// ..........................................................\n// ARRAY\n//\n/**\n  This mixin implements Observer-friendly Array-like behavior. It is not a\n  concrete implementation, but it can be used up by other classes that want\n  to appear like arrays.\n\n  For example, ArrayProxy is a concrete class that can be instantiated to\n  implement array-like behavior. This class uses the Array Mixin by way of\n  the MutableArray mixin, which allows observable changes to be made to the\n  underlying array.\n\n  This mixin defines methods specifically for collections that provide\n  index-ordered access to their contents. When you are designing code that\n  needs to accept any kind of Array-like object, you should use these methods\n  instead of Array primitives because these will properly notify observers of\n  changes to the array.\n\n  Although these methods are efficient, they do add a layer of indirection to\n  your application so it is a good idea to use them only when you need the\n  flexibility of using both true JavaScript arrays and \"virtual\" arrays such\n  as controllers and collections.\n\n  You can use the methods defined in this module to access and modify array\n  contents in an observable-friendly way. You can also be notified whenever\n  the membership of an array changes by using `.observes('myArray.[]')`.\n\n  To support `EmberArray` in your own class, you must override two\n  primitives to use it: `length()` and `objectAt()`.\n\n  @class EmberArray\n  @uses Enumerable\n  @since Ember 0.9.0\n  @public\n*/\n\nconst EmberArray = _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"].create(_ember_enumerable_index_js__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n  init() {\n    this._super(...arguments);\n    (0,_ember_array_internals_js__WEBPACK_IMPORTED_MODULE_24__.setEmberArray)(this);\n  },\n  objectsAt(indexes) {\n    return indexes.map(idx => (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.R)(this, idx));\n  },\n  '[]': nonEnumerableComputed({\n    get() {\n      return this;\n    },\n    set(_key, value) {\n      this.replace(0, this.length, value);\n      return this;\n    }\n  }),\n  firstObject: nonEnumerableComputed(function () {\n    return (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.R)(this, 0);\n  }).readOnly(),\n  lastObject: nonEnumerableComputed(function () {\n    return (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.R)(this, this.length - 1);\n  }).readOnly(),\n  // Add any extra methods to EmberArray that are native to the built-in Array.\n  slice(beginIndex = 0, endIndex) {\n    let ret = A();\n    let length = this.length;\n    if (beginIndex < 0) {\n      beginIndex = length + beginIndex;\n    }\n    let validatedEndIndex;\n    if (endIndex === undefined || endIndex > length) {\n      validatedEndIndex = length;\n    } else if (endIndex < 0) {\n      validatedEndIndex = length + endIndex;\n    } else {\n      validatedEndIndex = endIndex;\n    }\n    while (beginIndex < validatedEndIndex) {\n      ret[ret.length] = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.R)(this, beginIndex++);\n    }\n    return ret;\n  },\n  indexOf(object, startAt) {\n    return indexOf(this, object, startAt, false);\n  },\n  lastIndexOf(object, startAt) {\n    let len = this.length;\n    if (startAt === undefined || startAt >= len) {\n      startAt = len - 1;\n    }\n    if (startAt < 0) {\n      startAt += len;\n    }\n    for (let idx = startAt; idx >= 0; idx--) {\n      if ((0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.R)(this, idx) === object) {\n        return idx;\n      }\n    }\n    return -1;\n  },\n  forEach(callback, target = null) {\n     true && !(typeof callback === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('`forEach` expects a function as first argument.', typeof callback === 'function');\n    let length = this.length;\n    for (let index = 0; index < length; index++) {\n      let item = this.objectAt(index);\n      callback.call(target, item, index, this);\n    }\n    return this;\n  },\n  getEach: mapBy,\n  setEach(key, value) {\n    return this.forEach(item => (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_9__.s)(item, key, value));\n  },\n  map(callback, target = null) {\n     true && !(typeof callback === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('`map` expects a function as first argument.', typeof callback === 'function');\n    let ret = A();\n    this.forEach((x, idx, i) => ret[idx] = callback.call(target, x, idx, i));\n    return ret;\n  },\n  mapBy,\n  filter(callback, target = null) {\n     true && !(typeof callback === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('`filter` expects a function as first argument.', typeof callback === 'function');\n    let ret = A();\n    this.forEach((x, idx, i) => {\n      if (callback.call(target, x, idx, i)) {\n        ret.push(x);\n      }\n    });\n    return ret;\n  },\n  reject(callback, target = null) {\n     true && !(typeof callback === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('`reject` expects a function as first argument.', typeof callback === 'function');\n    return this.filter(function () {\n      // @ts-expect-error TS doesn't like us using arguments like this\n      return !callback.apply(target, arguments);\n    });\n  },\n  filterBy() {\n    // @ts-expect-error TS doesn't like the ...arguments spread here.\n    return this.filter(iter(...arguments));\n  },\n  rejectBy() {\n    // @ts-expect-error TS doesn't like the ...arguments spread here.\n    return this.reject(iter(...arguments));\n  },\n  find(callback, target = null) {\n     true && !(typeof callback === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('`find` expects a function as first argument.', typeof callback === 'function');\n    return find(this, callback, target);\n  },\n  findBy() {\n    // @ts-expect-error TS doesn't like the ...arguments spread here.\n    let callback = iter(...arguments);\n    return find(this, callback);\n  },\n  every(callback, target = null) {\n     true && !(typeof callback === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('`every` expects a function as first argument.', typeof callback === 'function');\n    return every(this, callback, target);\n  },\n  isEvery() {\n    // @ts-expect-error TS doesn't like the ...arguments spread here.\n    let callback = iter(...arguments);\n    return every(this, callback);\n  },\n  any(callback, target = null) {\n     true && !(typeof callback === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('`any` expects a function as first argument.', typeof callback === 'function');\n    return any(this, callback, target);\n  },\n  isAny() {\n    // @ts-expect-error TS doesn't like us using arguments like this\n    let callback = iter(...arguments);\n    return any(this, callback);\n  },\n  // FIXME: When called without initialValue, behavior does not match native behavior\n  reduce(callback, initialValue) {\n     true && !(typeof callback === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('`reduce` expects a function as first argument.', typeof callback === 'function');\n    let ret = initialValue;\n    this.forEach(function (item, i) {\n      ret = callback(ret, item, i, this);\n    }, this);\n    return ret;\n  },\n  invoke(methodName, ...args) {\n    let ret = A();\n\n    // SAFETY: This is not entirely safe and the code will not work with Ember proxies\n    this.forEach(item => ret.push(item[methodName]?.(...args)));\n    return ret;\n  },\n  toArray() {\n    return this.map(item => item);\n  },\n  compact() {\n    return this.filter(value => value != null);\n  },\n  includes(object, startAt) {\n    return indexOf(this, object, startAt, true) !== -1;\n  },\n  sortBy() {\n    let sortKeys = arguments;\n    return this.toArray().sort((a, b) => {\n      for (let i = 0; i < sortKeys.length; i++) {\n        let key = sortKeys[i];\n        let propA = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(a, key);\n        let propB = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.g)(b, key);\n        // return 1 or -1 else continue to the next sortKey\n        let compareValue = compare(propA, propB);\n        if (compareValue) {\n          return compareValue;\n        }\n      }\n      return 0;\n    });\n  },\n  uniq() {\n    return uniqBy(this);\n  },\n  uniqBy(key) {\n    return uniqBy(this, key);\n  },\n  without(value) {\n    if (!this.includes(value)) {\n      return this; // nothing to do\n    }\n\n    // SameValueZero comparison (NaN !== NaN)\n    let predicate = value === value ? item => item !== value : item => item === item;\n    return this.filter(predicate);\n  }\n});\n\n/**\n  This mixin defines the API for modifying array-like objects. These methods\n  can be applied only to a collection that keeps its items in an ordered set.\n  It builds upon the Array mixin and adds methods to modify the array.\n  One concrete implementations of this class include ArrayProxy.\n\n  It is important to use the methods in this class to modify arrays so that\n  changes are observable. This allows the binding system in Ember to function\n  correctly.\n\n\n  Note that an Array can change even if it does not implement this mixin.\n  For example, one might implement a SparseArray that cannot be directly\n  modified, but if its underlying enumerable changes, it will change also.\n\n  @class MutableArray\n  @uses EmberArray\n  @uses MutableEnumerable\n  @public\n*/\n\nconst MutableArray = _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"].create(EmberArray, _ember_enumerable_mutable_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n  clear() {\n    let len = this.length;\n    if (len === 0) {\n      return this;\n    }\n    this.replace(0, len, EMPTY_ARRAY);\n    return this;\n  },\n  insertAt(idx, object) {\n    insertAt(this, idx, object);\n    return this;\n  },\n  removeAt(start, len) {\n    return removeAt(this, start, len);\n  },\n  pushObject(obj) {\n    return insertAt(this, this.length, obj);\n  },\n  pushObjects(objects) {\n    this.replace(this.length, 0, objects);\n    return this;\n  },\n  popObject() {\n    let len = this.length;\n    if (len === 0) {\n      return null;\n    }\n    let ret = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.R)(this, len - 1);\n    this.removeAt(len - 1, 1);\n    return ret;\n  },\n  shiftObject() {\n    if (this.length === 0) {\n      return null;\n    }\n    let ret = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.R)(this, 0);\n    this.removeAt(0);\n    return ret;\n  },\n  unshiftObject(obj) {\n    return insertAt(this, 0, obj);\n  },\n  unshiftObjects(objects) {\n    this.replace(0, 0, objects);\n    return this;\n  },\n  reverseObjects() {\n    let len = this.length;\n    if (len === 0) {\n      return this;\n    }\n    let objects = this.toArray().reverse();\n    this.replace(0, len, objects);\n    return this;\n  },\n  setObjects(objects) {\n    if (objects.length === 0) {\n      return this.clear();\n    }\n    let len = this.length;\n    this.replace(0, len, objects);\n    return this;\n  },\n  removeObject(obj) {\n    let loc = this.length || 0;\n    while (--loc >= 0) {\n      let curObject = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.R)(this, loc);\n      if (curObject === obj) {\n        this.removeAt(loc);\n      }\n    }\n    return this;\n  },\n  removeObjects(objects) {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.a1)();\n    for (let i = objects.length - 1; i >= 0; i--) {\n      // SAFETY: Due to the loop structure we know this will always exist.\n      this.removeObject(objects[i]);\n    }\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.a3)();\n    return this;\n  },\n  addObject(obj) {\n    let included = this.includes(obj);\n    if (!included) {\n      this.pushObject(obj);\n    }\n    return this;\n  },\n  addObjects(objects) {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.a1)();\n    objects.forEach(obj => this.addObject(obj));\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.a3)();\n    return this;\n  }\n});\n\n/**\n  Creates an `Ember.NativeArray` from an Array-like object.\n  Does not modify the original object's contents. `A()` is not needed if\n  `EmberENV.EXTEND_PROTOTYPES` is `true` (the default value). However,\n  it is recommended that you use `A()` when creating addons for\n  ember or when you can not guarantee that `EmberENV.EXTEND_PROTOTYPES`\n  will be `true`.\n\n  Example\n\n  ```app/components/my-component.js\n  import Component from '@ember/component';\n  import { A } from '@ember/array';\n\n  export default Component.extend({\n    tagName: 'ul',\n    classNames: ['pagination'],\n\n    init() {\n      this._super(...arguments);\n\n      if (!this.get('content')) {\n        this.set('content', A());\n        this.set('otherContent', A([1,2,3]));\n      }\n    }\n  });\n  ```\n\n  @method A\n  @static\n  @for @ember/array\n  @return {Ember.NativeArray}\n  @public\n*/\n\n// Add Ember.Array to Array.prototype. Remove methods with native\n// implementations and supply some more optimized versions of generic methods\n// because they are so common.\n/**\n@module ember\n*/\n\n/**\n * The final definition of NativeArray removes all native methods. This is the list of removed methods\n * when run in Chrome 106.\n */\n\n/**\n * These additional items must be redefined since `Omit` causes methods that return `this` to return the\n * type at the time of the Omit.\n */\n\n// This is the same as MutableArray, but removes the actual native methods that exist on Array.prototype.\n\n/**\n  The NativeArray mixin contains the properties needed to make the native\n  Array support MutableArray and all of its dependent APIs. Unless you\n  have `EmberENV.EXTEND_PROTOTYPES` or `EmberENV.EXTEND_PROTOTYPES.Array` set to\n  false, this will be applied automatically. Otherwise you can apply the mixin\n  at anytime by calling `Ember.NativeArray.apply(Array.prototype)`.\n\n  @class Ember.NativeArray\n  @uses MutableArray\n  @uses Observable\n  @public\n*/\n\nlet NativeArray = _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"].create(MutableArray, Observable, {\n  objectAt(idx) {\n    return this[idx];\n  },\n  // primitive for array support.\n  replace(start, deleteCount, items = EMPTY_ARRAY) {\n     true && !Array.isArray(items) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('The third argument to replace needs to be an array.', Array.isArray(items));\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.a7)(this, start, deleteCount, items);\n    return this;\n  }\n});\n\n// Remove any methods implemented natively so we don't override them\nconst ignore = ['length'];\nNativeArray.keys().forEach(methodName => {\n  // SAFETY: It's safe to read unknown properties from an object\n  if (Array.prototype[methodName]) {\n    ignore.push(methodName);\n  }\n});\nNativeArray = NativeArray.without(...ignore);\nlet A;\nif (_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_2__.E.EXTEND_PROTOTYPES.Array) {\n  NativeArray.apply(Array.prototype, true);\n  A = function (arr) {\n     true && !!(this instanceof A) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('You cannot create an Ember Array with `new A()`, please update to calling A as a function: `A()`', !(this instanceof A)); // SAFTEY: Since we are extending prototypes all true native arrays are Ember NativeArrays\n    return arr || [];\n  };\n} else {\n  A = function (arr) {\n     true && !!(this instanceof A) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('You cannot create an Ember Array with `new A()`, please update to calling A as a function: `A()`', !(this instanceof A));\n    if ((0,_ember_array_internals_js__WEBPACK_IMPORTED_MODULE_24__.isEmberArray)(arr)) {\n      // SAFETY: If it's a true native array and it is also an EmberArray then it should be an Ember NativeArray\n      return arr;\n    } else {\n      // SAFETY: This will return an NativeArray but TS can't infer that.\n      return NativeArray.apply(arr ?? []);\n    }\n  };\n}\n\n/**\n  @module @ember/object/core\n*/\n\nfunction hasSetUnknownProperty(val) {\n  return typeof val === 'object' && val !== null && typeof val.setUnknownProperty === 'function';\n}\nfunction hasToStringExtension(val) {\n  return typeof val === 'object' && val !== null && typeof val.toStringExtension === 'function';\n}\nconst reopen = _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"].prototype.reopen;\nconst wasApplied = new WeakSet();\nconst prototypeMixinMap = new WeakMap();\nconst initCalled =  true ? new WeakSet() : 0; // only used in debug builds to enable the proxy trap\n\nconst destroyCalled = new Set();\nfunction ensureDestroyCalled(instance) {\n  if (!destroyCalled.has(instance)) {\n    instance.destroy();\n  }\n}\nfunction initialize(obj, properties) {\n  let m = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_4__.meta)(obj);\n  if (properties !== undefined) {\n     true && !(typeof properties === 'object' && properties !== null) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('EmberObject.create only accepts objects.', typeof properties === 'object' && properties !== null);\n     true && !!(properties instanceof _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('EmberObject.create no longer supports mixing in other ' + 'definitions, use .extend & .create separately instead.', !(properties instanceof _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]));\n    let concatenatedProperties = obj.concatenatedProperties;\n    let mergedProperties = obj.mergedProperties;\n    let keyNames = Object.keys(properties);\n    for (let keyName of keyNames) {\n      // SAFETY: this cast as a Record is safe because all object types can be\n      // indexed in JS, and we explicitly type it as returning `unknown`, so the\n      // result *must* be checked below.\n      let value = properties[keyName];\n       true && !!(0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.u)(value) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('EmberObject.create no longer supports defining computed ' + 'properties. Define computed properties using extend() or reopen() ' + 'before calling create().', !(0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.u)(value));\n       true && !!(typeof value === 'function' && value.toString().indexOf('._super') !== -1) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('EmberObject.create no longer supports defining methods that call _super.', !(typeof value === 'function' && value.toString().indexOf('._super') !== -1));\n       true && !!(keyName === 'actions' && _ember_internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"].detect(obj)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('`actions` must be provided at extend time, not at create time, ' + 'when Ember.ActionHandler is used (i.e. views, controllers & routes).', !(keyName === 'actions' && _ember_internals_runtime_lib_mixins_action_handler_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"].detect(obj)));\n      let possibleDesc = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.B)(obj, keyName, m);\n      let isDescriptor = possibleDesc !== undefined;\n      if (!isDescriptor) {\n        if (concatenatedProperties !== undefined && concatenatedProperties.length > 0 && concatenatedProperties.includes(keyName)) {\n          let baseValue = obj[keyName];\n          if (baseValue) {\n            value = (0,_ember_array_lib_make_array_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"])(baseValue).concat(value);\n          } else {\n            value = (0,_ember_array_lib_make_array_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"])(value);\n          }\n        }\n        if (mergedProperties !== undefined && mergedProperties.length > 0 && mergedProperties.includes(keyName)) {\n          let baseValue = obj[keyName];\n          value = Object.assign({}, baseValue, value);\n        }\n      }\n      if (isDescriptor) {\n        possibleDesc.set(obj, keyName, value);\n      } else if (hasSetUnknownProperty(obj) && !(keyName in obj)) {\n        obj.setUnknownProperty(keyName, value);\n      } else {\n        if (true) {\n          (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.d)(obj, keyName, null, value, m); // setup mandatory setter\n        } else {}\n      }\n    }\n  }\n\n  // using DEBUG here to avoid the extraneous variable when not needed\n  if (true) {\n    initCalled.add(obj);\n  }\n  obj.init(properties);\n  m.unsetInitializing();\n  let observerEvents = m.observerEvents();\n  if (observerEvents !== undefined) {\n    for (let i = 0; i < observerEvents.length; i++) {\n      (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.ab)(obj, observerEvents[i].event, observerEvents[i].sync);\n    }\n  }\n  (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.I)(obj, 'init', undefined, undefined, m);\n}\n\n/**\n  `CoreObject` is the base class for all Ember constructs. It establishes a\n  class system based on Ember's Mixin system, and provides the basis for the\n  Ember Object Model. `CoreObject` should generally not be used directly,\n  instead you should use `EmberObject`.\n\n  ## Usage\n\n  You can define a class by extending from `CoreObject` using the `extend`\n  method:\n\n  ```js\n  const Person = CoreObject.extend({\n    name: 'Tomster',\n  });\n  ```\n\n  For detailed usage, see the [Object Model](https://guides.emberjs.com/release/object-model/)\n  section of the guides.\n\n  ## Usage with Native Classes\n\n  Native JavaScript `class` syntax can be used to extend from any `CoreObject`\n  based class:\n\n  ```js\n  class Person extends CoreObject {\n    init() {\n      super.init(...arguments);\n      this.name = 'Tomster';\n    }\n  }\n  ```\n\n  Some notes about `class` usage:\n\n  * `new` syntax is not currently supported with classes that extend from\n    `EmberObject` or `CoreObject`. You must continue to use the `create` method\n    when making new instances of classes, even if they are defined using native\n    class syntax. If you want to use `new` syntax, consider creating classes\n    which do _not_ extend from `EmberObject` or `CoreObject`. Ember features,\n    such as computed properties and decorators, will still work with base-less\n    classes.\n  * Instead of using `this._super()`, you must use standard `super` syntax in\n    native classes. See the [MDN docs on classes](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Super_class_calls_with_super)\n    for more details.\n  * Native classes support using [constructors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Constructor)\n    to set up newly-created instances. Ember uses these to, among other things,\n    support features that need to retrieve other entities by name, like Service\n    injection and `getOwner`. To ensure your custom instance setup logic takes\n    place after this important work is done, avoid using the `constructor` in\n    favor of `init`.\n  * Properties passed to `create` will be available on the instance by the time\n    `init` runs, so any code that requires these values should work at that\n    time.\n  * Using native classes, and switching back to the old Ember Object model is\n    fully supported.\n\n  @class CoreObject\n  @public\n*/\n\nclass CoreObject {\n  constructor(owner) {\n    /** @internal */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, _glimmer_owner_index_js__WEBPACK_IMPORTED_MODULE_26__.OWNER, void 0);\n    this[_glimmer_owner_index_js__WEBPACK_IMPORTED_MODULE_26__.OWNER] = owner;\n\n    // prepare prototype...\n    this.constructor.proto();\n    let self;\n    if ( true && (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.H)(this)) {\n      let messageFor = (obj, property) => {\n        return `You attempted to access the \\`${String(property)}\\` property (of ${obj}).\\n` + `Since Ember 3.1, this is usually fine as you no longer need to use \\`.get()\\`\\n` + `to access computed properties. However, in this case, the object in question\\n` + `is a special kind of Ember object (a proxy). Therefore, it is still necessary\\n` + `to use \\`.get('${String(property)}')\\` in this case.\\n\\n` + `If you encountered this error because of third-party code that you don't control,\\n` + `there is more information at https://github.com/emberjs/ember.js/issues/16148, and\\n` + `you can help us improve this error message by telling us more about what happened in\\n` + `this situation.`;\n      };\n\n      /* globals Proxy Reflect */\n      self = new Proxy(this, {\n        get(target, property, receiver) {\n          if (property === _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.a5) {\n            return target;\n          } else if (\n          // init called will be set on the proxy, not the target, so get with the receiver\n          !initCalled.has(receiver) || typeof property === 'symbol' || (0,_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_13__.i)(property) || property === 'toJSON' || property === 'toString' || property === 'toStringExtension' || property === 'didDefineProperty' || property === 'willWatchProperty' || property === 'didUnwatchProperty' || property === 'didAddListener' || property === 'didRemoveListener' || property === 'isDescriptor' || property === '_onLookup' || property in target) {\n            return Reflect.get(target, property, receiver);\n          }\n          let value = target.unknownProperty.call(receiver, property);\n          if (typeof value !== 'function') {\n             true && !(value === undefined || value === null) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(messageFor(receiver, property), value === undefined || value === null);\n          }\n        }\n      });\n    } else {\n      self = this;\n    }\n    const destroyable = self;\n    (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_7__.registerDestructor)(self, ensureDestroyCalled, true);\n    (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_7__.registerDestructor)(self, () => destroyable.willDestroy());\n\n    // disable chains\n    let m = (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_4__.meta)(self);\n    m.setInitializing();\n\n    // only return when in debug builds and `self` is the proxy created above\n    if ( true && self !== this) {\n      return self;\n    }\n  }\n  reopen(...args) {\n    (0,_ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__.applyMixin)(this, args);\n    return this;\n  }\n\n  /**\n    An overridable method called when objects are instantiated. By default,\n    does nothing unless it is overridden during class definition.\n     Example:\n     ```javascript\n    import EmberObject from '@ember/object';\n     const Person = EmberObject.extend({\n      init() {\n        alert(`Name is ${this.get('name')}`);\n      }\n    });\n     let steve = Person.create({\n      name: 'Steve'\n    });\n     // alerts 'Name is Steve'.\n    ```\n     NOTE: If you do override `init` for a framework class like `Component`\n    from `@ember/component`, be sure to call `this._super(...arguments)`\n    in your `init` declaration!\n    If you don't, Ember may not have an opportunity to\n    do important setup work, and you'll see strange behavior in your\n    application.\n     @method init\n    @public\n  */\n  init(_properties) {}\n\n  /**\n    Defines the properties that will be concatenated from the superclass\n    (instead of overridden).\n     By default, when you extend an Ember class a property defined in\n    the subclass overrides a property with the same name that is defined\n    in the superclass. However, there are some cases where it is preferable\n    to build up a property's value by combining the superclass' property\n    value with the subclass' value. An example of this in use within Ember\n    is the `classNames` property of `Component` from `@ember/component`.\n     Here is some sample code showing the difference between a concatenated\n    property and a normal one:\n     ```javascript\n    import EmberObject from '@ember/object';\n     const Bar = EmberObject.extend({\n      // Configure which properties to concatenate\n      concatenatedProperties: ['concatenatedProperty'],\n       someNonConcatenatedProperty: ['bar'],\n      concatenatedProperty: ['bar']\n    });\n     const FooBar = Bar.extend({\n      someNonConcatenatedProperty: ['foo'],\n      concatenatedProperty: ['foo']\n    });\n     let fooBar = FooBar.create();\n    fooBar.get('someNonConcatenatedProperty'); // ['foo']\n    fooBar.get('concatenatedProperty'); // ['bar', 'foo']\n    ```\n     This behavior extends to object creation as well. Continuing the\n    above example:\n     ```javascript\n    let fooBar = FooBar.create({\n      someNonConcatenatedProperty: ['baz'],\n      concatenatedProperty: ['baz']\n    })\n    fooBar.get('someNonConcatenatedProperty'); // ['baz']\n    fooBar.get('concatenatedProperty'); // ['bar', 'foo', 'baz']\n    ```\n     Adding a single property that is not an array will just add it in the array:\n     ```javascript\n    let fooBar = FooBar.create({\n      concatenatedProperty: 'baz'\n    })\n    view.get('concatenatedProperty'); // ['bar', 'foo', 'baz']\n    ```\n     Using the `concatenatedProperties` property, we can tell Ember to mix the\n    content of the properties.\n     In `Component` the `classNames`, `classNameBindings` and\n    `attributeBindings` properties are concatenated.\n     This feature is available for you to use throughout the Ember object model,\n    although typical app developers are likely to use it infrequently. Since\n    it changes expectations about behavior of properties, you should properly\n    document its usage in each individual concatenated property (to not\n    mislead your users to think they can override the property in a subclass).\n     @property concatenatedProperties\n    @type Array\n    @default null\n    @public\n  */\n\n  /**\n    Defines the properties that will be merged from the superclass\n    (instead of overridden).\n     By default, when you extend an Ember class a property defined in\n    the subclass overrides a property with the same name that is defined\n    in the superclass. However, there are some cases where it is preferable\n    to build up a property's value by merging the superclass property value\n    with the subclass property's value. An example of this in use within Ember\n    is the `queryParams` property of routes.\n     Here is some sample code showing the difference between a merged\n    property and a normal one:\n     ```javascript\n    import EmberObject from '@ember/object';\n     const Bar = EmberObject.extend({\n      // Configure which properties are to be merged\n      mergedProperties: ['mergedProperty'],\n       someNonMergedProperty: {\n        nonMerged: 'superclass value of nonMerged'\n      },\n      mergedProperty: {\n        page: { replace: false },\n        limit: { replace: true }\n      }\n    });\n     const FooBar = Bar.extend({\n      someNonMergedProperty: {\n        completelyNonMerged: 'subclass value of nonMerged'\n      },\n      mergedProperty: {\n        limit: { replace: false }\n      }\n    });\n     let fooBar = FooBar.create();\n     fooBar.get('someNonMergedProperty');\n    // => { completelyNonMerged: 'subclass value of nonMerged' }\n    //\n    // Note the entire object, including the nonMerged property of\n    // the superclass object, has been replaced\n     fooBar.get('mergedProperty');\n    // => {\n    //   page: {replace: false},\n    //   limit: {replace: false}\n    // }\n    //\n    // Note the page remains from the superclass, and the\n    // `limit` property's value of `false` has been merged from\n    // the subclass.\n    ```\n     This behavior is not available during object `create` calls. It is only\n    available at `extend` time.\n     In `Route` the `queryParams` property is merged.\n     This feature is available for you to use throughout the Ember object model,\n    although typical app developers are likely to use it infrequently. Since\n    it changes expectations about behavior of properties, you should properly\n    document its usage in each individual merged property (to not\n    mislead your users to think they can override the property in a subclass).\n     @property mergedProperties\n    @type Array\n    @default null\n    @public\n  */\n\n  /**\n    Destroyed object property flag.\n     if this property is `true` the observers and bindings were already\n    removed by the effect of calling the `destroy()` method.\n     @property isDestroyed\n    @default false\n    @public\n  */\n  get isDestroyed() {\n    return (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_7__.isDestroyed)(this);\n  }\n  set isDestroyed(_value) {\n     true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(`You cannot set \\`${this}.isDestroyed\\` directly, please use \\`.destroy()\\`.`, false);\n  }\n\n  /**\n    Destruction scheduled flag. The `destroy()` method has been called.\n     The object stays intact until the end of the run loop at which point\n    the `isDestroyed` flag is set.\n     @property isDestroying\n    @default false\n    @public\n  */\n  get isDestroying() {\n    return (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_7__.isDestroying)(this);\n  }\n  set isDestroying(_value) {\n     true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(`You cannot set \\`${this}.isDestroying\\` directly, please use \\`.destroy()\\`.`, false);\n  }\n\n  /**\n    Destroys an object by setting the `isDestroyed` flag and removing its\n    metadata, which effectively destroys observers and bindings.\n     If you try to set a property on a destroyed object, an exception will be\n    raised.\n     Note that destruction is scheduled for the end of the run loop and does not\n    happen immediately.  It will set an isDestroying flag immediately.\n     @method destroy\n    @return {EmberObject} receiver\n    @public\n  */\n  destroy() {\n    // Used to ensure that manually calling `.destroy()` does not immediately call destroy again\n    destroyCalled.add(this);\n    try {\n      (0,_glimmer_destroyable_index_js__WEBPACK_IMPORTED_MODULE_7__.destroy)(this);\n    } finally {\n      destroyCalled.delete(this);\n    }\n    return this;\n  }\n\n  /**\n    Override to implement teardown.\n     @method willDestroy\n    @public\n  */\n  willDestroy() {}\n\n  /**\n    Returns a string representation which attempts to provide more information\n    than Javascript's `toString` typically does, in a generic way for all Ember\n    objects.\n     ```javascript\n    import EmberObject from '@ember/object';\n     const Person = EmberObject.extend();\n    person = Person.create();\n    person.toString(); //=> \"<Person:ember1024>\"\n    ```\n     If the object's class is not defined on an Ember namespace, it will\n    indicate it is a subclass of the registered superclass:\n     ```javascript\n    const Student = Person.extend();\n    let student = Student.create();\n    student.toString(); //=> \"<(subclass of Person):ember1025>\"\n    ```\n     If the method `toStringExtension` is defined, its return value will be\n    included in the output.\n     ```javascript\n    const Teacher = Person.extend({\n      toStringExtension() {\n        return this.get('fullName');\n      }\n    });\n    teacher = Teacher.create();\n    teacher.toString(); //=> \"<Teacher:ember1026:Tom Dale>\"\n    ```\n     @method toString\n    @return {String} string representation\n    @public\n  */\n  toString() {\n    let extension = hasToStringExtension(this) ? `:${this.toStringExtension()}` : '';\n    return `<${(0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_11__.g)(this) || '(unknown)'}:${(0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_6__.g)(this)}${extension}>`;\n  }\n\n  /**\n    Creates a new subclass.\n     ```javascript\n    import EmberObject from '@ember/object';\n     const Person = EmberObject.extend({\n      say(thing) {\n        alert(thing);\n       }\n    });\n    ```\n     This defines a new subclass of EmberObject: `Person`. It contains one method: `say()`.\n     You can also create a subclass from any existing class by calling its `extend()` method.\n    For example, you might want to create a subclass of Ember's built-in `Component` class:\n     ```javascript\n    import Component from '@ember/component';\n     const PersonComponent = Component.extend({\n      tagName: 'li',\n      classNameBindings: ['isAdministrator']\n    });\n    ```\n     When defining a subclass, you can override methods but still access the\n    implementation of your parent class by calling the special `_super()` method:\n     ```javascript\n    import EmberObject from '@ember/object';\n     const Person = EmberObject.extend({\n      say(thing) {\n        let name = this.get('name');\n        alert(`${name} says: ${thing}`);\n      }\n    });\n     const Soldier = Person.extend({\n      say(thing) {\n        this._super(`${thing}, sir!`);\n      },\n      march(numberOfHours) {\n        alert(`${this.get('name')} marches for ${numberOfHours} hours.`);\n      }\n    });\n     let yehuda = Soldier.create({\n      name: 'Yehuda Katz'\n    });\n     yehuda.say('Yes');  // alerts \"Yehuda Katz says: Yes, sir!\"\n    ```\n     The `create()` on line #17 creates an *instance* of the `Soldier` class.\n    The `extend()` on line #8 creates a *subclass* of `Person`. Any instance\n    of the `Person` class will *not* have the `march()` method.\n     You can also pass `Mixin` classes to add additional properties to the subclass.\n     ```javascript\n    import EmberObject from '@ember/object';\n    import Mixin from '@ember/object/mixin';\n     const Person = EmberObject.extend({\n      say(thing) {\n        alert(`${this.get('name')} says: ${thing}`);\n      }\n    });\n     const SingingMixin = Mixin.create({\n      sing(thing) {\n        alert(`${this.get('name')} sings: la la la ${thing}`);\n      }\n    });\n     const BroadwayStar = Person.extend(SingingMixin, {\n      dance() {\n        alert(`${this.get('name')} dances: tap tap tap tap `);\n      }\n    });\n    ```\n     The `BroadwayStar` class contains three methods: `say()`, `sing()`, and `dance()`.\n     @method extend\n    @static\n    @for @ember/object\n    @param {Mixin} [mixins]* One or more Mixin classes\n    @param {Object} [arguments]* Object containing values to use within the new class\n    @public\n  */\n\n  static extend(...mixins) {\n    let Class = class extends this {};\n    reopen.apply(Class.PrototypeMixin, mixins);\n    return Class;\n  }\n\n  /**\n    Creates an instance of a class. Accepts either no arguments, or an object\n    containing values to initialize the newly instantiated object with.\n     ```javascript\n    import EmberObject from '@ember/object';\n     const Person = EmberObject.extend({\n      helloWorld() {\n        alert(`Hi, my name is ${this.get('name')}`);\n      }\n    });\n     let tom = Person.create({\n      name: 'Tom Dale'\n    });\n     tom.helloWorld(); // alerts \"Hi, my name is Tom Dale\".\n    ```\n     `create` will call the `init` function if defined during\n    `AnyObject.extend`\n     If no arguments are passed to `create`, it will not set values to the new\n    instance during initialization:\n     ```javascript\n    let noName = Person.create();\n    noName.helloWorld(); // alerts undefined\n    ```\n     NOTE: For performance reasons, you cannot declare methods or computed\n    properties during `create`. You should instead declare methods and computed\n    properties when using `extend`.\n     @method create\n    @for @ember/object\n    @static\n    @param [arguments]*\n    @public\n  */\n\n  static create(...args) {\n    let props = args[0];\n    let instance;\n    if (props !== undefined) {\n      instance = new this((0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_12__.getOwner)(props));\n      // TODO(SAFETY): at present, we cannot actually rely on this being set,\n      // because a number of acceptance tests are (incorrectly? Unclear!)\n      // relying on the ability to run through this path with `factory` being\n      // `undefined`. It's *possible* that actually means that the type for\n      // `setFactoryFor()` should allow `undefined`, but we typed it the other\n      // way for good reason! Accordingly, this *casts* `factory`, and the\n      // commented-out `assert()` is here in the hope that we can enable it\n      // after addressing tests *or* updating the call signature here.\n      let factory = (0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_11__.g)(props);\n      // assert(`missing factory when creating object ${instance}`, factory !== undefined);\n      (0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_11__.s)(instance, factory);\n    } else {\n      instance = new this();\n    }\n    if (args.length <= 1) {\n      initialize(instance, props);\n    } else {\n      initialize(instance, flattenProps.apply(this, args));\n    }\n\n    // SAFETY: The `initialize` call is responsible to merge the prototype chain\n    // so that this holds.\n    return instance;\n  }\n\n  /**\n    Augments a constructor's prototype with additional\n    properties and functions:\n     ```javascript\n    import EmberObject from '@ember/object';\n     const MyObject = EmberObject.extend({\n      name: 'an object'\n    });\n     o = MyObject.create();\n    o.get('name'); // 'an object'\n     MyObject.reopen({\n      say(msg) {\n        console.log(msg);\n      }\n    });\n     o2 = MyObject.create();\n    o2.say('hello'); // logs \"hello\"\n     o.say('goodbye'); // logs \"goodbye\"\n    ```\n     To add functions and properties to the constructor itself,\n    see `reopenClass`\n     @method reopen\n    @for @ember/object\n    @static\n    @public\n  */\n  static reopen(...args) {\n    this.willReopen();\n    reopen.apply(this.PrototypeMixin, args);\n    return this;\n  }\n  static willReopen() {\n    let p = this.prototype;\n    if (wasApplied.has(p)) {\n      wasApplied.delete(p);\n\n      // If the base mixin already exists and was applied, create a new mixin to\n      // make sure that it gets properly applied. Reusing the same mixin after\n      // the first `proto` call will cause it to get skipped.\n      if (prototypeMixinMap.has(this)) {\n        prototypeMixinMap.set(this, _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"].create(this.PrototypeMixin));\n      }\n    }\n  }\n\n  /**\n    Augments a constructor's own properties and functions:\n     ```javascript\n    import EmberObject from '@ember/object';\n     const MyObject = EmberObject.extend({\n      name: 'an object'\n    });\n     MyObject.reopenClass({\n      canBuild: false\n    });\n     MyObject.canBuild; // false\n    o = MyObject.create();\n    ```\n     In other words, this creates static properties and functions for the class.\n    These are only available on the class and not on any instance of that class.\n     ```javascript\n    import EmberObject from '@ember/object';\n     const Person = EmberObject.extend({\n      name: '',\n      sayHello() {\n        alert(`Hello. My name is ${this.get('name')}`);\n      }\n    });\n     Person.reopenClass({\n      species: 'Homo sapiens',\n       createPerson(name) {\n        return Person.create({ name });\n      }\n    });\n     let tom = Person.create({\n      name: 'Tom Dale'\n    });\n    let yehuda = Person.createPerson('Yehuda Katz');\n     tom.sayHello(); // \"Hello. My name is Tom Dale\"\n    yehuda.sayHello(); // \"Hello. My name is Yehuda Katz\"\n    alert(Person.species); // \"Homo sapiens\"\n    ```\n     Note that `species` and `createPerson` are *not* valid on the `tom` and `yehuda`\n    variables. They are only valid on `Person`.\n     To add functions and properties to instances of\n    a constructor by extending the constructor's prototype\n    see `reopen`\n     @method reopenClass\n    @for @ember/object\n    @static\n    @public\n  */\n  static reopenClass(...mixins) {\n    (0,_ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__.applyMixin)(this, mixins);\n    return this;\n  }\n  static detect(obj) {\n    if ('function' !== typeof obj) {\n      return false;\n    }\n    while (obj) {\n      if (obj === this) {\n        return true;\n      }\n      obj = obj.superclass;\n    }\n    return false;\n  }\n  static detectInstance(obj) {\n    return obj instanceof this;\n  }\n\n  /**\n    In some cases, you may want to annotate computed properties with additional\n    metadata about how they function or what values they operate on. For\n    example, computed property functions may close over variables that are then\n    no longer available for introspection.\n     You can pass a hash of these values to a computed property like this:\n     ```javascript\n    import { computed } from '@ember/object';\n     person: computed(function() {\n      let personId = this.get('personId');\n      return Person.create({ id: personId });\n    }).meta({ type: Person })\n    ```\n     Once you've done this, you can retrieve the values saved to the computed\n    property from your class like this:\n     ```javascript\n    MyClass.metaForProperty('person');\n    ```\n     This will return the original hash that was passed to `meta()`.\n     @static\n    @method metaForProperty\n    @param key {String} property name\n    @private\n  */\n  static metaForProperty(key) {\n    let proto = this.proto(); // ensure prototype is initialized\n    let possibleDesc = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.B)(proto, key);\n     true && !(possibleDesc !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(`metaForProperty() could not find a computed property with key '${key}'.`, possibleDesc !== undefined);\n    return possibleDesc._meta || {};\n  }\n\n  /**\n    Iterate over each computed property for the class, passing its name\n    and any associated metadata (see `metaForProperty`) to the callback.\n     @static\n    @method eachComputedProperty\n    @param {Function} callback\n    @param {Object} binding\n    @private\n  */\n  static eachComputedProperty(callback, binding = this) {\n    this.proto(); // ensure prototype is initialized\n    let empty = {};\n    (0,_ember_internals_meta_lib_meta_js__WEBPACK_IMPORTED_MODULE_4__.meta)(this.prototype).forEachDescriptors((name, descriptor) => {\n      if (descriptor.enumerable) {\n        let meta = descriptor._meta || empty;\n        callback.call(binding, name, meta);\n      }\n    });\n  }\n  static get PrototypeMixin() {\n    let prototypeMixin = prototypeMixinMap.get(this);\n    if (prototypeMixin === undefined) {\n      prototypeMixin = _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"].create();\n      prototypeMixin.ownerConstructor = this;\n      prototypeMixinMap.set(this, prototypeMixin);\n    }\n    return prototypeMixin;\n  }\n  static get superclass() {\n    let c = Object.getPrototypeOf(this);\n    return c !== Function.prototype ? c : undefined;\n  }\n  static proto() {\n    let p = this.prototype;\n    if (!wasApplied.has(p)) {\n      wasApplied.add(p);\n      let parent = this.superclass;\n      if (parent) {\n        parent.proto();\n      }\n\n      // If the prototype mixin exists, apply it. In the case of native classes,\n      // it will not exist (unless the class has been reopened).\n      if (prototypeMixinMap.has(this)) {\n        this.PrototypeMixin.apply(p);\n      }\n    }\n    return p;\n  }\n  static toString() {\n    return `<${(0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_11__.g)(this) || '(unknown)'}:constructor>`;\n  }\n}\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(CoreObject, \"isClass\", true);\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(CoreObject, \"isMethod\", false);\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(CoreObject, \"_onLookup\", void 0);\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(CoreObject, \"_lazyInjections\", void 0);\nfunction flattenProps(...props) {\n  let initProperties = {};\n  for (let properties of props) {\n     true && !!(properties instanceof _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('EmberObject.create no longer supports mixing in other ' + 'definitions, use .extend & .create separately instead.', !(properties instanceof _ember_object_mixin_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]));\n    let keyNames = Object.keys(properties);\n    for (let j = 0, k = keyNames.length; j < k; j++) {\n      let keyName = keyNames[j];\n      let value = properties[keyName];\n      initProperties[keyName] = value;\n    }\n  }\n  return initProperties;\n}\nif (true) {\n  /**\n    Provides lookup-time type validation for injected properties.\n     @private\n    @method _onLookup\n  */\n  CoreObject._onLookup = function injectedPropertyAssertion(debugContainerKey) {\n    let [type] = debugContainerKey.split(':');\n    let proto = this.proto();\n    for (let key in proto) {\n      let desc = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.B)(proto, key);\n      if (desc && _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.ad.has(desc._getter)) {\n         true && !(type === 'controller' || _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.ad.get(desc._getter).type !== 'controller') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(`Defining \\`${key}\\` as an injected controller property on a non-controller (\\`${debugContainerKey}\\`) is not allowed.`, type === 'controller' || _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.ad.get(desc._getter).type !== 'controller');\n      }\n    }\n  };\n\n  /**\n    Returns a hash of property names and container names that injected\n    properties will lookup on the container lazily.\n     @method _lazyInjections\n    @return {Object} Hash of all lazy injected property keys to container names\n    @private\n  */\n  CoreObject._lazyInjections = function () {\n    let injections = {};\n    let proto = this.proto();\n    let key;\n    let desc;\n    for (key in proto) {\n      desc = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.B)(proto, key);\n      if (desc && _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.ad.has(desc._getter)) {\n        let {\n          namespace,\n          source,\n          type,\n          name\n        } = _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.ad.get(desc._getter);\n        injections[key] = {\n          namespace,\n          source,\n          specifier: `${type}:${name || key}`\n        };\n      }\n    }\n    return injections;\n  };\n}\nconst EmberCoreObject = CoreObject;\n\n/**\n@module @ember/object\n*/\n\n/**\n  `EmberObject` is the main base class for all Ember objects. It is a subclass\n  of `CoreObject` with the `Observable` mixin applied. For details,\n  see the documentation for each of these.\n\n  @class EmberObject\n  @extends CoreObject\n  @uses Observable\n  @public\n*/\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\nclass EmberObject extends EmberCoreObject.extend(Observable) {\n  get _debugContainerKey() {\n    let factory = (0,_registry_DzfcDwii_js__WEBPACK_IMPORTED_MODULE_11__.g)(this);\n    return factory !== undefined && factory.fullName;\n  }\n}\n\n/**\n  Decorator that turns the target function into an Action which can be accessed\n  directly by reference.\n\n  ```js\n  import Component from '@ember/component';\n  import { action, set } from '@ember/object';\n\n  export default class Tooltip extends Component {\n    @action\n    toggleShowing() {\n      set(this, 'isShowing', !this.isShowing);\n    }\n  }\n  ```\n  ```hbs\n  <!-- template.hbs -->\n  <button {{action this.toggleShowing}}>Show tooltip</button>\n\n  {{#if isShowing}}\n    <div class=\"tooltip\">\n      I'm a tooltip!\n    </div>\n  {{/if}}\n  ```\n\n  Decorated actions also interop with the string style template actions:\n\n  ```hbs\n  <!-- template.hbs -->\n  <button {{action \"toggleShowing\"}}>Show tooltip</button>\n\n  {{#if isShowing}}\n    <div class=\"tooltip\">\n      I'm a tooltip!\n    </div>\n  {{/if}}\n  ```\n\n  It also binds the function directly to the instance, so it can be used in any\n  context and will correctly refer to the class it came from:\n\n  ```hbs\n  <!-- template.hbs -->\n  <button\n    {{did-insert this.toggleShowing}}\n    {{on \"click\" this.toggleShowing}}\n  >\n    Show tooltip\n  </button>\n\n  {{#if isShowing}}\n    <div class=\"tooltip\">\n      I'm a tooltip!\n    </div>\n  {{/if}}\n  ```\n\n  This can also be used in JavaScript code directly:\n\n  ```js\n  import Component from '@ember/component';\n  import { action, set } from '@ember/object';\n\n  export default class Tooltip extends Component {\n    constructor() {\n      super(...arguments);\n\n      // this.toggleShowing is still bound correctly when added to\n      // the event listener\n      document.addEventListener('click', this.toggleShowing);\n    }\n\n    @action\n    toggleShowing() {\n      set(this, 'isShowing', !this.isShowing);\n    }\n  }\n  ```\n\n  This is considered best practice, since it means that methods will be bound\n  correctly no matter where they are used. By contrast, the `{{action}}` helper\n  and modifier can also be used to bind context, but it will be required for\n  every usage of the method:\n\n  ```hbs\n  <!-- template.hbs -->\n  <button\n    {{did-insert (action this.toggleShowing)}}\n    {{on \"click\" (action this.toggleShowing)}}\n  >\n    Show tooltip\n  </button>\n\n  {{#if isShowing}}\n    <div class=\"tooltip\">\n      I'm a tooltip!\n    </div>\n  {{/if}}\n  ```\n\n  They also do not have equivalents in JavaScript directly, so they cannot be\n  used for other situations where binding would be useful.\n\n  @public\n  @method action\n  @for @ember/object\n  @static\n  @param {Function|undefined} callback The function to turn into an action,\n                                       when used in classic classes\n  @return {PropertyDecorator} property decorator instance\n*/\n\nconst BINDINGS_MAP = new WeakMap();\nfunction hasProto(obj) {\n  return obj != null && obj.constructor !== undefined && typeof obj.constructor.proto === 'function';\n}\nfunction setupAction(target, key, actionFn) {\n  if (hasProto(target)) {\n    target.constructor.proto();\n  }\n  if (!Object.prototype.hasOwnProperty.call(target, 'actions')) {\n    let parentActions = target.actions;\n    // we need to assign because of the way mixins copy actions down when inheriting\n    target.actions = parentActions ? Object.assign({}, parentActions) : {};\n  }\n   true && !(target.actions != null) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(\"[BUG] Somehow the target doesn't have actions!\", target.actions != null);\n  target.actions[key] = actionFn;\n  return {\n    get() {\n      let bindings = BINDINGS_MAP.get(this);\n      if (bindings === undefined) {\n        bindings = new Map();\n        BINDINGS_MAP.set(this, bindings);\n      }\n      let fn = bindings.get(actionFn);\n      if (fn === undefined) {\n        fn = actionFn.bind(this);\n        bindings.set(actionFn, fn);\n      }\n      return fn;\n    }\n  };\n}\nfunction action(...args) {\n  let actionFn;\n  if (!(0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.i)(args)) {\n    actionFn = args[0];\n    let decorator = function (target, key, _desc, _meta, isClassicDecorator) {\n       true && !isClassicDecorator && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('The @action decorator may only be passed a method when used in classic classes. You should decorate methods directly in native classes', isClassicDecorator);\n       true && !(typeof actionFn === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('The action() decorator must be passed a method when used in classic classes', typeof actionFn === 'function');\n      return setupAction(target, key, actionFn);\n    };\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.L)(decorator);\n    return decorator;\n  }\n  let [target, key, desc] = args;\n  actionFn = desc?.value;\n   true && !(typeof actionFn === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('The @action decorator must be applied to methods when used in native classes', typeof actionFn === 'function'); // SAFETY: TS types are weird with decorators. This should work.\n  return setupAction(target, key, actionFn);\n}\n\n// SAFETY: TS types are weird with decorators. This should work.\n(0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.L)(action);\n\n// ..........................................................\n// OBSERVER HELPER\n//\n\n/**\n  Specify a method that observes property changes.\n\n  ```javascript\n  import EmberObject from '@ember/object';\n  import { observer } from '@ember/object';\n\n  export default EmberObject.extend({\n    valueObserver: observer('value', function() {\n      // Executes whenever the \"value\" property changes\n    })\n  });\n  ```\n\n  Also available as `Function.prototype.observes` if prototype extensions are\n  enabled.\n\n  @method observer\n  @for @ember/object\n  @param {String} propertyNames*\n  @param {Function} func\n  @return func\n  @public\n  @static\n*/\nfunction observer(...args) {\n  let funcOrDef = args.pop();\n   true && !(typeof funcOrDef === 'function' || typeof funcOrDef === 'object' && funcOrDef !== null) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('observer must be provided a function or an observer definition', typeof funcOrDef === 'function' || typeof funcOrDef === 'object' && funcOrDef !== null);\n  let func;\n  let dependentKeys;\n  let sync;\n  if (typeof funcOrDef === 'function') {\n    func = funcOrDef;\n    dependentKeys = args;\n    sync = !_env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_2__.E._DEFAULT_ASYNC_OBSERVERS;\n  } else {\n    func = funcOrDef.fn;\n    dependentKeys = funcOrDef.dependentKeys;\n    sync = funcOrDef.sync;\n  }\n   true && !(typeof func === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('observer called without a function', typeof func === 'function');\n   true && !(Array.isArray(dependentKeys) && dependentKeys.length > 0 && dependentKeys.every(p => typeof p === 'string' && Boolean(p.length))) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('observer called without valid path', Array.isArray(dependentKeys) && dependentKeys.length > 0 && dependentKeys.every(p => typeof p === 'string' && Boolean(p.length)));\n   true && !(typeof sync === 'boolean') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)('observer called without sync', typeof sync === 'boolean');\n  let paths = [];\n  for (let dependentKey of dependentKeys) {\n    (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.e)(dependentKey, path => paths.push(path));\n  }\n  (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_6__.s)(func, {\n    paths,\n    sync\n  });\n  return func;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-PYiGj1jp.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/invoke-BjRgvK2V.js":
/*!**************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/invoke-BjRgvK2V.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ canInvoke)\n/* harmony export */ });\n/**\n  Checks to see if the `methodName` exists on the `obj`.\n\n  ```javascript\n  let foo = { bar: function() { return 'bar'; }, baz: null };\n\n  Ember.canInvoke(foo, 'bar'); // true\n  Ember.canInvoke(foo, 'baz'); // false\n  Ember.canInvoke(foo, 'bat'); // false\n  ```\n\n  @method canInvoke\n  @for Ember\n  @param {Object} obj The object to check for the method\n  @param {String} methodName The method name to check for\n  @return {Boolean}\n  @private\n*/\nfunction canInvoke(obj, methodName) {\n  return obj != null && typeof obj[methodName] === 'function';\n}\n\n/**\n  @module @ember/utils\n*/\n\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/invoke-BjRgvK2V.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/is_proxy-Dmis-70B.js":
/*!****************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/is_proxy-Dmis-70B.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ isProxy),\n/* harmony export */   s: () => (/* binding */ setProxy)\n/* harmony export */ });\n/* harmony import */ var _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n\nconst PROXIES = new WeakSet();\nfunction isProxy(value) {\n  if ((0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.e)(value)) {\n    return PROXIES.has(value);\n  }\n  return false;\n}\nfunction setProxy(object) {\n  if ((0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.e)(object)) {\n    PROXIES.add(object);\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/is_proxy-Dmis-70B.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/managers-CbMgnSoo.js":
/*!****************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/managers-CbMgnSoo.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   s: () => (/* binding */ setComponentManager)\n/* harmony export */ });\n/* harmony import */ var _glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../@glimmer/manager/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/manager/index.js\");\n\n\n/**\n   Associate a class with a component manager (an object that is responsible for\n   coordinating the lifecycle events that occurs when invoking, rendering and\n   re-rendering a component).\n\n   @method setComponentManager\n   @param {Function} factory a function to create the owner for an object\n   @param {Object} obj the object to associate with the componetn manager\n   @return {Object} the same object passed in\n   @public\n  */\nfunction setComponentManager(manager, obj) {\n  return (0,_glimmer_manager_index_js__WEBPACK_IMPORTED_MODULE_0__.setComponentManager)(manager, obj);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/managers-CbMgnSoo.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js":
/*!************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   G: () => (/* binding */ GUID_KEY),\n/* harmony export */   R: () => (/* binding */ ROOT),\n/* harmony export */   a: () => (/* binding */ getDebugName$1),\n/* harmony export */   b: () => (/* binding */ generateGuid),\n/* harmony export */   c: () => (/* binding */ checkHasSuper),\n/* harmony export */   d: () => (/* binding */ setListeners),\n/* harmony export */   e: () => (/* binding */ isObject),\n/* harmony export */   f: () => (/* binding */ setupMandatorySetter),\n/* harmony export */   g: () => (/* binding */ guidFor),\n/* harmony export */   h: () => (/* binding */ setWithMandatorySetter),\n/* harmony export */   i: () => (/* binding */ intern),\n/* harmony export */   l: () => (/* binding */ lookupDescriptor),\n/* harmony export */   o: () => (/* binding */ observerListenerMetaFor),\n/* harmony export */   s: () => (/* binding */ setObservers),\n/* harmony export */   t: () => (/* binding */ teardownMandatorySetter),\n/* harmony export */   u: () => (/* binding */ uuid),\n/* harmony export */   w: () => (/* binding */ wrap)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n\n\n\n/**\n  Strongly hint runtimes to intern the provided string.\n\n  When do I need to use this function?\n\n  For the most part, never. Pre-mature optimization is bad, and often the\n  runtime does exactly what you need it to, and more often the trade-off isn't\n  worth it.\n\n  Why?\n\n  Runtimes store strings in at least 2 different representations:\n  Ropes and Symbols (interned strings). The Rope provides a memory efficient\n  data-structure for strings created from concatenation or some other string\n  manipulation like splitting.\n\n  Unfortunately checking equality of different ropes can be quite costly as\n  runtimes must resort to clever string comparison algorithms. These\n  algorithms typically cost in proportion to the length of the string.\n  Luckily, this is where the Symbols (interned strings) shine. As Symbols are\n  unique by their string content, equality checks can be done by pointer\n  comparison.\n\n  How do I know if my string is a rope or symbol?\n\n  Typically (warning general sweeping statement, but truthy in runtimes at\n  present) static strings created as part of the JS source are interned.\n  Strings often used for comparisons can be interned at runtime if some\n  criteria are met.  One of these criteria can be the size of the entire rope.\n  For example, in chrome 38 a rope longer then 12 characters will not\n  intern, nor will segments of that rope.\n\n  Some numbers: http://jsperf.com/eval-vs-keys/8\n\n  Known Trick™\n\n  @private\n  @return {String} interned version of the provided string\n*/\nfunction intern(str) {\n  let obj = Object.create(null);\n  obj[str] = 1;\n  for (let key in obj) {\n    if (key === str) {\n      return key;\n    }\n  }\n  return str;\n}\n\n/**\n  Returns whether Type(value) is Object.\n\n  Useful for checking whether a value is a valid WeakMap key.\n\n  Refs: https://tc39.github.io/ecma262/#sec-typeof-operator-runtime-semantics-evaluation\n        https://tc39.github.io/ecma262/#sec-weakmap.prototype.set\n\n  @private\n  @function isObject\n*/\nfunction isObject(value) {\n  return value !== null && (typeof value === 'object' || typeof value === 'function');\n}\n\n/**\n @module @ember/object\n*/\n\n/**\n @private\n @return {Number} the uuid\n */\nlet _uuid = 0;\n\n/**\n Generates a universally unique identifier. This method\n is used internally by Ember for assisting with\n the generation of GUID's and other unique identifiers.\n\n @public\n @return {Number} [description]\n */\nfunction uuid() {\n  return ++_uuid;\n}\n\n/**\n Prefix used for guids through out Ember.\n @private\n @property GUID_PREFIX\n @for Ember\n @type String\n @final\n */\nconst GUID_PREFIX = 'ember';\n\n// Used for guid generation...\nconst OBJECT_GUIDS = new WeakMap();\nconst NON_OBJECT_GUIDS = new Map();\n/**\n  A unique key used to assign guids and other private metadata to objects.\n  If you inspect an object in your browser debugger you will often see these.\n  They can be safely ignored.\n\n  On browsers that support it, these properties are added with enumeration\n  disabled so they won't show up when you iterate over your properties.\n\n  @private\n  @property GUID_KEY\n  @for Ember\n  @type String\n  @final\n*/\nconst GUID_KEY = intern(`__ember${Date.now()}`);\n\n/**\n  Generates a new guid, optionally saving the guid to the object that you\n  pass in. You will rarely need to use this method. Instead you should\n  call `guidFor(obj)`, which return an existing guid if available.\n\n  @private\n  @method generateGuid\n  @static\n  @for @ember/object/internals\n  @param {Object} [obj] Object the guid will be used for. If passed in, the guid will\n    be saved on the object and reused whenever you pass the same object\n    again.\n\n    If no object is passed, just generate a new guid.\n  @param {String} [prefix] Prefix to place in front of the guid. Useful when you want to\n    separate the guid into separate namespaces.\n  @return {String} the guid\n*/\nfunction generateGuid(obj, prefix = GUID_PREFIX) {\n  let guid = prefix + uuid().toString();\n  if (isObject(obj)) {\n    OBJECT_GUIDS.set(obj, guid);\n  }\n  return guid;\n}\n\n/**\n  Returns a unique id for the object. If the object does not yet have a guid,\n  one will be assigned to it. You can call this on any object,\n  `EmberObject`-based or not.\n\n  You can also use this method on DOM Element objects.\n\n  @public\n  @static\n  @method guidFor\n  @for @ember/object/internals\n  @param {Object} obj any object, string, number, Element, or primitive\n  @return {String} the unique guid for this instance.\n*/\nfunction guidFor(value) {\n  let guid;\n  if (isObject(value)) {\n    guid = OBJECT_GUIDS.get(value);\n    if (guid === undefined) {\n      guid = `${GUID_PREFIX}${uuid()}`;\n      OBJECT_GUIDS.set(value, guid);\n    }\n  } else {\n    guid = NON_OBJECT_GUIDS.get(value);\n    if (guid === undefined) {\n      let type = typeof value;\n      if (type === 'string') {\n        guid = `st${uuid()}`;\n      } else if (type === 'number') {\n        guid = `nu${uuid()}`;\n      } else if (type === 'symbol') {\n        guid = `sy${uuid()}`;\n      } else {\n        guid = `(${value})`;\n      }\n      NON_OBJECT_GUIDS.set(value, guid);\n    }\n  }\n  return guid;\n}\nlet getDebugName;\nif (true) {\n  let getFunctionName = fn => {\n    let functionName = fn.name;\n    if (functionName === undefined) {\n      let match = Function.prototype.toString.call(fn).match(/function (\\w+)\\s*\\(/);\n      functionName = match && match[1] || '';\n    }\n    return functionName.replace(/^bound /, '');\n  };\n  let getObjectName = obj => {\n    let name;\n    let className;\n    if (obj.constructor && obj.constructor !== Object) {\n      className = getFunctionName(obj.constructor);\n    }\n    if ('toString' in obj && obj.toString !== Object.prototype.toString && obj.toString !== Function.prototype.toString) {\n      name = obj.toString();\n    }\n\n    // If the class has a decent looking name, and the `toString` is one of the\n    // default Ember toStrings, replace the constructor portion of the toString\n    // with the class name. We check the length of the class name to prevent doing\n    // this when the value is minified.\n    if (name && name.match(/<.*:ember\\d+>/) && className && className[0] !== '_' && className.length > 2 && className !== 'Class') {\n      return name.replace(/<.*:/, `<${className}:`);\n    }\n    return name || className;\n  };\n  let getPrimitiveName = value => {\n    return String(value);\n  };\n  getDebugName = value => {\n    if (typeof value === 'function') {\n      return getFunctionName(value) || `(unknown function)`;\n    } else if (typeof value === 'object' && value !== null) {\n      return getObjectName(value) || `(unknown object)`;\n    } else {\n      return getPrimitiveName(value);\n    }\n  };\n}\nconst getDebugName$1 = getDebugName;\nconst HAS_SUPER_PATTERN = /\\.(_super|call\\(this|apply\\(this)/;\nconst fnToString = Function.prototype.toString;\nconst checkHasSuper = (() => {\n  let sourceAvailable = fnToString.call(function () {\n    return this;\n  }).indexOf('return this') > -1;\n  if (sourceAvailable) {\n    return function checkHasSuper(func) {\n      return HAS_SUPER_PATTERN.test(fnToString.call(func));\n    };\n  }\n  return function checkHasSuper() {\n    return true;\n  };\n})();\nconst HAS_SUPER_MAP = new WeakMap();\nconst ROOT = Object.freeze(function () {});\nHAS_SUPER_MAP.set(ROOT, false);\nfunction hasSuper(func) {\n  let hasSuper = HAS_SUPER_MAP.get(func);\n  if (hasSuper === undefined) {\n    hasSuper = checkHasSuper(func);\n    HAS_SUPER_MAP.set(func, hasSuper);\n  }\n  return hasSuper;\n}\nclass ObserverListenerMeta {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"listeners\", undefined);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"observers\", undefined);\n  }\n}\nconst OBSERVERS_LISTENERS_MAP = new WeakMap();\nfunction createObserverListenerMetaFor(fn) {\n  let meta = OBSERVERS_LISTENERS_MAP.get(fn);\n  if (meta === undefined) {\n    meta = new ObserverListenerMeta();\n    OBSERVERS_LISTENERS_MAP.set(fn, meta);\n  }\n  return meta;\n}\nfunction observerListenerMetaFor(fn) {\n  return OBSERVERS_LISTENERS_MAP.get(fn);\n}\nfunction setObservers(func, observers) {\n  let meta = createObserverListenerMetaFor(func);\n  meta.observers = observers;\n}\nfunction setListeners(func, listeners) {\n  let meta = createObserverListenerMetaFor(func);\n  meta.listeners = listeners;\n}\nconst IS_WRAPPED_FUNCTION_SET = new WeakSet();\n\n/**\n  Wraps the passed function so that `this._super` will point to the superFunc\n  when the function is invoked. This is the primitive we use to implement\n  calls to super.\n\n  @private\n  @method wrap\n  @for Ember\n  @param {Function} func The function to call\n  @param {Function} superFunc The super function.\n  @return {Function} wrapped function.\n*/\nfunction wrap(func, superFunc) {\n  if (!hasSuper(func)) {\n    return func;\n  }\n  // ensure an unwrapped super that calls _super is wrapped with a terminal _super\n  if (!IS_WRAPPED_FUNCTION_SET.has(superFunc) && hasSuper(superFunc)) {\n    return _wrap(func, _wrap(superFunc, ROOT));\n  }\n  return _wrap(func, superFunc);\n}\nfunction _wrap(func, superFunc) {\n  function superWrapper() {\n    let orig = this._super;\n    this._super = superFunc;\n    let ret = func.apply(this, arguments);\n    this._super = orig;\n    return ret;\n  }\n  IS_WRAPPED_FUNCTION_SET.add(superWrapper);\n  let meta = OBSERVERS_LISTENERS_MAP.get(func);\n  if (meta !== undefined) {\n    OBSERVERS_LISTENERS_MAP.set(superWrapper, meta);\n  }\n  return superWrapper;\n}\nfunction lookupDescriptor(obj, keyName) {\n  let current = obj;\n  do {\n    let descriptor = Object.getOwnPropertyDescriptor(current, keyName);\n    if (descriptor !== undefined) {\n      return descriptor;\n    }\n    current = Object.getPrototypeOf(current);\n  } while (current !== null);\n  return null;\n}\nlet setupMandatorySetter;\nlet teardownMandatorySetter;\nlet setWithMandatorySetter;\nfunction isElementKey(key) {\n  return typeof key === 'number' ? isPositiveInt(key) : isStringInt(key);\n}\nfunction isStringInt(str) {\n  let num = parseInt(str, 10);\n  return isPositiveInt(num) && str === String(num);\n}\nfunction isPositiveInt(num) {\n  return num >= 0 && num % 1 === 0;\n}\nif (true) {\n  let SEEN_TAGS = new WeakSet();\n  let MANDATORY_SETTERS = new WeakMap();\n  let propertyIsEnumerable = function (obj, key) {\n    return Object.prototype.propertyIsEnumerable.call(obj, key);\n  };\n  setupMandatorySetter = function (tag, obj, keyName) {\n    if (SEEN_TAGS.has(tag)) {\n      return;\n    }\n    SEEN_TAGS.add(tag);\n    if (Array.isArray(obj) && isElementKey(keyName)) {\n      return;\n    }\n    let desc = lookupDescriptor(obj, keyName) || {};\n    if (desc.get || desc.set) {\n      // if it has a getter or setter, we can't install the mandatory setter.\n      // native setters are allowed, we have to assume that they will resolve\n      // to tracked properties.\n      return;\n    }\n    if (desc && (!desc.configurable || !desc.writable)) {\n      // if it isn't writable anyways, so we shouldn't provide the setter.\n      // if it isn't configurable, we can't overwrite it anyways.\n      return;\n    }\n    let setters = MANDATORY_SETTERS.get(obj);\n    if (setters === undefined) {\n      setters = {};\n      MANDATORY_SETTERS.set(obj, setters);\n    }\n    desc.hadOwnProperty = Object.hasOwnProperty.call(obj, keyName);\n    setters[keyName] = desc;\n    Object.defineProperty(obj, keyName, {\n      configurable: true,\n      enumerable: propertyIsEnumerable(obj, keyName),\n      get() {\n        if (desc.get) {\n          return desc.get.call(this);\n        } else {\n          return desc.value;\n        }\n      },\n      set(value) {\n         true && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_1__.a)(`You attempted to update ${this}.${String(keyName)} to \"${String(value)}\", but it is being tracked by a tracking context, such as a template, computed property, or observer. In order to make sure the context updates properly, you must invalidate the property when updating it. You can mark the property as \\`@tracked\\`, or use \\`@ember/object#set\\` to do this.`);\n      }\n    });\n  };\n  teardownMandatorySetter = function (obj, keyName) {\n    let setters = MANDATORY_SETTERS.get(obj);\n    if (setters !== undefined && setters[keyName] !== undefined) {\n      Object.defineProperty(obj, keyName, setters[keyName]);\n      delete setters[keyName];\n    }\n  };\n  setWithMandatorySetter = function (obj, keyName, value) {\n    let setters = MANDATORY_SETTERS.get(obj);\n    if (setters !== undefined && setters[keyName] !== undefined) {\n      let setter = setters[keyName];\n      if (setter.set) {\n        setter.set.call(obj, value);\n      } else {\n        setter.value = value;\n\n        // If the object didn't have own property before, it would have changed\n        // the enumerability after setting the value the first time.\n        if (!setter.hadOwnProperty) {\n          let desc = lookupDescriptor(obj, keyName);\n          desc.enumerable = true;\n          Object.defineProperty(obj, keyName, desc);\n        }\n      }\n    } else {\n      obj[keyName] = value;\n    }\n  };\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/name-z9D9Yibn.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/name-z9D9Yibn.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getName),\n/* harmony export */   s: () => (/* binding */ setName)\n/* harmony export */ });\n/* harmony import */ var _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n\nconst NAMES = new WeakMap();\nfunction setName(obj, name) {\n  if ((0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.e)(obj)) NAMES.set(obj, name);\n}\nfunction getName(obj) {\n  return NAMES.get(obj);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/name-z9D9Yibn.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/namespace_search-CBgHTkDh.js":
/*!************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/namespace_search-CBgHTkDh.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   N: () => (/* binding */ NAMESPACES),\n/* harmony export */   a: () => (/* binding */ NAMESPACES_BY_ID),\n/* harmony export */   b: () => (/* binding */ addNamespace),\n/* harmony export */   c: () => (/* binding */ findNamespaces),\n/* harmony export */   d: () => (/* binding */ processNamespace),\n/* harmony export */   e: () => (/* binding */ setSearchDisabled),\n/* harmony export */   f: () => (/* binding */ findNamespace),\n/* harmony export */   i: () => (/* binding */ isSearchDisabled),\n/* harmony export */   p: () => (/* binding */ processAllNamespaces),\n/* harmony export */   r: () => (/* binding */ removeNamespace),\n/* harmony export */   s: () => (/* binding */ setUnprocessedMixins)\n/* harmony export */ });\n/* harmony import */ var _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./env-BJLX2Arx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/env-BJLX2Arx.js\");\n/* harmony import */ var _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _name_z9D9Yibn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./name-z9D9Yibn.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/name-z9D9Yibn.js\");\n\n\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nlet searchDisabled = false;\nconst flags = {\n  _set: 0,\n  _unprocessedNamespaces: false,\n  get unprocessedNamespaces() {\n    return this._unprocessedNamespaces;\n  },\n  set unprocessedNamespaces(v) {\n    this._set++;\n    this._unprocessedNamespaces = v;\n  }\n};\nlet unprocessedMixins = false;\nconst NAMESPACES = [];\nconst NAMESPACES_BY_ID = Object.create(null);\nfunction addNamespace(namespace) {\n  flags.unprocessedNamespaces = true;\n  NAMESPACES.push(namespace);\n}\nfunction removeNamespace(namespace) {\n  let name = (0,_name_z9D9Yibn_js__WEBPACK_IMPORTED_MODULE_2__.g)(namespace);\n  delete NAMESPACES_BY_ID[name];\n  NAMESPACES.splice(NAMESPACES.indexOf(namespace), 1);\n  if (name in _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.c.lookup && namespace === _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.c.lookup[name]) {\n    _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.c.lookup[name] = undefined;\n  }\n}\nfunction findNamespaces() {\n  if (!flags.unprocessedNamespaces) {\n    return;\n  }\n  let lookup = _env_BJLX2Arx_js__WEBPACK_IMPORTED_MODULE_0__.c.lookup;\n  let keys = Object.keys(lookup);\n  for (let key of keys) {\n    // Only process entities that start with uppercase A-Z\n    if (!isUppercase(key.charCodeAt(0))) {\n      continue;\n    }\n    let obj = tryIsNamespace(lookup, key);\n    if (obj) {\n      (0,_name_z9D9Yibn_js__WEBPACK_IMPORTED_MODULE_2__.s)(obj, key);\n    }\n  }\n}\nfunction findNamespace(name) {\n  if (!searchDisabled) {\n    processAllNamespaces();\n  }\n  return NAMESPACES_BY_ID[name];\n}\nfunction processNamespace(namespace) {\n  _processNamespace([namespace.toString()], namespace, new Set());\n}\nfunction processAllNamespaces() {\n  let unprocessedNamespaces = flags.unprocessedNamespaces;\n  if (unprocessedNamespaces) {\n    findNamespaces();\n    flags.unprocessedNamespaces = false;\n  }\n  if (unprocessedNamespaces || unprocessedMixins) {\n    let namespaces = NAMESPACES;\n    for (let namespace of namespaces) {\n      processNamespace(namespace);\n    }\n    unprocessedMixins = false;\n  }\n}\nfunction isSearchDisabled() {\n  return searchDisabled;\n}\nfunction setSearchDisabled(flag) {\n  searchDisabled = Boolean(flag);\n}\nfunction setUnprocessedMixins() {\n  unprocessedMixins = true;\n}\nfunction _processNamespace(paths, root, seen) {\n  let idx = paths.length;\n  let id = paths.join('.');\n  NAMESPACES_BY_ID[id] = root;\n  (0,_name_z9D9Yibn_js__WEBPACK_IMPORTED_MODULE_2__.s)(root, id);\n\n  // Loop over all of the keys in the namespace, looking for classes\n  for (let key in root) {\n    if (!hasOwnProperty.call(root, key)) {\n      continue;\n    }\n    let obj = root[key];\n\n    // If we are processing the `Ember` namespace, for example, the\n    // `paths` will start with `[\"Ember\"]`. Every iteration through\n    // the loop will update the **second** element of this list with\n    // the key, so processing `Ember.View` will make the Array\n    // `['Ember', 'View']`.\n    paths[idx] = key;\n\n    // If we have found an unprocessed class\n    if (obj && (0,_name_z9D9Yibn_js__WEBPACK_IMPORTED_MODULE_2__.g)(obj) === void 0) {\n      // Replace the class' `toString` with the dot-separated path\n      (0,_name_z9D9Yibn_js__WEBPACK_IMPORTED_MODULE_2__.s)(obj, paths.join('.'));\n      // Support nested namespaces\n    } else if (obj && isNamespace(obj)) {\n      // Skip aliased namespaces\n      if (seen.has(obj)) {\n        continue;\n      }\n      seen.add(obj);\n      // Process the child namespace\n      _processNamespace(paths, obj, seen);\n    }\n  }\n  paths.length = idx; // cut out last item\n}\nfunction isNamespace(obj) {\n  return obj != null && typeof obj === 'object' && obj.isNamespace;\n}\nfunction isUppercase(code) {\n  return code >= 65 && code <= 90 // A\n  ; // Z\n}\nfunction tryIsNamespace(lookup, prop) {\n  try {\n    let obj = lookup[prop];\n    return (obj !== null && typeof obj === 'object' || typeof obj === 'function') && obj.isNamespace && obj;\n  } catch (_e) {\n    // continue\n  }\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/namespace_search-CBgHTkDh.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js":
/*!********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ _setProp),\n/* harmony export */   s: () => (/* binding */ set),\n/* harmony export */   t: () => (/* binding */ trySet)\n/* harmony export */ });\n/* harmony import */ var _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./to-string-D8i3mjEU.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/to-string-D8i3mjEU.js\");\n/* harmony import */ var _index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n\n\n\n\n\n/**\n @module @ember/object\n*/\n/**\n  Sets the value of a property on an object, respecting computed properties\n  and notifying observers and other listeners of the change.\n  If the specified property is not defined on the object and the object\n  implements the `setUnknownProperty` method, then instead of setting the\n  value of the property on the object, its `setUnknownProperty` handler\n  will be invoked with the two parameters `keyName` and `value`.\n\n  ```javascript\n  import { set } from '@ember/object';\n  set(obj, \"name\", value);\n  ```\n\n  @method set\n  @static\n  @for @ember/object\n  @param {Object} obj The object to modify.\n  @param {String} keyName The property key to set\n  @param {Object} value The value to set\n  @return {Object} the passed value.\n  @public\n*/\nfunction set(obj, keyName, value, tolerant) {\n   true && !(arguments.length === 3 || arguments.length === 4) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`Set must be called with three or four arguments; an object, a property key, a value and tolerant true/false`, arguments.length === 3 || arguments.length === 4);\n   true && !(obj && typeof obj === 'object' || typeof obj === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`Cannot call set with '${keyName}' on an undefined object.`, obj && typeof obj === 'object' || typeof obj === 'function');\n   true && !(typeof keyName === 'string' || typeof keyName === 'number' && !isNaN(keyName)) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`The key provided to set must be a string or number, you passed ${keyName}`, typeof keyName === 'string' || typeof keyName === 'number' && !isNaN(keyName));\n   true && !(typeof keyName !== 'string' || keyName.lastIndexOf('this.', 0) !== 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`'this' in paths is not supported`, typeof keyName !== 'string' || keyName.lastIndexOf('this.', 0) !== 0);\n  if (obj.isDestroyed) {\n     true && !tolerant && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)(`calling set on destroyed object: ${(0,_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_1__.t)(obj)}.${keyName} = ${(0,_to_string_D8i3mjEU_js__WEBPACK_IMPORTED_MODULE_1__.t)(value)}`, tolerant);\n    return value;\n  }\n  return (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.h)(keyName) ? _setPath(obj, keyName, value, tolerant) : _setProp(obj, keyName, value);\n}\nfunction _setProp(obj, keyName, value) {\n  let descriptor = (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.l)(obj, keyName);\n  if (descriptor !== null && _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.k.has(descriptor.set)) {\n    obj[keyName] = value;\n    return value;\n  }\n  let currentValue;\n  if (true) {\n    currentValue = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.l)(obj, keyName);\n  } else {}\n  if (currentValue === undefined && 'object' === typeof obj && !(keyName in obj) && typeof obj.setUnknownProperty === 'function') {\n    /* unknown property */\n    obj.setUnknownProperty(keyName, value);\n  } else {\n    if (true) {\n      (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.h)(obj, keyName, value);\n    } else {}\n    if (currentValue !== value) {\n      (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.n)(obj, keyName);\n    }\n  }\n  return value;\n}\nfunction _setPath(root, path, value, tolerant) {\n  let parts = path.split('.');\n  let keyName = parts.pop();\n   true && !(keyName.trim().length > 0) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_2__.a)('Property set failed: You passed an empty path', keyName.trim().length > 0);\n  let newRoot = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_3__.m)(root, parts, true);\n  if (newRoot !== null && newRoot !== undefined) {\n    return set(newRoot, keyName, value);\n  } else if (!tolerant) {\n    throw new Error(`Property set failed: object in path \"${parts.join('.')}\" could not be found.`);\n  }\n}\n\n/**\n  Error-tolerant form of `set`. Will not blow up if any part of the\n  chain is `undefined`, `null`, or destroyed.\n\n  This is primarily used when syncing bindings, which may try to update after\n  an object has been destroyed.\n\n  ```javascript\n  import { trySet } from '@ember/object';\n\n  let obj = { name: \"Zoey\" };\n  trySet(obj, \"contacts.twitter\", \"@emberjs\");\n  ```\n\n  @method trySet\n  @static\n  @for @ember/object\n  @param {Object} root The object to modify.\n  @param {String} path The property path to set\n  @param {Object} value The value to set\n  @public\n*/\nfunction trySet(root, path, value) {\n  return set(root, path, value, true);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js":
/*!****************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ Container),\n/* harmony export */   I: () => (/* binding */ INIT_FACTORY),\n/* harmony export */   R: () => (/* binding */ Registry),\n/* harmony export */   g: () => (/* binding */ getFactoryFor),\n/* harmony export */   p: () => (/* binding */ privatize),\n/* harmony export */   s: () => (/* binding */ setFactoryFor)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n/* harmony import */ var _dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dictionary-gc5gpyOG.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/dictionary-gc5gpyOG.js\");\n/* harmony import */ var _index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-DTxy4Zgx.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/index-DTxy4Zgx.js\");\n/* harmony import */ var _ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../@ember/-internals/owner/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/owner/index.js\");\n\n\n\n\n\n\n// doesn't work with isolatedModules\nlet leakTracking;\nlet containers;\nif (true) {\n  // requires v8\n  // chrome --js-flags=\"--allow-natives-syntax --expose-gc\"\n  // node --allow-natives-syntax --expose-gc\n  try {\n    if (typeof gc === 'function') {\n      leakTracking = (() => {\n        // avoid syntax errors when --allow-natives-syntax not present\n        let GetWeakSetValues = new Function('weakSet', 'return %GetWeakSetValues(weakSet, 0)');\n        containers = new WeakSet();\n        return {\n          hasContainers() {\n            gc();\n            return GetWeakSetValues(containers).length > 0;\n          },\n          reset() {\n            let values = GetWeakSetValues(containers);\n            for (let i = 0; i < values.length; i++) {\n              containers.delete(values[i]);\n            }\n          }\n        };\n      })();\n    }\n  } catch (_e) {\n    // ignore\n  }\n}\n/**\n A container used to instantiate and cache objects.\n\n Every `Container` must be associated with a `Registry`, which is referenced\n to determine the factory and options that should be used to instantiate\n objects.\n\n The public API for `Container` is still in flux and should not be considered\n stable.\n\n @private\n @class Container\n */\nclass Container {\n  constructor(registry, options = {}) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"owner\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"registry\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"cache\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"factoryManagerCache\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"validationCache\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isDestroyed\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isDestroying\", void 0);\n    this.registry = registry;\n    this.owner = options.owner || null;\n    this.cache = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(options.cache || null);\n    this.factoryManagerCache = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(options.factoryManagerCache || null);\n    this.isDestroyed = false;\n    this.isDestroying = false;\n    if (true) {\n      this.validationCache = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(options.validationCache || null);\n      if (containers !== undefined) {\n        containers.add(this);\n      }\n    }\n  }\n\n  /**\n   @private\n   @property registry\n   @type Registry\n   @since 1.11.0\n   */\n\n  /**\n   @private\n   @property cache\n   @type InheritingDict\n   */\n\n  /**\n   @private\n   @property validationCache\n   @type InheritingDict\n   */\n\n  /**\n   Given a fullName return a corresponding instance.\n    The default behavior is for lookup to return a singleton instance.\n   The singleton is scoped to the container, allowing multiple containers\n   to all have their own locally scoped singletons.\n    ```javascript\n   let registry = new Registry();\n   let container = registry.container();\n    registry.register('api:twitter', Twitter);\n    let twitter = container.lookup('api:twitter');\n    twitter instanceof Twitter; // => true\n    // by default the container will return singletons\n   let twitter2 = container.lookup('api:twitter');\n   twitter2 instanceof Twitter; // => true\n    twitter === twitter2; //=> true\n   ```\n    If singletons are not wanted, an optional flag can be provided at lookup.\n    ```javascript\n   let registry = new Registry();\n   let container = registry.container();\n    registry.register('api:twitter', Twitter);\n    let twitter = container.lookup('api:twitter', { singleton: false });\n   let twitter2 = container.lookup('api:twitter', { singleton: false });\n    twitter === twitter2; //=> false\n   ```\n    @private\n   @method lookup\n   @param {String} fullName\n   @param {RegisterOptions} [options]\n   @return {any}\n   */\n  lookup(fullName, options) {\n    if (this.isDestroyed) {\n      throw new Error(`Cannot call \\`.lookup('${fullName}')\\` after the owner has been destroyed`);\n    }\n     true && !this.registry.isValidFullName(fullName) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('fullName must be a proper full name', this.registry.isValidFullName(fullName));\n    return lookup(this, this.registry.normalize(fullName), options);\n  }\n\n  /**\n   A depth first traversal, destroying the container, its descendant containers and all\n   their managed objects.\n    @private\n   @method destroy\n   */\n  destroy() {\n    this.isDestroying = true;\n    destroyDestroyables(this);\n  }\n  finalizeDestroy() {\n    resetCache(this);\n    this.isDestroyed = true;\n  }\n\n  /**\n   Clear either the entire cache or just the cache for a particular key.\n    @private\n   @method reset\n   @param {String} fullName optional key to reset; if missing, resets everything\n  */\n  reset(fullName) {\n    if (this.isDestroyed) return;\n    if (fullName === undefined) {\n      destroyDestroyables(this);\n      resetCache(this);\n    } else {\n      resetMember(this, this.registry.normalize(fullName));\n    }\n  }\n\n  /**\n   Returns an object that can be used to provide an owner to a\n   manually created instance.\n    @private\n   @method ownerInjection\n   @returns { Object }\n  */\n  ownerInjection() {\n    let injection = {};\n    (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_4__.setOwner)(injection, this.owner);\n    return injection;\n  }\n\n  /**\n   Given a fullName, return the corresponding factory. The consumer of the factory\n   is responsible for the destruction of any factory instances, as there is no\n   way for the container to ensure instances are destroyed when it itself is\n   destroyed.\n    @public\n   @method factoryFor\n   @param {String} fullName\n   @return {any}\n   */\n  factoryFor(fullName) {\n    if (this.isDestroyed) {\n      throw new Error(`Cannot call \\`.factoryFor('${fullName}')\\` after the owner has been destroyed`);\n    }\n    let normalizedName = this.registry.normalize(fullName);\n     true && !this.registry.isValidFullName(normalizedName) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('fullName must be a proper full name', this.registry.isValidFullName(normalizedName));\n    return factoryFor(this, normalizedName, fullName);\n  }\n}\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Container, \"_leakTracking\", void 0);\nif (true) {\n  Container._leakTracking = leakTracking;\n}\n\n/*\n * Wrap a factory manager in a proxy which will not permit properties to be\n * set on the manager.\n */\nfunction wrapManagerInDeprecationProxy(manager) {\n  let validator = {\n    set(_obj, prop) {\n      throw new Error(`You attempted to set \"${String(prop)}\" on a factory manager created by container#factoryFor. A factory manager is a read-only construct.`);\n    }\n  };\n\n  // Note:\n  // We have to proxy access to the manager here so that private property\n  // access doesn't cause the above errors to occur.\n  let m = manager;\n  let proxiedManager = {\n    class: m.class,\n    create(props) {\n      return m.create(props);\n    }\n  };\n  return new Proxy(proxiedManager, validator);\n}\nfunction isSingleton(container, fullName) {\n  return container.registry.getOption(fullName, 'singleton') !== false;\n}\nfunction isInstantiatable(container, fullName) {\n  return container.registry.getOption(fullName, 'instantiate') !== false;\n}\nfunction lookup(container, fullName, options = {}) {\n  let normalizedName = fullName;\n  if (options.singleton === true || options.singleton === undefined && isSingleton(container, fullName)) {\n    let cached = container.cache[normalizedName];\n    if (cached !== undefined) {\n      return cached;\n    }\n  }\n  return instantiateFactory(container, normalizedName, fullName, options);\n}\nfunction factoryFor(container, normalizedName, fullName) {\n  let cached = container.factoryManagerCache[normalizedName];\n  if (cached !== undefined) {\n    return cached;\n  }\n  let factory = container.registry.resolve(normalizedName);\n  if (factory === undefined) {\n    return;\n  }\n  if ( true && factory && typeof factory._onLookup === 'function') {\n    factory._onLookup(fullName);\n  }\n  let manager = new InternalFactoryManager(container, factory, fullName, normalizedName);\n  if (true) {\n    manager = wrapManagerInDeprecationProxy(manager);\n  }\n  container.factoryManagerCache[normalizedName] = manager;\n  return manager;\n}\nfunction isSingletonClass(container, fullName, {\n  instantiate,\n  singleton\n}) {\n  return singleton !== false && !instantiate && isSingleton(container, fullName) && !isInstantiatable(container, fullName);\n}\nfunction isSingletonInstance(container, fullName, {\n  instantiate,\n  singleton\n}) {\n  return singleton !== false && instantiate !== false && (singleton === true || isSingleton(container, fullName)) && isInstantiatable(container, fullName);\n}\nfunction isFactoryClass(container, fullname, {\n  instantiate,\n  singleton\n}) {\n  return instantiate === false && (singleton === false || !isSingleton(container, fullname)) && !isInstantiatable(container, fullname);\n}\nfunction isFactoryInstance(container, fullName, {\n  instantiate,\n  singleton\n}) {\n  return instantiate !== false && (singleton === false || !isSingleton(container, fullName)) && isInstantiatable(container, fullName);\n}\nfunction instantiateFactory(container, normalizedName, fullName, options) {\n  let factoryManager = factoryFor(container, normalizedName, fullName);\n  if (factoryManager === undefined) {\n    return;\n  }\n\n  // SomeClass { singleton: true, instantiate: true } | { singleton: true } | { instantiate: true } | {}\n  // By default majority of objects fall into this case\n  if (isSingletonInstance(container, fullName, options)) {\n    let instance = container.cache[normalizedName] = factoryManager.create();\n\n    // if this lookup happened _during_ destruction (emits a deprecation, but\n    // is still possible) ensure that it gets destroyed\n    if (container.isDestroying) {\n      if (typeof instance.destroy === 'function') {\n        instance.destroy();\n      }\n    }\n    return instance;\n  }\n\n  // SomeClass { singleton: false, instantiate: true }\n  if (isFactoryInstance(container, fullName, options)) {\n    return factoryManager.create();\n  }\n\n  // SomeClass { singleton: true, instantiate: false } | { instantiate: false } | { singleton: false, instantiation: false }\n  if (isSingletonClass(container, fullName, options) || isFactoryClass(container, fullName, options)) {\n    return factoryManager.class;\n  }\n  throw new Error('Could not create factory');\n}\nfunction destroyDestroyables(container) {\n  let cache = container.cache;\n  let keys = Object.keys(cache);\n  for (let key of keys) {\n    let value = cache[key];\n     true && !value && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has cached value', value);\n    if (value.destroy) {\n      value.destroy();\n    }\n  }\n}\nfunction resetCache(container) {\n  container.cache = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(null);\n  container.factoryManagerCache = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(null);\n}\nfunction resetMember(container, fullName) {\n  let member = container.cache[fullName];\n  delete container.factoryManagerCache[fullName];\n  if (member) {\n    delete container.cache[fullName];\n    if (member.destroy) {\n      member.destroy();\n    }\n  }\n}\nconst INIT_FACTORY = Symbol('INIT_FACTORY');\nfunction getFactoryFor(obj) {\n  // SAFETY: since we know `obj` is an `object`, we also know we can safely ask\n  // whether a key is set on it.\n  return obj[INIT_FACTORY];\n}\nfunction setFactoryFor(obj, factory) {\n  // SAFETY: since we know `obj` is an `object`, we also know we can safely set\n  // a key it safely at this location. (The only way this could be blocked is if\n  // someone has gone out of their way to use `Object.defineProperty()` with our\n  // internal-only symbol and made it `writable: false`.)\n  obj[INIT_FACTORY] = factory;\n}\nclass InternalFactoryManager {\n  constructor(container, factory, fullName, normalizedName) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"container\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"owner\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"class\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"fullName\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"normalizedName\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"madeToString\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"injections\", void 0);\n    this.container = container;\n    this.owner = container.owner;\n    this.class = factory;\n    this.fullName = fullName;\n    this.normalizedName = normalizedName;\n    this.madeToString = undefined;\n    this.injections = undefined;\n  }\n  toString() {\n    if (this.madeToString === undefined) {\n      this.madeToString = this.container.registry.makeToString(this.class, this.fullName);\n    }\n    return this.madeToString;\n  }\n  create(options) {\n    let {\n      container\n    } = this;\n    if (container.isDestroyed) {\n      throw new Error(`Cannot create new instances after the owner has been destroyed (you attempted to create ${this.fullName})`);\n    }\n    let props = options ? {\n      ...options\n    } : {};\n    (0,_ember_internals_owner_index_js__WEBPACK_IMPORTED_MODULE_4__.setOwner)(props, container.owner);\n    setFactoryFor(props, this);\n    if (true) {\n      let lazyInjections;\n      let validationCache = this.container.validationCache;\n      // Ensure that all lazy injections are valid at instantiation time\n      if (!validationCache[this.fullName] && this.class && typeof this.class._lazyInjections === 'function') {\n        lazyInjections = this.class._lazyInjections();\n        lazyInjections = this.container.registry.normalizeInjectionsHash(lazyInjections);\n        this.container.registry.validateInjections(lazyInjections);\n      }\n      validationCache[this.fullName] = true;\n       true && !(typeof this.class.create === 'function') && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Failed to create an instance of '${this.normalizedName}'. Most likely an improperly defined class or an invalid module export.`, typeof this.class.create === 'function');\n    }\n    return this.class.create(props);\n  }\n}\nconst VALID_FULL_NAME_REGEXP = /^[^:]+:[^:]+$/;\n\n/**\n A registry used to store factory and option information keyed\n by type.\n\n A `Registry` stores the factory and option information needed by a\n `Container` to instantiate and cache objects.\n\n The API for `Registry` is still in flux and should not be considered stable.\n\n @private\n @class Registry\n @since 1.11.0\n*/\nclass Registry {\n  constructor(options = {}) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_failSet\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"resolver\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"fallback\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"registrations\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_normalizeCache\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_options\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_resolveCache\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_typeOptions\", void 0);\n    this.fallback = options.fallback || null;\n    this.resolver = options.resolver || null;\n    this.registrations = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(options.registrations || null);\n    this._normalizeCache = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(null);\n    this._resolveCache = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(null);\n    this._failSet = new Set();\n    this._options = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(null);\n    this._typeOptions = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(null);\n  }\n\n  /**\n   A backup registry for resolving registrations when no matches can be found.\n    @private\n   @property fallback\n   @type Registry\n   */\n\n  /**\n   An object that has a `resolve` method that resolves a name.\n    @private\n   @property resolver\n   @type Resolver\n   */\n\n  /**\n   @private\n   @property registrations\n   @type InheritingDict\n   */\n\n  /**\n   @private\n    @property _normalizeCache\n   @type InheritingDict\n   */\n\n  /**\n   @private\n    @property _resolveCache\n   @type InheritingDict\n   */\n\n  /**\n   @private\n    @property _options\n   @type InheritingDict\n   */\n\n  /**\n   @private\n    @property _typeOptions\n   @type InheritingDict\n   */\n\n  /**\n   Creates a container based on this registry.\n    @private\n   @method container\n   @param {Object} options\n   @return {Container} created container\n   */\n  container(options) {\n    return new Container(this, options);\n  }\n\n  /**\n   Registers a factory for later injection.\n    Example:\n    ```javascript\n   let registry = new Registry();\n    registry.register('model:user', Person, {singleton: false });\n   registry.register('fruit:favorite', Orange);\n   registry.register('communication:main', Email, {singleton: false});\n   ```\n    @private\n   @method register\n   @param {String} fullName\n   @param {Function} factory\n   @param {Object} options\n   */\n\n  register(fullName, factory, options = {}) {\n     true && !this.isValidFullName(fullName) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('fullName must be a proper full name', this.isValidFullName(fullName));\n     true && !(factory !== undefined) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Attempting to register an unknown factory: '${fullName}'`, factory !== undefined);\n    let normalizedName = this.normalize(fullName);\n     true && !!this._resolveCache[normalizedName] && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Cannot re-register: '${fullName}', as it has already been resolved.`, !this._resolveCache[normalizedName]);\n    this._failSet.delete(normalizedName);\n    this.registrations[normalizedName] = factory;\n    this._options[normalizedName] = options;\n  }\n\n  /**\n   Unregister a fullName\n    ```javascript\n   let registry = new Registry();\n   registry.register('model:user', User);\n    registry.resolve('model:user').create() instanceof User //=> true\n    registry.unregister('model:user')\n   registry.resolve('model:user') === undefined //=> true\n   ```\n    @private\n   @method unregister\n   @param {String} fullName\n   */\n  unregister(fullName) {\n     true && !this.isValidFullName(fullName) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('fullName must be a proper full name', this.isValidFullName(fullName));\n    let normalizedName = this.normalize(fullName);\n    delete this.registrations[normalizedName];\n    delete this._resolveCache[normalizedName];\n    delete this._options[normalizedName];\n    this._failSet.delete(normalizedName);\n  }\n\n  /**\n   Given a fullName return the corresponding factory.\n    By default `resolve` will retrieve the factory from\n   the registry.\n    ```javascript\n   let registry = new Registry();\n   registry.register('api:twitter', Twitter);\n    registry.resolve('api:twitter') // => Twitter\n   ```\n    Optionally the registry can be provided with a custom resolver.\n   If provided, `resolve` will first provide the custom resolver\n   the opportunity to resolve the fullName, otherwise it will fallback\n   to the registry.\n    ```javascript\n   let registry = new Registry();\n   registry.resolver = function(fullName) {\n      // lookup via the module system of choice\n    };\n    // the twitter factory is added to the module system\n   registry.resolve('api:twitter') // => Twitter\n   ```\n    @private\n   @method resolve\n   @param {String} fullName\n   @return {Function} fullName's factory\n   */\n  resolve(fullName) {\n    let factory = resolve(this, this.normalize(fullName));\n    if (factory === undefined && this.fallback !== null) {\n      factory = this.fallback.resolve(fullName);\n    }\n    return factory;\n  }\n\n  /**\n   A hook that can be used to describe how the resolver will\n   attempt to find the factory.\n    For example, the default Ember `.describe` returns the full\n   class name (including namespace) where Ember's resolver expects\n   to find the `fullName`.\n    @private\n   @method describe\n   @param {String} fullName\n   @return {string} described fullName\n   */\n  describe(fullName) {\n    if (this.resolver !== null && this.resolver.lookupDescription) {\n      return this.resolver.lookupDescription(fullName);\n    } else if (this.fallback !== null) {\n      return this.fallback.describe(fullName);\n    } else {\n      return fullName;\n    }\n  }\n\n  /**\n   A hook to enable custom fullName normalization behavior\n    @private\n   @method normalizeFullName\n   @param {String} fullName\n   @return {string} normalized fullName\n   */\n  normalizeFullName(fullName) {\n    if (this.resolver !== null && this.resolver.normalize) {\n      return this.resolver.normalize(fullName);\n    } else if (this.fallback !== null) {\n      return this.fallback.normalizeFullName(fullName);\n    } else {\n      return fullName;\n    }\n  }\n\n  /**\n   Normalize a fullName based on the application's conventions\n    @private\n   @method normalize\n   @param {String} fullName\n   @return {string} normalized fullName\n   */\n  normalize(fullName) {\n    return this._normalizeCache[fullName] || (this._normalizeCache[fullName] = this.normalizeFullName(fullName));\n  }\n\n  /**\n   @method makeToString\n    @private\n   @param {any} factory\n   @param {string} fullName\n   @return {function} toString function\n   */\n  makeToString(factory, fullName) {\n    if (this.resolver !== null && this.resolver.makeToString) {\n      return this.resolver.makeToString(factory, fullName);\n    } else if (this.fallback !== null) {\n      return this.fallback.makeToString(factory, fullName);\n    } else {\n      return typeof factory === 'string' ? factory : factory.name ?? '(unknown class)';\n    }\n  }\n\n  /**\n   Given a fullName check if the container is aware of its factory\n   or singleton instance.\n    @private\n   @method has\n   @param {String} fullName\n   @param {Object} [options]\n   @param {String} [options.source] the fullname of the request source (used for local lookups)\n   @return {Boolean}\n   */\n  has(fullName) {\n    if (!this.isValidFullName(fullName)) {\n      return false;\n    }\n    return has(this, this.normalize(fullName));\n  }\n\n  /**\n   Allow registering options for all factories of a type.\n    ```javascript\n   let registry = new Registry();\n   let container = registry.container();\n    // if all of type `connection` must not be singletons\n   registry.optionsForType('connection', { singleton: false });\n    registry.register('connection:twitter', TwitterConnection);\n   registry.register('connection:facebook', FacebookConnection);\n    let twitter = container.lookup('connection:twitter');\n   let twitter2 = container.lookup('connection:twitter');\n    twitter === twitter2; // => false\n    let facebook = container.lookup('connection:facebook');\n   let facebook2 = container.lookup('connection:facebook');\n    facebook === facebook2; // => false\n   ```\n    @private\n   @method optionsForType\n   @param {String} type\n   @param {Object} options\n   */\n  optionsForType(type, options) {\n    this._typeOptions[type] = options;\n  }\n  getOptionsForType(type) {\n    let optionsForType = this._typeOptions[type];\n    if (optionsForType === undefined && this.fallback !== null) {\n      optionsForType = this.fallback.getOptionsForType(type);\n    }\n    return optionsForType;\n  }\n\n  /**\n   @private\n   @method options\n   @param {String} fullName\n   @param {Object} options\n   */\n  options(fullName, options) {\n    let normalizedName = this.normalize(fullName);\n    this._options[normalizedName] = options;\n  }\n  getOptions(fullName) {\n    let normalizedName = this.normalize(fullName);\n    let options = this._options[normalizedName];\n    if (options === undefined && this.fallback !== null) {\n      options = this.fallback.getOptions(fullName);\n    }\n    return options;\n  }\n  getOption(fullName, optionName) {\n    let options = this._options[fullName];\n    if (options !== undefined && options[optionName] !== undefined) {\n      return options[optionName];\n    }\n    let type = fullName.split(':')[0];\n     true && !type && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has type', type); // split always will have at least one value\n    options = this._typeOptions[type];\n    if (options && options[optionName] !== undefined) {\n      return options[optionName];\n    } else if (this.fallback !== null) {\n      return this.fallback.getOption(fullName, optionName);\n    }\n    return undefined;\n  }\n\n  /**\n   @private\n   @method knownForType\n   @param {String} type the type to iterate over\n  */\n  knownForType(type) {\n    let localKnown = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(null);\n    let registeredNames = Object.keys(this.registrations);\n    for (let fullName of registeredNames) {\n      let itemType = fullName.split(':')[0];\n      if (itemType === type) {\n        localKnown[fullName] = true;\n      }\n    }\n    let fallbackKnown, resolverKnown;\n    if (this.fallback !== null) {\n      fallbackKnown = this.fallback.knownForType(type);\n    }\n    if (this.resolver !== null && this.resolver.knownForType) {\n      resolverKnown = this.resolver.knownForType(type);\n    }\n    return Object.assign({}, fallbackKnown, localKnown, resolverKnown);\n  }\n  isValidFullName(fullName) {\n    return VALID_FULL_NAME_REGEXP.test(fullName);\n  }\n}\nif (true) {\n  const proto = Registry.prototype;\n  proto.normalizeInjectionsHash = function (hash) {\n    let injections = [];\n    for (let key in hash) {\n      if (Object.prototype.hasOwnProperty.call(hash, key)) {\n        let value = hash[key];\n         true && !value && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has value', value);\n        let {\n          specifier\n        } = value;\n         true && !this.isValidFullName(specifier) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Expected a proper full name, given '${specifier}'`, this.isValidFullName(specifier));\n        injections.push({\n          property: key,\n          specifier\n        });\n      }\n    }\n    return injections;\n  };\n  proto.validateInjections = function (injections) {\n    if (!injections) {\n      return;\n    }\n    for (let injection of injections) {\n      let {\n        specifier\n      } = injection;\n       true && !this.has(specifier) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)(`Attempting to inject an unknown injection: '${specifier}'`, this.has(specifier));\n    }\n  };\n}\nfunction resolve(registry, _normalizedName) {\n  let normalizedName = _normalizedName;\n  let cached = registry._resolveCache[normalizedName];\n  if (cached !== undefined) {\n    return cached;\n  }\n  if (registry._failSet.has(normalizedName)) {\n    return;\n  }\n  let resolved;\n  if (registry.resolver) {\n    resolved = registry.resolver.resolve(normalizedName);\n  }\n  if (resolved === undefined) {\n    resolved = registry.registrations[normalizedName];\n  }\n  if (resolved === undefined) {\n    registry._failSet.add(normalizedName);\n  } else {\n    registry._resolveCache[normalizedName] = resolved;\n  }\n  return resolved;\n}\nfunction has(registry, fullName) {\n  return registry.resolve(fullName) !== undefined;\n}\nconst privateNames = (0,_dictionary_gc5gpyOG_js__WEBPACK_IMPORTED_MODULE_2__.m)(null);\nconst privateSuffix = `${Math.random()}${Date.now()}`.replace('.', '');\nfunction privatize([fullName]) {\n   true && !(arguments.length === 1 && fullName) && (0,_index_DTxy4Zgx_js__WEBPACK_IMPORTED_MODULE_3__.a)('has a single string argument', arguments.length === 1 && fullName);\n  let name = privateNames[fullName];\n  if (name) {\n    return name;\n  }\n  let [type, rawName] = fullName.split(':');\n  return privateNames[fullName] = (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_1__.i)(`${type}:${rawName}-${privateSuffix}`);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/registry-DzfcDwii.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/router-B-Q1aYBn.js":
/*!**************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/router-B-Q1aYBn.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   I: () => (/* binding */ InternalRouteInfo),\n/* harmony export */   P: () => (/* binding */ PARAMS_SYMBOL),\n/* harmony export */   Q: () => (/* binding */ QUERY_PARAMS_SYMBOL),\n/* harmony export */   R: () => (/* binding */ Router),\n/* harmony export */   S: () => (/* binding */ STATE_SYMBOL),\n/* harmony export */   T: () => (/* binding */ Transition),\n/* harmony export */   a: () => (/* binding */ TransitionState),\n/* harmony export */   b: () => (/* binding */ TransitionError),\n/* harmony export */   l: () => (/* binding */ logAbort)\n/* harmony export */ });\n/* harmony import */ var _route_recognizer_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../route-recognizer/index.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/route-recognizer/index.js\");\n/* harmony import */ var _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rsvp-DaQAFb0W.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/rsvp-DaQAFb0W.js\");\n\n\nfunction buildTransitionAborted() {\n  let error = new Error('TransitionAborted');\n  error.name = 'TransitionAborted';\n  error.code = 'TRANSITION_ABORTED';\n  return error;\n}\nfunction isTransitionAborted(maybeError) {\n  return typeof maybeError === 'object' && maybeError !== null && maybeError.code === 'TRANSITION_ABORTED';\n}\nfunction isAbortable(maybeAbortable) {\n  return typeof maybeAbortable === 'object' && maybeAbortable !== null && typeof maybeAbortable.isAborted === 'boolean';\n}\nfunction throwIfAborted(maybe) {\n  if (isAbortable(maybe) && maybe.isAborted) {\n    throw buildTransitionAborted();\n  }\n}\nconst slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n  Determines if an object is Promise by checking if it is \"thenable\".\n**/\nfunction isPromise(p) {\n  return p !== null && typeof p === 'object' && typeof p.then === 'function';\n}\nfunction merge(hash, other) {\n  for (let prop in other) {\n    if (hasOwnProperty.call(other, prop)) {\n      hash[prop] = other[prop];\n    }\n  }\n}\n/**\n  @private\n\n  Extracts query params from the end of an array\n**/\nfunction extractQueryParams(array) {\n  let len = array && array.length,\n    head,\n    queryParams;\n  if (len && len > 0) {\n    let obj = array[len - 1];\n    if (isQueryParamsContainer(obj)) {\n      queryParams = obj.queryParams;\n      head = slice.call(array, 0, len - 1);\n      return [head, queryParams];\n    }\n  }\n  // SAFETY: We confirmed that the last item isn't a QP container\n  return [array, null];\n}\n// TODO: Actually check that Dict is QueryParams\nfunction isQueryParamsContainer(obj) {\n  if (obj && typeof obj === 'object') {\n    let cast = obj;\n    return 'queryParams' in cast && Object.keys(cast.queryParams).every(k => typeof k === 'string');\n  }\n  return false;\n}\n/**\n  @private\n\n  Coerces query param properties and array elements into strings.\n**/\nfunction coerceQueryParamsToString(queryParams) {\n  for (let key in queryParams) {\n    let val = queryParams[key];\n    if (typeof val === 'number') {\n      queryParams[key] = '' + val;\n    } else if (Array.isArray(val)) {\n      for (let i = 0, l = val.length; i < l; i++) {\n        val[i] = '' + val[i];\n      }\n    }\n  }\n}\n/**\n  @private\n */\nfunction log(router, ...args) {\n  if (!router.log) {\n    return;\n  }\n  if (args.length === 2) {\n    let [sequence, msg] = args;\n    router.log('Transition #' + sequence + ': ' + msg);\n  } else {\n    let [msg] = args;\n    router.log(msg);\n  }\n}\nfunction isParam(object) {\n  return typeof object === 'string' || object instanceof String || typeof object === 'number' || object instanceof Number;\n}\nfunction forEach(array, callback) {\n  for (let i = 0, l = array.length; i < l && callback(array[i]) !== false; i++) {\n    // empty intentionally\n  }\n}\nfunction getChangelist(oldObject, newObject) {\n  let key;\n  let results = {\n    all: {},\n    changed: {},\n    removed: {}\n  };\n  merge(results.all, newObject);\n  let didChange = false;\n  coerceQueryParamsToString(oldObject);\n  coerceQueryParamsToString(newObject);\n  // Calculate removals\n  for (key in oldObject) {\n    if (hasOwnProperty.call(oldObject, key)) {\n      if (!hasOwnProperty.call(newObject, key)) {\n        didChange = true;\n        results.removed[key] = oldObject[key];\n      }\n    }\n  }\n  // Calculate changes\n  for (key in newObject) {\n    if (hasOwnProperty.call(newObject, key)) {\n      let oldElement = oldObject[key];\n      let newElement = newObject[key];\n      if (isArray(oldElement) && isArray(newElement)) {\n        if (oldElement.length !== newElement.length) {\n          results.changed[key] = newObject[key];\n          didChange = true;\n        } else {\n          for (let i = 0, l = oldElement.length; i < l; i++) {\n            if (oldElement[i] !== newElement[i]) {\n              results.changed[key] = newObject[key];\n              didChange = true;\n            }\n          }\n        }\n      } else if (oldObject[key] !== newObject[key]) {\n        results.changed[key] = newObject[key];\n        didChange = true;\n      }\n    }\n  }\n  return didChange ? results : undefined;\n}\nfunction isArray(obj) {\n  return Array.isArray(obj);\n}\nfunction promiseLabel(label) {\n  return 'Router: ' + label;\n}\nconst STATE_SYMBOL = `__STATE__-2619860001345920-3322w3`;\nconst PARAMS_SYMBOL = `__PARAMS__-261986232992830203-23323`;\nconst QUERY_PARAMS_SYMBOL = `__QPS__-2619863929824844-32323`;\n/**\n  A Transition is a thenable (a promise-like object) that represents\n  an attempt to transition to another route. It can be aborted, either\n  explicitly via `abort` or by attempting another transition while a\n  previous one is still underway. An aborted transition can also\n  be `retry()`d later.\n\n  @class Transition\n  @constructor\n  @param {Object} router\n  @param {Object} intent\n  @param {Object} state\n  @param {Object} error\n  @private\n */\nclass Transition {\n  constructor(router, intent, state, error = undefined, previousTransition = undefined) {\n    this.from = null;\n    this.to = undefined;\n    this.isAborted = false;\n    this.isActive = true;\n    this.urlMethod = 'update';\n    this.resolveIndex = 0;\n    this.queryParamsOnly = false;\n    this.isTransition = true;\n    this.isCausedByAbortingTransition = false;\n    this.isCausedByInitialTransition = false;\n    this.isCausedByAbortingReplaceTransition = false;\n    this._visibleQueryParams = {};\n    this.isIntermediate = false;\n    this[STATE_SYMBOL] = state || router.state;\n    this.intent = intent;\n    this.router = router;\n    this.data = intent && intent.data || {};\n    this.resolvedModels = {};\n    this[QUERY_PARAMS_SYMBOL] = {};\n    this.promise = undefined;\n    this.error = undefined;\n    this[PARAMS_SYMBOL] = {};\n    this.routeInfos = [];\n    this.targetName = undefined;\n    this.pivotHandler = undefined;\n    this.sequence = -1;\n    if (true) {\n      let error = new Error(`Transition creation stack`);\n      this.debugCreationStack = () => error.stack;\n      // not aborted yet, will be replaced when `this.isAborted` is set\n      this.debugAbortStack = () => undefined;\n      this.debugPreviousTransition = previousTransition;\n    }\n    if (error) {\n      this.promise = _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.reject(error);\n      this.error = error;\n      return;\n    }\n    // if you're doing multiple redirects, need the new transition to know if it\n    // is actually part of the first transition or not. Any further redirects\n    // in the initial transition also need to know if they are part of the\n    // initial transition\n    this.isCausedByAbortingTransition = !!previousTransition;\n    this.isCausedByInitialTransition = !!previousTransition && (previousTransition.isCausedByInitialTransition || previousTransition.sequence === 0);\n    // Every transition in the chain is a replace\n    this.isCausedByAbortingReplaceTransition = !!previousTransition && previousTransition.urlMethod === 'replace' && (!previousTransition.isCausedByAbortingTransition || previousTransition.isCausedByAbortingReplaceTransition);\n    if (state) {\n      this[PARAMS_SYMBOL] = state.params;\n      this[QUERY_PARAMS_SYMBOL] = state.queryParams;\n      this.routeInfos = state.routeInfos;\n      let len = state.routeInfos.length;\n      if (len) {\n        this.targetName = state.routeInfos[len - 1].name;\n      }\n      for (let i = 0; i < len; ++i) {\n        let handlerInfo = state.routeInfos[i];\n        // TODO: this all seems hacky\n        if (!handlerInfo.isResolved) {\n          break;\n        }\n        this.pivotHandler = handlerInfo.route;\n      }\n      this.sequence = router.currentSequence++;\n      this.promise = state.resolve(this).catch(result => {\n        let error = this.router.transitionDidError(result, this);\n        throw error;\n      }, promiseLabel('Handle Abort'));\n    } else {\n      this.promise = _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.resolve(this[STATE_SYMBOL]);\n      this[PARAMS_SYMBOL] = {};\n    }\n  }\n  /**\n    The Transition's internal promise. Calling `.then` on this property\n    is that same as calling `.then` on the Transition object itself, but\n    this property is exposed for when you want to pass around a\n    Transition's promise, but not the Transition object itself, since\n    Transition object can be externally `abort`ed, while the promise\n    cannot.\n       @property promise\n    @type {Object}\n    @public\n   */\n  /**\n    Custom state can be stored on a Transition's `data` object.\n    This can be useful for decorating a Transition within an earlier\n    hook and shared with a later hook. Properties set on `data` will\n    be copied to new transitions generated by calling `retry` on this\n    transition.\n       @property data\n    @type {Object}\n    @public\n   */\n  /**\n    A standard promise hook that resolves if the transition\n    succeeds and rejects if it fails/redirects/aborts.\n       Forwards to the internal `promise` property which you can\n    use in situations where you want to pass around a thenable,\n    but not the Transition itself.\n       @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n    @public\n   */\n  then(onFulfilled, onRejected, label) {\n    return this.promise.then(onFulfilled, onRejected, label);\n  }\n  /**\n       Forwards to the internal `promise` property which you can\n    use in situations where you want to pass around a thennable,\n    but not the Transition itself.\n       @method catch\n    @param {Function} onRejection\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n    @public\n   */\n  catch(onRejection, label) {\n    return this.promise.catch(onRejection, label);\n  }\n  /**\n       Forwards to the internal `promise` property which you can\n    use in situations where you want to pass around a thenable,\n    but not the Transition itself.\n       @method finally\n    @param {Function} callback\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n    @public\n   */\n  finally(callback, label) {\n    return this.promise.finally(callback, label);\n  }\n  /**\n    Aborts the Transition. Note you can also implicitly abort a transition\n    by initiating another transition while a previous one is underway.\n       @method abort\n    @return {Transition} this transition\n    @public\n   */\n  abort() {\n    this.rollback();\n    let transition = new Transition(this.router, undefined, undefined, undefined);\n    transition.to = this.from;\n    transition.from = this.from;\n    transition.isAborted = true;\n    this.router.routeWillChange(transition);\n    this.router.routeDidChange(transition);\n    return this;\n  }\n  rollback() {\n    if (!this.isAborted) {\n      log(this.router, this.sequence, this.targetName + ': transition was aborted');\n      if (true) {\n        let error = new Error(`Transition aborted stack`);\n        this.debugAbortStack = () => error.stack;\n      }\n      if (this.intent !== undefined && this.intent !== null) {\n        this.intent.preTransitionState = this.router.state;\n      }\n      this.isAborted = true;\n      this.isActive = false;\n      this.router.activeTransition = undefined;\n    }\n  }\n  redirect(newTransition) {\n    this.rollback();\n    this.router.routeWillChange(newTransition);\n  }\n  /**\n       Retries a previously-aborted transition (making sure to abort the\n    transition if it's still active). Returns a new transition that\n    represents the new attempt to transition.\n       @method retry\n    @return {Transition} new transition\n    @public\n   */\n  retry() {\n    // TODO: add tests for merged state retry()s\n    this.abort();\n    let newTransition = this.router.transitionByIntent(this.intent, false);\n    // inheriting a `null` urlMethod is not valid\n    // the urlMethod is only set to `null` when\n    // the transition is initiated *after* the url\n    // has been updated (i.e. `router.handleURL`)\n    //\n    // in that scenario, the url method cannot be\n    // inherited for a new transition because then\n    // the url would not update even though it should\n    if (this.urlMethod !== null) {\n      newTransition.method(this.urlMethod);\n    }\n    return newTransition;\n  }\n  /**\n       Sets the URL-changing method to be employed at the end of a\n    successful transition. By default, a new Transition will just\n    use `updateURL`, but passing 'replace' to this method will\n    cause the URL to update using 'replaceWith' instead. Omitting\n    a parameter will disable the URL change, allowing for transitions\n    that don't update the URL at completion (this is also used for\n    handleURL, since the URL has already changed before the\n    transition took place).\n       @method method\n    @param {String} method the type of URL-changing method to use\n      at the end of a transition. Accepted values are 'replace',\n      falsy values, or any other non-falsy value (which is\n      interpreted as an updateURL transition).\n       @return {Transition} this transition\n    @public\n   */\n  method(method) {\n    this.urlMethod = method;\n    return this;\n  }\n  // Alias 'trigger' as 'send'\n  send(ignoreFailure = false, _name, err, transition, handler) {\n    this.trigger(ignoreFailure, _name, err, transition, handler);\n  }\n  /**\n       Fires an event on the current list of resolved/resolving\n    handlers within this transition. Useful for firing events\n    on route hierarchies that haven't fully been entered yet.\n       Note: This method is also aliased as `send`\n       @method trigger\n    @param {Boolean} [ignoreFailure=false] a boolean specifying whether unhandled events throw an error\n    @param {String} name the name of the event to fire\n    @public\n   */\n  trigger(ignoreFailure = false, name, ...args) {\n    // TODO: Deprecate the current signature\n    if (typeof ignoreFailure === 'string') {\n      name = ignoreFailure;\n      ignoreFailure = false;\n    }\n    this.router.triggerEvent(this[STATE_SYMBOL].routeInfos.slice(0, this.resolveIndex + 1), ignoreFailure, name, args);\n  }\n  /**\n    Transitions are aborted and their promises rejected\n    when redirects occur; this method returns a promise\n    that will follow any redirects that occur and fulfill\n    with the value fulfilled by any redirecting transitions\n    that occur.\n       @method followRedirects\n    @return {Promise} a promise that fulfills with the same\n      value that the final redirecting transition fulfills with\n    @public\n   */\n  followRedirects() {\n    let router = this.router;\n    return this.promise.catch(function (reason) {\n      if (router.activeTransition) {\n        return router.activeTransition.followRedirects();\n      }\n      return _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.reject(reason);\n    });\n  }\n  toString() {\n    return 'Transition (sequence ' + this.sequence + ')';\n  }\n  /**\n    @private\n   */\n  log(message) {\n    log(this.router, this.sequence, message);\n  }\n}\n/**\n  @private\n\n  Logs and returns an instance of TransitionAborted.\n */\nfunction logAbort(transition) {\n  log(transition.router, transition.sequence, 'detected abort.');\n  return buildTransitionAborted();\n}\nfunction isTransition(obj) {\n  return typeof obj === 'object' && obj instanceof Transition && obj.isTransition;\n}\nfunction prepareResult(obj) {\n  if (isTransition(obj)) {\n    return null;\n  }\n  return obj;\n}\nlet ROUTE_INFOS = new WeakMap();\nfunction toReadOnlyRouteInfo(routeInfos, queryParams = {}, options = {\n  includeAttributes: false,\n  localizeMapUpdates: false\n}) {\n  const LOCAL_ROUTE_INFOS = new WeakMap();\n  return routeInfos.map((info, i) => {\n    let {\n      name,\n      params,\n      paramNames,\n      context,\n      route\n    } = info;\n    // SAFETY: This should be safe since it is just for use as a key\n    let key = info;\n    if (ROUTE_INFOS.has(key) && options.includeAttributes) {\n      let routeInfo = ROUTE_INFOS.get(key);\n      routeInfo = attachMetadata(route, routeInfo);\n      let routeInfoWithAttribute = createRouteInfoWithAttributes(routeInfo, context);\n      LOCAL_ROUTE_INFOS.set(key, routeInfo);\n      if (!options.localizeMapUpdates) {\n        ROUTE_INFOS.set(key, routeInfoWithAttribute);\n      }\n      return routeInfoWithAttribute;\n    }\n    const routeInfosRef = options.localizeMapUpdates ? LOCAL_ROUTE_INFOS : ROUTE_INFOS;\n    let routeInfo = {\n      find(predicate, thisArg) {\n        let publicInfo;\n        let arr = [];\n        if (predicate.length === 3) {\n          arr = routeInfos.map(\n          // SAFETY: This should be safe since it is just for use as a key\n          info => routeInfosRef.get(info));\n        }\n        for (let i = 0; routeInfos.length > i; i++) {\n          // SAFETY: This should be safe since it is just for use as a key\n          publicInfo = routeInfosRef.get(routeInfos[i]);\n          if (predicate.call(thisArg, publicInfo, i, arr)) {\n            return publicInfo;\n          }\n        }\n        return undefined;\n      },\n      get name() {\n        return name;\n      },\n      get paramNames() {\n        return paramNames;\n      },\n      get metadata() {\n        return buildRouteInfoMetadata(info.route);\n      },\n      get parent() {\n        let parent = routeInfos[i - 1];\n        if (parent === undefined) {\n          return null;\n        }\n        // SAFETY: This should be safe since it is just for use as a key\n        return routeInfosRef.get(parent);\n      },\n      get child() {\n        let child = routeInfos[i + 1];\n        if (child === undefined) {\n          return null;\n        }\n        // SAFETY: This should be safe since it is just for use as a key\n        return routeInfosRef.get(child);\n      },\n      get localName() {\n        let parts = this.name.split('.');\n        return parts[parts.length - 1];\n      },\n      get params() {\n        return params;\n      },\n      get queryParams() {\n        return queryParams;\n      }\n    };\n    if (options.includeAttributes) {\n      routeInfo = createRouteInfoWithAttributes(routeInfo, context);\n    }\n    // SAFETY: This should be safe since it is just for use as a key\n    LOCAL_ROUTE_INFOS.set(info, routeInfo);\n    if (!options.localizeMapUpdates) {\n      // SAFETY: This should be safe since it is just for use as a key\n      ROUTE_INFOS.set(info, routeInfo);\n    }\n    return routeInfo;\n  });\n}\nfunction createRouteInfoWithAttributes(routeInfo, context) {\n  let attributes = {\n    get attributes() {\n      return context;\n    }\n  };\n  if (!Object.isExtensible(routeInfo) || routeInfo.hasOwnProperty('attributes')) {\n    return Object.freeze(Object.assign({}, routeInfo, attributes));\n  }\n  return Object.assign(routeInfo, attributes);\n}\nfunction buildRouteInfoMetadata(route) {\n  if (route !== undefined && route !== null && route.buildRouteInfoMetadata !== undefined) {\n    return route.buildRouteInfoMetadata();\n  }\n  return null;\n}\nfunction attachMetadata(route, routeInfo) {\n  let metadata = {\n    get metadata() {\n      return buildRouteInfoMetadata(route);\n    }\n  };\n  if (!Object.isExtensible(routeInfo) || routeInfo.hasOwnProperty('metadata')) {\n    return Object.freeze(Object.assign({}, routeInfo, metadata));\n  }\n  return Object.assign(routeInfo, metadata);\n}\nclass InternalRouteInfo {\n  constructor(router, name, paramNames, route) {\n    this._routePromise = undefined;\n    this._route = null;\n    this.params = {};\n    this.isResolved = false;\n    this.name = name;\n    this.paramNames = paramNames;\n    this.router = router;\n    if (route) {\n      this._processRoute(route);\n    }\n  }\n  getModel(_transition) {\n    return _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.resolve(this.context);\n  }\n  serialize(_context) {\n    return this.params || {};\n  }\n  resolve(transition) {\n    return _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.resolve(this.routePromise).then(route => {\n      throwIfAborted(transition);\n      return route;\n    }).then(() => this.runBeforeModelHook(transition)).then(() => throwIfAborted(transition)).then(() => this.getModel(transition)).then(resolvedModel => {\n      throwIfAborted(transition);\n      return resolvedModel;\n    }).then(resolvedModel => this.runAfterModelHook(transition, resolvedModel)).then(resolvedModel => this.becomeResolved(transition, resolvedModel));\n  }\n  becomeResolved(transition, resolvedContext) {\n    let params = this.serialize(resolvedContext);\n    if (transition) {\n      this.stashResolvedModel(transition, resolvedContext);\n      transition[PARAMS_SYMBOL] = transition[PARAMS_SYMBOL] || {};\n      transition[PARAMS_SYMBOL][this.name] = params;\n    }\n    let context;\n    let contextsMatch = resolvedContext === this.context;\n    if ('context' in this || !contextsMatch) {\n      context = resolvedContext;\n    }\n    // SAFETY: Since this is just for lookup, it should be safe\n    let cached = ROUTE_INFOS.get(this);\n    let resolved = new ResolvedRouteInfo(this.router, this.name, this.paramNames, params, this.route, context);\n    if (cached !== undefined) {\n      // SAFETY: This is potentially a bit risker, but for what we're doing, it should be ok.\n      ROUTE_INFOS.set(resolved, cached);\n    }\n    return resolved;\n  }\n  shouldSupersede(routeInfo) {\n    // Prefer this newer routeInfo over `other` if:\n    // 1) The other one doesn't exist\n    // 2) The names don't match\n    // 3) This route has a context that doesn't match\n    //    the other one (or the other one doesn't have one).\n    // 4) This route has parameters that don't match the other.\n    if (!routeInfo) {\n      return true;\n    }\n    let contextsMatch = routeInfo.context === this.context;\n    return routeInfo.name !== this.name || 'context' in this && !contextsMatch || this.hasOwnProperty('params') && !paramsMatch(this.params, routeInfo.params);\n  }\n  get route() {\n    // _route could be set to either a route object or undefined, so we\n    // compare against null to know when it's been set\n    if (this._route !== null) {\n      return this._route;\n    }\n    return this.fetchRoute();\n  }\n  set route(route) {\n    this._route = route;\n  }\n  get routePromise() {\n    if (this._routePromise) {\n      return this._routePromise;\n    }\n    this.fetchRoute();\n    return this._routePromise;\n  }\n  set routePromise(routePromise) {\n    this._routePromise = routePromise;\n  }\n  log(transition, message) {\n    if (transition.log) {\n      transition.log(this.name + ': ' + message);\n    }\n  }\n  updateRoute(route) {\n    route._internalName = this.name;\n    return this.route = route;\n  }\n  runBeforeModelHook(transition) {\n    if (transition.trigger) {\n      transition.trigger(true, 'willResolveModel', transition, this.route);\n    }\n    let result;\n    if (this.route) {\n      if (this.route.beforeModel !== undefined) {\n        result = this.route.beforeModel(transition);\n      }\n    }\n    if (isTransition(result)) {\n      result = null;\n    }\n    return _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.resolve(result);\n  }\n  runAfterModelHook(transition, resolvedModel) {\n    // Stash the resolved model on the payload.\n    // This makes it possible for users to swap out\n    // the resolved model in afterModel.\n    let name = this.name;\n    this.stashResolvedModel(transition, resolvedModel);\n    let result;\n    if (this.route !== undefined) {\n      if (this.route.afterModel !== undefined) {\n        result = this.route.afterModel(resolvedModel, transition);\n      }\n    }\n    result = prepareResult(result);\n    return _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.resolve(result).then(() => {\n      // Ignore the fulfilled value returned from afterModel.\n      // Return the value stashed in resolvedModels, which\n      // might have been swapped out in afterModel.\n      // SAFTEY: We expect this to be of type T, though typing it as such is challenging.\n      return transition.resolvedModels[name];\n    });\n  }\n  stashResolvedModel(transition, resolvedModel) {\n    transition.resolvedModels = transition.resolvedModels || {};\n    // SAFETY: It's unfortunate that we have to do this cast. It should be safe though.\n    transition.resolvedModels[this.name] = resolvedModel;\n  }\n  fetchRoute() {\n    let route = this.router.getRoute(this.name);\n    return this._processRoute(route);\n  }\n  _processRoute(route) {\n    // Setup a routePromise so that we can wait for asynchronously loaded routes\n    this.routePromise = _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.resolve(route);\n    // Wait until the 'route' property has been updated when chaining to a route\n    // that is a promise\n    if (isPromise(route)) {\n      this.routePromise = this.routePromise.then(r => {\n        return this.updateRoute(r);\n      });\n      // set to undefined to avoid recursive loop in the route getter\n      return this.route = undefined;\n    } else if (route) {\n      return this.updateRoute(route);\n    }\n    return undefined;\n  }\n}\nclass ResolvedRouteInfo extends InternalRouteInfo {\n  constructor(router, name, paramNames, params, route, context) {\n    super(router, name, paramNames, route);\n    this.params = params;\n    this.isResolved = true;\n    this.context = context;\n  }\n  resolve(transition) {\n    // A ResolvedRouteInfo just resolved with itself.\n    if (transition && transition.resolvedModels) {\n      transition.resolvedModels[this.name] = this.context;\n    }\n    return _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.resolve(this);\n  }\n}\nclass UnresolvedRouteInfoByParam extends InternalRouteInfo {\n  constructor(router, name, paramNames, params, route) {\n    super(router, name, paramNames, route);\n    this.params = {};\n    if (params) {\n      this.params = params;\n    }\n  }\n  getModel(transition) {\n    let fullParams = this.params;\n    if (transition && transition[QUERY_PARAMS_SYMBOL]) {\n      fullParams = {};\n      merge(fullParams, this.params);\n      fullParams.queryParams = transition[QUERY_PARAMS_SYMBOL];\n    }\n    let route = this.route;\n    let result;\n    // FIXME: Review these casts\n    if (route.deserialize) {\n      result = route.deserialize(fullParams, transition);\n    } else if (route.model) {\n      result = route.model(fullParams, transition);\n    }\n    if (result && isTransition(result)) {\n      result = undefined;\n    }\n    return _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.resolve(result);\n  }\n}\nclass UnresolvedRouteInfoByObject extends InternalRouteInfo {\n  constructor(router, name, paramNames, context) {\n    super(router, name, paramNames);\n    this.context = context;\n    this.serializer = this.router.getSerializer(name);\n  }\n  getModel(transition) {\n    if (this.router.log !== undefined) {\n      this.router.log(this.name + ': resolving provided model');\n    }\n    return super.getModel(transition);\n  }\n  /**\n    @private\n       Serializes a route using its custom `serialize` method or\n    by a default that looks up the expected property name from\n    the dynamic segment.\n       @param {Object} model the model to be serialized for this route\n  */\n  serialize(model) {\n    let {\n      paramNames,\n      context\n    } = this;\n    if (!model) {\n      // SAFETY: By the time we serialize, we expect to be resolved.\n      // This may not be an entirely safe assumption though no tests fail.\n      model = context;\n    }\n    let object = {};\n    if (isParam(model)) {\n      object[paramNames[0]] = model;\n      return object;\n    }\n    // Use custom serialize if it exists.\n    if (this.serializer) {\n      // invoke this.serializer unbound (getSerializer returns a stateless function)\n      return this.serializer.call(null, model, paramNames);\n    } else if (this.route !== undefined) {\n      if (this.route.serialize) {\n        return this.route.serialize(model, paramNames);\n      }\n    }\n    if (paramNames.length !== 1) {\n      return;\n    }\n    let name = paramNames[0];\n    if (/_id$/.test(name)) {\n      // SAFETY: Model is supposed to extend IModel already\n      object[name] = model.id;\n    } else {\n      object[name] = model;\n    }\n    return object;\n  }\n}\nfunction paramsMatch(a, b) {\n  if (a === b) {\n    // Both are identical, may both be undefined\n    return true;\n  }\n  if (!a || !b) {\n    // Only one is undefined, already checked they aren't identical\n    return false;\n  }\n  // Note: this assumes that both params have the same\n  // number of keys, but since we're comparing the\n  // same routes, they should.\n  for (let k in a) {\n    if (a.hasOwnProperty(k) && a[k] !== b[k]) {\n      return false;\n    }\n  }\n  return true;\n}\nclass TransitionIntent {\n  constructor(router, data = {}) {\n    this.router = router;\n    this.data = data;\n  }\n}\nfunction handleError(currentState, transition, error) {\n  // This is the only possible\n  // reject value of TransitionState#resolve\n  let routeInfos = currentState.routeInfos;\n  let errorHandlerIndex = transition.resolveIndex >= routeInfos.length ? routeInfos.length - 1 : transition.resolveIndex;\n  let wasAborted = transition.isAborted;\n  throw new TransitionError(error, currentState.routeInfos[errorHandlerIndex].route, wasAborted, currentState);\n}\nfunction resolveOneRouteInfo(currentState, transition) {\n  if (transition.resolveIndex === currentState.routeInfos.length) {\n    // This is is the only possible\n    // fulfill value of TransitionState#resolve\n    return;\n  }\n  let routeInfo = currentState.routeInfos[transition.resolveIndex];\n  let callback = proceed.bind(null, currentState, transition);\n  return routeInfo.resolve(transition).then(callback, null, currentState.promiseLabel('Proceed'));\n}\nfunction proceed(currentState, transition, resolvedRouteInfo) {\n  let wasAlreadyResolved = currentState.routeInfos[transition.resolveIndex].isResolved;\n  // Swap the previously unresolved routeInfo with\n  // the resolved routeInfo\n  currentState.routeInfos[transition.resolveIndex++] = resolvedRouteInfo;\n  if (!wasAlreadyResolved) {\n    // Call the redirect hook. The reason we call it here\n    // vs. afterModel is so that redirects into child\n    // routes don't re-run the model hooks for this\n    // already-resolved route.\n    let {\n      route\n    } = resolvedRouteInfo;\n    if (route !== undefined) {\n      if (route.redirect) {\n        route.redirect(resolvedRouteInfo.context, transition);\n      }\n    }\n  }\n  // Proceed after ensuring that the redirect hook\n  // didn't abort this transition by transitioning elsewhere.\n  throwIfAborted(transition);\n  return resolveOneRouteInfo(currentState, transition);\n}\nclass TransitionState {\n  constructor() {\n    this.routeInfos = [];\n    this.queryParams = {};\n    this.params = {};\n  }\n  promiseLabel(label) {\n    let targetName = '';\n    forEach(this.routeInfos, function (routeInfo) {\n      if (targetName !== '') {\n        targetName += '.';\n      }\n      targetName += routeInfo.name;\n      return true;\n    });\n    return promiseLabel(\"'\" + targetName + \"': \" + label);\n  }\n  resolve(transition) {\n    // First, calculate params for this state. This is useful\n    // information to provide to the various route hooks.\n    let params = this.params;\n    forEach(this.routeInfos, routeInfo => {\n      params[routeInfo.name] = routeInfo.params || {};\n      return true;\n    });\n    transition.resolveIndex = 0;\n    let callback = resolveOneRouteInfo.bind(null, this, transition);\n    let errorHandler = handleError.bind(null, this, transition);\n    // The prelude RSVP.resolve() async moves us into the promise land.\n    return _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.resolve(null, this.promiseLabel('Start transition')).then(callback, null, this.promiseLabel('Resolve route')).catch(errorHandler, this.promiseLabel('Handle error')).then(() => this);\n  }\n}\nclass TransitionError {\n  constructor(error, route, wasAborted, state) {\n    this.error = error;\n    this.route = route;\n    this.wasAborted = wasAborted;\n    this.state = state;\n  }\n}\nclass NamedTransitionIntent extends TransitionIntent {\n  constructor(router, name, pivotHandler, contexts = [], queryParams = {}, data) {\n    super(router, data);\n    this.preTransitionState = undefined;\n    this.name = name;\n    this.pivotHandler = pivotHandler;\n    this.contexts = contexts;\n    this.queryParams = queryParams;\n  }\n  applyToState(oldState, isIntermediate) {\n    let handlers = this.router.recognizer.handlersFor(this.name);\n    let targetRouteName = handlers[handlers.length - 1].handler;\n    return this.applyToHandlers(oldState, handlers, targetRouteName, isIntermediate, false);\n  }\n  applyToHandlers(oldState, parsedHandlers, targetRouteName, isIntermediate, checkingIfActive) {\n    let i, len;\n    let newState = new TransitionState();\n    let objects = this.contexts.slice(0);\n    let invalidateIndex = parsedHandlers.length;\n    // Pivot handlers are provided for refresh transitions\n    if (this.pivotHandler) {\n      for (i = 0, len = parsedHandlers.length; i < len; ++i) {\n        if (parsedHandlers[i].handler === this.pivotHandler._internalName) {\n          invalidateIndex = i;\n          break;\n        }\n      }\n    }\n    for (i = parsedHandlers.length - 1; i >= 0; --i) {\n      let result = parsedHandlers[i];\n      let name = result.handler;\n      let oldHandlerInfo = oldState.routeInfos[i];\n      let newHandlerInfo = null;\n      if (result.names.length > 0) {\n        if (i >= invalidateIndex) {\n          newHandlerInfo = this.createParamHandlerInfo(name, result.names, objects, oldHandlerInfo);\n        } else {\n          newHandlerInfo = this.getHandlerInfoForDynamicSegment(name, result.names, objects, oldHandlerInfo, targetRouteName, i);\n        }\n      } else {\n        // This route has no dynamic segment.\n        // Therefore treat as a param-based handlerInfo\n        // with empty params. This will cause the `model`\n        // hook to be called with empty params, which is desirable.\n        newHandlerInfo = this.createParamHandlerInfo(name, result.names, objects, oldHandlerInfo);\n      }\n      if (checkingIfActive) {\n        // If we're performing an isActive check, we want to\n        // serialize URL params with the provided context, but\n        // ignore mismatches between old and new context.\n        newHandlerInfo = newHandlerInfo.becomeResolved(null,\n        // SAFETY: This seems to imply that it would be resolved, but it's unclear if that's actually the case.\n        newHandlerInfo.context);\n        let oldContext = oldHandlerInfo && oldHandlerInfo.context;\n        if (result.names.length > 0 && oldHandlerInfo.context !== undefined && newHandlerInfo.context === oldContext) {\n          // If contexts match in isActive test, assume params also match.\n          // This allows for flexibility in not requiring that every last\n          // handler provide a `serialize` method\n          newHandlerInfo.params = oldHandlerInfo && oldHandlerInfo.params;\n        }\n        newHandlerInfo.context = oldContext;\n      }\n      let handlerToUse = oldHandlerInfo;\n      if (i >= invalidateIndex || newHandlerInfo.shouldSupersede(oldHandlerInfo)) {\n        invalidateIndex = Math.min(i, invalidateIndex);\n        handlerToUse = newHandlerInfo;\n      }\n      if (isIntermediate && !checkingIfActive) {\n        handlerToUse = handlerToUse.becomeResolved(null,\n        // SAFETY: This seems to imply that it would be resolved, but it's unclear if that's actually the case.\n        handlerToUse.context);\n      }\n      newState.routeInfos.unshift(handlerToUse);\n    }\n    if (objects.length > 0) {\n      throw new Error('More context objects were passed than there are dynamic segments for the route: ' + targetRouteName);\n    }\n    if (!isIntermediate) {\n      this.invalidateChildren(newState.routeInfos, invalidateIndex);\n    }\n    merge(newState.queryParams, this.queryParams || {});\n    if (isIntermediate && oldState.queryParams) {\n      merge(newState.queryParams, oldState.queryParams);\n    }\n    return newState;\n  }\n  invalidateChildren(handlerInfos, invalidateIndex) {\n    for (let i = invalidateIndex, l = handlerInfos.length; i < l; ++i) {\n      let handlerInfo = handlerInfos[i];\n      if (handlerInfo.isResolved) {\n        let {\n          name,\n          params,\n          route,\n          paramNames\n        } = handlerInfos[i];\n        handlerInfos[i] = new UnresolvedRouteInfoByParam(this.router, name, paramNames, params, route);\n      }\n    }\n  }\n  getHandlerInfoForDynamicSegment(name, names, objects, oldHandlerInfo, _targetRouteName, i) {\n    let objectToUse;\n    if (objects.length > 0) {\n      // Use the objects provided for this transition.\n      objectToUse = objects[objects.length - 1];\n      if (isParam(objectToUse)) {\n        return this.createParamHandlerInfo(name, names, objects, oldHandlerInfo);\n      } else {\n        objects.pop();\n      }\n    } else if (oldHandlerInfo && oldHandlerInfo.name === name) {\n      // Reuse the matching oldHandlerInfo\n      return oldHandlerInfo;\n    } else {\n      if (this.preTransitionState) {\n        let preTransitionHandlerInfo = this.preTransitionState.routeInfos[i];\n        objectToUse = preTransitionHandlerInfo === null || preTransitionHandlerInfo === void 0 ? void 0 : preTransitionHandlerInfo.context;\n      } else {\n        // Ideally we should throw this error to provide maximal\n        // information to the user that not enough context objects\n        // were provided, but this proves too cumbersome in Ember\n        // in cases where inner template helpers are evaluated\n        // before parent helpers un-render, in which cases this\n        // error somewhat prematurely fires.\n        //throw new Error(\"Not enough context objects were provided to complete a transition to \" + targetRouteName + \". Specifically, the \" + name + \" route needs an object that can be serialized into its dynamic URL segments [\" + names.join(', ') + \"]\");\n        return oldHandlerInfo;\n      }\n    }\n    return new UnresolvedRouteInfoByObject(this.router, name, names, objectToUse);\n  }\n  createParamHandlerInfo(name, names, objects, oldHandlerInfo) {\n    let params = {};\n    // Soak up all the provided string/numbers\n    let numNames = names.length;\n    let missingParams = [];\n    while (numNames--) {\n      // Only use old params if the names match with the new handler\n      let oldParams = oldHandlerInfo && name === oldHandlerInfo.name && oldHandlerInfo.params || {};\n      let peek = objects[objects.length - 1];\n      let paramName = names[numNames];\n      if (isParam(peek)) {\n        params[paramName] = '' + objects.pop();\n      } else {\n        // If we're here, this means only some of the params\n        // were string/number params, so try and use a param\n        // value from a previous handler.\n        if (oldParams.hasOwnProperty(paramName)) {\n          params[paramName] = oldParams[paramName];\n        } else {\n          missingParams.push(paramName);\n        }\n      }\n    }\n    if (missingParams.length > 0) {\n      throw new Error(`You didn't provide enough string/numeric parameters to satisfy all of the dynamic segments for route ${name}.` + ` Missing params: ${missingParams}`);\n    }\n    return new UnresolvedRouteInfoByParam(this.router, name, names, params);\n  }\n}\nconst UnrecognizedURLError = function () {\n  UnrecognizedURLError.prototype = Object.create(Error.prototype);\n  UnrecognizedURLError.prototype.constructor = UnrecognizedURLError;\n  function UnrecognizedURLError(message) {\n    let error = Error.call(this, message);\n    this.name = 'UnrecognizedURLError';\n    this.message = message || 'UnrecognizedURL';\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, UnrecognizedURLError);\n    } else {\n      this.stack = error.stack;\n    }\n  }\n  return UnrecognizedURLError;\n}();\nclass URLTransitionIntent extends TransitionIntent {\n  constructor(router, url, data) {\n    super(router, data);\n    this.url = url;\n    this.preTransitionState = undefined;\n  }\n  applyToState(oldState) {\n    let newState = new TransitionState();\n    let results = this.router.recognizer.recognize(this.url),\n      i,\n      len;\n    if (!results) {\n      throw new UnrecognizedURLError(this.url);\n    }\n    let statesDiffer = false;\n    let _url = this.url;\n    // Checks if a handler is accessible by URL. If it is not, an error is thrown.\n    // For the case where the handler is loaded asynchronously, the error will be\n    // thrown once it is loaded.\n    function checkHandlerAccessibility(handler) {\n      if (handler && handler.inaccessibleByURL) {\n        throw new UnrecognizedURLError(_url);\n      }\n      return handler;\n    }\n    for (i = 0, len = results.length; i < len; ++i) {\n      let result = results[i];\n      let name = result.handler;\n      let paramNames = [];\n      if (this.router.recognizer.hasRoute(name)) {\n        paramNames = this.router.recognizer.handlersFor(name)[i].names;\n      }\n      let newRouteInfo = new UnresolvedRouteInfoByParam(this.router, name, paramNames, result.params);\n      let route = newRouteInfo.route;\n      if (route) {\n        checkHandlerAccessibility(route);\n      } else {\n        // If the handler is being loaded asynchronously, check if we can\n        // access it after it has resolved\n        newRouteInfo.routePromise = newRouteInfo.routePromise.then(checkHandlerAccessibility);\n      }\n      let oldRouteInfo = oldState.routeInfos[i];\n      if (statesDiffer || newRouteInfo.shouldSupersede(oldRouteInfo)) {\n        statesDiffer = true;\n        newState.routeInfos[i] = newRouteInfo;\n      } else {\n        newState.routeInfos[i] = oldRouteInfo;\n      }\n    }\n    merge(newState.queryParams, results.queryParams);\n    return newState;\n  }\n}\nclass Router {\n  constructor(logger) {\n    this._lastQueryParams = {};\n    this.state = undefined;\n    this.oldState = undefined;\n    this.activeTransition = undefined;\n    this.currentRouteInfos = undefined;\n    this._changedQueryParams = undefined;\n    this.currentSequence = 0;\n    this.log = logger;\n    this.recognizer = new _route_recognizer_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this.reset();\n  }\n  /**\n    The main entry point into the router. The API is essentially\n    the same as the `map` method in `route-recognizer`.\n       This method extracts the String handler at the last `.to()`\n    call and uses it as the name of the whole route.\n       @param {Function} callback\n  */\n  map(callback) {\n    this.recognizer.map(callback, function (recognizer, routes) {\n      for (let i = routes.length - 1, proceed = true; i >= 0 && proceed; --i) {\n        let route = routes[i];\n        let handler = route.handler;\n        recognizer.add(routes, {\n          as: handler\n        });\n        proceed = route.path === '/' || route.path === '' || handler.slice(-6) === '.index';\n      }\n    });\n  }\n  hasRoute(route) {\n    return this.recognizer.hasRoute(route);\n  }\n  queryParamsTransition(changelist, wasTransitioning, oldState, newState) {\n    this.fireQueryParamDidChange(newState, changelist);\n    if (!wasTransitioning && this.activeTransition) {\n      // One of the routes in queryParamsDidChange\n      // caused a transition. Just return that transition.\n      return this.activeTransition;\n    } else {\n      // Running queryParamsDidChange didn't change anything.\n      // Just update query params and be on our way.\n      // We have to return a noop transition that will\n      // perform a URL update at the end. This gives\n      // the user the ability to set the url update\n      // method (default is replaceState).\n      let newTransition = new Transition(this, undefined, undefined);\n      newTransition.queryParamsOnly = true;\n      oldState.queryParams = this.finalizeQueryParamChange(newState.routeInfos, newState.queryParams, newTransition);\n      newTransition[QUERY_PARAMS_SYMBOL] = newState.queryParams;\n      this.toReadOnlyInfos(newTransition, newState);\n      this.routeWillChange(newTransition);\n      newTransition.promise = newTransition.promise.then(result => {\n        if (!newTransition.isAborted) {\n          this._updateURL(newTransition, oldState);\n          this.didTransition(this.currentRouteInfos);\n          this.toInfos(newTransition, newState.routeInfos, true);\n          this.routeDidChange(newTransition);\n        }\n        return result;\n      }, null, promiseLabel('Transition complete'));\n      return newTransition;\n    }\n  }\n  transitionByIntent(intent, isIntermediate) {\n    try {\n      return this.getTransitionByIntent(intent, isIntermediate);\n    } catch (e) {\n      return new Transition(this, intent, undefined, e, undefined);\n    }\n  }\n  recognize(url) {\n    let intent = new URLTransitionIntent(this, url);\n    let newState = this.generateNewState(intent);\n    if (newState === null) {\n      return newState;\n    }\n    let readonlyInfos = toReadOnlyRouteInfo(newState.routeInfos, newState.queryParams, {\n      includeAttributes: false,\n      localizeMapUpdates: true\n    });\n    return readonlyInfos[readonlyInfos.length - 1];\n  }\n  recognizeAndLoad(url) {\n    let intent = new URLTransitionIntent(this, url);\n    let newState = this.generateNewState(intent);\n    if (newState === null) {\n      return _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.reject(`URL ${url} was not recognized`);\n    }\n    let newTransition = new Transition(this, intent, newState, undefined);\n    return newTransition.then(() => {\n      let routeInfosWithAttributes = toReadOnlyRouteInfo(newState.routeInfos, newTransition[QUERY_PARAMS_SYMBOL], {\n        includeAttributes: true,\n        localizeMapUpdates: false\n      });\n      return routeInfosWithAttributes[routeInfosWithAttributes.length - 1];\n    });\n  }\n  generateNewState(intent) {\n    try {\n      return intent.applyToState(this.state, false);\n    } catch (e) {\n      return null;\n    }\n  }\n  getTransitionByIntent(intent, isIntermediate) {\n    let wasTransitioning = !!this.activeTransition;\n    let oldState = wasTransitioning ? this.activeTransition[STATE_SYMBOL] : this.state;\n    let newTransition;\n    let newState = intent.applyToState(oldState, isIntermediate);\n    let queryParamChangelist = getChangelist(oldState.queryParams, newState.queryParams);\n    if (routeInfosEqual(newState.routeInfos, oldState.routeInfos)) {\n      // This is a no-op transition. See if query params changed.\n      if (queryParamChangelist) {\n        let newTransition = this.queryParamsTransition(queryParamChangelist, wasTransitioning, oldState, newState);\n        newTransition.queryParamsOnly = true;\n        // SAFETY: The returned OpaqueTransition should actually be this.\n        return newTransition;\n      }\n      // No-op. No need to create a new transition.\n      return this.activeTransition || new Transition(this, undefined, undefined);\n    }\n    if (isIntermediate) {\n      let transition = new Transition(this, undefined, newState);\n      transition.isIntermediate = true;\n      this.toReadOnlyInfos(transition, newState);\n      this.setupContexts(newState, transition);\n      this.routeWillChange(transition);\n      return this.activeTransition;\n    }\n    // Create a new transition to the destination route.\n    newTransition = new Transition(this, intent, newState, undefined, this.activeTransition);\n    // transition is to same route with same params, only query params differ.\n    // not caught above probably because refresh() has been used\n    if (routeInfosSameExceptQueryParams(newState.routeInfos, oldState.routeInfos)) {\n      newTransition.queryParamsOnly = true;\n    }\n    this.toReadOnlyInfos(newTransition, newState);\n    // Abort and usurp any previously active transition.\n    if (this.activeTransition) {\n      this.activeTransition.redirect(newTransition);\n    }\n    this.activeTransition = newTransition;\n    // Transition promises by default resolve with resolved state.\n    // For our purposes, swap out the promise to resolve\n    // after the transition has been finalized.\n    newTransition.promise = newTransition.promise.then(result => {\n      return this.finalizeTransition(newTransition, result);\n    }, null, promiseLabel('Settle transition promise when transition is finalized'));\n    if (!wasTransitioning) {\n      this.notifyExistingHandlers(newState, newTransition);\n    }\n    this.fireQueryParamDidChange(newState, queryParamChangelist);\n    return newTransition;\n  }\n  /**\n  @private\n     Begins and returns a Transition based on the provided\n  arguments. Accepts arguments in the form of both URL\n  transitions and named transitions.\n     @param {Router} router\n  @param {Array[Object]} args arguments passed to transitionTo,\n    replaceWith, or handleURL\n  */\n  doTransition(name, modelsArray = [], isIntermediate = false) {\n    let lastArg = modelsArray[modelsArray.length - 1];\n    let queryParams = {};\n    if (lastArg && Object.prototype.hasOwnProperty.call(lastArg, 'queryParams')) {\n      // We just checked this.\n      // TODO: Use an assertion?\n      queryParams = modelsArray.pop().queryParams;\n    }\n    let intent;\n    if (name === undefined) {\n      log(this, 'Updating query params');\n      // A query param update is really just a transition\n      // into the route you're already on.\n      let {\n        routeInfos\n      } = this.state;\n      intent = new NamedTransitionIntent(this, routeInfos[routeInfos.length - 1].name, undefined, [], queryParams);\n    } else if (name.charAt(0) === '/') {\n      log(this, 'Attempting URL transition to ' + name);\n      intent = new URLTransitionIntent(this, name);\n    } else {\n      log(this, 'Attempting transition to ' + name);\n      intent = new NamedTransitionIntent(this, name, undefined,\n      // SAFETY: We know this to be the case since we removed the last item if it was QPs\n      modelsArray, queryParams);\n    }\n    return this.transitionByIntent(intent, isIntermediate);\n  }\n  /**\n  @private\n     Updates the URL (if necessary) and calls `setupContexts`\n  to update the router's array of `currentRouteInfos`.\n  */\n  finalizeTransition(transition, newState) {\n    try {\n      log(transition.router, transition.sequence, 'Resolved all models on destination route; finalizing transition.');\n      let routeInfos = newState.routeInfos;\n      // Run all the necessary enter/setup/exit hooks\n      this.setupContexts(newState, transition);\n      // Check if a redirect occurred in enter/setup\n      if (transition.isAborted) {\n        // TODO: cleaner way? distinguish b/w targetRouteInfos?\n        this.state.routeInfos = this.currentRouteInfos;\n        return _rsvp_DaQAFb0W_js__WEBPACK_IMPORTED_MODULE_1__.P.reject(logAbort(transition));\n      }\n      this._updateURL(transition, newState);\n      transition.isActive = false;\n      this.activeTransition = undefined;\n      this.triggerEvent(this.currentRouteInfos, true, 'didTransition', []);\n      this.didTransition(this.currentRouteInfos);\n      this.toInfos(transition, newState.routeInfos, true);\n      this.routeDidChange(transition);\n      log(this, transition.sequence, 'TRANSITION COMPLETE.');\n      // Resolve with the final route.\n      return routeInfos[routeInfos.length - 1].route;\n    } catch (e) {\n      if (!isTransitionAborted(e)) {\n        let infos = transition[STATE_SYMBOL].routeInfos;\n        transition.trigger(true, 'error', e, transition, infos[infos.length - 1].route);\n        transition.abort();\n      }\n      throw e;\n    }\n  }\n  /**\n  @private\n     Takes an Array of `RouteInfo`s, figures out which ones are\n  exiting, entering, or changing contexts, and calls the\n  proper route hooks.\n     For example, consider the following tree of routes. Each route is\n  followed by the URL segment it handles.\n     ```\n  |~index (\"/\")\n  | |~posts (\"/posts\")\n  | | |-showPost (\"/:id\")\n  | | |-newPost (\"/new\")\n  | | |-editPost (\"/edit\")\n  | |~about (\"/about/:id\")\n  ```\n     Consider the following transitions:\n     1. A URL transition to `/posts/1`.\n     1. Triggers the `*model` callbacks on the\n        `index`, `posts`, and `showPost` routes\n     2. Triggers the `enter` callback on the same\n     3. Triggers the `setup` callback on the same\n  2. A direct transition to `newPost`\n     1. Triggers the `exit` callback on `showPost`\n     2. Triggers the `enter` callback on `newPost`\n     3. Triggers the `setup` callback on `newPost`\n  3. A direct transition to `about` with a specified\n     context object\n     1. Triggers the `exit` callback on `newPost`\n        and `posts`\n     2. Triggers the `serialize` callback on `about`\n     3. Triggers the `enter` callback on `about`\n     4. Triggers the `setup` callback on `about`\n     @param {Router} transition\n  @param {TransitionState} newState\n  */\n  setupContexts(newState, transition) {\n    let partition = this.partitionRoutes(this.state, newState);\n    let i, l, route;\n    for (i = 0, l = partition.exited.length; i < l; i++) {\n      route = partition.exited[i].route;\n      delete route.context;\n      if (route !== undefined) {\n        if (route._internalReset !== undefined) {\n          route._internalReset(true, transition);\n        }\n        if (route.exit !== undefined) {\n          route.exit(transition);\n        }\n      }\n    }\n    let oldState = this.oldState = this.state;\n    this.state = newState;\n    let currentRouteInfos = this.currentRouteInfos = partition.unchanged.slice();\n    try {\n      for (i = 0, l = partition.reset.length; i < l; i++) {\n        route = partition.reset[i].route;\n        if (route !== undefined) {\n          if (route._internalReset !== undefined) {\n            route._internalReset(false, transition);\n          }\n        }\n      }\n      for (i = 0, l = partition.updatedContext.length; i < l; i++) {\n        this.routeEnteredOrUpdated(currentRouteInfos, partition.updatedContext[i], false, transition);\n      }\n      for (i = 0, l = partition.entered.length; i < l; i++) {\n        this.routeEnteredOrUpdated(currentRouteInfos, partition.entered[i], true, transition);\n      }\n    } catch (e) {\n      this.state = oldState;\n      this.currentRouteInfos = oldState.routeInfos;\n      throw e;\n    }\n    this.state.queryParams = this.finalizeQueryParamChange(currentRouteInfos, newState.queryParams, transition);\n  }\n  /**\n  @private\n     Fires queryParamsDidChange event\n  */\n  fireQueryParamDidChange(newState, queryParamChangelist) {\n    // If queryParams changed trigger event\n    if (queryParamChangelist) {\n      // This is a little hacky but we need some way of storing\n      // changed query params given that no activeTransition\n      // is guaranteed to have occurred.\n      this._changedQueryParams = queryParamChangelist.all;\n      this.triggerEvent(newState.routeInfos, true, 'queryParamsDidChange', [queryParamChangelist.changed, queryParamChangelist.all, queryParamChangelist.removed]);\n      this._changedQueryParams = undefined;\n    }\n  }\n  /**\n  @private\n     Helper method used by setupContexts. Handles errors or redirects\n  that may happen in enter/setup.\n  */\n  routeEnteredOrUpdated(currentRouteInfos, routeInfo, enter, transition) {\n    let route = routeInfo.route,\n      context = routeInfo.context;\n    function _routeEnteredOrUpdated(route) {\n      if (enter) {\n        if (route.enter !== undefined) {\n          route.enter(transition);\n        }\n      }\n      throwIfAborted(transition);\n      route.context = context;\n      if (route.contextDidChange !== undefined) {\n        route.contextDidChange();\n      }\n      if (route.setup !== undefined) {\n        route.setup(context, transition);\n      }\n      throwIfAborted(transition);\n      currentRouteInfos.push(routeInfo);\n      return route;\n    }\n    // If the route doesn't exist, it means we haven't resolved the route promise yet\n    if (route === undefined) {\n      routeInfo.routePromise = routeInfo.routePromise.then(_routeEnteredOrUpdated);\n    } else {\n      _routeEnteredOrUpdated(route);\n    }\n    return true;\n  }\n  /**\n  @private\n     This function is called when transitioning from one URL to\n  another to determine which routes are no longer active,\n  which routes are newly active, and which routes remain\n  active but have their context changed.\n     Take a list of old routes and new routes and partition\n  them into four buckets:\n     * unchanged: the route was active in both the old and\n    new URL, and its context remains the same\n  * updated context: the route was active in both the\n    old and new URL, but its context changed. The route's\n    `setup` method, if any, will be called with the new\n    context.\n  * exited: the route was active in the old URL, but is\n    no longer active.\n  * entered: the route was not active in the old URL, but\n    is now active.\n     The PartitionedRoutes structure has four fields:\n     * `updatedContext`: a list of `RouteInfo` objects that\n    represent routes that remain active but have a changed\n    context\n  * `entered`: a list of `RouteInfo` objects that represent\n    routes that are newly active\n  * `exited`: a list of `RouteInfo` objects that are no\n    longer active.\n  * `unchanged`: a list of `RouteInfo` objects that remain active.\n     @param {Array[InternalRouteInfo]} oldRoutes a list of the route\n    information for the previous URL (or `[]` if this is the\n    first handled transition)\n  @param {Array[InternalRouteInfo]} newRoutes a list of the route\n    information for the new URL\n     @return {Partition}\n  */\n  partitionRoutes(oldState, newState) {\n    let oldRouteInfos = oldState.routeInfos;\n    let newRouteInfos = newState.routeInfos;\n    let routes = {\n      updatedContext: [],\n      exited: [],\n      entered: [],\n      unchanged: [],\n      reset: []\n    };\n    let routeChanged,\n      contextChanged = false,\n      i,\n      l;\n    for (i = 0, l = newRouteInfos.length; i < l; i++) {\n      let oldRouteInfo = oldRouteInfos[i],\n        newRouteInfo = newRouteInfos[i];\n      if (!oldRouteInfo || oldRouteInfo.route !== newRouteInfo.route) {\n        routeChanged = true;\n      }\n      if (routeChanged) {\n        routes.entered.push(newRouteInfo);\n        if (oldRouteInfo) {\n          routes.exited.unshift(oldRouteInfo);\n        }\n      } else if (contextChanged || oldRouteInfo.context !== newRouteInfo.context) {\n        contextChanged = true;\n        routes.updatedContext.push(newRouteInfo);\n      } else {\n        routes.unchanged.push(oldRouteInfo);\n      }\n    }\n    for (i = newRouteInfos.length, l = oldRouteInfos.length; i < l; i++) {\n      routes.exited.unshift(oldRouteInfos[i]);\n    }\n    routes.reset = routes.updatedContext.slice();\n    routes.reset.reverse();\n    return routes;\n  }\n  _updateURL(transition, state) {\n    let urlMethod = transition.urlMethod;\n    if (!urlMethod) {\n      return;\n    }\n    let {\n      routeInfos\n    } = state;\n    let {\n      name: routeName\n    } = routeInfos[routeInfos.length - 1];\n    let params = {};\n    for (let i = routeInfos.length - 1; i >= 0; --i) {\n      let routeInfo = routeInfos[i];\n      merge(params, routeInfo.params);\n      if (routeInfo.route.inaccessibleByURL) {\n        urlMethod = null;\n      }\n    }\n    if (urlMethod) {\n      params.queryParams = transition._visibleQueryParams || state.queryParams;\n      let url = this.recognizer.generate(routeName, params);\n      // transitions during the initial transition must always use replaceURL.\n      // When the app boots, you are at a url, e.g. /foo. If some route\n      // redirects to bar as part of the initial transition, you don't want to\n      // add a history entry for /foo. If you do, pressing back will immediately\n      // hit the redirect again and take you back to /bar, thus killing the back\n      // button\n      let initial = transition.isCausedByInitialTransition;\n      // say you are at / and you click a link to route /foo. In /foo's\n      // route, the transition is aborted using replaceWith('/bar').\n      // Because the current url is still /, the history entry for / is\n      // removed from the history. Clicking back will take you to the page\n      // you were on before /, which is often not even the app, thus killing\n      // the back button. That's why updateURL is always correct for an\n      // aborting transition that's not the initial transition\n      let replaceAndNotAborting = urlMethod === 'replace' && !transition.isCausedByAbortingTransition;\n      // because calling refresh causes an aborted transition, this needs to be\n      // special cased - if the initial transition is a replace transition, the\n      // urlMethod should be honored here.\n      let isQueryParamsRefreshTransition = transition.queryParamsOnly && urlMethod === 'replace';\n      // say you are at / and you a `replaceWith(/foo)` is called. Then, that\n      // transition is aborted with `replaceWith(/bar)`. At the end, we should\n      // end up with /bar replacing /. We are replacing the replace. We only\n      // will replace the initial route if all subsequent aborts are also\n      // replaces. However, there is some ambiguity around the correct behavior\n      // here.\n      let replacingReplace = urlMethod === 'replace' && transition.isCausedByAbortingReplaceTransition;\n      if (initial || replaceAndNotAborting || isQueryParamsRefreshTransition || replacingReplace) {\n        this.replaceURL(url);\n      } else {\n        this.updateURL(url);\n      }\n    }\n  }\n  finalizeQueryParamChange(resolvedHandlers, newQueryParams, transition) {\n    // We fire a finalizeQueryParamChange event which\n    // gives the new route hierarchy a chance to tell\n    // us which query params it's consuming and what\n    // their final values are. If a query param is\n    // no longer consumed in the final route hierarchy,\n    // its serialized segment will be removed\n    // from the URL.\n    for (let k in newQueryParams) {\n      if (newQueryParams.hasOwnProperty(k) && newQueryParams[k] === null) {\n        delete newQueryParams[k];\n      }\n    }\n    let finalQueryParamsArray = [];\n    this.triggerEvent(resolvedHandlers, true, 'finalizeQueryParamChange', [newQueryParams, finalQueryParamsArray, transition]);\n    if (transition) {\n      transition._visibleQueryParams = {};\n    }\n    let finalQueryParams = {};\n    for (let i = 0, len = finalQueryParamsArray.length; i < len; ++i) {\n      let qp = finalQueryParamsArray[i];\n      finalQueryParams[qp.key] = qp.value;\n      if (transition && qp.visible !== false) {\n        transition._visibleQueryParams[qp.key] = qp.value;\n      }\n    }\n    return finalQueryParams;\n  }\n  toReadOnlyInfos(newTransition, newState) {\n    let oldRouteInfos = this.state.routeInfos;\n    this.fromInfos(newTransition, oldRouteInfos);\n    this.toInfos(newTransition, newState.routeInfos);\n    this._lastQueryParams = newState.queryParams;\n  }\n  fromInfos(newTransition, oldRouteInfos) {\n    if (newTransition !== undefined && oldRouteInfos.length > 0) {\n      let fromInfos = toReadOnlyRouteInfo(oldRouteInfos, Object.assign({}, this._lastQueryParams), {\n        includeAttributes: true,\n        localizeMapUpdates: false\n      });\n      newTransition.from = fromInfos[fromInfos.length - 1] || null;\n    }\n  }\n  toInfos(newTransition, newRouteInfos, includeAttributes = false) {\n    if (newTransition !== undefined && newRouteInfos.length > 0) {\n      let toInfos = toReadOnlyRouteInfo(newRouteInfos, Object.assign({}, newTransition[QUERY_PARAMS_SYMBOL]), {\n        includeAttributes,\n        localizeMapUpdates: false\n      });\n      newTransition.to = toInfos[toInfos.length - 1] || null;\n    }\n  }\n  notifyExistingHandlers(newState, newTransition) {\n    let oldRouteInfos = this.state.routeInfos,\n      i,\n      oldRouteInfoLen,\n      oldHandler,\n      newRouteInfo;\n    oldRouteInfoLen = oldRouteInfos.length;\n    for (i = 0; i < oldRouteInfoLen; i++) {\n      oldHandler = oldRouteInfos[i];\n      newRouteInfo = newState.routeInfos[i];\n      if (!newRouteInfo || oldHandler.name !== newRouteInfo.name) {\n        break;\n      }\n      if (!newRouteInfo.isResolved) ;\n    }\n    this.triggerEvent(oldRouteInfos, true, 'willTransition', [newTransition]);\n    this.routeWillChange(newTransition);\n    this.willTransition(oldRouteInfos, newState.routeInfos, newTransition);\n  }\n  /**\n    Clears the current and target route routes and triggers exit\n    on each of them starting at the leaf and traversing up through\n    its ancestors.\n  */\n  reset() {\n    if (this.state) {\n      forEach(this.state.routeInfos.slice().reverse(), function (routeInfo) {\n        let route = routeInfo.route;\n        if (route !== undefined) {\n          if (route.exit !== undefined) {\n            route.exit();\n          }\n        }\n        return true;\n      });\n    }\n    this.oldState = undefined;\n    this.state = new TransitionState();\n    this.currentRouteInfos = undefined;\n  }\n  /**\n    let handler = routeInfo.handler;\n    The entry point for handling a change to the URL (usually\n    via the back and forward button).\n       Returns an Array of handlers and the parameters associated\n    with those parameters.\n       @param {String} url a URL to process\n       @return {Array} an Array of `[handler, parameter]` tuples\n  */\n  handleURL(url) {\n    // Perform a URL-based transition, but don't change\n    // the URL afterward, since it already happened.\n    if (url.charAt(0) !== '/') {\n      url = '/' + url;\n    }\n    return this.doTransition(url).method(null);\n  }\n  /**\n    Transition into the specified named route.\n       If necessary, trigger the exit callback on any routes\n    that are no longer represented by the target route.\n       @param {String} name the name of the route\n  */\n  transitionTo(name, ...contexts) {\n    if (typeof name === 'object') {\n      contexts.push(name);\n      return this.doTransition(undefined, contexts, false);\n    }\n    return this.doTransition(name, contexts);\n  }\n  intermediateTransitionTo(name, ...args) {\n    return this.doTransition(name, args, true);\n  }\n  refresh(pivotRoute) {\n    let previousTransition = this.activeTransition;\n    let state = previousTransition ? previousTransition[STATE_SYMBOL] : this.state;\n    let routeInfos = state.routeInfos;\n    if (pivotRoute === undefined) {\n      pivotRoute = routeInfos[0].route;\n    }\n    log(this, 'Starting a refresh transition');\n    let name = routeInfos[routeInfos.length - 1].name;\n    let intent = new NamedTransitionIntent(this, name, pivotRoute, [], this._changedQueryParams || state.queryParams);\n    let newTransition = this.transitionByIntent(intent, false);\n    // if the previous transition is a replace transition, that needs to be preserved\n    if (previousTransition && previousTransition.urlMethod === 'replace') {\n      newTransition.method(previousTransition.urlMethod);\n    }\n    return newTransition;\n  }\n  /**\n    Identical to `transitionTo` except that the current URL will be replaced\n    if possible.\n       This method is intended primarily for use with `replaceState`.\n       @param {String} name the name of the route\n  */\n  replaceWith(name) {\n    return this.doTransition(name).method('replace');\n  }\n  /**\n    Take a named route and context objects and generate a\n    URL.\n       @param {String} name the name of the route to generate\n      a URL for\n    @param {...Object} objects a list of objects to serialize\n       @return {String} a URL\n  */\n  generate(routeName, ...args) {\n    let partitionedArgs = extractQueryParams(args),\n      suppliedParams = partitionedArgs[0],\n      queryParams = partitionedArgs[1];\n    // Construct a TransitionIntent with the provided params\n    // and apply it to the present state of the router.\n    let intent = new NamedTransitionIntent(this, routeName, undefined, suppliedParams);\n    let state = intent.applyToState(this.state, false);\n    let params = {};\n    for (let i = 0, len = state.routeInfos.length; i < len; ++i) {\n      let routeInfo = state.routeInfos[i];\n      let routeParams = routeInfo.serialize();\n      merge(params, routeParams);\n    }\n    params.queryParams = queryParams;\n    return this.recognizer.generate(routeName, params);\n  }\n  applyIntent(routeName, contexts) {\n    let intent = new NamedTransitionIntent(this, routeName, undefined, contexts);\n    let state = this.activeTransition && this.activeTransition[STATE_SYMBOL] || this.state;\n    return intent.applyToState(state, false);\n  }\n  isActiveIntent(routeName, contexts, queryParams, _state) {\n    let state = _state || this.state,\n      targetRouteInfos = state.routeInfos,\n      routeInfo,\n      len;\n    if (!targetRouteInfos.length) {\n      return false;\n    }\n    let targetHandler = targetRouteInfos[targetRouteInfos.length - 1].name;\n    let recognizerHandlers = this.recognizer.handlersFor(targetHandler);\n    let index = 0;\n    for (len = recognizerHandlers.length; index < len; ++index) {\n      routeInfo = targetRouteInfos[index];\n      if (routeInfo.name === routeName) {\n        break;\n      }\n    }\n    if (index === recognizerHandlers.length) {\n      // The provided route name isn't even in the route hierarchy.\n      return false;\n    }\n    let testState = new TransitionState();\n    testState.routeInfos = targetRouteInfos.slice(0, index + 1);\n    recognizerHandlers = recognizerHandlers.slice(0, index + 1);\n    let intent = new NamedTransitionIntent(this, targetHandler, undefined, contexts);\n    let newState = intent.applyToHandlers(testState, recognizerHandlers, targetHandler, true, true);\n    let routesEqual = routeInfosEqual(newState.routeInfos, testState.routeInfos);\n    if (!queryParams || !routesEqual) {\n      return routesEqual;\n    }\n    // Get a hash of QPs that will still be active on new route\n    let activeQPsOnNewHandler = {};\n    merge(activeQPsOnNewHandler, queryParams);\n    let activeQueryParams = state.queryParams;\n    for (let key in activeQueryParams) {\n      if (activeQueryParams.hasOwnProperty(key) && activeQPsOnNewHandler.hasOwnProperty(key)) {\n        activeQPsOnNewHandler[key] = activeQueryParams[key];\n      }\n    }\n    return routesEqual && !getChangelist(activeQPsOnNewHandler, queryParams);\n  }\n  isActive(routeName, ...args) {\n    let [contexts, queryParams] = extractQueryParams(args);\n    return this.isActiveIntent(routeName, contexts, queryParams);\n  }\n  trigger(name, ...args) {\n    this.triggerEvent(this.currentRouteInfos, false, name, args);\n  }\n}\nfunction routeInfosEqual(routeInfos, otherRouteInfos) {\n  if (routeInfos.length !== otherRouteInfos.length) {\n    return false;\n  }\n  for (let i = 0, len = routeInfos.length; i < len; ++i) {\n    // SAFETY: Just casting for comparison\n    if (routeInfos[i] !== otherRouteInfos[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction routeInfosSameExceptQueryParams(routeInfos, otherRouteInfos) {\n  if (routeInfos.length !== otherRouteInfos.length) {\n    return false;\n  }\n  for (let i = 0, len = routeInfos.length; i < len; ++i) {\n    if (routeInfos[i].name !== otherRouteInfos[i].name) {\n      return false;\n    }\n    if (!paramsEqual(routeInfos[i].params, otherRouteInfos[i].params)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction paramsEqual(params, otherParams) {\n  if (params === otherParams) {\n    // Both identical or both undefined\n    return true;\n  }\n  if (!params || !otherParams) {\n    // One is falsy but other is not\n    return false;\n  }\n  let keys = Object.keys(params);\n  let otherKeys = Object.keys(otherParams);\n  if (keys.length !== otherKeys.length) {\n    return false;\n  }\n  for (let i = 0, len = keys.length; i < len; ++i) {\n    let key = keys[i];\n    if (params[key] !== otherParams[key]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/router-B-Q1aYBn.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/rsvp-DaQAFb0W.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/rsvp-DaQAFb0W.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   E: () => (/* binding */ EventTarget),\n/* harmony export */   P: () => (/* binding */ Promise$2),\n/* harmony export */   R: () => (/* binding */ RSVP$1),\n/* harmony export */   a: () => (/* binding */ RSVP),\n/* harmony export */   b: () => (/* binding */ asap),\n/* harmony export */   c: () => (/* binding */ configure),\n/* harmony export */   d: () => (/* binding */ cast),\n/* harmony export */   e: () => (/* binding */ all),\n/* harmony export */   f: () => (/* binding */ allSettled),\n/* harmony export */   g: () => (/* binding */ hashSettled),\n/* harmony export */   h: () => (/* binding */ hash),\n/* harmony export */   i: () => (/* binding */ rethrow),\n/* harmony export */   j: () => (/* binding */ defer),\n/* harmony export */   k: () => (/* binding */ denodeify),\n/* harmony export */   l: () => (/* binding */ off),\n/* harmony export */   m: () => (/* binding */ resolve),\n/* harmony export */   n: () => (/* binding */ reject),\n/* harmony export */   o: () => (/* binding */ on),\n/* harmony export */   p: () => (/* binding */ map),\n/* harmony export */   q: () => (/* binding */ async),\n/* harmony export */   r: () => (/* binding */ race),\n/* harmony export */   s: () => (/* binding */ filter)\n/* harmony export */ });\nfunction callbacksFor(object) {\n  let callbacks = object._promiseCallbacks;\n  if (!callbacks) {\n    callbacks = object._promiseCallbacks = {};\n  }\n  return callbacks;\n}\n\n/**\n  @class EventTarget\n  @for rsvp\n  @public\n*/\nconst EventTarget = {\n  /**\n    `EventTarget.mixin` extends an object with EventTarget methods. For\n    Example:\n     ```javascript\n    import EventTarget from 'rsvp';\n     let object = {};\n     EventTarget.mixin(object);\n     object.on('finished', function(event) {\n      // handle event\n    });\n     object.trigger('finished', { detail: value });\n    ```\n     `EventTarget.mixin` also works with prototypes:\n     ```javascript\n    import EventTarget from 'rsvp';\n     let Person = function() {};\n    EventTarget.mixin(Person.prototype);\n     let yehuda = new Person();\n    let tom = new Person();\n     yehuda.on('poke', function(event) {\n      console.log('Yehuda says OW');\n    });\n     tom.on('poke', function(event) {\n      console.log('Tom says OW');\n    });\n     yehuda.trigger('poke');\n    tom.trigger('poke');\n    ```\n     @method mixin\n    @for rsvp\n    @private\n    @param {Object} object object to extend with EventTarget methods\n  */\n  mixin(object) {\n    object.on = this.on;\n    object.off = this.off;\n    object.trigger = this.trigger;\n    object._promiseCallbacks = undefined;\n    return object;\n  },\n  /**\n    Registers a callback to be executed when `eventName` is triggered\n     ```javascript\n    object.on('event', function(eventInfo){\n      // handle the event\n    });\n     object.trigger('event');\n    ```\n     @method on\n    @for EventTarget\n    @private\n    @param {String} eventName name of the event to listen for\n    @param {Function} callback function to be called when the event is triggered.\n  */\n  on(eventName, callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function');\n    }\n    let allCallbacks = callbacksFor(this);\n    let callbacks = allCallbacks[eventName];\n    if (!callbacks) {\n      callbacks = allCallbacks[eventName] = [];\n    }\n    if (callbacks.indexOf(callback) === -1) {\n      callbacks.push(callback);\n    }\n  },\n  /**\n    You can use `off` to stop firing a particular callback for an event:\n     ```javascript\n    function doStuff() { // do stuff! }\n    object.on('stuff', doStuff);\n     object.trigger('stuff'); // doStuff will be called\n     // Unregister ONLY the doStuff callback\n    object.off('stuff', doStuff);\n    object.trigger('stuff'); // doStuff will NOT be called\n    ```\n     If you don't pass a `callback` argument to `off`, ALL callbacks for the\n    event will not be executed when the event fires. For example:\n     ```javascript\n    let callback1 = function(){};\n    let callback2 = function(){};\n     object.on('stuff', callback1);\n    object.on('stuff', callback2);\n     object.trigger('stuff'); // callback1 and callback2 will be executed.\n     object.off('stuff');\n    object.trigger('stuff'); // callback1 and callback2 will not be executed!\n    ```\n     @method off\n    @for rsvp\n    @private\n    @param {String} eventName event to stop listening to\n    @param {Function} [callback] optional argument. If given, only the function\n    given will be removed from the event's callback queue. If no `callback`\n    argument is given, all callbacks will be removed from the event's callback\n    queue.\n  */\n  off(eventName, callback) {\n    let allCallbacks = callbacksFor(this);\n    if (!callback) {\n      allCallbacks[eventName] = [];\n      return;\n    }\n    let callbacks = allCallbacks[eventName];\n    let index = callbacks.indexOf(callback);\n    if (index !== -1) {\n      callbacks.splice(index, 1);\n    }\n  },\n  /**\n    Use `trigger` to fire custom events. For example:\n     ```javascript\n    object.on('foo', function(){\n      console.log('foo event happened!');\n    });\n    object.trigger('foo');\n    // 'foo event happened!' logged to the console\n    ```\n     You can also pass a value as a second argument to `trigger` that will be\n    passed as an argument to all event listeners for the event:\n     ```javascript\n    object.on('foo', function(value){\n      console.log(value.name);\n    });\n     object.trigger('foo', { name: 'bar' });\n    // 'bar' logged to the console\n    ```\n     @method trigger\n    @for rsvp\n    @private\n    @param {String} eventName name of the event to be triggered\n    @param {*} [options] optional value to be passed to any event handlers for\n    the given `eventName`\n  */\n  trigger(eventName, options, label) {\n    let allCallbacks = callbacksFor(this);\n    let callbacks = allCallbacks[eventName];\n    if (callbacks) {\n      // Don't cache the callbacks.length since it may grow\n      let callback;\n      for (let i = 0; i < callbacks.length; i++) {\n        callback = callbacks[i];\n        callback(options, label);\n      }\n    }\n  }\n};\nconst config = {\n  instrument: false\n};\nEventTarget['mixin'](config);\nfunction configure(name, value) {\n  if (arguments.length === 2) {\n    config[name] = value;\n  } else {\n    return config[name];\n  }\n}\nconst queue$1 = [];\nfunction scheduleFlush$1() {\n  setTimeout(() => {\n    for (let i = 0; i < queue$1.length; i++) {\n      let entry = queue$1[i];\n      let payload = entry.payload;\n      payload.guid = payload.key + payload.id;\n      payload.childGuid = payload.key + payload.childId;\n      if (payload.error) {\n        payload.stack = payload.error.stack;\n      }\n      config['trigger'](entry.name, entry.payload);\n    }\n    queue$1.length = 0;\n  }, 50);\n}\nfunction instrument(eventName, promise, child) {\n  if (1 === queue$1.push({\n    name: eventName,\n    payload: {\n      key: promise._guidKey,\n      id: promise._id,\n      eventName: eventName,\n      detail: promise._result,\n      childId: child && child._id,\n      label: promise._label,\n      timeStamp: Date.now(),\n      error: config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n    }\n  })) {\n    scheduleFlush$1();\n  }\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise = RSVP.Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @for Promise\n  @static\n  @param {*} object value that the returned promise will be resolved with\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$2(object, label) {\n  /*jshint validthis:true */\n  let Constructor = this;\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n  let promise = new Constructor(noop, label);\n  resolve$1(promise, object);\n  return promise;\n}\nfunction withOwnPromise() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\nfunction objectOrFunction(x) {\n  let type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\nfunction noop() {}\nconst PENDING = void 0;\nconst FULFILLED = 1;\nconst REJECTED = 2;\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\nfunction handleForeignThenable(promise, thenable, then) {\n  config.async(promise => {\n    let sealed = false;\n    let error = tryThen(then, thenable, value => {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable === value) {\n        fulfill(promise, value);\n      } else {\n        resolve$1(promise, value);\n      }\n    }, reason => {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      reject$2(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n    if (!sealed && error) {\n      sealed = true;\n      reject$2(promise, error);\n    }\n  }, promise);\n}\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    thenable._onError = null;\n    reject$2(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, value => {\n      if (thenable === value) {\n        fulfill(promise, value);\n      } else {\n        resolve$1(promise, value);\n      }\n    }, reason => reject$2(promise, reason));\n  }\n}\nfunction handleMaybeThenable(promise, maybeThenable, then$1) {\n  let isOwnThenable = maybeThenable.constructor === promise.constructor && then$1 === then && promise.constructor.resolve === resolve$2;\n  if (isOwnThenable) {\n    handleOwnThenable(promise, maybeThenable);\n  } else if (typeof then$1 === 'function') {\n    handleForeignThenable(promise, maybeThenable, then$1);\n  } else {\n    fulfill(promise, maybeThenable);\n  }\n}\nfunction resolve$1(promise, value) {\n  if (promise === value) {\n    fulfill(promise, value);\n  } else if (objectOrFunction(value)) {\n    let then;\n    try {\n      then = value.then;\n    } catch (error) {\n      reject$2(promise, error);\n      return;\n    }\n    handleMaybeThenable(promise, value, then);\n  } else {\n    fulfill(promise, value);\n  }\n}\nfunction publishRejection(promise) {\n  if (promise._onError) {\n    promise._onError(promise._result);\n  }\n  publish(promise);\n}\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._result = value;\n  promise._state = FULFILLED;\n  if (promise._subscribers.length === 0) {\n    if (config.instrument) {\n      instrument('fulfilled', promise);\n    }\n  } else {\n    config.async(publish, promise);\n  }\n}\nfunction reject$2(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n  config.async(publishRejection, promise);\n}\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  let subscribers = parent._subscribers;\n  let length = subscribers.length;\n  parent._onError = null;\n  subscribers[length] = child;\n  subscribers[length + FULFILLED] = onFulfillment;\n  subscribers[length + REJECTED] = onRejection;\n  if (length === 0 && parent._state) {\n    config.async(publish, parent);\n  }\n}\nfunction publish(promise) {\n  let subscribers = promise._subscribers;\n  let settled = promise._state;\n  if (config.instrument) {\n    instrument(settled === FULFILLED ? 'fulfilled' : 'rejected', promise);\n  }\n  if (subscribers.length === 0) {\n    return;\n  }\n  let child,\n    callback,\n    result = promise._result;\n  for (let i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n    if (child) {\n      invokeCallback(settled, child, callback, result);\n    } else {\n      callback(result);\n    }\n  }\n  promise._subscribers.length = 0;\n}\nfunction invokeCallback(state, promise, callback, result) {\n  let hasCallback = typeof callback === 'function';\n  let value,\n    succeeded = true,\n    error;\n  if (hasCallback) {\n    try {\n      value = callback(result);\n    } catch (e) {\n      succeeded = false;\n      error = e;\n    }\n  } else {\n    value = result;\n  }\n  if (promise._state !== PENDING) ;else if (value === promise) {\n    reject$2(promise, withOwnPromise());\n  } else if (succeeded === false) {\n    reject$2(promise, error);\n  } else if (hasCallback) {\n    resolve$1(promise, value);\n  } else if (state === FULFILLED) {\n    fulfill(promise, value);\n  } else if (state === REJECTED) {\n    reject$2(promise, value);\n  }\n}\nfunction initializePromise(promise, resolver) {\n  let resolved = false;\n  try {\n    resolver(value => {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      resolve$1(promise, value);\n    }, reason => {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      reject$2(promise, reason);\n    });\n  } catch (e) {\n    reject$2(promise, e);\n  }\n}\nfunction then(onFulfillment, onRejection, label) {\n  let parent = this;\n  let state = parent._state;\n  if (state === FULFILLED && !onFulfillment || state === REJECTED && !onRejection) {\n    config.instrument && instrument('chained', parent, parent);\n    return parent;\n  }\n  parent._onError = null;\n  let child = new parent.constructor(noop, label);\n  let result = parent._result;\n  config.instrument && instrument('chained', parent, child);\n  if (state === PENDING) {\n    subscribe(parent, child, onFulfillment, onRejection);\n  } else {\n    let callback = state === FULFILLED ? onFulfillment : onRejection;\n    config.async(() => invokeCallback(state, child, callback, result));\n  }\n  return child;\n}\nclass Enumerator {\n  constructor(Constructor, input, abortOnReject, label) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop, label);\n    this._abortOnReject = abortOnReject;\n    this._isUsingOwnPromise = Constructor === Promise$2;\n    this._isUsingOwnResolve = Constructor.resolve === resolve$2;\n    this._init(...arguments);\n  }\n  _init(Constructor, input) {\n    let len = input.length || 0;\n    this.length = len;\n    this._remaining = len;\n    this._result = new Array(len);\n    this._enumerate(input);\n  }\n  _enumerate(input) {\n    let length = this.length;\n    let promise = this.promise;\n    for (let i = 0; promise._state === PENDING && i < length; i++) {\n      this._eachEntry(input[i], i, true);\n    }\n    this._checkFullfillment();\n  }\n  _checkFullfillment() {\n    if (this._remaining === 0) {\n      let result = this._result;\n      fulfill(this.promise, result);\n      this._result = null;\n    }\n  }\n  _settleMaybeThenable(entry, i, firstPass) {\n    let c = this._instanceConstructor;\n    if (this._isUsingOwnResolve) {\n      let then$1,\n        error,\n        succeeded = true;\n      try {\n        then$1 = entry.then;\n      } catch (e) {\n        succeeded = false;\n        error = e;\n      }\n      if (then$1 === then && entry._state !== PENDING) {\n        entry._onError = null;\n        this._settledAt(entry._state, i, entry._result, firstPass);\n      } else if (typeof then$1 !== 'function') {\n        this._settledAt(FULFILLED, i, entry, firstPass);\n      } else if (this._isUsingOwnPromise) {\n        let promise = new c(noop);\n        if (succeeded === false) {\n          reject$2(promise, error);\n        } else {\n          handleMaybeThenable(promise, entry, then$1);\n          this._willSettleAt(promise, i, firstPass);\n        }\n      } else {\n        this._willSettleAt(new c(resolve => resolve(entry)), i, firstPass);\n      }\n    } else {\n      this._willSettleAt(c.resolve(entry), i, firstPass);\n    }\n  }\n  _eachEntry(entry, i, firstPass) {\n    if (entry !== null && typeof entry === 'object') {\n      this._settleMaybeThenable(entry, i, firstPass);\n    } else {\n      this._setResultAt(FULFILLED, i, entry, firstPass);\n    }\n  }\n  _settledAt(state, i, value, firstPass) {\n    let promise = this.promise;\n    if (promise._state === PENDING) {\n      if (this._abortOnReject && state === REJECTED) {\n        reject$2(promise, value);\n      } else {\n        this._setResultAt(state, i, value, firstPass);\n        this._checkFullfillment();\n      }\n    }\n  }\n  _setResultAt(state, i, value, firstPass) {\n    this._remaining--;\n    this._result[i] = value;\n  }\n  _willSettleAt(promise, i, firstPass) {\n    subscribe(promise, undefined, value => this._settledAt(FULFILLED, i, value, firstPass), reason => this._settledAt(REJECTED, i, reason, firstPass));\n  }\n}\nfunction setSettledResult(state, i, value) {\n  this._remaining--;\n  if (state === FULFILLED) {\n    this._result[i] = {\n      state: 'fulfilled',\n      value: value\n    };\n  } else {\n    this._result[i] = {\n      state: 'rejected',\n      reason: value\n    };\n  }\n}\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  import Promise, { resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  import Promise, { resolve, reject } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @for Promise\n  @param {Array} entries array of promises\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all$1(entries, label) {\n  if (!Array.isArray(entries)) {\n    return this.reject(new TypeError(\"Promise.all must be called with an array\"), label);\n  }\n  return new Enumerator(this, entries, true /* abort on reject */, label).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @for Promise\n  @static\n  @param {Array} entries array of promises to observe\n  @param {String} [label] optional string for describing the promise returned.\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race$1(entries, label) {\n  /*jshint validthis:true */\n  let Constructor = this;\n  let promise = new Constructor(noop, label);\n  if (!Array.isArray(entries)) {\n    reject$2(promise, new TypeError('Promise.race must be called with an array'));\n    return promise;\n  }\n  for (let i = 0; promise._state === PENDING && i < entries.length; i++) {\n    subscribe(Constructor.resolve(entries[i]), undefined, value => resolve$1(promise, value), reason => reject$2(promise, reason));\n  }\n  return promise;\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @for Promise\n  @static\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason, label) {\n  /*jshint validthis:true */\n  let Constructor = this;\n  let promise = new Constructor(noop, label);\n  reject$2(promise, reason);\n  return promise;\n}\nconst guidKey = 'rsvp_' + Date.now() + '-';\nlet counter = 0;\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise’s eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @public\n  @param {function} resolver\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @constructor\n*/\nlet Promise$1 = class Promise {\n  constructor(resolver, label) {\n    this._id = counter++;\n    this._label = label;\n    this._state = undefined;\n    this._result = undefined;\n    this._subscribers = [];\n    config.instrument && instrument('created', this);\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n  _onError(reason) {\n    config.after(() => {\n      if (this._onError) {\n        config.trigger('error', reason, this._label);\n      }\n    });\n  }\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn\\'t find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    @param {String} [label] optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n  */\n  catch(onRejection, label) {\n    return this.then(undefined, onRejection, label);\n  }\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuthor();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuthor();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @param {String} [label] optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n  */\n  finally(callback, label) {\n    let promise = this;\n    let constructor = promise.constructor;\n    if (typeof callback === 'function') {\n      return promise.then(value => constructor.resolve(callback()).then(() => value), reason => constructor.resolve(callback()).then(() => {\n        throw reason;\n      }));\n    }\n    return promise.then(callback, callback);\n  }\n};\nPromise$1.cast = resolve$2; // deprecated\nPromise$1.all = all$1;\nPromise$1.race = race$1;\nPromise$1.resolve = resolve$2;\nPromise$1.reject = reject$1;\nPromise$1.prototype._guidKey = guidKey;\n\n/**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n\n  ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n\n  Chaining\n  --------\n\n  The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n\n  ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n\n  findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we\\'re unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we\\'re unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n  ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n\n  Assimilation\n  ------------\n\n  Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n\n  ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n\n  If the assimliated promise rejects, then the downstream promise will also reject.\n\n  ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n\n  Simple Example\n  --------------\n\n  Synchronous Example\n\n  ```javascript\n  let result;\n\n  try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n\n  Errback Example\n\n  ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n\n  Promise Example;\n\n  ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n\n  Advanced Example\n  --------------\n\n  Synchronous Example\n\n  ```javascript\n  let author, books;\n\n  try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n\n  Errback Example\n\n  ```js\n\n  function foundBooks(books) {\n\n  }\n\n  function failure(reason) {\n\n  }\n\n  findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n\n  Promise Example;\n\n  ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n\n  @method then\n  @param {Function} onFulfillment\n  @param {Function} onRejection\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise}\n*/\nPromise$1.prototype.then = then;\nconst Promise$2 = Promise$1;\nfunction makeObject(_, argumentNames) {\n  let obj = {};\n  let length = _.length;\n  let args = new Array(length);\n  for (let x = 0; x < length; x++) {\n    args[x] = _[x];\n  }\n  for (let i = 0; i < argumentNames.length; i++) {\n    let name = argumentNames[i];\n    obj[name] = args[i + 1];\n  }\n  return obj;\n}\nfunction arrayResult(_) {\n  let length = _.length;\n  let args = new Array(length - 1);\n  for (let i = 1; i < length; i++) {\n    args[i - 1] = _[i];\n  }\n  return args;\n}\nfunction wrapThenable(then, promise) {\n  return {\n    then(onFulFillment, onRejection) {\n      return then.call(promise, onFulFillment, onRejection);\n    }\n  };\n}\n\n/**\n  `denodeify` takes a 'node-style' function and returns a function that\n  will return an `Promise`. You can use `denodeify` in Node.js or the\n  browser when you'd prefer to use promises over using callbacks. For example,\n  `denodeify` transforms the following:\n\n  ```javascript\n  let fs = require('fs');\n\n  fs.readFile('myfile.txt', function(err, data){\n    if (err) return handleError(err);\n    handleData(data);\n  });\n  ```\n\n  into:\n\n  ```javascript\n  let fs = require('fs');\n  let readFile = denodeify(fs.readFile);\n\n  readFile('myfile.txt').then(handleData, handleError);\n  ```\n\n  If the node function has multiple success parameters, then `denodeify`\n  just returns the first one:\n\n  ```javascript\n  let request = denodeify(require('request'));\n\n  request('http://example.com').then(function(res) {\n    // ...\n  });\n  ```\n\n  However, if you need all success parameters, setting `denodeify`'s\n  second parameter to `true` causes it to return all success parameters\n  as an array:\n\n  ```javascript\n  let request = denodeify(require('request'), true);\n\n  request('http://example.com').then(function(result) {\n    // result[0] -> res\n    // result[1] -> body\n  });\n  ```\n\n  Or if you pass it an array with names it returns the parameters as a hash:\n\n  ```javascript\n  let request = denodeify(require('request'), ['res', 'body']);\n\n  request('http://example.com').then(function(result) {\n    // result.res\n    // result.body\n  });\n  ```\n\n  Sometimes you need to retain the `this`:\n\n  ```javascript\n  let app = require('express')();\n  let render = denodeify(app.render.bind(app));\n  ```\n\n  The denodified function inherits from the original function. It works in all\n  environments, except IE 10 and below. Consequently all properties of the original\n  function are available to you. However, any properties you change on the\n  denodeified function won't be changed on the original function. Example:\n\n  ```javascript\n  let request = denodeify(require('request')),\n      cookieJar = request.jar(); // <- Inheritance is used here\n\n  request('http://example.com', {jar: cookieJar}).then(function(res) {\n    // cookieJar.cookies holds now the cookies returned by example.com\n  });\n  ```\n\n  Using `denodeify` makes it easier to compose asynchronous operations instead\n  of using callbacks. For example, instead of:\n\n  ```javascript\n  let fs = require('fs');\n\n  fs.readFile('myfile.txt', function(err, data){\n    if (err) { ... } // Handle error\n    fs.writeFile('myfile2.txt', data, function(err){\n      if (err) { ... } // Handle error\n      console.log('done')\n    });\n  });\n  ```\n\n  you can chain the operations together using `then` from the returned promise:\n\n  ```javascript\n  let fs = require('fs');\n  let readFile = denodeify(fs.readFile);\n  let writeFile = denodeify(fs.writeFile);\n\n  readFile('myfile.txt').then(function(data){\n    return writeFile('myfile2.txt', data);\n  }).then(function(){\n    console.log('done')\n  }).catch(function(error){\n    // Handle error\n  });\n  ```\n\n  @method denodeify\n  @public\n  @static\n  @for rsvp\n  @param {Function} nodeFunc a 'node-style' function that takes a callback as\n  its last argument. The callback expects an error to be passed as its first\n  argument (if an error occurred, otherwise null), and the value from the\n  operation as its second argument ('function(err, value){ }').\n  @param {Boolean|Array} [options] An optional paramter that if set\n  to `true` causes the promise to fulfill with the callback's success arguments\n  as an array. This is useful if the node function has multiple success\n  paramters. If you set this paramter to an array with names, the promise will\n  fulfill with a hash with these names as keys and the success parameters as\n  values.\n  @return {Function} a function that wraps `nodeFunc` to return a `Promise`\n*/\nfunction denodeify(nodeFunc, options) {\n  let fn = function () {\n    let l = arguments.length;\n    let args = new Array(l + 1);\n    let promiseInput = false;\n    for (let i = 0; i < l; ++i) {\n      let arg = arguments[i];\n\n      // TODO: this code really needs to be cleaned up\n      if (!promiseInput) {\n        if (arg !== null && typeof arg === 'object') {\n          if (arg.constructor === Promise$2) {\n            promiseInput = true;\n          } else {\n            try {\n              promiseInput = arg.then;\n            } catch (error) {\n              let p = new Promise$2(noop);\n              reject$2(p, error);\n              return p;\n            }\n          }\n        } else {\n          promiseInput = false;\n        }\n        if (promiseInput && promiseInput !== true) {\n          arg = wrapThenable(promiseInput, arg);\n        }\n      }\n      args[i] = arg;\n    }\n    let promise = new Promise$2(noop);\n    args[l] = function (err, val) {\n      if (err) {\n        reject$2(promise, err);\n      } else if (options === undefined) {\n        resolve$1(promise, val);\n      } else if (options === true) {\n        resolve$1(promise, arrayResult(arguments));\n      } else if (Array.isArray(options)) {\n        resolve$1(promise, makeObject(arguments, options));\n      } else {\n        resolve$1(promise, val);\n      }\n    };\n    if (promiseInput) {\n      return handlePromiseInput(promise, args, nodeFunc, this);\n    } else {\n      return handleValueInput(promise, args, nodeFunc, this);\n    }\n  };\n  fn.__proto__ = nodeFunc;\n  return fn;\n}\nfunction handleValueInput(promise, args, nodeFunc, self) {\n  try {\n    nodeFunc.apply(self, args);\n  } catch (error) {\n    reject$2(promise, error);\n  }\n  return promise;\n}\nfunction handlePromiseInput(promise, args, nodeFunc, self) {\n  return Promise$2.all(args).then(args => handleValueInput(promise, args, nodeFunc, self));\n}\n\n/**\n  This is a convenient alias for `Promise.all`.\n\n  @method all\n  @public\n  @static\n  @for rsvp\n  @param {Array} array Array of promises.\n  @param {String} [label] An optional label. This is useful\n  for tooling.\n*/\nfunction all(array, label) {\n  return Promise$2.all(array, label);\n}\n\n/**\n@module rsvp\n@public\n**/\n\nclass AllSettled extends Enumerator {\n  constructor(Constructor, entries, label) {\n    super(Constructor, entries, false /* don't abort on reject */, label);\n  }\n}\nAllSettled.prototype._setResultAt = setSettledResult;\n\n/**\n`RSVP.allSettled` is similar to `RSVP.all`, but instead of implementing\na fail-fast method, it waits until all the promises have returned and\nshows you all the results. This is useful if you want to handle multiple\npromises' failure states together as a set.\n Returns a promise that is fulfilled when all the given promises have been\nsettled. The return promise is fulfilled with an array of the states of\nthe promises passed into the `promises` array argument.\n Each state object will either indicate fulfillment or rejection, and\nprovide the corresponding value or reason. The states will take one of\nthe following formats:\n ```javascript\n{ state: 'fulfilled', value: value }\n  or\n{ state: 'rejected', reason: reason }\n```\n Example:\n ```javascript\nlet promise1 = RSVP.Promise.resolve(1);\nlet promise2 = RSVP.Promise.reject(new Error('2'));\nlet promise3 = RSVP.Promise.reject(new Error('3'));\nlet promises = [ promise1, promise2, promise3 ];\n RSVP.allSettled(promises).then(function(array){\n  // array == [\n  //   { state: 'fulfilled', value: 1 },\n  //   { state: 'rejected', reason: Error },\n  //   { state: 'rejected', reason: Error }\n  // ]\n  // Note that for the second item, reason.message will be '2', and for the\n  // third item, reason.message will be '3'.\n}, function(error) {\n  // Not run. (This block would only be called if allSettled had failed,\n  // for instance if passed an incorrect argument type.)\n});\n```\n @method allSettled\n@public\n@static\n@for rsvp\n@param {Array} entries\n@param {String} [label] - optional string that describes the promise.\nUseful for tooling.\n@return {Promise} promise that is fulfilled with an array of the settled\nstates of the constituent promises.\n*/\n\nfunction allSettled(entries, label) {\n  if (!Array.isArray(entries)) {\n    return Promise$2.reject(new TypeError(\"Promise.allSettled must be called with an array\"), label);\n  }\n  return new AllSettled(Promise$2, entries, label).promise;\n}\n\n/**\n  This is a convenient alias for `Promise.race`.\n\n  @method race\n  @public\n  @static\n  @for rsvp\n  @param {Array} array Array of promises.\n  @param {String} [label] An optional label. This is useful\n  for tooling.\n */\nfunction race(array, label) {\n  return Promise$2.race(array, label);\n}\nclass PromiseHash extends Enumerator {\n  constructor(Constructor, object, abortOnReject = true, label) {\n    super(Constructor, object, abortOnReject, label);\n  }\n  _init(Constructor, object) {\n    this._result = {};\n    this._enumerate(object);\n  }\n  _enumerate(input) {\n    let keys = Object.keys(input);\n    let length = keys.length;\n    let promise = this.promise;\n    this._remaining = length;\n    let key, val;\n    for (let i = 0; promise._state === PENDING && i < length; i++) {\n      key = keys[i];\n      val = input[key];\n      this._eachEntry(val, key, true);\n    }\n    this._checkFullfillment();\n  }\n}\n\n/**\n  `hash` is similar to `all`, but takes an object instead of an array\n  for its `promises` argument.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  fulfilled, or rejected if any of them become rejected. The returned promise\n  is fulfilled with a hash that has the same key names as the `promises` object\n  argument. If any of the values in the object are not promises, they will\n  simply be copied over to the fulfilled object.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: resolve(1),\n    yourPromise: resolve(2),\n    theirPromise: resolve(3),\n    notAPromise: 4\n  };\n\n  hash(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise: 1,\n    //   yourPromise: 2,\n    //   theirPromise: 3,\n    //   notAPromise: 4\n    // }\n  });\n  ```\n\n  If any of the `promises` given to `hash` are rejected, the first promise\n  that is rejected will be given as the reason to the rejection handler.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: resolve(1),\n    rejectedPromise: reject(new Error('rejectedPromise')),\n    anotherRejectedPromise: reject(new Error('anotherRejectedPromise')),\n  };\n\n  hash(promises).then(function(hash){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === 'rejectedPromise'\n  });\n  ```\n\n  An important note: `hash` is intended for plain JavaScript objects that\n  are just a set of keys and values. `hash` will NOT preserve prototype\n  chains.\n\n  Example:\n\n  ```javascript\n  import { hash, resolve } from 'rsvp';\n  function MyConstructor(){\n    this.example = resolve('Example');\n  }\n\n  MyConstructor.prototype = {\n    protoProperty: resolve('Proto Property')\n  };\n\n  let myObject = new MyConstructor();\n\n  hash(myObject).then(function(hash){\n    // protoProperty will not be present, instead you will just have an\n    // object that looks like:\n    // {\n    //   example: 'Example'\n    // }\n    //\n    // hash.hasOwnProperty('protoProperty'); // false\n    // 'undefined' === typeof hash.protoProperty\n  });\n  ```\n\n  @method hash\n  @public\n  @static\n  @for rsvp\n  @param {Object} object\n  @param {String} [label] optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all properties of `promises`\n  have been fulfilled, or rejected if any of them become rejected.\n*/\nfunction hash(object, label) {\n  return Promise$2.resolve(object, label).then(function (object) {\n    if (object === null || typeof object !== 'object') {\n      throw new TypeError(\"Promise.hash must be called with an object\");\n    }\n    return new PromiseHash(Promise$2, object, label).promise;\n  });\n}\nclass HashSettled extends PromiseHash {\n  constructor(Constructor, object, label) {\n    super(Constructor, object, false, label);\n  }\n}\nHashSettled.prototype._setResultAt = setSettledResult;\n\n/**\n  `hashSettled` is similar to `allSettled`, but takes an object\n  instead of an array for its `promises` argument.\n\n  Unlike `all` or `hash`, which implement a fail-fast method,\n  but like `allSettled`, `hashSettled` waits until all the\n  constituent promises have returned and then shows you all the results\n  with their states and values/reasons. This is useful if you want to\n  handle multiple promises' failure states together as a set.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  settled, or rejected if the passed parameters are invalid.\n\n  The returned promise is fulfilled with a hash that has the same key names as\n  the `promises` object argument. If any of the values in the object are not\n  promises, they will be copied over to the fulfilled object and marked with state\n  'fulfilled'.\n\n  Example:\n\n  ```javascript\n  import { hashSettled, resolve } from 'rsvp';\n\n  let promises = {\n    myPromise: resolve(1),\n    yourPromise: resolve(2),\n    theirPromise: resolve(3),\n    notAPromise: 4\n  };\n\n  hashSettled(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise: { state: 'fulfilled', value: 1 },\n    //   yourPromise: { state: 'fulfilled', value: 2 },\n    //   theirPromise: { state: 'fulfilled', value: 3 },\n    //   notAPromise: { state: 'fulfilled', value: 4 }\n    // }\n  });\n  ```\n\n  If any of the `promises` given to `hash` are rejected, the state will\n  be set to 'rejected' and the reason for rejection provided.\n\n  Example:\n\n  ```javascript\n  import { hashSettled, reject, resolve } from 'rsvp';\n\n  let promises = {\n    myPromise: resolve(1),\n    rejectedPromise: reject(new Error('rejection')),\n    anotherRejectedPromise: reject(new Error('more rejection')),\n  };\n\n  hashSettled(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise:              { state: 'fulfilled', value: 1 },\n    //   rejectedPromise:        { state: 'rejected', reason: Error },\n    //   anotherRejectedPromise: { state: 'rejected', reason: Error },\n    // }\n    // Note that for rejectedPromise, reason.message == 'rejection',\n    // and for anotherRejectedPromise, reason.message == 'more rejection'.\n  });\n  ```\n\n  An important note: `hashSettled` is intended for plain JavaScript objects that\n  are just a set of keys and values. `hashSettled` will NOT preserve prototype\n  chains.\n\n  Example:\n\n  ```javascript\n  import Promise, { hashSettled, resolve } from 'rsvp';\n\n  function MyConstructor(){\n    this.example = resolve('Example');\n  }\n\n  MyConstructor.prototype = {\n    protoProperty: Promise.resolve('Proto Property')\n  };\n\n  let myObject = new MyConstructor();\n\n  hashSettled(myObject).then(function(hash){\n    // protoProperty will not be present, instead you will just have an\n    // object that looks like:\n    // {\n    //   example: { state: 'fulfilled', value: 'Example' }\n    // }\n    //\n    // hash.hasOwnProperty('protoProperty'); // false\n    // 'undefined' === typeof hash.protoProperty\n  });\n  ```\n\n  @method hashSettled\n  @public\n  @for rsvp\n  @param {Object} object\n  @param {String} [label] optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when when all properties of `promises`\n  have been settled.\n  @static\n*/\n\nfunction hashSettled(object, label) {\n  return Promise$2.resolve(object, label).then(function (object) {\n    if (object === null || typeof object !== 'object') {\n      throw new TypeError(\"hashSettled must be called with an object\");\n    }\n    return new HashSettled(Promise$2, object, false, label).promise;\n  });\n}\n\n/**\n  `rethrow` will rethrow an error on the next turn of the JavaScript event\n  loop in order to aid debugging.\n\n  Promises A+ specifies that any exceptions that occur with a promise must be\n  caught by the promises implementation and bubbled to the last handler. For\n  this reason, it is recommended that you always specify a second rejection\n  handler function to `then`. However, `rethrow` will throw the exception\n  outside of the promise, so it bubbles up to your console if in the browser,\n  or domain/cause uncaught exception in Node. `rethrow` will also throw the\n  error again so the error can be handled by the promise per the spec.\n\n  ```javascript\n  import { rethrow } from 'rsvp';\n\n  function throws(){\n    throw new Error('Whoops!');\n  }\n\n  let promise = new Promise(function(resolve, reject){\n    throws();\n  });\n\n  promise.catch(rethrow).then(function(){\n    // Code here doesn't run because the promise became rejected due to an\n    // error!\n  }, function (err){\n    // handle the error here\n  });\n  ```\n\n  The 'Whoops' error will be thrown on the next turn of the event loop\n  and you can watch for it in your console. You can also handle it using a\n  rejection handler given to `.then` or `.catch` on the returned promise.\n\n  @method rethrow\n  @public\n  @static\n  @for rsvp\n  @param {Error} reason reason the promise became rejected.\n  @throws Error\n  @static\n*/\nfunction rethrow(reason) {\n  setTimeout(() => {\n    throw reason;\n  });\n  throw reason;\n}\n\n/**\n  `defer` returns an object similar to jQuery's `$.Deferred`.\n  `defer` should be used when porting over code reliant on `$.Deferred`'s\n  interface. New code should use the `Promise` constructor instead.\n\n  The object returned from `defer` is a plain object with three properties:\n\n  * promise - an `Promise`.\n  * reject - a function that causes the `promise` property on this object to\n    become rejected\n  * resolve - a function that causes the `promise` property on this object to\n    become fulfilled.\n\n  Example:\n\n   ```javascript\n   let deferred = defer();\n\n   deferred.resolve(\"Success!\");\n\n   deferred.promise.then(function(value){\n     // value here is \"Success!\"\n   });\n   ```\n\n  @method defer\n  @public\n  @static\n  @for rsvp\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @return {Object}\n */\n\nfunction defer(label) {\n  let deferred = {\n    resolve: undefined,\n    reject: undefined\n  };\n  deferred.promise = new Promise$2((resolve, reject) => {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  }, label);\n  return deferred;\n}\nclass MapEnumerator extends Enumerator {\n  constructor(Constructor, entries, mapFn, label) {\n    super(Constructor, entries, true, label, mapFn);\n  }\n  _init(Constructor, input, bool, label, mapFn) {\n    let len = input.length || 0;\n    this.length = len;\n    this._remaining = len;\n    this._result = new Array(len);\n    this._mapFn = mapFn;\n    this._enumerate(input);\n  }\n  _setResultAt(state, i, value, firstPass) {\n    if (firstPass) {\n      try {\n        this._eachEntry(this._mapFn(value, i), i, false);\n      } catch (error) {\n        this._settledAt(REJECTED, i, error, false);\n      }\n    } else {\n      this._remaining--;\n      this._result[i] = value;\n    }\n  }\n}\n\n/**\n `map` is similar to JavaScript's native `map` method. `mapFn` is eagerly called\n  meaning that as soon as any promise resolves its value will be passed to `mapFn`.\n  `map` returns a promise that will become fulfilled with the result of running\n  `mapFn` on the values the promises become fulfilled with.\n\n  For example:\n\n  ```javascript\n  import { map, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  map(promises, mapFn).then(function(result){\n    // result is [ 2, 3, 4 ]\n  });\n  ```\n\n  If any of the `promises` given to `map` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  import { map, reject, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error('2'));\n  let promise3 = reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  map(promises, mapFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `map` will also wait if a promise is returned from `mapFn`. For example,\n  say you want to get all comments from a set of blog posts, but you need\n  the blog posts first because they contain a url to those comments.\n\n  ```javscript\n  import { map } from 'rsvp';\n\n  let mapFn = function(blogPost){\n    // getComments does some ajax and returns an Promise that is fulfilled\n    // with some comments data\n    return getComments(blogPost.comments_url);\n  };\n\n  // getBlogPosts does some ajax and returns an Promise that is fulfilled\n  // with some blog post data\n  map(getBlogPosts(), mapFn).then(function(comments){\n    // comments is the result of asking the server for the comments\n    // of all blog posts returned from getBlogPosts()\n  });\n  ```\n\n  @method map\n  @public\n  @static\n  @for rsvp\n  @param {Array} promises\n  @param {Function} mapFn function to be called on each fulfilled promise.\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled with the result of calling\n  `mapFn` on each fulfilled promise or value when they become fulfilled.\n   The promise will be rejected if any of the given `promises` become rejected.\n*/\nfunction map(promises, mapFn, label) {\n  if (typeof mapFn !== 'function') {\n    return Promise$2.reject(new TypeError(\"map expects a function as a second argument\"), label);\n  }\n  return Promise$2.resolve(promises, label).then(function (promises) {\n    if (!Array.isArray(promises)) {\n      throw new TypeError(\"map must be called with an array\");\n    }\n    return new MapEnumerator(Promise$2, promises, mapFn, label).promise;\n  });\n}\n\n/**\n  This is a convenient alias for `Promise.resolve`.\n\n  @method resolve\n  @public\n  @static\n  @for rsvp\n  @param {*} value value that the returned promise will be resolved with\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(value, label) {\n  return Promise$2.resolve(value, label);\n}\n\n/**\n  This is a convenient alias for `Promise.reject`.\n\n  @method reject\n  @public\n  @static\n  @for rsvp\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason, label) {\n  return Promise$2.reject(reason, label);\n}\nconst EMPTY_OBJECT = {};\nclass FilterEnumerator extends MapEnumerator {\n  _checkFullfillment() {\n    if (this._remaining === 0 && this._result !== null) {\n      let result = this._result.filter(val => val !== EMPTY_OBJECT);\n      fulfill(this.promise, result);\n      this._result = null;\n    }\n  }\n  _setResultAt(state, i, value, firstPass) {\n    if (firstPass) {\n      this._result[i] = value;\n      let val,\n        succeeded = true;\n      try {\n        val = this._mapFn(value, i);\n      } catch (error) {\n        succeeded = false;\n        this._settledAt(REJECTED, i, error, false);\n      }\n      if (succeeded) {\n        this._eachEntry(val, i, false);\n      }\n    } else {\n      this._remaining--;\n      if (!value) {\n        this._result[i] = EMPTY_OBJECT;\n      }\n    }\n  }\n}\n\n/**\n `filter` is similar to JavaScript's native `filter` method.\n `filterFn` is eagerly called meaning that as soon as any promise\n  resolves its value will be passed to `filterFn`. `filter` returns\n  a promise that will become fulfilled with the result of running\n  `filterFn` on the values the promises become fulfilled with.\n\n  For example:\n\n  ```javascript\n  import { filter, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n\n  let promises = [promise1, promise2, promise3];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  filter(promises, filterFn).then(function(result){\n    // result is [ 2, 3 ]\n  });\n  ```\n\n  If any of the `promises` given to `filter` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  import { filter, reject, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error('2'));\n  let promise3 = reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  filter(promises, filterFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `filter` will also wait for any promises returned from `filterFn`.\n  For instance, you may want to fetch a list of users then return a subset\n  of those users based on some asynchronous operation:\n\n  ```javascript\n  import { filter, resolve } from 'rsvp';\n\n  let alice = { name: 'alice' };\n  let bob   = { name: 'bob' };\n  let users = [ alice, bob ];\n\n  let promises = users.map(function(user){\n    return resolve(user);\n  });\n\n  let filterFn = function(user){\n    // Here, Alice has permissions to create a blog post, but Bob does not.\n    return getPrivilegesForUser(user).then(function(privs){\n      return privs.can_create_blog_post === true;\n    });\n  };\n  filter(promises, filterFn).then(function(users){\n    // true, because the server told us only Alice can create a blog post.\n    users.length === 1;\n    // false, because Alice is the only user present in `users`\n    users[0] === bob;\n  });\n  ```\n\n  @method filter\n  @public\n  @static\n  @for rsvp\n  @param {Array} promises\n  @param {Function} filterFn - function to be called on each resolved value to\n  filter the final results.\n  @param {String} [label] optional string describing the promise. Useful for\n  tooling.\n  @return {Promise}\n*/\n\nfunction filter(promises, filterFn, label) {\n  if (typeof filterFn !== 'function') {\n    return Promise$2.reject(new TypeError(\"filter expects function as a second argument\"), label);\n  }\n  return Promise$2.resolve(promises, label).then(function (promises) {\n    if (!Array.isArray(promises)) {\n      throw new TypeError(\"filter must be called with an array\");\n    }\n    return new FilterEnumerator(Promise$2, promises, filterFn, label).promise;\n  });\n}\nlet len = 0;\nlet vertxNext;\nfunction asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 1, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    scheduleFlush();\n  }\n}\nconst browserWindow = typeof window !== 'undefined' ? window : undefined;\nconst browserGlobal = browserWindow || {};\nconst BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nconst isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nconst isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  let nextTick = process.nextTick;\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // setImmediate should be used instead instead\n  let version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n  if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n    nextTick = setImmediate;\n  }\n  return () => nextTick(flush);\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n  return useSetTimeout();\n}\nfunction useMutationObserver() {\n  let iterations = 0;\n  let observer = new BrowserMutationObserver(flush);\n  let node = document.createTextNode('');\n  observer.observe(node, {\n    characterData: true\n  });\n  return () => node.data = iterations = ++iterations % 2;\n}\n\n// web worker\nfunction useMessageChannel() {\n  let channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return () => channel.port2.postMessage(0);\n}\nfunction useSetTimeout() {\n  return () => setTimeout(flush, 1);\n}\nconst queue = new Array(1000);\nfunction flush() {\n  for (let i = 0; i < len; i += 2) {\n    let callback = queue[i];\n    let arg = queue[i + 1];\n    callback(arg);\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n  len = 0;\n}\nfunction attemptVertex() {\n  try {\n    const vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\nlet scheduleFlush;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof window.require === 'function') {\n  scheduleFlush = attemptVertex();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\n// defaults\nconfig.async = asap;\nconfig.after = cb => setTimeout(cb, 0);\nconst cast = resolve;\nconst async = (callback, arg) => config.async(callback, arg);\nfunction on() {\n  config.on(...arguments);\n}\nfunction off() {\n  config.off(...arguments);\n}\n\n// Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`\nif (typeof window !== 'undefined' && typeof window['__PROMISE_INSTRUMENTATION__'] === 'object') {\n  let callbacks = window['__PROMISE_INSTRUMENTATION__'];\n  configure('instrument', true);\n  for (let eventName in callbacks) {\n    if (callbacks.hasOwnProperty(eventName)) {\n      on(eventName, callbacks[eventName]);\n    }\n  }\n}\n\n// the default export here is for backwards compat:\n//   https://github.com/tildeio/rsvp.js/issues/434\nconst RSVP = {\n  asap,\n  cast,\n  Promise: Promise$2,\n  EventTarget,\n  all,\n  allSettled,\n  race,\n  hash,\n  hashSettled,\n  rethrow,\n  defer,\n  denodeify,\n  configure,\n  on,\n  off,\n  resolve,\n  reject,\n  map,\n  async,\n  filter\n};\nconst RSVP$1 = /*#__PURE__*/Object.freeze( /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  EventTarget,\n  Promise: Promise$2,\n  all,\n  allSettled,\n  asap,\n  async,\n  cast,\n  configure,\n  default: RSVP,\n  defer,\n  denodeify,\n  filter,\n  hash,\n  hashSettled,\n  map,\n  off,\n  on,\n  race,\n  reject,\n  resolve,\n  rethrow\n}, Symbol.toStringTag, {\n  value: 'Module'\n}));\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/rsvp-DaQAFb0W.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/set_properties-DvalyQdu.js":
/*!**********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/set_properties-DvalyQdu.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: () => (/* binding */ getProperties),\n/* harmony export */   s: () => (/* binding */ setProperties)\n/* harmony export */ });\n/* harmony import */ var _cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache-gDE3bkXq.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/cache-gDE3bkXq.js\");\n/* harmony import */ var _property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./property_set-CW4q-uo4.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/property_set-CW4q-uo4.js\");\n\n\n\n/**\n @module @ember/object\n*/\n\n/**\n  To get multiple properties at once, call `getProperties`\n  with an object followed by a list of strings or an array:\n\n  ```javascript\n  import { getProperties } from '@ember/object';\n\n  getProperties(record, 'firstName', 'lastName', 'zipCode');\n  // { firstName: 'John', lastName: 'Doe', zipCode: '10011' }\n  ```\n\n  is equivalent to:\n\n  ```javascript\n  import { getProperties } from '@ember/object';\n\n  getProperties(record, ['firstName', 'lastName', 'zipCode']);\n  // { firstName: 'John', lastName: 'Doe', zipCode: '10011' }\n  ```\n\n  @method getProperties\n  @static\n  @for @ember/object\n  @param {Object} obj\n  @param {String...|Array} list of keys to get\n  @return {Object}\n  @public\n*/\n\nfunction getProperties(obj, keys) {\n  let ret = {};\n  let propertyNames;\n  let i = 1;\n  if (arguments.length === 2 && Array.isArray(keys)) {\n    i = 0;\n    propertyNames = arguments[1];\n  } else {\n    propertyNames = Array.from(arguments);\n  }\n  for (; i < propertyNames.length; i++) {\n    // SAFETY: we are just walking the list of property names, so we know the\n    // index access never produces `undefined`.\n    let name = propertyNames[i];\n    ret[name] = (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.g)(obj, name);\n  }\n  return ret;\n}\n\n/**\n @module @ember/object\n*/\n/**\n  Set a list of properties on an object. These properties are set inside\n  a single `beginPropertyChanges` and `endPropertyChanges` batch, so\n  observers will be buffered.\n\n  ```javascript\n  import EmberObject from '@ember/object';\n  let anObject = EmberObject.create();\n\n  anObject.setProperties({\n    firstName: 'Stanley',\n    lastName: 'Stuart',\n    age: 21\n  });\n  ```\n\n  @method setProperties\n  @static\n  @for @ember/object\n  @param obj\n  @param {Object} properties\n  @return properties\n  @public\n*/\n\nfunction setProperties(obj, properties) {\n  if (properties === null || typeof properties !== 'object') {\n    return properties;\n  }\n  (0,_cache_gDE3bkXq_js__WEBPACK_IMPORTED_MODULE_0__.a2)(() => {\n    let props = Object.keys(properties);\n    for (let propertyName of props) {\n      // SAFETY: casting `properties` this way is safe because any object in JS\n      // can be indexed this way, and the result will be `unknown`, making it\n      // safe for callers.\n      (0,_property_set_CW4q_uo4_js__WEBPACK_IMPORTED_MODULE_1__.s)(obj, propertyName, properties[propertyName]);\n    }\n  });\n  return properties;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/set_properties-DvalyQdu.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/template_registry-DigcUg9m.js":
/*!*************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/template_registry-DigcUg9m.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ getTemplates),\n/* harmony export */   b: () => (/* binding */ setTemplates),\n/* harmony export */   g: () => (/* binding */ getTemplate),\n/* harmony export */   h: () => (/* binding */ hasTemplate),\n/* harmony export */   s: () => (/* binding */ setTemplate)\n/* harmony export */ });\n// STATE within a module is frowned upon, this exists\n// to support Ember.TEMPLATES but shield ember internals from this legacy\n// global API.\n\nlet TEMPLATES = {};\nfunction setTemplates(templates) {\n  TEMPLATES = templates;\n}\nfunction getTemplates() {\n  return TEMPLATES;\n}\nfunction getTemplate(name) {\n  if (Object.prototype.hasOwnProperty.call(TEMPLATES, name)) {\n    return TEMPLATES[name];\n  }\n}\nfunction hasTemplate(name) {\n  return Object.prototype.hasOwnProperty.call(TEMPLATES, name);\n}\nfunction setTemplate(name, template) {\n  return TEMPLATES[name] = template;\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/template_registry-DigcUg9m.js?");

/***/ }),

/***/ "../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/to-string-D8i3mjEU.js":
/*!*****************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/to-string-D8i3mjEU.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   e: () => (/* binding */ enumerableSymbol),\n/* harmony export */   i: () => (/* binding */ isInternalSymbol),\n/* harmony export */   s: () => (/* binding */ symbol),\n/* harmony export */   t: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mandatory-setter-1UQhiJOb.js */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/mandatory-setter-1UQhiJOb.js\");\n\nconst GENERATED_SYMBOLS = [];\nfunction isInternalSymbol(possibleSymbol) {\n  return GENERATED_SYMBOLS.indexOf(possibleSymbol) !== -1;\n}\n\n// Some legacy symbols still need to be enumerable for a variety of reasons.\n// This code exists for that, and as a fallback in IE11. In general, prefer\n// `symbol` below when creating a new symbol.\nfunction enumerableSymbol(debugName) {\n  // TODO: Investigate using platform symbols, but we do not\n  // want to require non-enumerability for this API, which\n  // would introduce a large cost.\n  let id = _mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.G + Math.floor(Math.random() * Date.now()).toString();\n  let symbol = (0,_mandatory_setter_1UQhiJOb_js__WEBPACK_IMPORTED_MODULE_0__.i)(`__${debugName}${id}__`);\n  if (true) {\n    GENERATED_SYMBOLS.push(symbol);\n  }\n  return symbol;\n}\nconst symbol = Symbol;\nconst objectToString = Object.prototype.toString;\nfunction isNone(obj) {\n  return obj === null || obj === undefined;\n}\n\n/*\n A `toString` util function that supports objects without a `toString`\n method, e.g. an object created with `Object.create(null)`.\n*/\nfunction toString(obj) {\n  if (typeof obj === 'string') {\n    return obj;\n  }\n  if (null === obj) return 'null';\n  if (undefined === obj) return 'undefined';\n  if (Array.isArray(obj)) {\n    // Reimplement Array.prototype.join according to spec (22.1.3.13)\n    // Changing ToString(element) with this safe version of ToString.\n    let r = '';\n    for (let k = 0; k < obj.length; k++) {\n      if (k > 0) {\n        r += ',';\n      }\n      if (!isNone(obj[k])) {\n        r += toString(obj[k]);\n      }\n    }\n    return r;\n  }\n  if (typeof obj.toString === 'function') {\n    return obj.toString();\n  }\n  return objectToString.call(obj);\n}\n\n\n//# sourceURL=webpack://prss/../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/shared-chunks/to-string-D8i3mjEU.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+debug@5.3.8_@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3_ndrsfgrwpwdvnnc23ghg45qeuu/node_modules/@ember-data/debug/dist/data-adapter.js":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+debug@5.3.8_@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3_ndrsfgrwpwdvnnc23ghg45qeuu/node_modules/@ember-data/debug/dist/data-adapter.js ***!
  \************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dataAdapter)\n/* harmony export */ });\n/* harmony import */ var _ember_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/array */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/index.js\");\n/* harmony import */ var _ember_debug_data_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug/data-adapter */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/data-adapter.js\");\n/* harmony import */ var _ember_object_observers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/object/observers */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/observers.js\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/service */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/service/index.js\");\n/* harmony import */ var _ember_data_request_utils_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember-data/request-utils/string */ \"../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/string.js\");\n/* harmony import */ var _ember_data_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember-data/store */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/index.js\");\nvar _InspectorDataAdapter;\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\n\n\n\n\n\n\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\n// src/runtime.ts\nvar runtime_exports = {};\n__export(runtime_exports, {\n  c: () => decorateClass,\n  f: () => decorateFieldV1,\n  g: () => decorateFieldV2,\n  i: () => initializeDeferredDecorator,\n  m: () => decorateMethodV1,\n  n: () => decorateMethodV2,\n  p: () => decoratePOJO\n});\nvar deferred = /* @__PURE__ */new WeakMap();\nfunction deferDecorator(proto, prop, desc) {\n  let map = deferred.get(proto);\n  if (!map) {\n    map = /* @__PURE__ */new Map();\n    deferred.set(proto, map);\n  }\n  map.set(prop, desc);\n}\nfunction findDeferredDecorator(target, prop) {\n  let cursor = target.prototype;\n  while (cursor) {\n    let desc = deferred.get(cursor)?.get(prop);\n    if (desc) {\n      return desc;\n    }\n    cursor = cursor.prototype;\n  }\n}\nfunction decorateFieldV1(target, prop, decorators, initializer) {\n  return decorateFieldV2(target.prototype, prop, decorators, initializer);\n}\nfunction decorateFieldV2(prototype, prop, decorators, initializer) {\n  let desc = {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    initializer: null\n  };\n  if (initializer) {\n    desc.initializer = initializer;\n  }\n  for (let decorator of decorators) {\n    desc = decorator(prototype, prop, desc) || desc;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(prototype, prop, desc);\n  } else {\n    deferDecorator(prototype, prop, desc);\n  }\n}\nfunction decorateMethodV1({\n  prototype\n}, prop, decorators) {\n  return decorateMethodV2(prototype, prop, decorators);\n}\nfunction decorateMethodV2(prototype, prop, decorators) {\n  const origDesc = Object.getOwnPropertyDescriptor(prototype, prop);\n  let desc = {\n    ...origDesc\n  };\n  for (let decorator of decorators) {\n    desc = decorator(prototype, prop, desc) || desc;\n  }\n  if (desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(prototype) : void 0;\n    desc.initializer = void 0;\n  }\n  Object.defineProperty(prototype, prop, desc);\n}\nfunction initializeDeferredDecorator(target, prop) {\n  let desc = findDeferredDecorator(target.constructor, prop);\n  if (desc) {\n    Object.defineProperty(target, prop, {\n      enumerable: desc.enumerable,\n      configurable: desc.configurable,\n      writable: desc.writable,\n      value: desc.initializer ? desc.initializer.call(target) : void 0\n    });\n  }\n}\nfunction decorateClass(target, decorators) {\n  return decorators.reduce((accum, decorator) => decorator(accum) || accum, target);\n}\nfunction decoratePOJO(pojo, decorated) {\n  for (let [type, prop, decorators] of decorated) {\n    if (type === \"field\") {\n      decoratePojoField(pojo, prop, decorators);\n    } else {\n      decorateMethodV2(pojo, prop, decorators);\n    }\n  }\n  return pojo;\n}\nfunction decoratePojoField(pojo, prop, decorators) {\n  let desc = {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    initializer: () => Object.getOwnPropertyDescriptor(pojo, prop)?.value\n  };\n  for (let decorator of decorators) {\n    desc = decorator(pojo, prop, desc) || desc;\n  }\n  if (desc.initializer) {\n    desc.value = desc.initializer.call(pojo);\n    delete desc.initializer;\n  }\n  Object.defineProperty(pojo, prop, desc);\n}\n\n/**\n  # Overview\n\n  This package provides the `DataAdapter` which the [Ember Inspector](https://github.com/emberjs/ember-inspector)\n  uses to subscribe and retrieve information for the `data` tab in the inspector.\n\n  This package adds roughly .6 KB when minified and compressed to your application in production; however,\n  you can opt out of shipping this addon in production via options in `ember-cli-build.js`\n\n  ```js\n  let app = new EmberApp(defaults, {\n    emberData: {\n      includeDataAdapterInProduction: false\n    }\n  });\n  ```\n\n  When using `ember-data` as a dependency of your app, the default is to ship the inspector support to production.\n\n  When not using `ember-data` as a dependency but instead using EmberData via declaring specific `@ember-data/<package>`\n  dependencies the default is to not ship to production.\n\n  @module @ember-data/debug\n  @main @ember-data/debug\n*/\n\nconst StoreTypesMap = new WeakMap();\nfunction debugInfo() {\n  const relationships = {};\n  const expensiveProperties = [];\n  const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(this);\n  const fields = this.store.schema.fields(identifier);\n  const attrGroup = {\n    name: 'Attributes',\n    properties: ['id'],\n    expand: true\n  };\n  const attributes = attrGroup.properties;\n  const groups = [attrGroup];\n  for (const field of fields.values()) {\n    switch (field.kind) {\n      case 'attribute':\n        attributes.push(field.name);\n        break;\n      case 'belongsTo':\n      case 'hasMany':\n        {\n          let properties = relationships[field.kind];\n          if (properties === undefined) {\n            properties = relationships[field.kind] = [];\n            groups.push({\n              name: field.kind,\n              properties,\n              expand: true\n            });\n          }\n          properties.push(field.name);\n          expensiveProperties.push(field.name);\n          break;\n        }\n    }\n  }\n  groups.push({\n    name: 'Flags',\n    properties: ['isLoaded', 'hasDirtyAttributes', 'isSaving', 'isDeleted', 'isError', 'isNew', 'isValid'],\n    expand: false\n  });\n  return {\n    propertyInfo: {\n      // include all other mixins / properties (not just the grouped ones)\n      includeOtherProperties: true,\n      groups: groups,\n      // don't pre-calculate unless cached\n      expensiveProperties: expensiveProperties\n    }\n  };\n}\nfunction installDebugInfo(ModelKlass) {\n  /**\n   Provides info about the model for debugging purposes\n   by grouping the properties into more semantic groups.\n    Meant to be used by debugging tools such as the Chrome Ember Extension.\n    - Groups all attributes in \"Attributes\" group.\n   - Groups all belongsTo relationships in \"Belongs To\" group.\n   - Groups all hasMany relationships in \"Has Many\" group.\n   - Groups all flags in \"Flags\" group.\n   - Flags relationship CPs as expensive properties.\n    @internal\n   */\n  ModelKlass.prototype._debugInfo = debugInfo;\n}\nfunction typesMapFor(store) {\n  let typesMap = StoreTypesMap.get(store);\n  if (typesMap === undefined) {\n    typesMap = new Map();\n    StoreTypesMap.set(store, typesMap);\n  }\n  return typesMap;\n}\n\n/**\n  Implements `@ember/debug/data-adapter` with for EmberData\n  integration with the ember-inspector.\n\n  @class InspectorDataAdapter\n  @extends DataAdapter\n  @private\n*/\nvar _store = /*#__PURE__*/new WeakMap();\nclass InspectorDataAdapter extends _ember_debug_data_adapter__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    _classPrivateFieldInitSpec(this, _store, (initializeDeferredDecorator(this, \"store\"), void 0));\n  }\n  /**\n    Specifies how records can be filtered based on the state of the record\n    Records returned will need to have a `filterValues`\n    property with a key for every name in the returned array\n     @method getFilters\n    @private\n    @return {Array} List of objects defining filters\n     The object should have a `name` and `desc` property\n  */\n  getFilters() {\n    return [{\n      name: 'isNew',\n      desc: 'New'\n    }, {\n      name: 'isModified',\n      desc: 'Modified'\n    }, {\n      name: 'isClean',\n      desc: 'Clean'\n    }];\n  }\n  _nameToClass(type) {\n    return this.store.modelFor(type);\n  }\n\n  /**\n    Fetch the model types and observe them for changes.\n    Maintains the list of model types without needing the Model package for detection.\n     @method watchModelTypes\n    @private\n    @param {Function} typesAdded Callback to call to add types.\n    Takes an array of objects containing wrapped types (returned from `wrapModelType`).\n    @param {Function} typesUpdated Callback to call when a type has changed.\n    Takes an array of objects containing wrapped types.\n    @return {Function} Method to call to remove all observers\n  */\n  watchModelTypes(typesAdded, typesUpdated) {\n    const {\n      store\n    } = this;\n    const discoveredTypes = typesMapFor(store);\n    const unsub = store.notifications.subscribe('resource', (identifier, notificationType) => {\n      if (notificationType === 'added') {\n        this.watchTypeIfUnseen(store, discoveredTypes, identifier.type, typesAdded, typesUpdated, _releaseMethods);\n      }\n    });\n    const _releaseMethods = [() => {\n      store.notifications.unsubscribe(unsub);\n    }];\n    Object.keys(store.identifierCache._cache.resourcesByType).forEach(type => {\n      discoveredTypes.set(type, false);\n    });\n\n    // Add any models that were added during initialization of the app, before the inspector was opened\n    discoveredTypes.forEach((_, type) => {\n      this.watchTypeIfUnseen(store, discoveredTypes, type, typesAdded, typesUpdated, _releaseMethods);\n    });\n    const release = () => {\n      _releaseMethods.forEach(fn => fn());\n      // reset the list so the models can be added if the inspector is re-opened\n      // the entries are set to false instead of removed, since the models still exist in the app\n      // we just need the inspector to become aware of them\n      discoveredTypes.forEach((value, key) => {\n        discoveredTypes.set(key, false);\n      });\n      this.releaseMethods.removeObject(release);\n    };\n    this.releaseMethods.pushObject(release);\n    return release;\n  }\n\n  /**\n   * Loop over the discovered types and use the callbacks from watchModelTypes to notify\n   * the consumer of this adapter about the mdoels.\n   *\n   * @method watchTypeIfUnseen\n   * @param {store} store\n   * @param {Map} discoveredTypes\n   * @param {String} type\n   * @param {Function} typesAdded\n   * @param {Function} typesUpdated\n   * @param {Array} releaseMethods\n   * @private\n   */\n  watchTypeIfUnseen(store, discoveredTypes, type, typesAdded, typesUpdated, releaseMethods) {\n    if (discoveredTypes.get(type) !== true) {\n      const klass = store.modelFor(type);\n      installDebugInfo(klass);\n      const wrapped = this.wrapModelType(klass, type);\n      releaseMethods.push(this.observeModelType(type, typesUpdated));\n      typesAdded([wrapped]);\n      discoveredTypes.set(type, true);\n    }\n  }\n\n  /**\n    Creates a human readable string used for column headers\n     @method columnNameToDesc\n    @private\n    @param {String} name The attribute name\n    @return {String} Human readable string based on the attribute name\n  */\n  columnNameToDesc(name) {\n    return (0,_ember_data_request_utils_string__WEBPACK_IMPORTED_MODULE_4__.capitalize)((0,_ember_data_request_utils_string__WEBPACK_IMPORTED_MODULE_4__.underscore)(name).replace(/_/g, ' ').trim());\n  }\n\n  /**\n    Get the columns for a given model type\n     @method columnsForType\n    @private\n    @param {Model} typeClass\n    @return {Array} An array of columns of the following format:\n     name: {String} The name of the column\n     desc: {String} Humanized description (what would show in a table column name)\n  */\n  columnsForType(typeClass) {\n    const columns = [{\n      name: 'id',\n      desc: 'Id'\n    }];\n    let count = 0;\n    typeClass.attributes.forEach((meta, name) => {\n      if (count++ > this.attributeLimit) {\n        return false;\n      }\n      const desc = this.columnNameToDesc(name);\n      columns.push({\n        name: name,\n        desc: desc\n      });\n    });\n    return columns;\n  }\n\n  /**\n    Fetches all loaded records for a given type\n     @method getRecords\n    @private\n    @param {Model} modelClass of the record\n    @param {String} modelName of the record\n    @return {Array} An array of Model records\n     This array will be observed for changes,\n     so it should update when new records are added/removed\n  */\n  getRecords(modelClass, modelName) {\n    if (arguments.length < 2) {\n      // Legacy Ember.js < 1.13 support\n      const containerKey = modelClass._debugContainerKey;\n      if (containerKey) {\n        const match = containerKey.match(/model:(.*)/);\n        if (match !== null) {\n          modelName = match[1];\n        }\n      }\n    }\n    (test => {\n      if (!test) {\n        throw new Error('Cannot find model name. Please upgrade to Ember.js >= 1.13 for Ember Inspector support');\n      }\n    })(!!modelName);\n    return this.store.peekAll(modelName);\n  }\n\n  /**\n    Gets the values for each column\n    This is the attribute values for a given record\n     @method getRecordColumnValues\n    @private\n    @param {Model} record to get values from\n    @return {Object} Keys should match column names defined by the model type\n  */\n  getRecordColumnValues(record) {\n    let count = 0;\n    const columnValues = {\n      id: record.id\n    };\n    record.eachAttribute(key => {\n      if (count++ > this.attributeLimit) {\n        return false;\n      }\n      columnValues[key] = record[key];\n    });\n    return columnValues;\n  }\n\n  /**\n    Returns keywords to match when searching records\n     @method getRecordKeywords\n    @private\n    @param {Model} record\n    @return {Array} Relevant keywords for search based on the record's attribute values\n  */\n  getRecordKeywords(record) {\n    const keywords = [record.id];\n    record.eachAttribute(key => {\n      keywords.push(record[key]);\n    });\n    return (0,_ember_array__WEBPACK_IMPORTED_MODULE_0__.A)(keywords);\n  }\n\n  /**\n    Returns the values of filters defined by `getFilters`\n    These reflect the state of the record\n     @method getRecordFilterValues\n    @private\n    @param {Model} record\n    @return {Object} The record state filter values\n  */\n  getRecordFilterValues(record) {\n    return {\n      isNew: record.isNew,\n      isModified: record.hasDirtyAttributes && !record.isNew,\n      isClean: !record.hasDirtyAttributes\n    };\n  }\n\n  /**\n    Returns a color that represents the record's state\n    Possible colors: black, blue, green\n     @method getRecordColor\n    @private\n    @param {Model} record\n    @return {String} The record color\n  */\n  getRecordColor(record) {\n    let color = 'black';\n    if (record.isNew) {\n      color = 'green';\n    } else if (record.hasDirtyAttributes) {\n      color = 'blue';\n    }\n    return color;\n  }\n\n  /**\n    Observes all relevant properties and re-sends the wrapped record\n    when a change occurs\n     @method observeRecord\n    @private\n    @param {Model} record\n    @param {Function} recordUpdated Callback used to notify changes\n    @return {Function} The function to call to remove all observers\n  */\n  observeRecord(record, recordUpdated) {\n    const releaseMethods = [];\n    const keysToObserve = ['id', 'isNew', 'hasDirtyAttributes'];\n    record.eachAttribute(key => keysToObserve.push(key));\n    keysToObserve.forEach(key => {\n      const handler = () => {\n        recordUpdated(this.wrapRecord(record));\n      };\n      (0,_ember_object_observers__WEBPACK_IMPORTED_MODULE_2__.addObserver)(record, key, handler);\n      releaseMethods.push(function () {\n        (0,_ember_object_observers__WEBPACK_IMPORTED_MODULE_2__.removeObserver)(record, key, handler);\n      });\n    });\n    const release = function () {\n      releaseMethods.forEach(fn => fn());\n    };\n    return release;\n  }\n}\n_InspectorDataAdapter = InspectorDataAdapter;\ndecorateFieldV2(_InspectorDataAdapter.prototype, \"store\", [(0,_ember_service__WEBPACK_IMPORTED_MODULE_3__.inject)('store')]);\nconst dataAdapter = InspectorDataAdapter;\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+debug@5.3.8_@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3_ndrsfgrwpwdvnnc23ghg45qeuu/node_modules/@ember-data/debug/dist/data-adapter.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string_y53mhzgz7knwb4cijzkjieaw7q/node_modules/@ember-data/graph/dist/-private.js":
/*!********************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string_y53mhzgz7knwb4cijzkjieaw7q/node_modules/@ember-data/graph/dist/-private.js ***!
  \********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   graphFor: () => (/* binding */ graphFor),\n/* harmony export */   isBelongsTo: () => (/* binding */ isBelongsTo),\n/* harmony export */   peekGraph: () => (/* binding */ peekGraph)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/store/-private */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/-private.js\");\n/* harmony import */ var _warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @warp-drive/core-types/-private */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js\");\n\n\n\nfunction coerceId(id) {\n  {\n    let normalized;\n    if (id === null || id === undefined || id === '') {\n      normalized = null;\n    } else {\n      normalized = String(id);\n    }\n    ( true && !(normalized === id) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`The resource id '<${typeof id}> ${String(id)} ' is not normalized. Update your application code to use '${JSON.stringify(normalized)}' instead.`, normalized === id, {\n      id: 'ember-data:deprecate-non-strict-id',\n      until: '6.0',\n      for: 'ember-data',\n      since: {\n        available: '5.3',\n        enabled: '5.3'\n      }\n    }));\n    return normalized;\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Resource IDs must be a non-empty string or null. Received '${String(id)}'.`);\n    }\n  })(id === null || typeof id === 'string' && id.length > 0);\n  return id;\n}\nfunction getStore(wrapper) {\n  (test => {\n    if (!test) {\n      throw new Error(`expected a private _store property`);\n    }\n  })('_store' in wrapper);\n  return wrapper._store;\n}\nfunction expandingGet(cache, key1, key2) {\n  const mainCache = cache[key1] = cache[key1] || Object.create(null);\n  return mainCache[key2];\n}\nfunction expandingSet(cache, key1, key2, value) {\n  const mainCache = cache[key1] = cache[key1] || Object.create(null);\n  mainCache[key2] = value;\n}\nfunction assertValidRelationshipPayload(graph, op) {\n  const relationship = graph.get(op.record, op.field);\n  (test => {\n    if (!test) {\n      throw new Error(`Cannot update an implicit relationship`);\n    }\n  })(isHasMany(relationship) || isBelongsTo(relationship));\n  const payload = op.value;\n  const {\n    definition,\n    identifier,\n    state\n  } = relationship;\n  const {\n    type\n  } = identifier;\n  const {\n    field\n  } = op;\n  const {\n    isAsync,\n    kind\n  } = definition;\n  if (payload.links) {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`You pushed a record of type '${type}' with a relationship '${field}' configured as 'async: false'. You've included a link but no primary data, this may be an error in your payload. EmberData will treat this relationship as known-to-be-empty.`, isAsync || !!payload.data || state.hasReceivedData, {\n      id: 'ds.store.push-link-for-sync-relationship'\n    }));\n  } else if (payload.data) {\n    if (kind === 'belongsTo') {\n      (test => {\n        if (!test) {\n          throw new Error(`A ${type} record was pushed into the store with the value of ${field} being ${(0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.inspect)(payload.data)}, but ${field} is a belongsTo relationship so the value must not be an array. You should probably check your data payload or serializer.`);\n        }\n      })(!Array.isArray(payload.data));\n      assertRelationshipData(getStore(graph.store), identifier, payload.data, definition);\n    } else if (kind === 'hasMany') {\n      (test => {\n        if (!test) {\n          throw new Error(`A ${type} record was pushed into the store with the value of ${field} being '${(0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.inspect)(payload.data)}', but ${field} is a hasMany relationship so the value must be an array. You should probably check your data payload or serializer.`);\n        }\n      })(Array.isArray(payload.data));\n      if (Array.isArray(payload.data)) {\n        for (let i = 0; i < payload.data.length; i++) {\n          assertRelationshipData(getStore(graph.store), identifier, payload.data[i], definition);\n        }\n      }\n    }\n  }\n}\nfunction isNew(identifier) {\n  if (!identifier.id) {\n    return true;\n  }\n  const cache = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_1__.peekCache)(identifier);\n  return Boolean(cache?.isNew(identifier));\n}\nfunction isBelongsTo(relationship) {\n  return relationship.definition.kind === 'belongsTo';\n}\nfunction isImplicit(relationship) {\n  return relationship.definition.isImplicit;\n}\nfunction isHasMany(relationship) {\n  return relationship.definition.kind === 'hasMany';\n}\nfunction forAllRelatedIdentifiers(rel, cb) {\n  if (isBelongsTo(rel)) {\n    if (rel.remoteState) {\n      cb(rel.remoteState);\n    }\n    if (rel.localState && rel.localState !== rel.remoteState) {\n      cb(rel.localState);\n    }\n  } else if (isHasMany(rel)) {\n    // TODO\n    // rel.remoteMembers.forEach(cb);\n    // might be simpler if performance is not a concern\n    for (let i = 0; i < rel.remoteState.length; i++) {\n      const inverseIdentifier = rel.remoteState[i];\n      cb(inverseIdentifier);\n    }\n    rel.additions?.forEach(cb);\n  } else {\n    rel.localMembers.forEach(cb);\n    rel.remoteMembers.forEach(inverseIdentifier => {\n      if (!rel.localMembers.has(inverseIdentifier)) {\n        cb(inverseIdentifier);\n      }\n    });\n  }\n}\n\n/*\n  Removes the given identifier from BOTH remote AND local state.\n\n  This method is useful when either a deletion or a rollback on a new record\n  needs to entirely purge itself from an inverse relationship.\n  */\nfunction removeIdentifierCompletelyFromRelationship(graph, relationship, value, silenceNotifications) {\n  if (isBelongsTo(relationship)) {\n    if (relationship.remoteState === value) {\n      relationship.remoteState = null;\n    }\n    if (relationship.localState === value) {\n      relationship.localState = null;\n      // This allows dematerialized inverses to be rematerialized\n      // we shouldn't be notifying here though, figure out where\n      // a notification was missed elsewhere.\n      {\n        notifyChange(graph, relationship.identifier, relationship.definition.key);\n      }\n    }\n  } else if (isHasMany(relationship)) {\n    relationship.remoteMembers.delete(value);\n    relationship.additions?.delete(value);\n    const wasInRemovals = relationship.removals?.delete(value);\n    const canonicalIndex = relationship.remoteState.indexOf(value);\n    if (canonicalIndex !== -1) {\n      relationship.remoteState.splice(canonicalIndex, 1);\n    }\n    if (!wasInRemovals) {\n      const currentIndex = relationship.localState?.indexOf(value);\n      if (currentIndex !== -1 && currentIndex !== undefined) {\n        relationship.localState.splice(currentIndex, 1);\n        // This allows dematerialized inverses to be rematerialized\n        // we shouldn't be notifying here though, figure out where\n        // a notification was missed elsewhere.\n        {\n          notifyChange(graph, relationship.identifier, relationship.definition.key);\n        }\n      }\n    }\n  } else {\n    relationship.remoteMembers.delete(value);\n    relationship.localMembers.delete(value);\n  }\n}\n\n// TODO add silencing at the graph level\nfunction notifyChange(graph, identifier, key) {\n  if (identifier === graph._removing) {\n    return;\n  }\n  graph.store.notifyChange(identifier, 'relationships', key);\n}\nfunction assertRelationshipData(store, identifier, data, meta) {\n  (test => {\n    if (!test) {\n      throw new Error(`A ${identifier.type} record was pushed into the store with the value of ${meta.key} being '${JSON.stringify(data)}', but ${meta.key} is a belongsTo relationship so the value must not be an array. You should probably check your data payload or serializer.`);\n    }\n  })(!Array.isArray(data));\n  (test => {\n    if (!test) {\n      throw new Error(`Encountered a relationship identifier without a type for the ${meta.kind} relationship '${meta.key}' on <${identifier.type}:${String(identifier.id)}>, expected an identifier with type '${meta.type}' but found\\n\\n'${JSON.stringify(data, null, 2)}'\\n\\nPlease check your serializer and make sure it is serializing the relationship payload into a JSON API format.`);\n    }\n  })(data === null || 'type' in data && typeof data.type === 'string' && data.type.length);\n  (test => {\n    if (!test) {\n      throw new Error(`Encountered a relationship identifier without an id for the ${meta.kind} relationship '${meta.key}' on <${identifier.type}:${String(identifier.id)}>, expected an identifier but found\\n\\n'${JSON.stringify(data, null, 2)}'\\n\\nPlease check your serializer and make sure it is serializing the relationship payload into a JSON API format.`);\n    }\n  })(data === null || !!coerceId(data.id));\n  if (data?.type === meta.type) {\n    (test => {\n      if (!test) {\n        throw new Error(`Missing Schema: Encountered a relationship identifier { type: '${data.type}', id: '${String(data.id)}' } for the '${identifier.type}.${meta.key}' ${meta.kind} relationship on <${identifier.type}:${String(identifier.id)}>, but no schema exists for that type.`);\n      }\n    })(store.schema.hasResource(data));\n  } else {\n    (test => {\n      if (!test) {\n        throw new Error(`Missing Schema: Encountered a relationship identifier with type '${data.type}' for the ${meta.kind} relationship '${meta.key}' on <${identifier.type}:${String(identifier.id)}>, Expected an identifier with type '${meta.type}'. No schema was found for '${data.type}'.`);\n      }\n    })(data === null || !data.type || store.schema.hasResource(data));\n  }\n}\nconst RELATIONSHIP_KINDS = ['belongsTo', 'hasMany', 'resource', 'collection'];\nfunction isLegacyField(field) {\n  return field.kind === 'belongsTo' || field.kind === 'hasMany';\n}\nfunction isRelationshipField(field) {\n  return RELATIONSHIP_KINDS.includes(field.kind);\n}\nfunction temporaryConvertToLegacy(field) {\n  return {\n    kind: field.kind === 'resource' ? 'belongsTo' : 'hasMany',\n    name: field.name,\n    type: field.type,\n    options: Object.assign({}, {\n      async: false,\n      inverse: null,\n      resetOnRemoteUpdate: false\n    }, field.options)\n  };\n}\n\n/**\n *\n * Given RHS (Right Hand Side)\n *\n * ```ts\n * class User extends Model {\n *   @hasMany('animal', { async: false, inverse: 'owner' }) pets;\n * }\n * ```\n *\n * Given LHS (Left Hand Side)\n *\n * ```ts\n * class Animal extends Model {\n *  @belongsTo('user', { async: false, inverse: 'pets' }) owner;\n * }\n * ```\n *\n * The UpgradedMeta for the RHS would be:\n *\n * ```ts\n * {\n *   kind: 'hasMany',\n *   key: 'pets',\n *   type: 'animal',\n *   isAsync: false,\n *   isImplicit: false,\n *   isCollection: true,\n *   isPolymorphic: false,\n *   inverseKind: 'belongsTo',\n *   inverseKey: 'owner',\n *   inverseType: 'user',\n *   inverseIsAsync: false,\n *   inverseIsImplicit: false,\n *   inverseIsCollection: false,\n *   inverseIsPolymorphic: false,\n * }\n * ```\n *\n * The UpgradeMeta for the LHS would be:\n *\n * ```ts\n * {\n *   kind: 'belongsTo',\n *   key: 'owner',\n *   type: 'user',\n *   isAsync: false,\n *   isImplicit: false,\n *   isCollection: false,\n *   isPolymorphic: false,\n *   inverseKind: 'hasMany',\n *   inverseKey: 'pets',\n *   inverseType: 'animal',\n *   inverseIsAsync: false,\n *   inverseIsImplicit: false,\n *   inverseIsCollection: true,\n *   inverseIsPolymorphic: false,\n * }\n * ```\n *\n *\n * @class UpgradedMeta\n * @internal\n */\n\nconst BOOL_LATER = null;\nconst STR_LATER = '';\nconst IMPLICIT_KEY_RAND = Date.now();\nfunction implicitKeyFor(type, key) {\n  return `implicit-${type}:${key}${IMPLICIT_KEY_RAND}`;\n}\nfunction syncMeta(definition, inverseDefinition) {\n  definition.inverseKind = inverseDefinition.kind;\n  definition.inverseKey = inverseDefinition.key;\n  definition.inverseType = inverseDefinition.type;\n  definition.inverseIsAsync = inverseDefinition.isAsync;\n  definition.inverseIsCollection = inverseDefinition.isCollection;\n  definition.inverseIsPolymorphic = inverseDefinition.isPolymorphic;\n  definition.inverseIsImplicit = inverseDefinition.isImplicit;\n  const resetOnRemoteUpdate = definition.resetOnRemoteUpdate === false || inverseDefinition.resetOnRemoteUpdate === false ? false : true;\n  definition.resetOnRemoteUpdate = resetOnRemoteUpdate;\n  inverseDefinition.resetOnRemoteUpdate = resetOnRemoteUpdate;\n}\nfunction upgradeMeta(meta) {\n  if (!isLegacyField(meta)) {\n    meta = temporaryConvertToLegacy(meta);\n  }\n  const niceMeta = {};\n  const options = meta.options;\n  niceMeta.kind = meta.kind;\n  niceMeta.key = meta.name;\n  niceMeta.type = meta.type;\n  (test => {\n    if (!test) {\n      throw new Error(`Expected relationship definition to specify async`);\n    }\n  })(typeof options?.async === 'boolean');\n  niceMeta.isAsync = options.async;\n  niceMeta.isImplicit = false;\n  niceMeta.isCollection = meta.kind === 'hasMany';\n  niceMeta.isPolymorphic = options && !!options.polymorphic;\n  niceMeta.inverseKey = options && options.inverse || STR_LATER;\n  niceMeta.inverseType = STR_LATER;\n  niceMeta.inverseIsAsync = BOOL_LATER;\n  niceMeta.inverseIsImplicit = options && options.inverse === null || BOOL_LATER;\n  niceMeta.inverseIsCollection = BOOL_LATER;\n  niceMeta.resetOnRemoteUpdate = isLegacyField(meta) ? meta.options?.resetOnRemoteUpdate === false ? false : true : false;\n  return niceMeta;\n}\nfunction assertConfiguration(info, type, key) {\n  {\n    const isSelfReferential = info.isSelfReferential;\n    if (isSelfReferential) {\n      return true;\n    }\n    const _isRHS = key === info.rhs_relationshipName && (type === info.rhs_baseModelName ||\n    // base or non-polymorphic\n    // if the other side is polymorphic then we need to scan our modelNames\n    info.lhs_isPolymorphic && info.rhs_modelNames.includes(type)); // polymorphic\n    const _isLHS = key === info.lhs_relationshipName && (type === info.lhs_baseModelName ||\n    // base or non-polymorphic\n    // if the other side is polymorphic then we need to scan our modelNames\n    info.rhs_isPolymorphic && info.lhs_modelNames.includes(type)); // polymorphic;\n\n    if (!_isRHS && !_isLHS) {\n      /*\n        this occurs when we are likely polymorphic but not configured to be polymorphic\n        most often due to extending a class that has a relationship definition on it.\n         e.g.\n         ```ts\n        class Pet extends Model {\n          @belongsTo('human', { async: false, inverse: 'pet' }) owner;\n        }\n        class Human extends Model {\n          @belongsTo('pet', { async: false, inverse: 'owner' }) pet;\n        }\n        class Farmer extends Human {}\n        ```\n         In the above case, the following would trigger this error:\n         ```ts\n        let pet = store.createRecord('pet');\n        let farmer = store.createRecord('farmer');\n        farmer.pet = pet; // error\n        ```\n         The correct way to fix this is to specify the polymorphic option on Pet\n        and to specify the abstract type 'human' on the Human base class.\n         ```ts\n        class Pet extends Model {\n          @belongsTo('human', { async: false, inverse: 'pet', polymorphic: true }) owner;\n        }\n        class Human extends Model {\n          @belongsTo('pet', { async: false, inverse: 'owner', as: 'human' }) pet;\n        }\n        class Farmer extends Human {}\n        ```\n         Alternatively both Human and Farmer could declare the relationship, because relationship\n        definitions are \"structural\".\n         ```ts\n        class Pet extends Model {\n          @belongsTo('human', { async: false, inverse: 'pet', polymorphic: true }) owner;\n        }\n        class Human extends Model {\n          @belongsTo('pet', { async: false, inverse: 'owner', as: 'human' }) pet;\n        }\n        class Farmer extends Model {\n          @belongsTo('pet', { async: false, inverse: 'owner', as: 'human' }) pet;\n        }\n        ```\n        */\n      if (key === info.lhs_relationshipName && info.lhs_modelNames.includes(type)) {\n        // parentIdentifier, parentDefinition, addedIdentifier, store\n        assertInheritedSchema(info.lhs_definition, type);\n      } else if (key === info.rhs_relationshipName && info.rhs_modelNames.includes(type)) {\n        assertInheritedSchema(info.lhs_definition, type);\n      }\n      // OPEN AN ISSUE :: we would like to improve our errors but need to understand what corner case got us here\n      throw new Error(`PLEASE OPEN AN ISSUE :: Found a relationship that is neither the LHS nor RHS of the same edge. This is not supported. Please report this to the EmberData team.`);\n    }\n    if (_isRHS && _isLHS) {\n      // not sure how we get here but it's probably the result of some form of inheritance\n      // without having specified polymorphism correctly leading to it not being self-referential\n      // OPEN AN ISSUE :: we would like to improve our errors but need to understand what corner case got us here\n      throw new Error(`PLEASE OPEN AN ISSUE :: Found a relationship that is both the LHS and RHS of the same edge but is not self-referential. This is not supported. Please report this to the EmberData team.`);\n    }\n  }\n}\nfunction isLHS(info, type, key) {\n  const isSelfReferential = info.isSelfReferential;\n  const isRelationship = key === info.lhs_relationshipName;\n  {\n    assertConfiguration(info, type, key);\n  }\n  if (isRelationship === true) {\n    return isSelfReferential === true ||\n    // itself\n    type === info.lhs_baseModelName ||\n    // base or non-polymorphic\n    // if the other side is polymorphic then we need to scan our modelNames\n    info.rhs_isPolymorphic && info.lhs_modelNames.includes(type) // polymorphic\n    ;\n  }\n  return false;\n}\nfunction upgradeDefinition(graph, identifier, propertyName, isImplicit = false) {\n  const cache = graph._definitionCache;\n  const storeWrapper = graph.store;\n  const polymorphicLookup = graph._potentialPolymorphicTypes;\n  const {\n    type\n  } = identifier;\n  let cached = /*#__NOINLINE__*/expandingGet(cache, type, propertyName);\n\n  // CASE: We have a cached resolution (null if no relationship exists)\n  if (cached !== undefined) {\n    return cached;\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Expected to find relationship definition in the cache for the implicit relationship ${propertyName}`);\n    }\n  })(!isImplicit);\n  const relationships = storeWrapper.schema.fields(identifier);\n  (test => {\n    if (!test) {\n      throw new Error(`Expected to have a relationship definition for ${type} but none was found.`);\n    }\n  })(relationships);\n  const meta = relationships.get(propertyName);\n  if (!meta) {\n    // TODO potentially we should just be permissive here since this is an implicit relationship\n    // and not require the lookup table to be populated\n    if (polymorphicLookup[type]) {\n      const altTypes = Object.keys(polymorphicLookup[type]);\n      for (let i = 0; i < altTypes.length; i++) {\n        const _cached = expandingGet(cache, altTypes[i], propertyName);\n        if (_cached) {\n          /*#__NOINLINE__*/expandingSet(cache, type, propertyName, _cached);\n          _cached.rhs_modelNames.push(type);\n          return _cached;\n        }\n      }\n    }\n\n    // CASE: We don't have a relationship at all\n    // we should only hit this in prod\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a relationship schema for '${type}.${propertyName}', but no relationship schema was found.`);\n      }\n    })(meta);\n    cache[type][propertyName] = null;\n    return null;\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Expected ${propertyName} to be a relationship`);\n    }\n  })(isRelationshipField(meta));\n  const definition = /*#__NOINLINE__*/upgradeMeta(meta);\n  let inverseDefinition;\n  let inverseKey;\n  const inverseType = definition.type;\n\n  // CASE: Inverse is explicitly null\n  if (definition.inverseKey === null) {\n    // TODO probably dont need this assertion if polymorphic\n    (test => {\n      if (!test) {\n        throw new Error(`Expected the inverse model to exist`);\n      }\n    })(getStore(storeWrapper).modelFor(inverseType));\n    inverseDefinition = null;\n  } else {\n    inverseKey = /*#__NOINLINE__*/inverseForRelationship(getStore(storeWrapper), identifier, propertyName);\n\n    // CASE: If we are polymorphic, and we declared an inverse that is non-null\n    // we must assume that the lack of inverseKey means that there is no\n    // concrete type as the baseType, so we must construct and artificial\n    // placeholder\n    if (!inverseKey && definition.isPolymorphic && definition.inverseKey) {\n      inverseDefinition = {\n        kind: 'belongsTo',\n        // this must be updated when we find the first belongsTo or hasMany definition that matches\n        key: definition.inverseKey,\n        type: type,\n        isAsync: false,\n        // this must be updated when we find the first belongsTo or hasMany definition that matches\n        isImplicit: false,\n        isCollection: false,\n        // this must be updated when we find the first belongsTo or hasMany definition that matches\n        isPolymorphic: false\n      }; // the rest of the fields are populated by syncMeta\n\n      // CASE: Inverse resolves to null\n    } else if (!inverseKey) {\n      inverseDefinition = null;\n    } else {\n      // CASE: We have an explicit inverse or were able to resolve one\n      const inverseDefinitions = storeWrapper.schema.fields({\n        type: inverseType\n      });\n      (test => {\n        if (!test) {\n          throw new Error(`Expected to have a relationship definition for ${inverseType} but none was found.`);\n        }\n      })(inverseDefinitions);\n      const metaFromInverse = inverseDefinitions.get(inverseKey);\n      (test => {\n        if (!test) {\n          throw new Error(`Expected a relationship schema for '${inverseType}.${inverseKey}' to match the inverse of '${type}.${propertyName}', but no relationship schema was found.`);\n        }\n      })(metaFromInverse);\n      (test => {\n        if (!test) {\n          throw new Error(`Expected ${inverseKey} to be a relationship`);\n        }\n      })(isRelationshipField(metaFromInverse));\n      inverseDefinition = upgradeMeta(metaFromInverse);\n    }\n  }\n\n  // CASE: We have no inverse\n  if (!inverseDefinition) {\n    // polish off meta\n    inverseKey = /*#__NOINLINE__*/implicitKeyFor(type, propertyName);\n    inverseDefinition = {\n      kind: 'implicit',\n      key: inverseKey,\n      type: type,\n      isAsync: false,\n      isImplicit: true,\n      isCollection: true,\n      // with implicits any number of records could point at us\n      isPolymorphic: false\n    }; // the rest of the fields are populated by syncMeta\n\n    syncMeta(definition, inverseDefinition);\n    syncMeta(inverseDefinition, definition);\n    const info = {\n      lhs_key: `${type}:${propertyName}`,\n      lhs_modelNames: [type],\n      lhs_baseModelName: type,\n      lhs_relationshipName: propertyName,\n      lhs_definition: definition,\n      lhs_isPolymorphic: definition.isPolymorphic,\n      rhs_key: inverseDefinition.key,\n      rhs_modelNames: [inverseType],\n      rhs_baseModelName: inverseType,\n      rhs_relationshipName: inverseDefinition.key,\n      rhs_definition: inverseDefinition,\n      rhs_isPolymorphic: false,\n      hasInverse: false,\n      isSelfReferential: type === inverseType,\n      // this could be wrong if we are self-referential but also polymorphic\n      isReflexive: false // we can't be reflexive if we don't define an inverse\n    };\n    expandingSet(cache, inverseType, inverseKey, info);\n    expandingSet(cache, type, propertyName, info);\n    return info;\n  }\n\n  // CASE: We do have an inverse\n  const baseType = inverseDefinition.type;\n\n  // TODO we want to assert this but this breaks all of our shoddily written tests\n  /*\n    if (DEBUG) {\n      let inverseDoubleCheck = inverseFor(inverseRelationshipName, store);\n       assert(`The ${inverseBaseModelName}:${inverseRelationshipName} relationship declares 'inverse: null', but it was resolved as the inverse for ${baseModelName}:${relationshipName}.`, inverseDoubleCheck);\n    }\n  */\n  // CASE: We may have already discovered the inverse for the baseModelName\n  // CASE: We have already discovered the inverse\n  (test => {\n    if (!test) {\n      throw new Error(`We should have determined an inverseKey by now, open an issue if this is hit`);\n    }\n  })(typeof inverseKey === 'string' && inverseKey.length > 0);\n  cached = expandingGet(cache, baseType, propertyName) || expandingGet(cache, inverseType, inverseKey);\n  if (cached) {\n    // TODO this assert can be removed if the above assert is enabled\n    (test => {\n      if (!test) {\n        throw new Error(`The ${inverseType}:${inverseKey} relationship declares 'inverse: null', but it was resolved as the inverse for ${type}:${propertyName}.`);\n      }\n    })(cached.hasInverse !== false);\n    const _isLHS = cached.lhs_baseModelName === baseType;\n    const modelNames = _isLHS ? cached.lhs_modelNames : cached.rhs_modelNames;\n    // make this lookup easier in the future by caching the key\n    modelNames.push(type);\n    expandingSet(cache, type, propertyName, cached);\n    return cached;\n  }\n\n  // this is our first time so polish off the metas\n  syncMeta(definition, inverseDefinition);\n  syncMeta(inverseDefinition, definition);\n  const lhs_modelNames = [type];\n  if (type !== baseType) {\n    lhs_modelNames.push(baseType);\n  }\n  const isSelfReferential = baseType === inverseType;\n  const info = {\n    lhs_key: `${baseType}:${propertyName}`,\n    lhs_modelNames,\n    lhs_baseModelName: baseType,\n    lhs_relationshipName: propertyName,\n    lhs_definition: definition,\n    lhs_isPolymorphic: definition.isPolymorphic,\n    rhs_key: `${inverseType}:${inverseKey}`,\n    rhs_modelNames: [inverseType],\n    rhs_baseModelName: inverseType,\n    rhs_relationshipName: inverseKey,\n    rhs_definition: inverseDefinition,\n    rhs_isPolymorphic: inverseDefinition.isPolymorphic,\n    hasInverse: true,\n    isSelfReferential,\n    isReflexive: isSelfReferential && propertyName === inverseKey\n  };\n\n  // Create entries for the baseModelName as well as modelName to speed up\n  //  inverse lookups\n  expandingSet(cache, baseType, propertyName, info);\n  expandingSet(cache, type, propertyName, info);\n\n  // Greedily populate the inverse\n  expandingSet(cache, inverseType, inverseKey, info);\n  return info;\n}\nfunction inverseForRelationship(store, identifier, key) {\n  const definition = store.schema.fields(identifier).get(key);\n  if (!definition) {\n    return null;\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Expected ${key} to be a relationship`);\n    }\n  })(isRelationshipField(definition));\n  (test => {\n    if (!test) {\n      throw new Error(`Expected the relationship defintion to specify the inverse type or null.`);\n    }\n  })(definition.options?.inverse === null || typeof definition.options?.inverse === 'string' && definition.options.inverse.length > 0);\n  return definition.options.inverse;\n}\n\n/* eslint-disable no-inner-declarations, @typescript-eslint/no-shadow */\n\nlet assertPolymorphicType;\nlet assertInheritedSchema;\n{\n  function validateSchema(definition, meta) {\n    const errors = new Map();\n    if (definition.inverseKey !== meta.name) {\n      errors.set('name', ` <---- should be '${definition.inverseKey}'`);\n    }\n    if (definition.inverseType !== meta.type) {\n      errors.set('type', ` <---- should be '${definition.inverseType}'`);\n    }\n    if (definition.inverseKind !== meta.kind) {\n      errors.set('type', ` <---- should be '${definition.inverseKind}'`);\n    }\n    if (definition.inverseIsAsync !== meta.options.async) {\n      errors.set('async', ` <---- should be ${definition.inverseIsAsync}`);\n    }\n    if (definition.inverseIsPolymorphic && definition.inverseIsPolymorphic !== meta.options.polymorphic) {\n      errors.set('polymorphic', ` <---- should be ${definition.inverseIsPolymorphic}`);\n    }\n    if (definition.key !== meta.options.inverse) {\n      errors.set('inverse', ` <---- should be '${definition.key}'`);\n    }\n    if (definition.type !== meta.options.as) {\n      errors.set('as', ` <---- should be '${definition.type}'`);\n    }\n    return errors;\n  }\n  function expectedSchema(definition) {\n    return printSchema({\n      name: definition.inverseKey,\n      type: definition.inverseType,\n      kind: definition.inverseKind,\n      options: {\n        as: definition.type,\n        async: definition.inverseIsAsync,\n        polymorphic: definition.inverseIsPolymorphic || false,\n        inverse: definition.key\n      }\n    });\n  }\n  function printSchema(config, errors) {\n    return `\n\n\\`\\`\\`\n{\n  ${config.name}: {\n    name: '${config.name}',${errors?.get('name') || ''}\n    type: '${config.type}',${errors?.get('type') || ''}\n    kind: '${config.kind}',${errors?.get('kind') || ''}\n    options: {\n      as: '${config.options.as}',${errors?.get('as') || ''}\n      async: ${config.options.async},${errors?.get('async') || ''}\n      polymorphic: ${config.options.polymorphic},${errors?.get('polymorphic') || ''}\n      inverse: '${config.options.inverse}'${errors?.get('inverse') || ''}\n    }\n  }\n}\n\\`\\`\\`\n\n`;\n  }\n  function metaFrom(definition) {\n    return {\n      name: definition.key,\n      type: definition.type,\n      kind: definition.kind,\n      options: {\n        async: definition.isAsync,\n        polymorphic: definition.isPolymorphic,\n        inverse: definition.inverseKey\n      }\n    };\n  }\n  function inverseMetaFrom(definition) {\n    return {\n      name: definition.inverseKey,\n      type: definition.inverseType,\n      kind: definition.inverseKind,\n      options: {\n        as: definition.isPolymorphic ? definition.type : undefined,\n        async: definition.inverseIsAsync,\n        polymorphic: definition.inverseIsPolymorphic,\n        inverse: definition.key\n      }\n    };\n  }\n  function inverseDefinition(definition) {\n    return {\n      key: definition.inverseKey,\n      type: definition.inverseType,\n      kind: definition.inverseKind,\n      isAsync: definition.inverseIsAsync,\n      isPolymorphic: true,\n      isCollection: definition.inverseIsCollection,\n      isImplicit: definition.inverseIsImplicit,\n      inverseKey: definition.key,\n      inverseType: definition.type,\n      inverseKind: definition.kind,\n      inverseIsAsync: definition.isAsync,\n      inverseIsPolymorphic: definition.isPolymorphic,\n      inverseIsImplicit: definition.isImplicit,\n      inverseIsCollection: definition.isCollection,\n      resetOnRemoteUpdate: definition.resetOnRemoteUpdate\n    };\n  }\n  function definitionWithPolymorphic(definition) {\n    return Object.assign({}, definition, {\n      inverseIsPolymorphic: true\n    });\n  }\n  assertInheritedSchema = function assertInheritedSchema(definition, type) {\n    const meta1 = metaFrom(definition);\n    const meta2 = inverseMetaFrom(definition);\n    const errors1 = validateSchema(inverseDefinition(definition), meta1);\n    const errors2 = validateSchema(definitionWithPolymorphic(definition), meta2);\n    if (errors2.size === 0 && errors1.size > 0) {\n      throw new Error(`The schema for the relationship '${type}.${definition.key}' is not configured to satisfy '${definition.inverseType}' and thus cannot utilize the '${definition.inverseType}.${definition.key}' relationship to connect with '${definition.type}.${definition.inverseKey}'\\n\\nIf using this relationship in a polymorphic manner is desired, the relationships schema definition for '${type}' should include:${printSchema(meta1, errors1)}`);\n    } else if (errors1.size > 0) {\n      throw new Error(`The schema for the relationship '${type}.${definition.key}' is not configured to satisfy '${definition.inverseType}' and thus cannot utilize the '${definition.inverseType}.${definition.key}' relationship to connect with '${definition.type}.${definition.inverseKey}'\\n\\nIf using this relationship in a polymorphic manner is desired, the relationships schema definition for '${type}' should include:${printSchema(meta1, errors1)} and the relationships schema definition for '${definition.type}' should include:${printSchema(meta2, errors2)}`);\n    } else if (errors2.size > 0) {\n      throw new Error(`The schema for the relationship '${type}.${definition.key}' satisfies '${definition.inverseType}' but cannot utilize the '${definition.inverseType}.${definition.key}' relationship to connect with '${definition.type}.${definition.inverseKey}' because that relationship is not polymorphic.\\n\\nIf using this relationship in a polymorphic manner is desired, the relationships schema definition for '${definition.type}' should include:${printSchema(meta2, errors2)}`);\n    }\n  };\n  assertPolymorphicType = function assertPolymorphicType(parentIdentifier, parentDefinition, addedIdentifier, store) {\n    if (parentDefinition.inverseIsImplicit) {\n      return;\n    }\n    if (parentDefinition.isPolymorphic) {\n      let meta = store.schema.fields(addedIdentifier).get(parentDefinition.inverseKey);\n      (test => {\n        if (!test) {\n          throw new Error(`No '${parentDefinition.inverseKey}' field exists on '${addedIdentifier.type}'. To use this type in the polymorphic relationship '${parentDefinition.inverseType}.${parentDefinition.key}' the relationships schema definition for ${addedIdentifier.type} should include:${expectedSchema(parentDefinition)}`);\n        }\n      })(meta);\n      (test => {\n        if (!test) {\n          throw new Error(`Expected the field ${parentDefinition.inverseKey} to be a relationship`);\n        }\n      })(meta && isRelationshipField(meta));\n      meta = isLegacyField(meta) ? meta : temporaryConvertToLegacy(meta);\n      (test => {\n        if (!test) {\n          throw new Error(`You should not specify both options.as and options.inverse as null on ${addedIdentifier.type}.${parentDefinition.inverseKey}, as if there is no inverse field there is no abstract type to conform to. You may have intended for this relationship to be polymorphic, or you may have mistakenly set inverse to null.`);\n        }\n      })(!(meta.options.inverse === null && meta?.options.as?.length));\n      const errors = validateSchema(parentDefinition, meta);\n      (test => {\n        if (!test) {\n          throw new Error(`The schema for the relationship '${parentDefinition.inverseKey}' on '${addedIdentifier.type}' type does not correctly implement '${parentDefinition.type}' and thus cannot be assigned to the '${parentDefinition.key}' relationship in '${parentIdentifier.type}'. If using this record in this polymorphic relationship is desired, correct the errors in the schema shown below:${printSchema(meta, errors)}`);\n        }\n      })(errors.size === 0);\n    } else if (addedIdentifier.type !== parentDefinition.type) {\n      // if we are not polymorphic\n      // then the addedIdentifier.type must be the same as the parentDefinition.type\n      let meta = store.schema.fields(addedIdentifier).get(parentDefinition.inverseKey);\n      (test => {\n        if (!test) {\n          throw new Error(`Expected the field ${parentDefinition.inverseKey} to be a relationship`);\n        }\n      })(!meta || isRelationshipField(meta));\n      meta = meta && (isLegacyField(meta) ? meta : temporaryConvertToLegacy(meta));\n      if (meta?.options.as === parentDefinition.type) {\n        // inverse is likely polymorphic but missing the polymorphic flag\n        let meta = store.schema.fields({\n          type: parentDefinition.inverseType\n        }).get(parentDefinition.key);\n        (test => {\n          if (!test) {\n            throw new Error(`Expected the field ${parentDefinition.key} to be a relationship`);\n          }\n        })(meta && isRelationshipField(meta));\n        meta = isLegacyField(meta) ? meta : temporaryConvertToLegacy(meta);\n        const errors = validateSchema(definitionWithPolymorphic(inverseDefinition(parentDefinition)), meta);\n        (test => {\n          {\n            throw new Error(`The '<${addedIdentifier.type}>.${parentDefinition.inverseKey}' relationship cannot be used polymorphically because '<${parentDefinition.inverseType}>.${parentDefinition.key} is not a polymorphic relationship. To use this relationship in a polymorphic manner, fix the following schema issues on the relationships schema for '${parentDefinition.inverseType}':${printSchema(meta, errors)}`);\n          }\n        })();\n      } else {\n        (test => {\n          {\n            throw new Error(`The '${addedIdentifier.type}' type does not implement '${parentDefinition.type}' and thus cannot be assigned to the '${parentDefinition.key}' relationship in '${parentIdentifier.type}'. If this relationship should be polymorphic, mark ${parentDefinition.inverseType}.${parentDefinition.key} as \\`polymorphic: true\\` and ${addedIdentifier.type}.${parentDefinition.inverseKey} as implementing it via \\`as: '${parentDefinition.type}'\\`.`);\n          }\n        })();\n      }\n    }\n  };\n}\n\n/*\n    case many:1\n    ========\n    In a bi-directional graph with Many:1 edges, adding a value\n    results in up-to 3 discrete value transitions, while removing\n    a value is only 2 transitions.\n\n    For adding C to A\n    If: A <<-> B, C <->> D is the initial state,\n    and: B <->> A <<-> C, D is the final state\n\n    then we would undergo the following transitions.\n\n    add C to A\n    remove C from D\n    add A to C\n\n    For removing B from A\n    If: A <<-> B, C <->> D is the initial state,\n    and: A, B, C <->> D is the final state\n\n    then we would undergo the following transitions.\n\n    remove B from A\n    remove A from B\n\n    case many:many\n    ===========\n    In a bi-directional graph with Many:Many edges, adding or\n    removing a value requires only 2 value transitions.\n\n    For Adding\n    If: A<<->>B, C<<->>D is the initial state (double arrows representing the many side)\n    And: D<<->>C<<->>A<<->>B is the final state\n\n    Then we would undergo two transitions.\n\n    add C to A.\n    add A to C\n\n    For Removing\n    If: A<<->>B, C<<->>D is the initial state (double arrows representing the many side)\n    And: A, B, C<<->>D is the final state\n\n    Then we would undergo two transitions.\n\n    remove B from A\n    remove A from B\n\n    case many:?\n    ========\n    In a uni-directional graph with Many:? edges (modeled in EmberData with `inverse:null`) with\n    artificial (implicit) inverses, replacing a value results in 2 discrete value transitions.\n    This is because a Many:? relationship is effectively Many:Many.\n  */\nfunction replaceRelatedRecords(graph, op, isRemote) {\n  if (isRemote) {\n    replaceRelatedRecordsRemote(graph, op, isRemote);\n  } else {\n    replaceRelatedRecordsLocal(graph, op, isRemote);\n  }\n}\nfunction replaceRelatedRecordsLocal(graph, op, isRemote) {\n  const identifiers = op.value;\n  const relationship = graph.get(op.record, op.field);\n  (test => {\n    if (!test) {\n      throw new Error(`expected hasMany relationship`);\n    }\n  })(isHasMany(relationship));\n\n  // relationships for newly created records begin in the dirty state, so if updated\n  // before flushed we would fail to notify. This check helps us avoid that.\n  const isMaybeFirstUpdate = relationship.remoteState.length === 0 && relationship.localState === null && relationship.state.hasReceivedData === false;\n  relationship.state.hasReceivedData = true;\n  const {\n    additions,\n    removals\n  } = relationship;\n  const {\n    inverseKey,\n    type\n  } = relationship.definition;\n  const {\n    record\n  } = op;\n  const wasDirty = relationship.isDirty;\n  relationship.isDirty = false;\n  const onAdd = identifier => {\n    // Since we are diffing against the remote state, we check\n    // if our previous local state did not contain this identifier\n    const removalsHas = removals?.has(identifier);\n    if (removalsHas || !additions?.has(identifier)) {\n      if (type !== identifier.type) {\n        {\n          assertPolymorphicType(relationship.identifier, relationship.definition, identifier, graph.store);\n        }\n        graph.registerPolymorphicType(type, identifier.type);\n      }\n      relationship.isDirty = true;\n      addToInverse(graph, identifier, inverseKey, op.record, isRemote);\n      if (removalsHas) {\n        removals.delete(identifier);\n      }\n    }\n  };\n  const onRemove = identifier => {\n    // Since we are diffing against the remote state, we check\n    // if our previous local state had contained this identifier\n    const additionsHas = additions?.has(identifier);\n    if (additionsHas || !removals?.has(identifier)) {\n      relationship.isDirty = true;\n      removeFromInverse(graph, identifier, inverseKey, record, isRemote);\n      if (additionsHas) {\n        additions.delete(identifier);\n      }\n    }\n  };\n  const diff = diffCollection(identifiers, relationship, onAdd, onRemove);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  relationship.isDirty || diff.changed;\n\n  // any additions no longer in the local state\n  // need to be removed from the inverse\n  if (additions && additions.size > 0) {\n    additions.forEach(identifier => {\n      if (!diff.add.has(identifier)) {\n        onRemove(identifier);\n      }\n    });\n  }\n\n  // any removals no longer in the local state\n  // need to be added back to the inverse\n  if (removals && removals.size > 0) {\n    removals.forEach(identifier => {\n      if (!diff.del.has(identifier)) {\n        onAdd(identifier);\n      }\n    });\n  }\n  relationship.additions = diff.add;\n  relationship.removals = diff.del;\n  relationship.localState = diff.finalState;\n  relationship.isDirty = wasDirty;\n  if (isMaybeFirstUpdate || !wasDirty /*&& becameDirty // TODO to guard like this we need to detect reorder when diffing local */) {\n    notifyChange(graph, op.record, op.field);\n  }\n}\nfunction replaceRelatedRecordsRemote(graph, op, isRemote) {\n  const identifiers = op.value;\n  const relationship = graph.get(op.record, op.field);\n  (test => {\n    if (!test) {\n      throw new Error(`You can only '${op.op}' on a hasMany relationship. ${op.record.type}.${op.field} is a ${relationship.definition.kind}`);\n    }\n  })(isHasMany(relationship));\n  if (isRemote) {\n    graph._addToTransaction(relationship);\n  }\n  relationship.state.hasReceivedData = true;\n\n  // cache existing state\n  const {\n    definition\n  } = relationship;\n  const {\n    type\n  } = relationship.definition;\n  const diff = diffCollection(identifiers, relationship, identifier => {\n    if (type !== identifier.type) {\n      {\n        assertPolymorphicType(relationship.identifier, relationship.definition, identifier, graph.store);\n      }\n      graph.registerPolymorphicType(type, identifier.type);\n    }\n    // commit additions\n    // TODO build this into the diff?\n    // because we are not dirty if this was a committed local addition\n    if (relationship.additions?.has(identifier)) {\n      relationship.additions.delete(identifier);\n    } else {\n      relationship.isDirty = true;\n    }\n    addToInverse(graph, identifier, definition.inverseKey, op.record, isRemote);\n  }, identifier => {\n    // commit removals\n    // TODO build this into the diff?\n    // because we are not dirty if this was a committed local addition\n    if (relationship.removals?.has(identifier)) {\n      relationship.removals.delete(identifier);\n    } else {\n      relationship.isDirty = true;\n    }\n    removeFromInverse(graph, identifier, definition.inverseKey, op.record, isRemote);\n  });\n\n  // replace existing state\n  relationship.remoteMembers = diff.finalSet;\n  relationship.remoteState = diff.finalState;\n\n  // changed also indicates a change in order\n  if (diff.changed) {\n    relationship.isDirty = true;\n  }\n\n  // TODO unsure if we need this but it\n  // may allow us to more efficiently patch\n  // the associated ManyArray\n  relationship._diff = diff;\n  {\n    // only do this for legacy hasMany, not collection\n    // and provide a way to incrementally migrate\n    if (relationship.definition.kind === 'hasMany' && relationship.definition.resetOnRemoteUpdate !== false) {\n      const deprecationInfo = {\n        removals: [],\n        additions: [],\n        triggered: false\n      };\n      if (relationship.removals) {\n        relationship.isDirty = true;\n        relationship.removals.forEach(identifier => {\n          deprecationInfo.triggered = true;\n          deprecationInfo.removals.push(identifier);\n          // reverse the removal\n          // if we are still in removals at this point then\n          // we were not \"committed\" which means we are present\n          // in the remoteMembers. So we \"add back\" on the inverse.\n          addToInverse(graph, identifier, definition.inverseKey, op.record, isRemote);\n        });\n        relationship.removals = null;\n      }\n      if (relationship.additions) {\n        relationship.additions.forEach(identifier => {\n          // reverse the addition\n          // if we are still in additions at this point then\n          // we were not \"committed\" which means we are not present\n          // in the remoteMembers. So we \"remove\" from the inverse.\n          // however we only do this if we are not a \"new\" record.\n          if (!isNew(identifier)) {\n            deprecationInfo.triggered = true;\n            deprecationInfo.additions.push(identifier);\n            relationship.isDirty = true;\n            relationship.additions.delete(identifier);\n            removeFromInverse(graph, identifier, definition.inverseKey, op.record, isRemote);\n          }\n        });\n        if (relationship.additions.size === 0) {\n          relationship.additions = null;\n        }\n      }\n      if (deprecationInfo.triggered) {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`EmberData is changing the default semantics of updates to the remote state of relationships.\\n\\nThe following local state was cleared from the <${relationship.identifier.type}>.${relationship.definition.key} hasMany relationship but will not be once this deprecation is resolved by opting into the new behavior:\\n\\n\\tAdded: [${deprecationInfo.additions.map(i => i.lid).join(', ')}]\\n\\tRemoved: [${deprecationInfo.removals.map(i => i.lid).join(', ')}]`, false, {\n          id: 'ember-data:deprecate-relationship-remote-update-clearing-local-state',\n          for: 'ember-data',\n          since: {\n            enabled: '5.3',\n            available: '5.3'\n          },\n          until: '6.0',\n          url: 'https://deprecations.emberjs.com/v5.x#ember-data-deprecate-relationship-remote-update-clearing-local-state'\n        }));\n      }\n    }\n  }\n  if (relationship.isDirty) {\n    flushCanonical(graph, relationship);\n  }\n}\nfunction addToInverse(graph, identifier, key, value, isRemote) {\n  const relationship = graph.get(identifier, key);\n  const {\n    type\n  } = relationship.definition;\n  if (type !== value.type) {\n    {\n      assertPolymorphicType(relationship.identifier, relationship.definition, value, graph.store);\n    }\n    graph.registerPolymorphicType(type, value.type);\n  }\n  if (isBelongsTo(relationship)) {\n    relationship.state.hasReceivedData = true;\n    relationship.state.isEmpty = false;\n    if (isRemote) {\n      graph._addToTransaction(relationship);\n      if (relationship.remoteState !== null) {\n        removeFromInverse(graph, relationship.remoteState, relationship.definition.inverseKey, identifier, isRemote);\n      }\n      relationship.remoteState = value;\n    }\n    if (relationship.localState !== value) {\n      if (!isRemote && relationship.localState) {\n        removeFromInverse(graph, relationship.localState, relationship.definition.inverseKey, identifier, isRemote);\n      }\n      relationship.localState = value;\n      notifyChange(graph, identifier, key);\n    }\n  } else if (isHasMany(relationship)) {\n    if (isRemote) {\n      // TODO this needs to alert stuffs\n      // And patch state better\n      // This is almost definitely wrong\n      // WARNING WARNING WARNING\n\n      if (!relationship.remoteMembers.has(value)) {\n        graph._addToTransaction(relationship);\n        relationship.remoteState.push(value);\n        relationship.remoteMembers.add(value);\n        if (relationship.additions?.has(value)) {\n          relationship.additions.delete(value);\n        } else {\n          relationship.isDirty = true;\n          relationship.state.hasReceivedData = true;\n          flushCanonical(graph, relationship);\n        }\n      }\n    } else {\n      if (_addLocal(graph, identifier, relationship, value, null)) {\n        notifyChange(graph, identifier, key);\n      }\n    }\n  } else {\n    if (isRemote) {\n      if (!relationship.remoteMembers.has(value)) {\n        relationship.remoteMembers.add(value);\n        relationship.localMembers.add(value);\n      }\n    } else {\n      if (!relationship.localMembers.has(value)) {\n        relationship.localMembers.add(value);\n      }\n    }\n  }\n}\nfunction notifyInverseOfPotentialMaterialization(graph, identifier, key, value, isRemote) {\n  const relationship = graph.get(identifier, key);\n  if (isHasMany(relationship) && isRemote && relationship.remoteMembers.has(value)) {\n    notifyChange(graph, identifier, key);\n  }\n}\nfunction removeFromInverse(graph, identifier, key, value, isRemote) {\n  const relationship = graph.get(identifier, key);\n  if (isBelongsTo(relationship)) {\n    relationship.state.isEmpty = true;\n    if (isRemote) {\n      graph._addToTransaction(relationship);\n      relationship.remoteState = null;\n    }\n    if (relationship.localState === value) {\n      relationship.localState = null;\n      notifyChange(graph, identifier, key);\n    }\n  } else if (isHasMany(relationship)) {\n    if (isRemote) {\n      graph._addToTransaction(relationship);\n      if (_removeRemote(relationship, value)) {\n        notifyChange(graph, identifier, key);\n      }\n    } else {\n      if (_removeLocal(relationship, value)) {\n        notifyChange(graph, identifier, key);\n      }\n    }\n  } else {\n    if (isRemote) {\n      relationship.remoteMembers.delete(value);\n      relationship.localMembers.delete(value);\n    } else {\n      if (value && relationship.localMembers.has(value)) {\n        relationship.localMembers.delete(value);\n      }\n    }\n  }\n}\nfunction flushCanonical(graph, rel) {\n  graph._scheduleLocalSync(rel);\n}\nfunction replaceRelatedRecord(graph, op, isRemote = false) {\n  const relationship = graph.get(op.record, op.field);\n  (test => {\n    if (!test) {\n      throw new Error(`You can only '${op.op}' on a belongsTo relationship. ${op.record.type}.${op.field} is a ${relationship.definition.kind}`);\n    }\n  })(isBelongsTo(relationship));\n  if (isRemote) {\n    graph._addToTransaction(relationship);\n  }\n  const {\n    definition,\n    state\n  } = relationship;\n  const prop = isRemote ? 'remoteState' : 'localState';\n  const existingState = relationship[prop];\n\n  /*\n    case 1:1\n    ========\n    In a bi-directional graph with 1:1 edges, replacing a value\n    results in up-to 4 discrete value transitions.\n     If: A <-> B, C <-> D is the initial state,\n    and: A <-> C, B, D is the final state\n     then we would undergo the following 4 transitions.\n     remove A from B\n    add C to A\n    remove C from D\n    add A to C\n     case 1:many\n    ===========\n    In a bi-directional graph with 1:Many edges, replacing a value\n    results in up-to 3 discrete value transitions.\n     If: A<->>B<<->D, C<<->D is the initial state (double arrows representing the many side)\n    And: A<->>C<<->D, B<<->D is the final state\n     Then we would undergo three transitions.\n     remove A from B\n    add C to A.\n    add A to C\n     case 1:?\n    ========\n    In a uni-directional graph with 1:? edges (modeled in EmberData with `inverse:null`) with\n    artificial (implicit) inverses, replacing a value results in up-to 3 discrete value transitions.\n    This is because a 1:? relationship is effectively 1:many.\n     If: A->B, C->B is the initial state\n    And: A->C, C->B is the final state\n     Then we would undergo three transitions.\n     Remove A from B\n    Add C to A\n    Add A to C\n  */\n\n  // nothing for us to do\n  if (op.value === existingState) {\n    // if we were empty before but now know we are empty this needs to be true\n    state.hasReceivedData = true;\n    // if this is a remote update we still sync\n    if (isRemote) {\n      const {\n        localState\n      } = relationship;\n      // don't sync if localState is a new record and our remoteState is null\n      if (localState && isNew(localState) && !existingState) {\n        return;\n      }\n      if (existingState && localState === existingState) {\n        notifyInverseOfPotentialMaterialization(graph, existingState, definition.inverseKey, op.record, isRemote);\n      } else {\n        // if localState does not match existingState then we know\n        // we have a local mutation that has not been persisted yet\n        if (localState !== op.value && relationship.definition.resetOnRemoteUpdate !== false) {\n          relationship.localState = existingState;\n          ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`EmberData is changing the default semantics of updates to the remote state of relationships.\\n\\nThe following local state was cleared from the <${relationship.identifier.type}>.${relationship.definition.key} belongsTo relationship but will not be once this deprecation is resolved:\\n\\n\\t${localState ? 'Added: ' + localState.lid + '\\n\\t' : ''}${existingState ? 'Removed: ' + existingState.lid : ''}`, false, {\n            id: 'ember-data:deprecate-relationship-remote-update-clearing-local-state',\n            for: 'ember-data',\n            since: {\n              enabled: '5.3',\n              available: '5.3'\n            },\n            until: '6.0',\n            url: 'https://deprecations.emberjs.com/v5.x#ember-data-deprecate-relationship-remote-update-clearing-local-state'\n          }));\n          notifyChange(graph, relationship.identifier, relationship.definition.key);\n        }\n      }\n    }\n    return;\n  }\n\n  // remove this value from the inverse if required\n  if (existingState) {\n    removeFromInverse(graph, existingState, definition.inverseKey, op.record, isRemote);\n  }\n\n  // update value to the new value\n  relationship[prop] = op.value;\n  state.hasReceivedData = true;\n  state.isEmpty = op.value === null;\n  state.isStale = false;\n  state.hasFailedLoadAttempt = false;\n  if (op.value) {\n    if (definition.type !== op.value.type) {\n      // assert(\n      //   `The '<${definition.inverseType}>.${op.field}' relationship expects only '${definition.type}' records since it is not polymorphic. Received a Record of type '${op.value.type}'`,\n      //   definition.isPolymorphic\n      // );\n\n      // TODO this should now handle the deprecation warning if isPolymorphic is not set\n      // but the record does turn out to be polymorphic\n      // this should still assert if the user is relying on legacy inheritance/mixins to\n      // provide polymorphic behavior and has not yet added the polymorphic flags\n      {\n        assertPolymorphicType(relationship.identifier, definition, op.value, graph.store);\n      }\n      graph.registerPolymorphicType(definition.type, op.value.type);\n    }\n    addToInverse(graph, op.value, definition.inverseKey, op.record, isRemote);\n  }\n  if (isRemote) {\n    const {\n      localState,\n      remoteState\n    } = relationship;\n    if (localState && isNew(localState) && !remoteState) {\n      return;\n    }\n    // when localState does not match the new remoteState and\n    // localState === existingState then we had no local mutation\n    // and we can safely sync the new remoteState to local\n    if (localState !== remoteState && localState === existingState) {\n      relationship.localState = remoteState;\n      notifyChange(graph, relationship.identifier, relationship.definition.key);\n      // But when localState does not match the new remoteState and\n      // and localState !== existingState then we know we have a local mutation\n      // that has not been persisted yet.\n    } else {\n      if (localState !== remoteState && localState !== existingState && relationship.definition.resetOnRemoteUpdate !== false) {\n        relationship.localState = remoteState;\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`EmberData is changing the default semantics of updates to the remote state of relationships.\\n\\nThe following local state was cleared from the <${relationship.identifier.type}>.${relationship.definition.key} belongsTo relationship but will not be once this deprecation is resolved:\\n\\n\\t${localState ? 'Added: ' + localState.lid + '\\n\\t' : ''}${existingState ? 'Removed: ' + existingState.lid : ''}`, false, {\n          id: 'ember-data:deprecate-relationship-remote-update-clearing-local-state',\n          for: 'ember-data',\n          since: {\n            enabled: '5.3',\n            available: '5.3'\n          },\n          until: '6.0',\n          url: 'https://deprecations.emberjs.com/v5.x#ember-data-deprecate-relationship-remote-update-clearing-local-state'\n        }));\n        notifyChange(graph, relationship.identifier, relationship.definition.key);\n      }\n    }\n  } else {\n    notifyChange(graph, relationship.identifier, relationship.definition.key);\n  }\n}\nfunction _deprecatedCompare(newState, newMembers, prevState, prevSet, onAdd, onDel) {\n  const newLength = newState.length;\n  const prevLength = prevState.length;\n  const iterationLength = Math.max(newLength, prevLength);\n  let changed = newMembers.size !== prevSet.size;\n  const added = new Set();\n  const removed = new Set();\n  const duplicates = new Map();\n  const finalSet = new Set();\n  const finalState = [];\n  for (let i = 0, j = 0; i < iterationLength; i++) {\n    let adv = false;\n    let member;\n\n    // accumulate anything added\n    if (i < newLength) {\n      member = newState[i];\n      if (!finalSet.has(member)) {\n        finalState[j] = member;\n        finalSet.add(member);\n        adv = true;\n        if (!prevSet.has(member)) {\n          changed = true;\n          added.add(member);\n          onAdd(member);\n        }\n      } else {\n        let list = duplicates.get(member);\n        if (list === undefined) {\n          list = [];\n          duplicates.set(member, list);\n        }\n        list.push(i);\n      }\n    }\n\n    // accumulate anything removed\n    if (i < prevLength) {\n      const prevMember = prevState[i];\n\n      // detect reordering, adjusting index for duplicates\n      // j is always less than i and so if i < prevLength, j < prevLength\n      if (member !== prevState[j]) {\n        changed = true;\n      }\n      if (!newMembers.has(prevMember)) {\n        changed = true;\n        removed.add(prevMember);\n        onDel(prevMember);\n      }\n    } else if (adv && j < prevLength && member !== prevState[j]) {\n      changed = true;\n    }\n    if (adv) {\n      j++;\n    }\n  }\n  const diff = {\n    add: added,\n    del: removed,\n    finalState,\n    finalSet,\n    changed\n  };\n  return {\n    diff,\n    duplicates\n  };\n}\nfunction _compare(finalState, finalSet, prevState, prevSet, onAdd, onDel) {\n  const finalLength = finalState.length;\n  const prevLength = prevState.length;\n  const iterationLength = Math.max(finalLength, prevLength);\n  const equalLength = finalLength === prevLength;\n  let changed = finalSet.size !== prevSet.size;\n  const added = new Set();\n  const removed = new Set();\n  for (let i = 0; i < iterationLength; i++) {\n    let member;\n\n    // accumulate anything added\n    if (i < finalLength) {\n      member = finalState[i];\n      if (!prevSet.has(member)) {\n        changed = true;\n        added.add(member);\n        onAdd(member);\n      }\n    }\n\n    // accumulate anything removed\n    if (i < prevLength) {\n      const prevMember = prevState[i];\n\n      // detect reordering\n      if (equalLength && member !== prevMember) {\n        changed = true;\n      }\n      if (!finalSet.has(prevMember)) {\n        changed = true;\n        removed.add(prevMember);\n        onDel(prevMember);\n      }\n    }\n  }\n  return {\n    add: added,\n    del: removed,\n    finalState,\n    finalSet,\n    changed\n  };\n}\nfunction diffCollection(finalState, relationship, onAdd, onDel) {\n  const finalSet = new Set(finalState);\n  const {\n    remoteState,\n    remoteMembers\n  } = relationship;\n  {\n    if (finalState.length !== finalSet.size) {\n      const {\n        diff,\n        duplicates\n      } = _deprecatedCompare(finalState, finalSet, remoteState, remoteMembers, onAdd, onDel);\n      {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`Expected all entries in the relationship ${relationship.definition.type}:${relationship.definition.key} to be unique, see log for a list of duplicate entry indeces`, false, {\n          id: 'ember-data:deprecate-non-unique-relationship-entries',\n          for: 'ember-data',\n          until: '6.0',\n          since: {\n            available: '5.3',\n            enabled: '5.3'\n          }\n        })); // eslint-disable-next-line no-console\n        console.log(duplicates);\n      }\n      return diff;\n    }\n  }\n  return _compare(finalState, finalSet, remoteState, remoteMembers, onAdd, onDel);\n}\nfunction computeLocalState(storage) {\n  if (!storage.isDirty) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected localState to be present`);\n      }\n    })(Array.isArray(storage.localState));\n    return storage.localState;\n  }\n  const state = storage.remoteState.slice();\n  storage.removals?.forEach(v => {\n    const index = state.indexOf(v);\n    state.splice(index, 1);\n  });\n  storage.additions?.forEach(v => {\n    state.push(v);\n  });\n  storage.localState = state;\n  storage.isDirty = false;\n  return state;\n}\nfunction _addLocal(graph, record, relationship, value, index) {\n  const {\n    remoteMembers,\n    removals\n  } = relationship;\n  let additions = relationship.additions;\n  const hasPresence = remoteMembers.has(value) || additions?.has(value);\n  if (hasPresence && !removals?.has(value)) {\n    (test => {\n      if (!test) {\n        throw new Error(`Attempted to add the resource '${value.lid}' to the collection <${relationship.identifier.type}>.${relationship.definition.key} it was already in`);\n      }\n    })(hasPresence && !removals?.has(value));\n    return false;\n  }\n  if (removals?.has(value)) {\n    removals.delete(value);\n  } else {\n    if (!additions) {\n      additions = relationship.additions = new Set();\n    }\n    relationship.state.hasReceivedData = true;\n    additions.add(value);\n    const {\n      type\n    } = relationship.definition;\n    if (type !== value.type) {\n      {\n        assertPolymorphicType(record, relationship.definition, value, graph.store);\n      }\n      graph.registerPolymorphicType(value.type, type);\n    }\n  }\n\n  // if we have existing localState\n  // and we have an index\n  // apply the change, as this is more efficient\n  // than recomputing localState and\n  // it allows us to preserve local ordering\n  // to a small extend. Local ordering should not\n  // be relied upon as any remote change will blow it away\n  if (relationship.localState) {\n    if (index !== null) {\n      relationship.localState.splice(index, 0, value);\n    } else {\n      relationship.localState.push(value);\n    }\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Expected relationship to be dirty when adding a local mutation`);\n    }\n  })(relationship.localState || relationship.isDirty);\n  return true;\n}\nfunction _removeLocal(relationship, value) {\n  (test => {\n    if (!test) {\n      throw new Error(`expected an identifier to remove from the collection relationship`);\n    }\n  })(value);\n  const {\n    remoteMembers,\n    additions\n  } = relationship;\n  let removals = relationship.removals;\n  const hasPresence = remoteMembers.has(value) || additions?.has(value);\n  if (!hasPresence || removals?.has(value)) {\n    (test => {\n      if (!test) {\n        throw new Error(`Attempted to remove the resource '${value.lid}' from the collection <${relationship.identifier.type}>.${relationship.definition.key} but it was not present`);\n      }\n    })(!hasPresence || removals?.has(value));\n    return false;\n  }\n  if (additions?.has(value)) {\n    additions.delete(value);\n  } else {\n    if (!removals) {\n      removals = relationship.removals = new Set();\n    }\n    removals.add(value);\n  }\n\n  // if we have existing localState\n  // apply the change, as this is more efficient\n  // than recomputing localState and\n  // it allows us to preserve local ordering\n  // to a small extend. Local ordering should not\n  // be relied upon as any remote change will blow it away\n  if (relationship.localState) {\n    const index = relationship.localState.indexOf(value);\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot remove a resource that is not present`);\n      }\n    })(index !== -1);\n    relationship.localState.splice(index, 1);\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Expected relationship to be dirty when performing a local mutation`);\n    }\n  })(relationship.localState || relationship.isDirty);\n  return true;\n}\nfunction _removeRemote(relationship, value) {\n  (test => {\n    if (!test) {\n      throw new Error(`expected an identifier to remove from the collection relationship`);\n    }\n  })(value);\n  const {\n    remoteMembers,\n    additions,\n    removals,\n    remoteState\n  } = relationship;\n  (test => {\n    if (!test) {\n      throw new Error(`Cannot remove a resource that is not present`);\n    }\n  })(remoteMembers.has(value));\n  if (!remoteMembers.has(value)) {\n    return false;\n  }\n\n  // remove from remote state\n  remoteMembers.delete(value);\n  let index = remoteState.indexOf(value);\n  (test => {\n    if (!test) {\n      throw new Error(`Cannot remove a resource that is not present`);\n    }\n  })(index !== -1);\n  remoteState.splice(index, 1);\n\n  // remove from removals if present\n  if (removals?.has(value)) {\n    removals.delete(value);\n\n    // nothing more to do this was our state already\n    return false;\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Remote state indicated removal of a resource that was present only as a local mutation`);\n    }\n  })(!additions?.has(value));\n\n  // if we have existing localState\n  // and we have an index\n  // apply the change, as this is more efficient\n  // than recomputing localState and\n  // it allows us to preserve local ordering\n  // to a small extend. Local ordering should not\n  // be relied upon as any remote change will blow it away\n  if (relationship.localState) {\n    index = relationship.localState.indexOf(value);\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot remove a resource that is not present`);\n      }\n    })(index !== -1);\n    relationship.localState.splice(index, 1);\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Expected relationship to be dirty when performing a local mutation`);\n    }\n  })(relationship.localState || relationship.isDirty);\n  return true;\n}\nfunction rollbackRelationship(graph, identifier, field, relationship) {\n  if (isBelongsTo(relationship)) {\n    replaceRelatedRecord(graph, {\n      op: 'replaceRelatedRecord',\n      record: identifier,\n      field,\n      value: relationship.remoteState\n    }, false);\n  } else {\n    replaceRelatedRecords(graph, {\n      op: 'replaceRelatedRecords',\n      record: identifier,\n      field,\n      value: relationship.remoteState.slice()\n    }, false);\n  }\n}\nfunction createState() {\n  return {\n    hasReceivedData: false,\n    isEmpty: true,\n    isStale: false,\n    hasFailedLoadAttempt: false,\n    shouldForceReload: false,\n    hasDematerializedInverse: false\n  };\n}\nfunction createCollectionEdge(definition, identifier) {\n  return {\n    definition,\n    identifier,\n    state: createState(),\n    remoteMembers: new Set(),\n    remoteState: [],\n    additions: null,\n    removals: null,\n    meta: null,\n    links: null,\n    localState: null,\n    isDirty: true,\n    transactionRef: 0,\n    _diff: undefined\n  };\n}\nfunction legacyGetCollectionRelationshipData(source) {\n  const payload = {};\n  if (source.state.hasReceivedData) {\n    payload.data = computeLocalState(source);\n  }\n  if (source.links) {\n    payload.links = source.links;\n  }\n  if (source.meta) {\n    payload.meta = source.meta;\n  }\n  return payload;\n}\nfunction createImplicitEdge(definition, identifier) {\n  return {\n    definition,\n    identifier,\n    localMembers: new Set(),\n    remoteMembers: new Set()\n  };\n}\n\n/*\n * @module @ember-data/graph\n *\n * Stores the data for one side of a \"single\" resource relationship.\n *\n * @class ResourceEdge\n * @internal\n */\n\nfunction createResourceEdge(definition, identifier) {\n  return {\n    definition,\n    identifier,\n    state: createState(),\n    transactionRef: 0,\n    localState: null,\n    remoteState: null,\n    meta: null,\n    links: null\n  };\n}\nfunction legacyGetResourceRelationshipData(source) {\n  let data;\n  const payload = {};\n  if (source.localState) {\n    data = source.localState;\n  }\n  if (source.localState === null && source.state.hasReceivedData) {\n    data = null;\n  }\n  if (source.links) {\n    payload.links = source.links;\n  }\n  if (data !== undefined) {\n    payload.data = data;\n  }\n  if (source.meta) {\n    payload.meta = source.meta;\n  }\n  return payload;\n}\nfunction addToRelatedRecords(graph, op, isRemote) {\n  (test => {\n    if (!test) {\n      throw new Error(`Graph does not yet support updating the remote state of a relationship via the ${op.op} operation`);\n    }\n  })(!isRemote);\n  const {\n    record,\n    value,\n    index\n  } = op;\n  const relationship = graph.get(record, op.field);\n  (test => {\n    if (!test) {\n      throw new Error(`You can only '${op.op}' on a hasMany relationship. ${record.type}.${op.field} is a ${relationship.definition.kind}`);\n    }\n  })(isHasMany(relationship));\n  if (Array.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      addRelatedRecord(graph, relationship, record, value[i], index !== undefined ? index + i : index, isRemote);\n    }\n  } else {\n    addRelatedRecord(graph, relationship, record, value, index, isRemote);\n  }\n  notifyChange(graph, relationship.identifier, relationship.definition.key);\n}\nfunction addRelatedRecord(graph, relationship, record, value, index, isRemote) {\n  (test => {\n    if (!test) {\n      throw new Error(`expected an identifier to add to the collection relationship`);\n    }\n  })(value);\n  if (_addLocal(graph, record, relationship, value, index ?? null)) {\n    addToInverse(graph, value, relationship.definition.inverseKey, record, isRemote);\n  }\n}\nfunction mergeIdentifier(graph, op, relationships) {\n  Object.keys(relationships).forEach(key => {\n    const rel = relationships[key];\n    if (!rel) {\n      return;\n    }\n    mergeIdentifierForRelationship(graph, op, rel);\n  });\n}\nfunction mergeIdentifierForRelationship(graph, op, rel) {\n  rel.identifier = op.value;\n  forAllRelatedIdentifiers(rel, identifier => {\n    const inverse = graph.get(identifier, rel.definition.inverseKey);\n    mergeInRelationship(graph, inverse, op);\n  });\n}\nfunction mergeInRelationship(graph, rel, op) {\n  if (isBelongsTo(rel)) {\n    mergeBelongsTo(graph, rel, op);\n  } else if (isHasMany(rel)) {\n    mergeHasMany(graph, rel, op);\n  } else {\n    mergeImplicit(graph, rel, op);\n  }\n}\nfunction mergeBelongsTo(graph, rel, op) {\n  if (rel.remoteState === op.record) {\n    rel.remoteState = op.value;\n  }\n  if (rel.localState === op.record) {\n    rel.localState = op.value;\n    notifyChange(graph, rel.identifier, rel.definition.key);\n  }\n}\nfunction mergeHasMany(graph, rel, op) {\n  if (rel.remoteMembers.has(op.record)) {\n    rel.remoteMembers.delete(op.record);\n    rel.remoteMembers.add(op.value);\n    const index = rel.remoteState.indexOf(op.record);\n    rel.remoteState.splice(index, 1, op.value);\n    rel.isDirty = true;\n  }\n  if (rel.additions?.has(op.record)) {\n    rel.additions.delete(op.record);\n    rel.additions.add(op.value);\n    rel.isDirty = true;\n  }\n  if (rel.removals?.has(op.record)) {\n    rel.removals.delete(op.record);\n    rel.removals.add(op.value);\n    rel.isDirty = true;\n  }\n  if (rel.isDirty) {\n    notifyChange(graph, rel.identifier, rel.definition.key);\n  }\n}\nfunction mergeImplicit(graph, rel, op) {\n  if (rel.remoteMembers.has(op.record)) {\n    rel.remoteMembers.delete(op.record);\n    rel.remoteMembers.add(op.value);\n  }\n  if (rel.localMembers.has(op.record)) {\n    rel.localMembers.delete(op.record);\n    rel.localMembers.add(op.value);\n  }\n}\nfunction removeFromRelatedRecords(graph, op, isRemote) {\n  (test => {\n    if (!test) {\n      throw new Error(`Graph does not yet support updating the remote state of a relationship via the ${op.op} operation`);\n    }\n  })(!isRemote);\n  const {\n    record,\n    value\n  } = op;\n  const relationship = graph.get(record, op.field);\n  (test => {\n    if (!test) {\n      throw new Error(`You can only '${op.op}' on a hasMany relationship. ${record.type}.${op.field} is a ${relationship.definition.kind}`);\n    }\n  })(isHasMany(relationship));\n  // TODO we should potentially thread the index information through here\n  // when available as it may make it faster to remove from the local state\n  // when trying to patch more efficiently without blowing away the entire\n  // local state array\n  if (Array.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      removeRelatedRecord(graph, relationship, record, value[i], isRemote);\n    }\n  } else {\n    removeRelatedRecord(graph, relationship, record, value, isRemote);\n  }\n  notifyChange(graph, relationship.identifier, relationship.definition.key);\n}\nfunction removeRelatedRecord(graph, relationship, record, value, isRemote) {\n  (test => {\n    if (!test) {\n      throw new Error(`expected an identifier to remove from the collection relationship`);\n    }\n  })(value);\n  if (_removeLocal(relationship, value)) {\n    removeFromInverse(graph, value, relationship.definition.inverseKey, record, isRemote);\n  }\n}\n\n/*\n  This method normalizes a link to an \"links object\". If the passed link is\n  already an object it's returned without any modifications.\n\n  See http://jsonapi.org/format/#document-links for more information.\n*/\nfunction _normalizeLink(link) {\n  switch (typeof link) {\n    case 'object':\n      return link;\n    case 'string':\n      return {\n        href: link\n      };\n  }\n}\n\n/*\n    Updates the \"canonical\" or \"remote\" state of a relationship, replacing any existing\n    state and blowing away any local changes (excepting new records).\n*/\nfunction updateRelationshipOperation(graph, op) {\n  const relationship = graph.get(op.record, op.field);\n  (test => {\n    if (!test) {\n      throw new Error(`Cannot update an implicit relationship`);\n    }\n  })(isHasMany(relationship) || isBelongsTo(relationship));\n  const {\n    definition,\n    state,\n    identifier\n  } = relationship;\n  const {\n    isCollection\n  } = definition;\n  const payload = op.value;\n  let hasRelationshipDataProperty = false;\n  let hasUpdatedLink = false;\n  if (payload.meta) {\n    relationship.meta = payload.meta;\n  }\n  if (payload.data !== undefined) {\n    hasRelationshipDataProperty = true;\n    if (isCollection) {\n      // TODO deprecate this case. We\n      // have tests saying we support it.\n      if (payload.data === null) {\n        payload.data = [];\n      }\n      (test => {\n        if (!test) {\n          throw new Error(`Expected an array`);\n        }\n      })(Array.isArray(payload.data));\n      const cache = graph.store.identifierCache;\n      graph.update({\n        op: 'replaceRelatedRecords',\n        record: identifier,\n        field: op.field,\n        value: upgradeIdentifiers(payload.data, cache)\n      }, true);\n    } else {\n      graph.update({\n        op: 'replaceRelatedRecord',\n        record: identifier,\n        field: op.field,\n        value: payload.data ? graph.store.identifierCache.upgradeIdentifier(payload.data) : null\n      }, true);\n    }\n  } else if (definition.isAsync === false && !state.hasReceivedData) {\n    hasRelationshipDataProperty = true;\n    if (isCollection) {\n      graph.update({\n        op: 'replaceRelatedRecords',\n        record: identifier,\n        field: op.field,\n        value: []\n      }, true);\n    } else {\n      graph.update({\n        op: 'replaceRelatedRecord',\n        record: identifier,\n        field: op.field,\n        value: null\n      }, true);\n    }\n  }\n  if (payload.links) {\n    const originalLinks = relationship.links;\n    relationship.links = payload.links;\n    if (payload.links.related) {\n      const relatedLink = _normalizeLink(payload.links.related);\n      const currentLink = originalLinks && originalLinks.related ? _normalizeLink(originalLinks.related) : null;\n      const currentLinkHref = currentLink ? currentLink.href : null;\n      if (relatedLink && relatedLink.href && relatedLink.href !== currentLinkHref) {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`You pushed a record of type '${identifier.type}' with a relationship '${definition.key}' configured as 'async: false'. You've included a link but no primary data, this may be an error in your payload. EmberData will treat this relationship as known-to-be-empty.`, definition.isAsync || state.hasReceivedData, {\n          id: 'ds.store.push-link-for-sync-relationship'\n        }));\n        (test => {\n          if (!test) {\n            throw new Error(`You have pushed a record of type '${identifier.type}' with '${definition.key}' as a link, but the value of that link is not a string.`);\n          }\n        })(typeof relatedLink.href === 'string' || relatedLink.href === null);\n        hasUpdatedLink = true;\n      }\n    }\n  }\n\n  /*\n       Data being pushed into the relationship might contain only data or links,\n       or a combination of both.\n        IF contains only data\n       IF contains both links and data\n        state.isEmpty -> true if is empty array (has-many) or is null (belongs-to)\n        state.hasReceivedData -> true\n        hasDematerializedInverse -> false\n        state.isStale -> false\n        allInverseRecordsAreLoaded -> run-check-to-determine\n        IF contains only links\n        state.isStale -> true\n       */\n  relationship.state.hasFailedLoadAttempt = false;\n  if (hasRelationshipDataProperty) {\n    const relationshipIsEmpty = payload.data === null || Array.isArray(payload.data) && payload.data.length === 0;\n\n    // we don't need to notify here as the update op we pushed in above will notify once\n    // membership is in the correct state.\n    relationship.state.hasReceivedData = true;\n    relationship.state.isStale = false;\n    relationship.state.hasDematerializedInverse = false;\n    relationship.state.isEmpty = relationshipIsEmpty;\n  } else if (hasUpdatedLink) {\n    // only notify stale if we have not previously received membership data.\n    // within this same transaction\n    // this prevents refetching when only one side of the relationship in the\n    // payload contains the info while the other side contains just a link\n    // this only works when the side with just a link is a belongsTo, as we\n    // don't know if a hasMany has full information or not.\n    // see #7049 for context.\n    if (isCollection || !relationship.state.hasReceivedData || isStaleTransaction(relationship.transactionRef, graph._transaction)) {\n      relationship.state.isStale = true;\n      notifyChange(graph, relationship.identifier, relationship.definition.key);\n    } else {\n      relationship.state.isStale = false;\n    }\n  }\n}\nfunction isStaleTransaction(relationshipTransactionId, graphTransactionId) {\n  return relationshipTransactionId === 0 ||\n  // relationship has never notified\n  graphTransactionId === null ||\n  // we are not in a transaction\n  relationshipTransactionId < graphTransactionId // we are not part of the current transaction\n  ;\n}\nfunction upgradeIdentifiers(arr, cache) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = cache.upgradeIdentifier(arr[i]);\n  }\n  return arr;\n}\nconst Graphs = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.getOrSetGlobal)('Graphs', new Map());\n/*\n * Graph acts as the cache for relationship data. It allows for\n * us to ask about and update relationships for a given Identifier\n * without requiring other objects for that Identifier to be\n * instantiated (such as `RecordData` or a `Record`)\n *\n * This also allows for us to make more substantive changes to relationships\n * with increasingly minor alterations to other portions of the internals\n * over time.\n *\n * The graph is made up of nodes and edges. Each unique identifier gets\n * its own node, which is a dictionary with a list of that node's edges\n * (or connections) to other nodes. In `Model` terms, a node represents a\n * record instance, with each key (an edge) in the dictionary correlating\n * to either a `hasMany` or `belongsTo` field on that record instance.\n *\n * The value for each key, or `edge` is the identifier(s) the node relates\n * to in the graph from that key.\n */\nclass Graph {\n  constructor(store) {\n    this._definitionCache = Object.create(null);\n    this._metaCache = Object.create(null);\n    this._potentialPolymorphicTypes = Object.create(null);\n    this.identifiers = new Map();\n    this.store = store;\n    this.isDestroyed = false;\n    this._willSyncRemote = false;\n    this._willSyncLocal = false;\n    this._pushedUpdates = {\n      belongsTo: undefined,\n      hasMany: undefined,\n      deletions: []\n    };\n    this._updatedRelationships = new Set();\n    this._transaction = null;\n    this._removing = null;\n    this.silenceNotifications = false;\n  }\n  has(identifier, propertyName) {\n    const relationships = this.identifiers.get(identifier);\n    if (!relationships) {\n      return false;\n    }\n    return relationships[propertyName] !== undefined;\n  }\n  getDefinition(identifier, propertyName) {\n    let defs = this._metaCache[identifier.type];\n    let meta = defs?.[propertyName];\n    if (!meta) {\n      const info = /*#__NOINLINE__*/upgradeDefinition(this, identifier, propertyName);\n      (test => {\n        if (!test) {\n          throw new Error(`Could not determine relationship information for ${identifier.type}.${propertyName}`);\n        }\n      })(info !== null);\n\n      // if (info.rhs_definition?.kind === 'implicit') {\n      // we should possibly also do this\n      // but it would result in being extremely permissive for other relationships by accident\n      // this.registerPolymorphicType(info.rhs_baseModelName, identifier.type);\n      // }\n\n      meta = /*#__NOINLINE__*/isLHS(info, identifier.type, propertyName) ? info.lhs_definition : info.rhs_definition;\n      defs = this._metaCache[identifier.type] = defs || {};\n      defs[propertyName] = meta;\n    }\n    return meta;\n  }\n  get(identifier, propertyName) {\n    (test => {\n      if (!test) {\n        throw new Error(`expected propertyName`);\n      }\n    })(propertyName);\n    let relationships = this.identifiers.get(identifier);\n    if (!relationships) {\n      relationships = Object.create(null);\n      this.identifiers.set(identifier, relationships);\n    }\n    let relationship = relationships[propertyName];\n    if (!relationship) {\n      const meta = this.getDefinition(identifier, propertyName);\n      if (meta.kind === 'belongsTo') {\n        relationship = relationships[propertyName] = createResourceEdge(meta, identifier);\n      } else if (meta.kind === 'hasMany') {\n        relationship = relationships[propertyName] = createCollectionEdge(meta, identifier);\n      } else {\n        (test => {\n          if (!test) {\n            throw new Error(`Expected kind to be implicit`);\n          }\n        })(meta.kind === 'implicit' && meta.isImplicit === true);\n        relationship = relationships[propertyName] = createImplicitEdge(meta, identifier);\n      }\n    }\n    return relationship;\n  }\n  getData(identifier, propertyName) {\n    const relationship = this.get(identifier, propertyName);\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot getData() on an implicit relationship`);\n      }\n    })(!isImplicit(relationship));\n    if (isBelongsTo(relationship)) {\n      return legacyGetResourceRelationshipData(relationship);\n    }\n    return legacyGetCollectionRelationshipData(relationship);\n  }\n\n  /*\n   * Allows for the graph to dynamically discover polymorphic connections\n   * without needing to walk prototype chains.\n   *\n   * Used by edges when an added `type` does not match the expected `type`\n   * for that edge.\n   *\n   * Currently we assert before calling this. For a public API we will want\n   * to call out to the schema manager to ask if we should consider these\n   * types as equivalent for a given relationship.\n   */\n  registerPolymorphicType(type1, type2) {\n    const typeCache = this._potentialPolymorphicTypes;\n    let t1 = typeCache[type1];\n    if (!t1) {\n      t1 = typeCache[type1] = Object.create(null);\n    }\n    t1[type2] = true;\n    let t2 = typeCache[type2];\n    if (!t2) {\n      t2 = typeCache[type2] = Object.create(null);\n    }\n    t2[type1] = true;\n  }\n\n  /*\n   TODO move this comment somewhere else\n   implicit relationships are relationships which have not been declared but the inverse side exists on\n   another record somewhere\n    For example if there was:\n    ```app/models/comment.js\n   import Model, { attr } from '@ember-data/model';\n    export default class Comment extends Model {\n     @attr text;\n   }\n   ```\n    and there is also:\n    ```app/models/post.js\n   import Model, { attr, hasMany } from '@ember-data/model';\n    export default class Post extends Model {\n     @attr title;\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    Then we would have a implicit 'post' relationship for the comment record in order\n   to be do things like remove the comment from the post if the comment were to be deleted.\n  */\n\n  isReleasable(identifier) {\n    const relationships = this.identifiers.get(identifier);\n    if (!relationships) {\n      return true;\n    }\n    const keys = Object.keys(relationships);\n    for (let i = 0; i < keys.length; i++) {\n      const relationship = relationships[keys[i]];\n      // account for previously unloaded relationships\n      // typically from a prior deletion of a record that pointed to this one implicitly\n      if (relationship === undefined) {\n        continue;\n      }\n      (test => {\n        if (!test) {\n          throw new Error(`Expected a relationship`);\n        }\n      })(relationship);\n      if (relationship.definition.inverseIsAsync && !isNew(identifier)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  unload(identifier, silenceNotifications) {\n    const relationships = this.identifiers.get(identifier);\n    if (relationships) {\n      // cleans up the graph but retains some nodes\n      // to allow for rematerialization\n      Object.keys(relationships).forEach(key => {\n        const rel = relationships[key];\n        if (!rel) {\n          return;\n        }\n        /*#__NOINLINE__*/\n        destroyRelationship(this, rel, silenceNotifications);\n        if ( /*#__NOINLINE__*/isImplicit(rel)) {\n          // @ts-expect-error\n          relationships[key] = undefined;\n        }\n      });\n    }\n  }\n  _isDirty(identifier, field) {\n    const relationships = this.identifiers.get(identifier);\n    if (!relationships) {\n      return false;\n    }\n    const relationship = relationships[field];\n    if (!relationship) {\n      return false;\n    }\n    if (isBelongsTo(relationship)) {\n      return relationship.localState !== relationship.remoteState;\n    } else if (isHasMany(relationship)) {\n      const hasAdditions = relationship.additions !== null && relationship.additions.size > 0;\n      const hasRemovals = relationship.removals !== null && relationship.removals.size > 0;\n      return hasAdditions || hasRemovals || isReordered(relationship);\n    }\n    return false;\n  }\n  getChanged(identifier) {\n    const relationships = this.identifiers.get(identifier);\n    const changed = new Map();\n    if (!relationships) {\n      return changed;\n    }\n    const keys = Object.keys(relationships);\n    for (let i = 0; i < keys.length; i++) {\n      const field = keys[i];\n      const relationship = relationships[field];\n      if (!relationship) {\n        continue;\n      }\n      if (isBelongsTo(relationship)) {\n        if (relationship.localState !== relationship.remoteState) {\n          changed.set(field, {\n            kind: 'resource',\n            remoteState: relationship.remoteState,\n            localState: relationship.localState\n          });\n        }\n      } else if (isHasMany(relationship)) {\n        const hasAdditions = relationship.additions !== null && relationship.additions.size > 0;\n        const hasRemovals = relationship.removals !== null && relationship.removals.size > 0;\n        const reordered = isReordered(relationship);\n        if (hasAdditions || hasRemovals || reordered) {\n          changed.set(field, {\n            kind: 'collection',\n            additions: new Set(relationship.additions) || new Set(),\n            removals: new Set(relationship.removals) || new Set(),\n            remoteState: relationship.remoteState,\n            localState: legacyGetCollectionRelationshipData(relationship).data || [],\n            reordered\n          });\n        }\n      }\n    }\n    return changed;\n  }\n  hasChanged(identifier) {\n    const relationships = this.identifiers.get(identifier);\n    if (!relationships) {\n      return false;\n    }\n    const keys = Object.keys(relationships);\n    for (let i = 0; i < keys.length; i++) {\n      if (this._isDirty(identifier, keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n  rollback(identifier) {\n    const relationships = this.identifiers.get(identifier);\n    const changed = [];\n    if (!relationships) {\n      return changed;\n    }\n    const keys = Object.keys(relationships);\n    for (let i = 0; i < keys.length; i++) {\n      const field = keys[i];\n      const relationship = relationships[field];\n      if (!relationship) {\n        continue;\n      }\n      if (this._isDirty(identifier, field)) {\n        rollbackRelationship(this, identifier, field, relationship);\n        changed.push(field);\n      }\n    }\n    return changed;\n  }\n  remove(identifier) {\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot remove ${String(identifier)} while still removing ${String(this._removing)}`);\n      }\n    })(!this._removing);\n    this._removing = identifier;\n    this.unload(identifier);\n    this.identifiers.delete(identifier);\n    this._removing = null;\n  }\n\n  /*\n   * Remote state changes\n   */\n  push(op) {\n    if (op.op === 'deleteRecord') {\n      this._pushedUpdates.deletions.push(op);\n    } else {\n      const definition = this.getDefinition(op.record, op.field);\n      (test => {\n        if (!test) {\n          throw new Error(`Cannot push a remote update for an implicit relationship`);\n        }\n      })(definition.kind !== 'implicit');\n      addPending(this._pushedUpdates, definition, op);\n    }\n    if (!this._willSyncRemote) {\n      this._willSyncRemote = true;\n      getStore(this.store)._schedule('coalesce', () => this._flushRemoteQueue());\n    }\n  }\n\n  /*\n   * Local state changes\n   */\n\n  update(op, isRemote = false) {\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot update an implicit relationship`);\n      }\n    })(op.op === 'deleteRecord' || op.op === 'mergeIdentifiers' || !isImplicit(this.get(op.record, op.field)));\n    switch (op.op) {\n      case 'mergeIdentifiers':\n        {\n          const relationships = this.identifiers.get(op.record);\n          if (relationships) {\n            /*#__NOINLINE__*/mergeIdentifier(this, op, relationships);\n          }\n          break;\n        }\n      case 'updateRelationship':\n        (test => {\n          if (!test) {\n            throw new Error(`Can only perform the operation updateRelationship on remote state`);\n          }\n        })(isRemote);\n        {\n          // in debug, assert payload validity eagerly\n          // TODO add deprecations/assertion here for duplicates\n          assertValidRelationshipPayload(this, op);\n        }\n        /*#__NOINLINE__*/\n        updateRelationshipOperation(this, op);\n        break;\n      case 'deleteRecord':\n        {\n          (test => {\n            if (!test) {\n              throw new Error(`Can only perform the operation deleteRelationship on remote state`);\n            }\n          })(isRemote);\n          const identifier = op.record;\n          const relationships = this.identifiers.get(identifier);\n          if (relationships) {\n            Object.keys(relationships).forEach(key => {\n              const rel = relationships[key];\n              if (!rel) {\n                return;\n              }\n              // works together with the has check\n              // @ts-expect-error\n              relationships[key] = undefined;\n              /*#__NOINLINE__*/\n              removeCompletelyFromInverse(this, rel);\n            });\n            this.identifiers.delete(identifier);\n          }\n          break;\n        }\n      case 'replaceRelatedRecord':\n        /*#__NOINLINE__*/replaceRelatedRecord(this, op, isRemote);\n        break;\n      case 'addToRelatedRecords':\n        // we will lift this restriction once the cache is allowed to make remote updates directly\n        (test => {\n          if (!test) {\n            throw new Error(`Can only perform the operation addToRelatedRecords on local state`);\n          }\n        })(!isRemote);\n        /*#__NOINLINE__*/\n        addToRelatedRecords(this, op, isRemote);\n        break;\n      case 'removeFromRelatedRecords':\n        // we will lift this restriction once the cache is allowed to make remote updates directly\n        (test => {\n          if (!test) {\n            throw new Error(`Can only perform the operation removeFromRelatedRecords on local state`);\n          }\n        })(!isRemote);\n        /*#__NOINLINE__*/\n        removeFromRelatedRecords(this, op, isRemote);\n        break;\n      case 'replaceRelatedRecords':\n        /*#__NOINLINE__*/replaceRelatedRecords(this, op, isRemote);\n        break;\n      default:\n        (test => {\n          {\n            throw new Error(`No local relationship update operation exists for '${op.op}'`);\n          }\n        })();\n    }\n  }\n  _scheduleLocalSync(relationship) {\n    this._updatedRelationships.add(relationship);\n    if (!this._willSyncLocal) {\n      this._willSyncLocal = true;\n      getStore(this.store)._schedule('sync', () => this._flushLocalQueue());\n    }\n  }\n  _flushRemoteQueue() {\n    if (!this._willSyncRemote) {\n      return;\n    }\n    let transactionRef = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.peekTransient)('transactionRef') ?? 0;\n    this._transaction = ++transactionRef;\n    (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.setTransient)('transactionRef', transactionRef);\n    this._willSyncRemote = false;\n    const updates = this._pushedUpdates;\n    const {\n      deletions,\n      hasMany,\n      belongsTo\n    } = updates;\n    updates.deletions = [];\n    updates.hasMany = undefined;\n    updates.belongsTo = undefined;\n    for (let i = 0; i < deletions.length; i++) {\n      this.update(deletions[i], true);\n    }\n    if (hasMany) {\n      flushPending(this, hasMany);\n    }\n    if (belongsTo) {\n      flushPending(this, belongsTo);\n    }\n    this._transaction = null;\n  }\n  _addToTransaction(relationship) {\n    (test => {\n      if (!test) {\n        throw new Error(`expected a transaction`);\n      }\n    })(this._transaction !== null);\n    relationship.transactionRef = this._transaction;\n  }\n  _flushLocalQueue() {\n    if (!this._willSyncLocal) {\n      return;\n    }\n    if (this.silenceNotifications) {\n      this.silenceNotifications = false;\n      this._updatedRelationships = new Set();\n      return;\n    }\n    this._willSyncLocal = false;\n    const updated = this._updatedRelationships;\n    this._updatedRelationships = new Set();\n    updated.forEach(rel => notifyChange(this, rel.identifier, rel.definition.key));\n  }\n  destroy() {\n    Graphs.delete(this.store);\n    {\n      Graphs.delete(getStore(this.store));\n      if (Graphs.size) {\n        Graphs.forEach((_, key) => {\n          (test => {\n            if (!test) {\n              throw new Error(`Memory Leak Detected, likely the test or app instance previous to this was not torn down properly`);\n            }\n          })(!key.isDestroyed && !key.isDestroying);\n        });\n      }\n    }\n    this.identifiers.clear();\n    this.store = null;\n    this.isDestroyed = true;\n  }\n}\nfunction flushPending(graph, ops) {\n  ops.forEach(type => {\n    type.forEach(opList => {\n      flushPendingList(graph, opList);\n    });\n  });\n}\nfunction flushPendingList(graph, opList) {\n  for (let i = 0; i < opList.length; i++) {\n    graph.update(opList[i], true);\n  }\n}\n\n// Handle dematerialization for relationship `rel`.  In all cases, notify the\n// relationship of the dematerialization: this is done so the relationship can\n// notify its inverse which needs to update state\n//\n// If the inverse is sync, unloading this record is treated as a client-side\n// delete, so we remove the inverse records from this relationship to\n// disconnect the graph.  Because it's not async, we don't need to keep around\n// the identifier as an id-wrapper for references\nfunction destroyRelationship(graph, rel, silenceNotifications) {\n  if (isImplicit(rel)) {\n    if (graph.isReleasable(rel.identifier)) {\n      /*#__NOINLINE__*/removeCompletelyFromInverse(graph, rel);\n    }\n    return;\n  }\n  const {\n    identifier\n  } = rel;\n  const {\n    inverseKey\n  } = rel.definition;\n  if (!rel.definition.inverseIsImplicit) {\n    /*#__NOINLINE__*/forAllRelatedIdentifiers(rel, inverseIdentifer => /*#__NOINLINE__*/notifyInverseOfDematerialization(graph, inverseIdentifer, inverseKey, identifier, silenceNotifications));\n  }\n  if (!rel.definition.inverseIsImplicit && !rel.definition.inverseIsAsync) {\n    rel.state.isStale = true;\n    /*#__NOINLINE__*/\n    clearRelationship(rel);\n\n    // necessary to clear relationships in the ui from dematerialized records\n    // hasMany is managed by Model which calls `retreiveLatest` after\n    // dematerializing the resource-cache instance.\n    // but sync belongsTo requires this since they don't have a proxy to update.\n    // so we have to notify so it will \"update\" to null.\n    // we should discuss whether we still care about this, probably fine to just\n    // leave the ui relationship populated since the record is destroyed and\n    // internally we've fully cleaned up.\n    if (!rel.definition.isAsync && !silenceNotifications) {\n      /*#__NOINLINE__*/notifyChange(graph, rel.identifier, rel.definition.key);\n    }\n  }\n}\nfunction notifyInverseOfDematerialization(graph, inverseIdentifier, inverseKey, identifier, silenceNotifications) {\n  if (!graph.has(inverseIdentifier, inverseKey)) {\n    return;\n  }\n  const relationship = graph.get(inverseIdentifier, inverseKey);\n  (test => {\n    if (!test) {\n      throw new Error(`expected no implicit`);\n    }\n  })(!isImplicit(relationship));\n\n  // For remote members, it is possible that inverseRecordData has already been associated to\n  // to another record. For such cases, do not dematerialize the inverseRecordData\n  if (!isBelongsTo(relationship) || !relationship.localState || identifier === relationship.localState) {\n    /*#__NOINLINE__*/removeDematerializedInverse(graph, relationship, identifier, silenceNotifications);\n  }\n}\nfunction clearRelationship(relationship) {\n  if (isBelongsTo(relationship)) {\n    relationship.localState = null;\n    relationship.remoteState = null;\n    relationship.state.hasReceivedData = false;\n    relationship.state.isEmpty = true;\n  } else {\n    relationship.remoteMembers.clear();\n    relationship.remoteState = [];\n    relationship.additions = null;\n    relationship.removals = null;\n    relationship.localState = null;\n  }\n}\nfunction removeDematerializedInverse(graph, relationship, inverseIdentifier, silenceNotifications) {\n  if (isBelongsTo(relationship)) {\n    const localInverse = relationship.localState;\n    if (!relationship.definition.isAsync || localInverse && isNew(localInverse)) {\n      // unloading inverse of a sync relationship is treated as a client-side\n      // delete, so actually remove the models don't merely invalidate the cp\n      // cache.\n      // if the record being unloaded only exists on the client, we similarly\n      // treat it as a client side delete\n      if (relationship.localState === localInverse && localInverse !== null) {\n        relationship.localState = null;\n      }\n      if (relationship.remoteState === localInverse && localInverse !== null) {\n        relationship.remoteState = null;\n        relationship.state.hasReceivedData = true;\n        relationship.state.isEmpty = true;\n        if (relationship.localState && !isNew(relationship.localState)) {\n          relationship.localState = null;\n        }\n      }\n    } else {\n      relationship.state.hasDematerializedInverse = true;\n    }\n    if (!silenceNotifications) {\n      notifyChange(graph, relationship.identifier, relationship.definition.key);\n    }\n  } else {\n    if (!relationship.definition.isAsync || inverseIdentifier && isNew(inverseIdentifier)) {\n      // unloading inverse of a sync relationship is treated as a client-side\n      // delete, so actually remove the models don't merely invalidate the cp\n      // cache.\n      // if the record being unloaded only exists on the client, we similarly\n      // treat it as a client side delete\n      /*#__NOINLINE__*/\n      removeIdentifierCompletelyFromRelationship(graph, relationship, inverseIdentifier);\n    } else {\n      relationship.state.hasDematerializedInverse = true;\n    }\n    if (!silenceNotifications) {\n      notifyChange(graph, relationship.identifier, relationship.definition.key);\n    }\n  }\n}\nfunction removeCompletelyFromInverse(graph, relationship) {\n  const {\n    identifier\n  } = relationship;\n  const {\n    inverseKey\n  } = relationship.definition;\n  forAllRelatedIdentifiers(relationship, inverseIdentifier => {\n    if (graph.has(inverseIdentifier, inverseKey)) {\n      removeIdentifierCompletelyFromRelationship(graph, graph.get(inverseIdentifier, inverseKey), identifier);\n    }\n  });\n  if (isBelongsTo(relationship)) {\n    if (!relationship.definition.isAsync) {\n      clearRelationship(relationship);\n    }\n    relationship.localState = null;\n  } else if (isHasMany(relationship)) {\n    if (!relationship.definition.isAsync) {\n      clearRelationship(relationship);\n      notifyChange(graph, relationship.identifier, relationship.definition.key);\n    }\n  } else {\n    relationship.remoteMembers.clear();\n    relationship.localMembers.clear();\n  }\n}\nfunction addPending(cache, definition, op) {\n  const lc = cache[definition.kind] = cache[definition.kind] || new Map();\n  let lc2 = lc.get(definition.inverseType);\n  if (!lc2) {\n    lc2 = new Map();\n    lc.set(definition.inverseType, lc2);\n  }\n  let arr = lc2.get(op.field);\n  if (!arr) {\n    arr = [];\n    lc2.set(op.field, arr);\n  }\n  arr.push(op);\n}\nfunction isReordered(relationship) {\n  // if we are dirty we are never re-ordered because accessing\n  // the state would flush away any reordering.\n  if (relationship.isDirty) {\n    return false;\n  }\n  const {\n    remoteState,\n    localState,\n    additions,\n    removals\n  } = relationship;\n  (test => {\n    if (!test) {\n      throw new Error(`Expected localSate`);\n    }\n  })(localState);\n  for (let i = 0, j = 0; i < remoteState.length; i++) {\n    const member = remoteState[i];\n    const localMember = localState[j];\n    if (member !== localMember) {\n      if (removals && removals.has(member)) {\n        // dont increment j because we want to skip this\n        continue;\n      }\n      if (additions && additions.has(localMember)) {\n        // increment j to skip this localMember\n        // decrement i to repeat this remoteMember\n        j++;\n        i--;\n        continue;\n      }\n      return true;\n    }\n\n    // if we made it here, increment j\n    j++;\n  }\n  return false;\n}\n\n/**\n * <p align=\"center\">\n  <img\n    class=\"project-logo\"\n    src=\"https://raw.githubusercontent.com/emberjs/data/4612c9354e4c54d53327ec2cf21955075ce21294/ember-data-logo-light.svg#gh-light-mode-only\"\n    alt=\"EmberData\"\n    width=\"240px\"\n    title=\"EmberData\"\n    />\n</p>\n\n<p align=\"center\">Provides a performance tuned normalized graph for intelligently managing relationships between resources based on identity</p>\n\nWhile this Graph is abstract, it currently is a private implementation required as a peer-dependency by the [JSON:API Cache Implementation](https://github.com/emberjs/data/tree/main/packages/json-api).\n\nWe intend to make this Graph public API after some additional iteration during the 5.x timeframe, until then all APIs should be considered experimental and unstable, not fit for direct application or 3rd party library usage.\n\n## Installation\n\nInstall using your javascript package manager of choice. For instance with [pnpm](https://pnpm.io/)\n\n```no-highlight\npnpm add @ember-data/graph\n```\n\n  @module @ember-data/graph\n  @main @ember-data/graph\n*/\n\nfunction isStore(maybeStore) {\n  return maybeStore._instanceCache !== undefined;\n}\nfunction getWrapper(store) {\n  return isStore(store) ? store._instanceCache._storeWrapper : store;\n}\nfunction peekGraph(store) {\n  return Graphs.get(getWrapper(store));\n}\nfunction graphFor(store) {\n  const wrapper = getWrapper(store);\n  let graph = Graphs.get(wrapper);\n  if (!graph) {\n    graph = new Graph(wrapper);\n    Graphs.set(wrapper, graph);\n    getStore(wrapper)._graph = graph;\n    {\n      if (getStore(wrapper).isDestroying) {\n        throw new Error(`Memory Leak Detected During Teardown`);\n      }\n    }\n  }\n  return graph;\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string_y53mhzgz7knwb4cijzkjieaw7q/node_modules/@ember-data/graph/dist/-private.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+json-api@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+reques_gwiu2ba5z3yh6bes2g5cgd2tge/node_modules/@ember-data/json-api/dist/index.js":
/*!********************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+json-api@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+reques_gwiu2ba5z3yh6bes2g5cgd2tge/node_modules/@ember-data/json-api/dist/index.js ***!
  \********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ JSONAPICache)\n/* harmony export */ });\n/* harmony import */ var _ember_data_graph_private__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember-data/graph/-private */ \"../../.pnpm/@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string_y53mhzgz7knwb4cijzkjieaw7q/node_modules/@ember-data/graph/dist/-private.js\");\n\n/**\n * @module @ember-data/json-api\n */\n\nfunction isImplicit(relationship) {\n  return relationship.definition.isImplicit;\n}\nfunction upgradeCapabilities(obj) {}\nconst EMPTY_ITERATOR = {\n  iterator() {\n    return {\n      next() {\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    };\n  }\n};\nfunction makeCache() {\n  return {\n    id: null,\n    remoteAttrs: null,\n    localAttrs: null,\n    defaultAttrs: null,\n    inflightAttrs: null,\n    changes: null,\n    errors: null,\n    isNew: false,\n    isDeleted: false,\n    isDeletionCommitted: false\n  };\n}\n\n/**\n  A JSON:API Cache implementation.\n\n  What cache the store uses is configurable. Using a different\n  implementation can be achieved by implementing the store's\n  createCache hook.\n\n  This is the cache implementation used by `ember-data`.\n\n  ```js\n  import Cache from '@ember-data/json-api';\n  import Store from '@ember-data/store';\n\n  export default class extends Store {\n    createCache(wrapper) {\n      return new Cache(wrapper);\n    }\n  }\n  ```\n\n  @class Cache\n  @public\n */\n\nclass JSONAPICache {\n  /**\n   * The Cache Version that this implementation implements.\n   *\n   * @type {'2'}\n   * @public\n   * @property version\n   */\n\n  constructor(storeWrapper) {\n    this.version = '2';\n    this._capabilities = storeWrapper;\n    this.__cache = new Map();\n    this.__graph = (0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_0__.graphFor)(storeWrapper);\n    this.__destroyedCache = new Map();\n    this.__documents = new Map();\n  }\n\n  // Cache Management\n  // ================\n\n  /**\n   * Cache the response to a request\n   *\n   * Implements `Cache.put`.\n   *\n   * Expects a StructuredDocument whose `content` member is a JsonApiDocument.\n   *\n   * ```js\n   * cache.put({\n   *   request: { url: 'https://api.example.com/v1/user/1' },\n   *   content: {\n   *     data: {\n   *       type: 'user',\n   *       id: '1',\n   *       attributes: {\n   *         name: 'Chris'\n   *       }\n   *     }\n   *   }\n   * })\n   * ```\n   *\n   * > **Note**\n   * > The nested `content` and `data` members are not a mistake. This is because\n   * > there are two separate concepts involved here, the `StructuredDocument` which contains\n   * > the context of a given Request that has been issued with the returned contents as its\n   * > `content` property, and a `JSON:API Document` which is the json contents returned by\n   * > this endpoint and which uses its `data` property to signify which resources are the\n   * > primary resources associated with the request.\n   *\n   * StructuredDocument's with urls will be cached as full documents with\n   * associated resource membership order and contents preserved but linked\n   * into the cache.\n   *\n   * @method put\n   * @param {StructuredDocument} doc\n   * @return {ResourceDocument}\n   * @public\n   */\n\n  put(doc) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a JSON:API Document as the content provided to the cache, received ${typeof doc.content}`);\n      }\n    })(doc instanceof Error || typeof doc.content === 'object' && doc.content !== null);\n    if (isErrorDocument(doc)) {\n      return this._putDocument(doc, undefined, undefined);\n    } else if (isMetaDocument(doc)) {\n      return this._putDocument(doc, undefined, undefined);\n    }\n    const jsonApiDoc = doc.content;\n    const included = jsonApiDoc.included;\n    let i, length;\n    const {\n      identifierCache\n    } = this._capabilities;\n    if (included) {\n      for (i = 0, length = included.length; i < length; i++) {\n        included[i] = putOne(this, identifierCache, included[i]);\n      }\n    }\n    if (Array.isArray(jsonApiDoc.data)) {\n      length = jsonApiDoc.data.length;\n      const identifiers = [];\n      for (i = 0; i < length; i++) {\n        identifiers.push(putOne(this, identifierCache, jsonApiDoc.data[i]));\n      }\n      return this._putDocument(doc, identifiers, included);\n    }\n    if (jsonApiDoc.data === null) {\n      return this._putDocument(doc, null, included);\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a resource object in the 'data' property in the document provided to the cache, but was ${typeof jsonApiDoc.data}`);\n      }\n    })(typeof jsonApiDoc.data === 'object');\n    const identifier = putOne(this, identifierCache, jsonApiDoc.data);\n    return this._putDocument(doc, identifier, included);\n  }\n  _putDocument(doc, data, included) {\n    // @ts-expect-error narrowing within is just horrible  in TS :/\n    const resourceDocument = isErrorDocument(doc) ? fromStructuredError(doc) : fromBaseDocument(doc);\n    if (data !== undefined) {\n      resourceDocument.data = data;\n    }\n    if (included !== undefined) {\n      (test => {\n        if (!test) {\n          throw new Error(`There should not be included data on an Error document`);\n        }\n      })(!isErrorDocument(doc));\n      (test => {\n        if (!test) {\n          throw new Error(`There should not be included data on a Meta document`);\n        }\n      })(!isMetaDocument(doc));\n      resourceDocument.included = included;\n    }\n    const request = doc.request;\n    const identifier = request ? this._capabilities.identifierCache.getOrCreateDocumentIdentifier(request) : null;\n    if (identifier) {\n      resourceDocument.lid = identifier.lid;\n\n      // @ts-expect-error\n      doc.content = resourceDocument;\n      const hasExisting = this.__documents.has(identifier.lid);\n      this.__documents.set(identifier.lid, doc);\n      this._capabilities.notifyChange(identifier, hasExisting ? 'updated' : 'added');\n    }\n    return resourceDocument;\n  }\n\n  /**\n   * Update the \"remote\" or \"canonical\" (persisted) state of the Cache\n   * by merging new information into the existing state.\n   *\n   * Note: currently the only valid resource operation is a MergeOperation\n   * which occurs when a collision of identifiers is detected.\n   *\n   * @method patch\n   * @public\n   * @param {Operation} op the operation to perform\n   * @return {void}\n   */\n  patch(op) {\n    if (op.op === 'mergeIdentifiers') {\n      const cache = this.__cache.get(op.record);\n      if (cache) {\n        this.__cache.set(op.value, cache);\n        this.__cache.delete(op.record);\n      }\n      this.__graph.update(op, true);\n    }\n  }\n\n  /**\n   * Update the \"local\" or \"current\" (unpersisted) state of the Cache\n   *\n   * @method mutate\n   * @param {Mutation} mutation\n   * @return {void}\n   * @public\n   */\n  mutate(mutation) {\n    this.__graph.update(mutation, false);\n  }\n\n  /**\n   * Peek resource data from the Cache.\n   *\n   * In development, if the return value\n   * is JSON the return value\n   * will be deep-cloned and deep-frozen\n   * to prevent mutation thereby enforcing cache\n   * Immutability.\n   *\n   * This form of peek is useful for implementations\n   * that want to feed raw-data from cache to the UI\n   * or which want to interact with a blob of data\n   * directly from the presentation cache.\n   *\n   * An implementation might want to do this because\n   * de-referencing records which read from their own\n   * blob is generally safer because the record does\n   * not require retainining connections to the Store\n   * and Cache to present data on a per-field basis.\n   *\n   * This generally takes the place of `getAttr` as\n   * an API and may even take the place of `getRelationship`\n   * depending on implementation specifics, though this\n   * latter usage is less recommended due to the advantages\n   * of the Graph handling necessary entanglements and\n   * notifications for relational data.\n   *\n   * @method peek\n   * @public\n   * @param {StableRecordIdentifier | StableDocumentIdentifier} identifier\n   * @return {ResourceDocument | ResourceObject | null} the known resource data\n   */\n\n  peek(identifier) {\n    if ('type' in identifier) {\n      const peeked = this.__safePeek(identifier, false);\n      if (!peeked) {\n        return null;\n      }\n      const {\n        type,\n        id,\n        lid\n      } = identifier;\n      const attributes = Object.assign({}, peeked.remoteAttrs, peeked.inflightAttrs, peeked.localAttrs);\n      const relationships = {};\n      const rels = this.__graph.identifiers.get(identifier);\n      if (rels) {\n        Object.keys(rels).forEach(key => {\n          const rel = rels[key];\n          if (rel.definition.isImplicit) {\n            return;\n          } else {\n            relationships[key] = this.__graph.getData(identifier, key);\n          }\n        });\n      }\n      upgradeCapabilities(this._capabilities);\n      const store = this._capabilities._store;\n      const attrs = this._capabilities.schema.fields(identifier);\n      attrs.forEach((attr, key) => {\n        if (key in attributes && attributes[key] !== undefined) {\n          return;\n        }\n        const defaultValue = getDefaultValue(attr, identifier, store);\n        if (defaultValue !== undefined) {\n          attributes[key] = defaultValue;\n        }\n      });\n      return {\n        type,\n        id,\n        lid,\n        attributes,\n        relationships\n      };\n    }\n    const document = this.peekRequest(identifier);\n    if (document) {\n      if ('content' in document) return document.content;\n    }\n    return null;\n  }\n\n  /**\n   * Peek the Cache for the existing request data associated with\n   * a cacheable request.\n   *\n   * This is effectively the reverse of `put` for a request in\n   * that it will return the the request, response, and content\n   * whereas `peek` will return just the `content`.\n   *\n   * @method peekRequest\n   * @param {StableDocumentIdentifier}\n   * @return {StructuredDocument<ResourceDocument> | null}\n   * @public\n   */\n  peekRequest(identifier) {\n    return this.__documents.get(identifier.lid) || null;\n  }\n\n  /**\n   * Push resource data from a remote source into the cache for this identifier\n   *\n   * @method upsert\n   * @public\n   * @param identifier\n   * @param data\n   * @param hasRecord\n   * @return {void | string[]} if `hasRecord` is true then calculated key changes should be returned\n   */\n  upsert(identifier, data, calculateChanges) {\n    let changedKeys;\n    const peeked = this.__safePeek(identifier, false);\n    const existed = !!peeked;\n    const cached = peeked || this._createCache(identifier);\n    const isLoading = /*#__NOINLINE__*/_isLoading(peeked, this._capabilities, identifier) || !recordIsLoaded(peeked);\n    const isUpdate = /*#__NOINLINE__*/!_isEmpty(peeked) && !isLoading;\n    if (cached.isNew) {\n      cached.isNew = false;\n      this._capabilities.notifyChange(identifier, 'identity');\n      this._capabilities.notifyChange(identifier, 'state');\n    }\n    if (calculateChanges) {\n      changedKeys = existed ? calculateChangedKeys(cached, data.attributes) : Object.keys(data.attributes || {});\n    }\n    cached.remoteAttrs = Object.assign(cached.remoteAttrs || Object.create(null), data.attributes);\n    if (cached.localAttrs) {\n      if (patchLocalAttributes(cached)) {\n        this._capabilities.notifyChange(identifier, 'state');\n      }\n    }\n    if (!isUpdate) {\n      this._capabilities.notifyChange(identifier, 'added');\n    }\n    if (data.id) {\n      cached.id = data.id;\n    }\n    if (data.relationships) {\n      setupRelationships(this.__graph, this._capabilities, identifier, data);\n    }\n    if (changedKeys && changedKeys.length) {\n      notifyAttributes(this._capabilities, identifier, changedKeys);\n    }\n    return changedKeys;\n  }\n\n  // Cache Forking Support\n  // =====================\n\n  /**\n   * Create a fork of the cache from the current state.\n   *\n   * Applications should typically not call this method themselves,\n   * preferring instead to fork at the Store level, which will\n   * utilize this method to fork the cache.\n   *\n   * @method fork\n   * @internal\n   * @return Promise<Cache>\n   */\n  fork() {\n    throw new Error(`Not Implemented`);\n  }\n\n  /**\n   * Merge a fork back into a parent Cache.\n   *\n   * Applications should typically not call this method themselves,\n   * preferring instead to merge at the Store level, which will\n   * utilize this method to merge the caches.\n   *\n   * @method merge\n   * @param {Cache} cache\n   * @public\n   * @return Promise<void>\n   */\n  merge(cache) {\n    throw new Error(`Not Implemented`);\n  }\n\n  /**\n   * Generate the list of changes applied to all\n   * record in the store.\n   *\n   * Each individual resource or document that has\n   * been mutated should be described as an individual\n   * `Change` entry in the returned array.\n   *\n   * A `Change` is described by an object containing up to\n   * three properties: (1) the `identifier` of the entity that\n   * changed; (2) the `op` code of that change being one of\n   * `upsert` or `remove`, and if the op is `upsert` a `patch`\n   * containing the data to merge into the cache for the given\n   * entity.\n   *\n   * This `patch` is opaque to the Store but should be understood\n   * by the Cache and may expect to be utilized by an Adapter\n   * when generating data during a `save` operation.\n   *\n   * It is generally recommended that the `patch` contain only\n   * the updated state, ignoring fields that are unchanged\n   *\n   * ```ts\n   * interface Change {\n   *  identifier: StableRecordIdentifier | StableDocumentIdentifier;\n   *  op: 'upsert' | 'remove';\n   *  patch?: unknown;\n   * }\n   * ```\n   *\n   * @method diff\n   * @public\n   */\n  diff() {\n    throw new Error(`Not Implemented`);\n  }\n\n  // SSR Support\n  // ===========\n\n  /**\n   * Serialize the entire contents of the Cache into a Stream\n   * which may be fed back into a new instance of the same Cache\n   * via `cache.hydrate`.\n   *\n   * @method dump\n   * @return {Promise<ReadableStream>}\n   * @public\n   */\n  dump() {\n    throw new Error(`Not Implemented`);\n  }\n\n  /**\n   * hydrate a Cache from a Stream with content previously serialized\n   * from another instance of the same Cache, resolving when hydration\n   * is complete.\n   *\n   * This method should expect to be called both in the context of restoring\n   * the Cache during application rehydration after SSR **AND** at unknown\n   * times during the lifetime of an already booted application when it is\n   * desired to bulk-load additional information into the cache. This latter\n   * behavior supports optimizing pre/fetching of data for route transitions\n   * via data-only SSR modes.\n   *\n   * @method hydrate\n   * @param {ReadableStream} stream\n   * @return {Promise<void>}\n   * @public\n   */\n  hydrate(stream) {\n    throw new Error('Not Implemented');\n  }\n\n  // Resource Support\n  // ================\n\n  /**\n   * [LIFECYCLE] Signal to the cache that a new record has been instantiated on the client\n   *\n   * It returns properties from options that should be set on the record during the create\n   * process. This return value behavior is deprecated.\n   *\n   * @method clientDidCreate\n   * @public\n   * @param identifier\n   * @param createArgs\n   */\n  clientDidCreate(identifier, options) {\n    const cached = this._createCache(identifier);\n    cached.isNew = true;\n    const createOptions = {};\n    if (options !== undefined) {\n      const storeWrapper = this._capabilities;\n      const fields = storeWrapper.schema.fields(identifier);\n      const graph = this.__graph;\n      const propertyNames = Object.keys(options);\n      for (let i = 0; i < propertyNames.length; i++) {\n        const name = propertyNames[i];\n        const propertyValue = options[name];\n        if (name === 'id') {\n          continue;\n        }\n        const fieldType = fields.get(name);\n        const kind = fieldType !== undefined ? 'kind' in fieldType ? fieldType.kind : 'attribute' : null;\n        let relationship;\n        switch (kind) {\n          case 'attribute':\n            this.setAttr(identifier, name, propertyValue);\n            createOptions[name] = propertyValue;\n            break;\n          case 'belongsTo':\n            this.mutate({\n              op: 'replaceRelatedRecord',\n              field: name,\n              record: identifier,\n              value: propertyValue\n            });\n            relationship = graph.get(identifier, name);\n            relationship.state.hasReceivedData = true;\n            relationship.state.isEmpty = false;\n            break;\n          case 'hasMany':\n            this.mutate({\n              op: 'replaceRelatedRecords',\n              field: name,\n              record: identifier,\n              value: propertyValue\n            });\n            relationship = graph.get(identifier, name);\n            relationship.state.hasReceivedData = true;\n            relationship.state.isEmpty = false;\n            break;\n          default:\n            // reflect back (pass-thru) unknown properties\n            createOptions[name] = propertyValue;\n        }\n      }\n    }\n    this._capabilities.notifyChange(identifier, 'added');\n    return createOptions;\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * will be part of a save transaction.\n   *\n   * @method willCommit\n   * @public\n   * @param identifier\n   */\n  willCommit(identifier) {\n    const cached = this.__peek(identifier, false);\n\n    /*\n      if we have multiple saves in flight at once then\n      we have information loss no matter what. This\n      attempts to lose the least information.\n       If we were to clear inflightAttrs, previous requests\n      would not be able to use it during their didCommit.\n       If we upsert inflightattrs, previous requests incorrectly\n      see more recent inflight changes as part of their own and\n      will incorrectly mark the new state as the correct remote state.\n       We choose this latter behavior to avoid accidentally removing\n      earlier changes.\n       If apps do not want this behavior they can either\n      - chain save requests serially vs allowing concurrent saves\n      - move to using a request handler that caches the inflight state\n        on a per-request basis\n      - change their save requests to only send a \"PATCH\" instead of a \"PUT\"\n        so that only latest changes are involved in each request, and then also\n        ensure that the API or their handler reflects only those changes back\n        for upsert into the cache.\n    */\n    if (cached.inflightAttrs) {\n      if (cached.localAttrs) {\n        Object.assign(cached.inflightAttrs, cached.localAttrs);\n      }\n    } else {\n      cached.inflightAttrs = cached.localAttrs;\n    }\n    cached.localAttrs = null;\n    {}\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * was successfully updated as part of a save transaction.\n   *\n   * @method didCommit\n   * @public\n   * @param identifier\n   * @param data\n   */\n  didCommit(committedIdentifier, result) {\n    const payload = result.content;\n    const operation = result.request.op;\n    const data = payload && payload.data;\n    if (!data) {\n      (test => {\n        if (!test) {\n          throw new Error(`Your ${committedIdentifier.type} record was saved to the server, but the response does not have an id and no id has been set client side. Records must have ids. Please update the server response to provide an id in the response or generate the id on the client side either before saving the record or while normalizing the response.`);\n        }\n      })(committedIdentifier.id);\n    }\n    const {\n      identifierCache\n    } = this._capabilities;\n    const existingId = committedIdentifier.id;\n    const identifier = operation !== 'deleteRecord' && data ? identifierCache.updateRecordIdentifier(committedIdentifier, data) : committedIdentifier;\n    const cached = this.__peek(identifier, false);\n    if (cached.isDeleted) {\n      this.__graph.push({\n        op: 'deleteRecord',\n        record: identifier,\n        isNew: false\n      });\n      cached.isDeletionCommitted = true;\n      this._capabilities.notifyChange(identifier, 'removed');\n      // TODO @runspired should we early exit here?\n    }\n    {\n      if (cached.isNew && !identifier.id && (typeof data?.id !== 'string' || data.id.length > 0)) {\n        const error = new Error(`Expected an id ${String(identifier)} in response ${JSON.stringify(data)}`);\n        //@ts-expect-error\n        error.isAdapterError = true;\n        //@ts-expect-error\n        error.code = 'InvalidError';\n        throw error;\n      }\n    }\n    cached.isNew = false;\n    let newCanonicalAttributes;\n    if (data) {\n      if (data.id && !cached.id) {\n        cached.id = data.id;\n      }\n      if (identifier === committedIdentifier && identifier.id !== existingId) {\n        this._capabilities.notifyChange(identifier, 'identity');\n      }\n      (test => {\n        if (!test) {\n          throw new Error(`Expected the ID received for the primary '${identifier.type}' resource being saved to match the current id '${cached.id}' but received '${identifier.id}'.`);\n        }\n      })(identifier.id === cached.id);\n      if (data.relationships) {\n        {}\n        setupRelationships(this.__graph, this._capabilities, identifier, data);\n      }\n      newCanonicalAttributes = data.attributes;\n    }\n    const changedKeys = calculateChangedKeys(cached, newCanonicalAttributes);\n    cached.remoteAttrs = Object.assign(cached.remoteAttrs || Object.create(null), cached.inflightAttrs, newCanonicalAttributes);\n    cached.inflightAttrs = null;\n    patchLocalAttributes(cached);\n    if (cached.errors) {\n      cached.errors = null;\n      this._capabilities.notifyChange(identifier, 'errors');\n    }\n    notifyAttributes(this._capabilities, identifier, changedKeys);\n    this._capabilities.notifyChange(identifier, 'state');\n    const included = payload && payload.included;\n    if (included) {\n      for (let i = 0, length = included.length; i < length; i++) {\n        putOne(this, identifierCache, included[i]);\n      }\n    }\n    return {\n      data: identifier\n    };\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * was update via a save transaction failed.\n   *\n   * @method commitWasRejected\n   * @public\n   * @param identifier\n   * @param errors\n   */\n  commitWasRejected(identifier, errors) {\n    const cached = this.__peek(identifier, false);\n    if (cached.inflightAttrs) {\n      const keys = Object.keys(cached.inflightAttrs);\n      if (keys.length > 0) {\n        const attrs = cached.localAttrs = cached.localAttrs || Object.create(null);\n        for (let i = 0; i < keys.length; i++) {\n          if (attrs[keys[i]] === undefined) {\n            attrs[keys[i]] = cached.inflightAttrs[keys[i]];\n          }\n        }\n      }\n      cached.inflightAttrs = null;\n    }\n    if (errors) {\n      cached.errors = errors;\n    }\n    this._capabilities.notifyChange(identifier, 'errors');\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that all data for a resource\n   * should be cleared.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method unloadRecord\n   * @public\n   * @param identifier\n   */\n  unloadRecord(identifier) {\n    const storeWrapper = this._capabilities;\n    // TODO this is necessary because\n    // we maintain memebership inside InstanceCache\n    // for peekAll, so even though we haven't created\n    // any data we think this exists.\n    // TODO can we eliminate that membership now?\n    if (!this.__cache.has(identifier)) {\n      // the graph may still need to unload identity\n      (0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_0__.peekGraph)(storeWrapper)?.unload(identifier);\n      return;\n    }\n    const removeFromRecordArray = !this.isDeletionCommitted(identifier);\n    let removed = false;\n    const cached = this.__peek(identifier, false);\n    if (cached.isNew) {\n      (0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_0__.peekGraph)(storeWrapper)?.push({\n        op: 'deleteRecord',\n        record: identifier,\n        isNew: true\n      });\n    } else {\n      (0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_0__.peekGraph)(storeWrapper)?.unload(identifier);\n    }\n\n    // effectively clearing these is ensuring that\n    // we report as `isEmpty` during teardown.\n    cached.localAttrs = null;\n    cached.remoteAttrs = null;\n    cached.defaultAttrs = null;\n    cached.inflightAttrs = null;\n    const relatedIdentifiers = _allRelatedIdentifiers(storeWrapper, identifier);\n    if (areAllModelsUnloaded(storeWrapper, relatedIdentifiers)) {\n      for (let i = 0; i < relatedIdentifiers.length; ++i) {\n        const relatedIdentifier = relatedIdentifiers[i];\n        storeWrapper.notifyChange(relatedIdentifier, 'removed');\n        removed = true;\n        storeWrapper.disconnectRecord(relatedIdentifier);\n      }\n    }\n    this.__cache.delete(identifier);\n    this.__destroyedCache.set(identifier, cached);\n\n    /*\n     * The destroy cache is a hack to prevent applications\n     * from blowing up during teardown. Accessing state\n     * on a destroyed record is not safe, but historically\n     * was possible due to a combination of teardown timing\n     * and retention of cached state directly on the\n     * record itself.\n     *\n     * Once we have deprecated accessing state on a destroyed\n     * instance we may remove this. The timing isn't a huge deal\n     * as momentarily retaining the objects outside the bounds\n     * of a test won't cause issues.\n     */\n    if (this.__destroyedCache.size === 1) {\n      // TODO do we still need this?\n      setTimeout(() => {\n        this.__destroyedCache.clear();\n      }, 100);\n    }\n    if (!removed && removeFromRecordArray) {\n      storeWrapper.notifyChange(identifier, 'removed');\n    }\n  }\n\n  // Granular Resource Data APIs\n  // ===========================\n\n  /**\n   * Retrieve the data for an attribute from the cache\n   *\n   * @method getAttr\n   * @public\n   * @param identifier\n   * @param field\n   * @return {unknown}\n   */\n  getAttr(identifier, attr) {\n    const isSimplePath = !Array.isArray(attr) || attr.length === 1;\n    if (Array.isArray(attr) && attr.length === 1) {\n      attr = attr[0];\n    }\n    if (isSimplePath) {\n      const attribute = attr;\n      const cached = this.__peek(identifier, true);\n      if (cached.localAttrs && attribute in cached.localAttrs) {\n        return cached.localAttrs[attribute];\n      } else if (cached.inflightAttrs && attribute in cached.inflightAttrs) {\n        return cached.inflightAttrs[attribute];\n      } else if (cached.remoteAttrs && attribute in cached.remoteAttrs) {\n        return cached.remoteAttrs[attribute];\n      } else if (cached.defaultAttrs && attribute in cached.defaultAttrs) {\n        return cached.defaultAttrs[attribute];\n      } else {\n        const attrSchema = this._capabilities.schema.fields(identifier).get(attribute);\n        upgradeCapabilities(this._capabilities);\n        const defaultValue = getDefaultValue(attrSchema, identifier, this._capabilities._store);\n        if (schemaHasLegacyDefaultValueFn(attrSchema)) {\n          cached.defaultAttrs = cached.defaultAttrs || Object.create(null);\n          cached.defaultAttrs[attribute] = defaultValue;\n        }\n        return defaultValue;\n      }\n    }\n\n    // TODO @runspired consider whether we need a defaultValue cache in SchemaRecord\n    // like we do for the simple case above.\n    const path = attr;\n    const cached = this.__peek(identifier, true);\n    const basePath = path[0];\n    let current = cached.localAttrs && basePath in cached.localAttrs ? cached.localAttrs[basePath] : undefined;\n    if (current === undefined) {\n      current = cached.inflightAttrs && basePath in cached.inflightAttrs ? cached.inflightAttrs[basePath] : undefined;\n    }\n    if (current === undefined) {\n      current = cached.remoteAttrs && basePath in cached.remoteAttrs ? cached.remoteAttrs[basePath] : undefined;\n    }\n    if (current === undefined) {\n      return undefined;\n    }\n    for (let i = 1; i < path.length; i++) {\n      current = current[path[i]];\n      if (current === undefined) {\n        return undefined;\n      }\n    }\n    return current;\n  }\n\n  /**\n   * Mutate the data for an attribute in the cache\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method setAttr\n   * @public\n   * @param identifier\n   * @param field\n   * @param value\n   */\n  setAttr(identifier, attr, value) {\n    // this assert works to ensure we have a non-empty string and/or a non-empty array\n    (test => {\n      if (!test) {\n        throw new Error('setAttr must receive at least one attribute path');\n      }\n    })(attr.length > 0);\n    const isSimplePath = !Array.isArray(attr) || attr.length === 1;\n    if (Array.isArray(attr) && attr.length === 1) {\n      attr = attr[0];\n    }\n    if (isSimplePath) {\n      const cached = this.__peek(identifier, false);\n      const currentAttr = attr;\n      const existing = cached.inflightAttrs && currentAttr in cached.inflightAttrs ? cached.inflightAttrs[currentAttr] : cached.remoteAttrs && currentAttr in cached.remoteAttrs ? cached.remoteAttrs[currentAttr] : undefined;\n      if (existing !== value) {\n        cached.localAttrs = cached.localAttrs || Object.create(null);\n        cached.localAttrs[currentAttr] = value;\n        cached.changes = cached.changes || Object.create(null);\n        cached.changes[currentAttr] = [existing, value];\n      } else if (cached.localAttrs) {\n        delete cached.localAttrs[currentAttr];\n        delete cached.changes[currentAttr];\n      }\n      if (cached.defaultAttrs && currentAttr in cached.defaultAttrs) {\n        delete cached.defaultAttrs[currentAttr];\n      }\n      this._capabilities.notifyChange(identifier, 'attributes', currentAttr);\n      return;\n    }\n\n    // get current value from local else inflight else remote\n    // structuredClone current if not local (or always?)\n    // traverse path, update value at path\n    // notify change at first link in path.\n    // second pass optimization is change notifyChange signature to take an array path\n\n    // guaranteed that we have path of at least 2 in length\n    const path = attr;\n    const cached = this.__peek(identifier, false);\n\n    // get existing cache record for base path\n    const basePath = path[0];\n    const existing = cached.inflightAttrs && basePath in cached.inflightAttrs ? cached.inflightAttrs[basePath] : cached.remoteAttrs && basePath in cached.remoteAttrs ? cached.remoteAttrs[basePath] : undefined;\n    let existingAttr;\n    if (existing) {\n      existingAttr = existing[path[1]];\n      for (let i = 2; i < path.length; i++) {\n        // the specific change we're making is at path[length - 1]\n        existingAttr = existingAttr[path[i]];\n      }\n    }\n    if (existingAttr !== value) {\n      cached.localAttrs = cached.localAttrs || Object.create(null);\n      cached.localAttrs[basePath] = cached.localAttrs[basePath] || structuredClone(existing);\n      cached.changes = cached.changes || Object.create(null);\n      let currentLocal = cached.localAttrs[basePath];\n      let nextLink = 1;\n      while (nextLink < path.length - 1) {\n        currentLocal = currentLocal[path[nextLink++]];\n      }\n      currentLocal[path[nextLink]] = value;\n      cached.changes[basePath] = [existing, cached.localAttrs[basePath]];\n\n      // since we initiaize the value as basePath as a clone of the value at the remote basePath\n      // then in theory we can use JSON.stringify to compare the two values as key insertion order\n      // ought to be consistent.\n      // we try/catch this because users have a habit of doing \"Bad Things\"TM wherein the cache contains\n      // stateful values that are not JSON serializable correctly such as Dates.\n      // in the case that we error, we fallback to not removing the local value\n      // so that any changes we don't understand are preserved. Thse objects would then sometimes\n      // appear to be dirty unnecessarily, and for folks that open an issue we can guide them\n      // to make their cache data less stateful.\n    } else if (cached.localAttrs) {\n      try {\n        if (!existing) {\n          return;\n        }\n        const existingStr = JSON.stringify(existing);\n        const newStr = JSON.stringify(cached.localAttrs[basePath]);\n        if (existingStr !== newStr) {\n          delete cached.localAttrs[basePath];\n          delete cached.changes[basePath];\n        }\n      } catch (e) {\n        // noop\n      }\n    }\n    this._capabilities.notifyChange(identifier, 'attributes', basePath);\n  }\n\n  /**\n   * Query the cache for the changed attributes of a resource.\n   *\n   * @method changedAttrs\n   * @public\n   * @param identifier\n   * @return {ChangedAttributesHash} { <field>: [<old>, <new>] }\n   */\n  changedAttrs(identifier) {\n    // TODO freeze in dev\n    return this.__peek(identifier, false).changes || Object.create(null);\n  }\n\n  /**\n   * Query the cache for whether any mutated attributes exist\n   *\n   * @method hasChangedAttrs\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  hasChangedAttrs(identifier) {\n    const cached = this.__peek(identifier, true);\n    return cached.inflightAttrs !== null && Object.keys(cached.inflightAttrs).length > 0 || cached.localAttrs !== null && Object.keys(cached.localAttrs).length > 0;\n  }\n\n  /**\n   * Tell the cache to discard any uncommitted mutations to attributes\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method rollbackAttrs\n   * @public\n   * @param identifier\n   * @return {string[]} the names of fields that were restored\n   */\n  rollbackAttrs(identifier) {\n    const cached = this.__peek(identifier, false);\n    let dirtyKeys;\n    cached.isDeleted = false;\n    if (cached.localAttrs !== null) {\n      dirtyKeys = Object.keys(cached.localAttrs);\n      cached.localAttrs = null;\n      cached.changes = null;\n    }\n    if (cached.isNew) {\n      // > Note: Graph removal handled by unloadRecord\n      cached.isDeletionCommitted = true;\n      cached.isDeleted = true;\n      cached.isNew = false;\n    }\n    cached.inflightAttrs = null;\n    cached.defaultAttrs = null;\n    if (cached.errors) {\n      cached.errors = null;\n      this._capabilities.notifyChange(identifier, 'errors');\n    }\n    this._capabilities.notifyChange(identifier, 'state');\n    if (dirtyKeys && dirtyKeys.length) {\n      notifyAttributes(this._capabilities, identifier, dirtyKeys);\n    }\n    return dirtyKeys || [];\n  }\n\n  /**\n     * Query the cache for the changes to relationships of a resource.\n     *\n     * Returns a map of relationship names to RelationshipDiff objects.\n     *\n     * ```ts\n     * type RelationshipDiff =\n    | {\n        kind: 'collection';\n        remoteState: StableRecordIdentifier[];\n        additions: Set<StableRecordIdentifier>;\n        removals: Set<StableRecordIdentifier>;\n        localState: StableRecordIdentifier[];\n        reordered: boolean;\n      }\n    | {\n        kind: 'resource';\n        remoteState: StableRecordIdentifier | null;\n        localState: StableRecordIdentifier | null;\n      };\n      ```\n     *\n     * @method changedRelationships\n     * @public\n     * @param {StableRecordIdentifier} identifier\n     * @return {Map<string, RelationshipDiff>}\n     */\n  changedRelationships(identifier) {\n    return this.__graph.getChanged(identifier);\n  }\n\n  /**\n   * Query the cache for whether any mutated relationships exist\n   *\n   * @method hasChangedRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {boolean}\n   */\n  hasChangedRelationships(identifier) {\n    return this.__graph.hasChanged(identifier);\n  }\n\n  /**\n   * Tell the cache to discard any uncommitted mutations to relationships.\n   *\n   * This will also discard the change on any appropriate inverses.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method rollbackRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {string[]} the names of relationships that were restored\n   */\n  rollbackRelationships(identifier) {\n    upgradeCapabilities(this._capabilities);\n    let result;\n    this._capabilities._store._join(() => {\n      result = this.__graph.rollback(identifier);\n    });\n    return result;\n  }\n\n  /**\n   * Query the cache for the current state of a relationship property\n   *\n   * @method getRelationship\n   * @public\n   * @param identifier\n   * @param field\n   * @return resource relationship object\n   */\n  getRelationship(identifier, field) {\n    return this.__graph.getData(identifier, field);\n  }\n\n  // Resource State\n  // ===============\n\n  /**\n   * Update the cache state for the given resource to be marked\n   * as locally deleted, or remove such a mark.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method setIsDeleted\n   * @public\n   * @param identifier\n   * @param isDeleted {boolean}\n   */\n  setIsDeleted(identifier, isDeleted) {\n    const cached = this.__peek(identifier, false);\n    cached.isDeleted = isDeleted;\n    // > Note: Graph removal for isNew handled by unloadRecord\n    this._capabilities.notifyChange(identifier, 'state');\n  }\n\n  /**\n   * Query the cache for any validation errors applicable to the given resource.\n   *\n   * @method getErrors\n   * @public\n   * @param identifier\n   * @return {JsonApiError[]}\n   */\n  getErrors(identifier) {\n    return this.__peek(identifier, true).errors || [];\n  }\n\n  /**\n   * Query the cache for whether a given resource has any available data\n   *\n   * @method isEmpty\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isEmpty(identifier) {\n    const cached = this.__safePeek(identifier, true);\n    return cached ? cached.remoteAttrs === null && cached.inflightAttrs === null && cached.localAttrs === null : true;\n  }\n\n  /**\n   * Query the cache for whether a given resource was created locally and not\n   * yet persisted.\n   *\n   * @method isNew\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isNew(identifier) {\n    // TODO can we assert here?\n    return this.__safePeek(identifier, true)?.isNew || false;\n  }\n\n  /**\n   * Query the cache for whether a given resource is marked as deleted (but not\n   * necessarily persisted yet).\n   *\n   * @method isDeleted\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isDeleted(identifier) {\n    // TODO can we assert here?\n    return this.__safePeek(identifier, true)?.isDeleted || false;\n  }\n\n  /**\n   * Query the cache for whether a given resource has been deleted and that deletion\n   * has also been persisted.\n   *\n   * @method isDeletionCommitted\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isDeletionCommitted(identifier) {\n    // TODO can we assert here?\n    return this.__safePeek(identifier, true)?.isDeletionCommitted || false;\n  }\n\n  /**\n   * Private method used to populate an entry for the identifier\n   *\n   * @method _createCache\n   * @internal\n   * @param {StableRecordIdentifier} identifier\n   * @return {CachedResource}\n   */\n  _createCache(identifier) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected no resource data to yet exist in the cache`);\n      }\n    })(!this.__cache.has(identifier));\n    const cache = makeCache();\n    this.__cache.set(identifier, cache);\n    return cache;\n  }\n\n  /**\n   * Peek whether we have cached resource data matching the identifier\n   * without asserting if the resource data is missing.\n   *\n   * @method __safePeek\n   * @param {StableRecordIdentifier} identifier\n   * @param {Boolean} allowDestroyed\n   * @internal\n   * @return {CachedResource | undefined}\n   */\n  __safePeek(identifier, allowDestroyed) {\n    let resource = this.__cache.get(identifier);\n    if (!resource && allowDestroyed) {\n      resource = this.__destroyedCache.get(identifier);\n    }\n    return resource;\n  }\n\n  /**\n   * Peek whether we have cached resource data matching the identifier\n   * Asserts if the resource data is missing.\n   *\n   * @method __Peek\n   * @param {StableRecordIdentifier} identifier\n   * @param {Boolean} allowDestroyed\n   * @internal\n   * @return {CachedResource}\n   */\n  __peek(identifier, allowDestroyed) {\n    const resource = this.__safePeek(identifier, allowDestroyed);\n    (test => {\n      if (!test) {\n        throw new Error(`Expected Cache to have a resource entry for the identifier ${String(identifier)} but none was found`);\n      }\n    })(resource);\n    return resource;\n  }\n}\nfunction areAllModelsUnloaded(wrapper, identifiers) {\n  for (let i = 0; i < identifiers.length; ++i) {\n    const identifier = identifiers[i];\n    if (wrapper.hasRecord(identifier)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getLocalState(rel) {\n  if ((0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_0__.isBelongsTo)(rel)) {\n    return rel.localState ? [rel.localState] : [];\n  }\n  return rel.additions ? [...rel.additions] : [];\n}\nfunction getRemoteState(rel) {\n  if ((0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_0__.isBelongsTo)(rel)) {\n    return rel.remoteState ? [rel.remoteState] : [];\n  }\n  return rel.remoteState;\n}\nfunction schemaHasLegacyDefaultValueFn(schema) {\n  if (!schema) return false;\n  return hasLegacyDefaultValueFn(schema.options);\n}\nfunction hasLegacyDefaultValueFn(options) {\n  return !!options && typeof options.defaultValue === 'function';\n}\nfunction getDefaultValue(schema, identifier, store) {\n  const options = schema?.options;\n  if (!schema || !options && !schema.type) {\n    return;\n  }\n  if (schema.kind !== 'attribute' && schema.kind !== 'field') {\n    return;\n  }\n\n  // legacy support for defaultValues that are functions\n  if (hasLegacyDefaultValueFn(options)) {\n    // If anyone opens an issue for args not working right, we'll restore + deprecate it via a Proxy\n    // that lazily instantiates the record. We don't want to provide any args here\n    // because in a non @ember-data/model world they don't make sense.\n    return options.defaultValue();\n    // legacy support for defaultValues that are primitives\n  } else if (options && 'defaultValue' in options) {\n    const defaultValue = options.defaultValue;\n    (test => {\n      if (!test) {\n        throw new Error(`Non primitive defaultValues are not supported because they are shared between all instances. If you would like to use a complex object as a default value please provide a function that returns the complex object.`);\n      }\n    })(typeof defaultValue !== 'object' || defaultValue === null);\n    return defaultValue;\n\n    // new style transforms\n  } else if (schema.kind !== 'attribute' && schema.type) {\n    const transform = store.schema.transformation(schema);\n    if (transform?.defaultValue) {\n      return transform.defaultValue(options || null, identifier);\n    }\n  }\n}\nfunction notifyAttributes(storeWrapper, identifier, keys) {\n  if (!keys) {\n    storeWrapper.notifyChange(identifier, 'attributes');\n    return;\n  }\n  for (let i = 0; i < keys.length; i++) {\n    storeWrapper.notifyChange(identifier, 'attributes', keys[i]);\n  }\n}\n\n/*\n      TODO @deprecate IGOR DAVID\n      There seems to be a potential bug here, where we will return keys that are not\n      in the schema\n  */\nfunction calculateChangedKeys(cached, updates) {\n  const changedKeys = [];\n  if (updates) {\n    const keys = Object.keys(updates);\n    const length = keys.length;\n    const localAttrs = cached.localAttrs;\n    const original = Object.assign(Object.create(null), cached.remoteAttrs, cached.inflightAttrs);\n    for (let i = 0; i < length; i++) {\n      const key = keys[i];\n      const value = updates[key];\n\n      // A value in localAttrs means the user has a local change to\n      // this attribute. We never override this value when merging\n      // updates from the backend so we should not sent a change\n      // notification if the server value differs from the original.\n      if (localAttrs && localAttrs[key] !== undefined) {\n        continue;\n      }\n      if (original[key] !== value) {\n        changedKeys.push(key);\n      }\n    }\n  }\n  return changedKeys;\n}\nfunction cacheIsEmpty(cached) {\n  return !cached || cached.remoteAttrs === null && cached.inflightAttrs === null && cached.localAttrs === null;\n}\nfunction _isEmpty(peeked) {\n  if (!peeked) {\n    return true;\n  }\n  const isNew = peeked.isNew;\n  const isDeleted = peeked.isDeleted;\n  const isEmpty = cacheIsEmpty(peeked);\n  return (!isNew || isDeleted) && isEmpty;\n}\nfunction recordIsLoaded(cached, filterDeleted = false) {\n  if (!cached) {\n    return false;\n  }\n  const isNew = cached.isNew;\n  const isEmpty = cacheIsEmpty(cached);\n\n  // if we are new we must consider ourselves loaded\n  if (isNew) {\n    return !cached.isDeleted;\n  }\n  // even if we have a past request, if we are now empty we are not loaded\n  // typically this is true after an unloadRecord call\n\n  // if we are not empty, not new && we have a fulfilled request then we are loaded\n  // we should consider allowing for something to be loaded that is simply \"not empty\".\n  // which is how RecordState currently handles this case; however, RecordState is buggy\n  // in that it does not account for unloading.\n  return filterDeleted && cached.isDeletionCommitted ? false : !isEmpty;\n}\nfunction _isLoading(peeked, capabilities, identifier) {\n  // TODO refactor things such that the cache is not required to know\n  // about isLoading\n  const req = capabilities._store.getRequestStateService();\n  // const fulfilled = req.getLastRequestForRecord(identifier);\n  const isLoaded = recordIsLoaded(peeked);\n  return !isLoaded &&\n  // fulfilled === null &&\n  req.getPendingRequestsForRecord(identifier).some(r => r.type === 'query');\n}\nfunction setupRelationships(graph, capabilities, identifier, data) {\n  // TODO @runspired iterating by definitions instead of by payload keys\n  // allows relationship payloads to be ignored silently if no relationship\n  // definition exists. Ensure there's a test for this and then consider\n  // moving this to an assertion. This check should possibly live in the graph.\n  const fields = capabilities.schema.fields(identifier);\n  for (const [name, field] of fields) {\n    if (!isRelationship(field)) continue;\n    const relationshipData = data.relationships[name];\n    if (!relationshipData) continue;\n    graph.push({\n      op: 'updateRelationship',\n      record: identifier,\n      field: name,\n      value: relationshipData\n    });\n  }\n}\nconst RelationshipKinds = new Set(['hasMany', 'belongsTo', 'resource', 'collection']);\nfunction isRelationship(field) {\n  return RelationshipKinds.has(field.kind);\n}\nfunction patchLocalAttributes(cached) {\n  const {\n    localAttrs,\n    remoteAttrs,\n    inflightAttrs,\n    defaultAttrs,\n    changes\n  } = cached;\n  if (!localAttrs) {\n    cached.changes = null;\n    return false;\n  }\n  let hasAppliedPatch = false;\n  const mutatedKeys = Object.keys(localAttrs);\n  for (let i = 0, length = mutatedKeys.length; i < length; i++) {\n    const attr = mutatedKeys[i];\n    const existing = inflightAttrs && attr in inflightAttrs ? inflightAttrs[attr] : remoteAttrs && attr in remoteAttrs ? remoteAttrs[attr] : undefined;\n    if (existing === localAttrs[attr]) {\n      hasAppliedPatch = true;\n      delete localAttrs[attr];\n      delete changes[attr];\n    }\n    if (defaultAttrs && attr in defaultAttrs) {\n      delete defaultAttrs[attr];\n    }\n  }\n  return hasAppliedPatch;\n}\nfunction putOne(cache, identifiers, resource) {\n  (test => {\n    if (!test) {\n      throw new Error(`You must include an 'id' for the resource data ${resource.type}`);\n    }\n  })(resource.id !== null && resource.id !== undefined && resource.id !== '');\n  (test => {\n    if (!test) {\n      throw new Error(`Missing Resource Type: received resource data with a type '${resource.type}' but no schema could be found with that name.`);\n    }\n  })(cache._capabilities.schema.hasResource(resource));\n  let identifier = identifiers.peekRecordIdentifier(resource);\n  if (identifier) {\n    identifier = identifiers.updateRecordIdentifier(identifier, resource);\n  } else {\n    identifier = identifiers.getOrCreateRecordIdentifier(resource);\n  }\n  cache.upsert(identifier, resource, cache._capabilities.hasRecord(identifier));\n  // even if the identifier was not \"existing\" before, it is now\n  return identifier;\n}\n\n/*\n    Iterates over the set of internal models reachable from `this` across exactly one\n    relationship.\n  */\nfunction _directlyRelatedIdentifiersIterable(storeWrapper, originating) {\n  const graph = (0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_0__.peekGraph)(storeWrapper);\n  const initializedRelationships = graph?.identifiers.get(originating);\n  if (!initializedRelationships) {\n    return EMPTY_ITERATOR;\n  }\n  const initializedRelationshipsArr = [];\n  Object.keys(initializedRelationships).forEach(key => {\n    const rel = initializedRelationships[key];\n    if (rel && !isImplicit(rel)) {\n      initializedRelationshipsArr.push(rel);\n    }\n  });\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  const findNext = () => {\n    while (i < initializedRelationshipsArr.length) {\n      while (j < 2) {\n        const relatedIdentifiers = j === 0 ? getLocalState(initializedRelationshipsArr[i]) : getRemoteState(initializedRelationshipsArr[i]);\n        while (k < relatedIdentifiers.length) {\n          const relatedIdentifier = relatedIdentifiers[k++];\n          if (relatedIdentifier !== null) {\n            return relatedIdentifier;\n          }\n        }\n        k = 0;\n        j++;\n      }\n      j = 0;\n      i++;\n    }\n    return undefined;\n  };\n  return {\n    iterator() {\n      return {\n        next: () => {\n          const value = findNext();\n          return {\n            value,\n            done: value === undefined\n          };\n        }\n      };\n    }\n  };\n}\n\n/*\n      Computes the set of Identifiers reachable from this Identifier.\n\n      Reachability is determined over the relationship graph (ie a graph where\n      nodes are identifiers and edges are belongs to or has many\n      relationships).\n\n      Returns an array including `this` and all identifiers reachable\n      from `this.identifier`.\n    */\nfunction _allRelatedIdentifiers(storeWrapper, originating) {\n  const array = [];\n  const queue = [];\n  const seen = new Set();\n  queue.push(originating);\n  while (queue.length > 0) {\n    const identifier = queue.shift();\n    array.push(identifier);\n    seen.add(identifier);\n    const iterator = _directlyRelatedIdentifiersIterable(storeWrapper, originating).iterator();\n    for (let obj = iterator.next(); !obj.done; obj = iterator.next()) {\n      const relatedIdentifier = obj.value;\n      if (relatedIdentifier && !seen.has(relatedIdentifier)) {\n        seen.add(relatedIdentifier);\n        queue.push(relatedIdentifier);\n      }\n    }\n  }\n  return array;\n}\nfunction isMetaDocument(doc) {\n  return !(doc instanceof Error) && doc.content && !('data' in doc.content) && !('included' in doc.content) && 'meta' in doc.content;\n}\nfunction isErrorDocument(doc) {\n  return doc instanceof Error;\n}\nfunction fromBaseDocument(doc) {\n  const resourceDocument = {};\n  const jsonApiDoc = doc.content;\n  if (jsonApiDoc) {\n    copyLinksAndMeta(resourceDocument, jsonApiDoc);\n  }\n  return resourceDocument;\n}\nfunction fromStructuredError(doc) {\n  const errorDoc = {};\n  if (doc.content) {\n    copyLinksAndMeta(errorDoc, doc.content);\n    if ('errors' in doc.content) {\n      errorDoc.errors = doc.content.errors;\n    } else if (typeof doc.error === 'object' && 'errors' in doc.error) {\n      errorDoc.errors = doc.error.errors;\n    } else {\n      errorDoc.errors = [{\n        title: doc.message\n      }];\n    }\n  }\n  return errorDoc;\n}\nfunction copyLinksAndMeta(target, source) {\n  if ('links' in source) {\n    target.links = source.links;\n  }\n  if ('meta' in source) {\n    target.meta = source.meta;\n  }\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+json-api@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+reques_gwiu2ba5z3yh6bes2g5cgd2tge/node_modules/@ember-data/json-api/dist/index.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/-private-DVN28hvw.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/-private-DVN28hvw.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   F: () => (/* binding */ FetchManager),\n/* harmony export */   S: () => (/* binding */ SaveOp),\n/* harmony export */   a: () => (/* binding */ assertIdentifierHasId),\n/* harmony export */   b: () => (/* binding */ SnapshotRecordArray),\n/* harmony export */   c: () => (/* binding */ Snapshot),\n/* harmony export */   i: () => (/* binding */ iterateData),\n/* harmony export */   n: () => (/* binding */ normalizeResponseHelper),\n/* harmony export */   p: () => (/* binding */ payloadIsNotBlank),\n/* harmony export */   u: () => (/* binding */ upgradeStore)\n/* harmony export */ });\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember-data/store/-private */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/-private.js\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _ember_data_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/request */ \"../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/index.js\");\n/* harmony import */ var _warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @warp-drive/core-types/-private */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js\");\n/* harmony import */ var _embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2 */ \"../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2.js\");\n\n\n\n\n\n/**\n  @module @ember-data/legacy-compat\n*/\n\n/**\n  SnapshotRecordArray is not directly instantiable.\n  Instances are provided to consuming application's\n  adapters for certain `findAll` requests.\n\n  @class SnapshotRecordArray\n  @public\n*/\n\nclass SnapshotRecordArray {\n  /**\n    SnapshotRecordArray is not directly instantiable.\n    Instances are provided to consuming application's\n    adapters and serializers for certain requests.\n     @method constructor\n    @private\n    @constructor\n    @param {Store} store\n    @param {string} type\n    @param options\n   */\n  constructor(store, type, options = {}) {\n    this.__store = store;\n    /**\n      An array of snapshots\n      @private\n      @property _snapshots\n      @type {Array}\n    */\n    this._snapshots = null;\n\n    /**\n    The modelName of the underlying records for the snapshots in the array, as a Model\n    @property modelName\n    @public\n    @type {Model}\n    */\n    this.modelName = type;\n\n    /**\n      A hash of adapter options passed into the store method for this request.\n       Example\n       ```app/adapters/post.js\n      import MyCustomAdapter from './custom-adapter';\n       export default class PostAdapter extends MyCustomAdapter {\n        findAll(store, type, sinceToken, snapshotRecordArray) {\n          if (snapshotRecordArray.adapterOptions.subscribe) {\n            // ...\n          }\n          // ...\n        }\n      }\n      ```\n       @property adapterOptions\n      @public\n      @type {Object}\n    */\n    this.adapterOptions = options.adapterOptions;\n\n    /**\n      The relationships to include for this request.\n       Example\n       ```app/adapters/application.js\n      import Adapter from '@ember-data/adapter';\n       export default class ApplicationAdapter extends Adapter {\n        findAll(store, type, snapshotRecordArray) {\n          let url = `/${type.modelName}?include=${encodeURIComponent(snapshotRecordArray.include)}`;\n           return fetch(url).then((response) => response.json())\n        }\n      }\n      ```\n       @property include\n      @public\n      @type {String|Array}\n    */\n    this.include = options.include;\n  }\n\n  /**\n    An array of records\n     @property _recordArray\n    @private\n    @type {Array}\n  */\n  get _recordArray() {\n    return this.__store.peekAll(this.modelName);\n  }\n\n  /**\n      Number of records in the array\n       Example\n       ```app/adapters/post.js\n      import JSONAPIAdapter from '@ember-data/adapter/json-api';\n       export default class PostAdapter extends JSONAPIAdapter {\n        shouldReloadAll(store, snapshotRecordArray) {\n          return !snapshotRecordArray.length;\n        }\n      });\n      ```\n       @property length\n      @public\n      @type {Number}\n    */\n  get length() {\n    return this._recordArray.length;\n  }\n\n  /**\n    Get snapshots of the underlying record array\n     Example\n     ```app/adapters/post.js\n    import JSONAPIAdapter from '@ember-data/adapter/json-api';\n     export default class PostAdapter extends JSONAPIAdapter {\n      shouldReloadAll(store, snapshotArray) {\n        let snapshots = snapshotArray.snapshots();\n         return snapshots.any(function(ticketSnapshot) {\n          let timeDiff = moment().diff(ticketSnapshot.attr('lastAccessedAt'), 'minutes');\n          if (timeDiff > 20) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n      }\n    }\n    ```\n     @method snapshots\n    @public\n    @return {Array} Array of snapshots\n  */\n  snapshots() {\n    if (this._snapshots !== null) {\n      return this._snapshots;\n    }\n    upgradeStore(this.__store);\n    const {\n      _fetchManager\n    } = this.__store;\n    this._snapshots = this._recordArray[_ember_data_store_private__WEBPACK_IMPORTED_MODULE_0__.SOURCE].map(identifier => _fetchManager.createSnapshot(identifier));\n    return this._snapshots;\n  }\n}\nfunction assertIdentifierHasId(identifier) {\n  (test => {\n    if (!test) {\n      throw new Error(`Attempted to schedule a fetch for a record without an id.`);\n    }\n  })(identifier && identifier.id !== null);\n}\nfunction iterateData(data, fn) {\n  if (Array.isArray(data)) {\n    return data.map(fn);\n  } else {\n    return fn(data, 0);\n  }\n}\nfunction payloadIsNotBlank(adapterPayload) {\n  if (Array.isArray(adapterPayload)) {\n    return true;\n  } else {\n    return Object.keys(adapterPayload || {}).length !== 0;\n  }\n}\n\n/**\n  This is a helper method that validates a JSON API top-level document\n\n  The format of a document is described here:\n  http://jsonapi.org/format/#document-top-level\n\n  @internal\n*/\nfunction validateDocumentStructure(doc) {\n  {\n    const errors = [];\n    if (!doc || typeof doc !== 'object') {\n      errors.push('Top level of a JSON API document must be an object');\n    } else {\n      if (!('data' in doc) && !('errors' in doc) && !('meta' in doc)) {\n        errors.push('One or more of the following keys must be present: \"data\", \"errors\", \"meta\".');\n      } else {\n        if ('data' in doc && 'errors' in doc) {\n          errors.push('Top level keys \"errors\" and \"data\" cannot both be present in a JSON API document');\n        }\n      }\n      if ('data' in doc) {\n        if (!(doc.data === null || Array.isArray(doc.data) || typeof doc.data === 'object')) {\n          errors.push('data must be null, an object, or an array');\n        }\n      }\n      if ('meta' in doc) {\n        if (typeof doc.meta !== 'object') {\n          errors.push('meta must be an object');\n        }\n      }\n      if ('errors' in doc) {\n        if (!Array.isArray(doc.errors)) {\n          errors.push('errors must be an array');\n        }\n      }\n      if ('links' in doc) {\n        if (typeof doc.links !== 'object') {\n          errors.push('links must be an object');\n        }\n      }\n      if ('jsonapi' in doc) {\n        if (typeof doc.jsonapi !== 'object') {\n          errors.push('jsonapi must be an object');\n        }\n      }\n      if ('included' in doc) {\n        if (typeof doc.included !== 'object') {\n          errors.push('included must be an array');\n        }\n      }\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`Response must be normalized to a valid JSON API document:\\n\\t* ${errors.join('\\n\\t* ')}`);\n      }\n    })(errors.length === 0);\n  }\n}\nfunction normalizeResponseHelper(serializer, store, modelClass, payload, id, requestType) {\n  const normalizedResponse = serializer ? serializer.normalizeResponse(store, modelClass, payload, id, requestType) : payload;\n  validateDocumentStructure(normalizedResponse);\n  return normalizedResponse;\n}\n\n/**\n  @module @ember-data/store\n*/\n/**\n  Snapshot is not directly instantiable.\n  Instances are provided to a consuming application's\n  adapters and serializers for certain requests.\n\n  Snapshots are only available when using `@ember-data/legacy-compat`\n  for legacy compatibility with adapters and serializers.\n\n  @class Snapshot\n  @public\n*/\nclass Snapshot {\n  /**\n   * @method constructor\n   * @constructor\n   * @private\n   * @param options\n   * @param identifier\n   * @param _store\n   */\n  constructor(options, identifier, store) {\n    this._store = store;\n    this.__attributes = null;\n    this._belongsToRelationships = Object.create(null);\n    this._belongsToIds = Object.create(null);\n    this._hasManyRelationships = Object.create(null);\n    this._hasManyIds = Object.create(null);\n    const hasRecord = !!store._instanceCache.peek(identifier);\n    this.modelName = identifier.type;\n\n    /**\n      The unique RecordIdentifier associated with this Snapshot.\n       @property identifier\n      @public\n      @type {StableRecordIdentifier}\n    */\n    this.identifier = identifier;\n\n    /*\n      If the we do not yet have a record, then we are\n      likely a snapshot being provided to a find request, so we\n      populate __attributes lazily. Else, to preserve the \"moment\n      in time\" in which a snapshot is created, we greedily grab\n      the values.\n     */\n    if (hasRecord) {\n      this._attributes;\n    }\n\n    /**\n     The id of the snapshot's underlying record\n      Example\n      ```javascript\n     // store.push('post', { id: 1, author: 'Tomster', title: 'Ember.js rocks' });\n     postSnapshot.id; // => '1'\n     ```\n      @property id\n     @type {String}\n     @public\n     */\n    this.id = identifier.id;\n\n    /**\n     A hash of adapter options\n     @property adapterOptions\n     @type {Object}\n     @public\n     */\n    this.adapterOptions = options.adapterOptions;\n\n    /**\n     If `include` was passed to the options hash for the request, the value\n     would be available here.\n      @property include\n     @type {String|Array}\n     @public\n     */\n    this.include = options.include;\n\n    /**\n     The name of the type of the underlying record for this snapshot, as a string.\n      @property modelName\n     @type {String}\n     @public\n     */\n    this.modelName = identifier.type;\n    if (hasRecord) {\n      const cache = this._store.cache;\n      this._changedAttributes = cache.changedAttrs(identifier);\n    }\n  }\n\n  /**\n   The underlying record for this snapshot. Can be used to access methods and\n   properties defined on the record.\n    Example\n    ```javascript\n   let json = snapshot.record.toJSON();\n   ```\n    @property record\n   @type {Model}\n   @public\n   */\n  get record() {\n    const record = this._store.peekRecord(this.identifier);\n    (test => {\n      if (!test) {\n        throw new Error(`Record ${this.identifier.type} ${this.identifier.id} (${this.identifier.lid}) is not yet loaded and thus cannot be accessed from the Snapshot during serialization`);\n      }\n    })(record !== null);\n    return record;\n  }\n  get _attributes() {\n    if (this.__attributes !== null) {\n      return this.__attributes;\n    }\n    const attributes = this.__attributes = Object.create(null);\n    const {\n      identifier\n    } = this;\n    const attrs = this._store.schema.fields(identifier);\n    const cache = this._store.cache;\n    attrs.forEach((field, keyName) => {\n      if (field.kind === 'attribute') {\n        attributes[keyName] = cache.getAttr(identifier, keyName);\n      }\n    });\n    return attributes;\n  }\n  get isNew() {\n    const cache = this._store.cache;\n    return cache?.isNew(this.identifier) || false;\n  }\n\n  /**\n   Returns the value of an attribute.\n    Example\n    ```javascript\n   // store.push('post', { id: 1, author: 'Tomster', title: 'Ember.js rocks' });\n   postSnapshot.attr('author'); // => 'Tomster'\n   postSnapshot.attr('title'); // => 'Ember.js rocks'\n   ```\n    Note: Values are loaded eagerly and cached when the snapshot is created.\n    @method attr\n   @param {String} keyName\n   @return {Object} The attribute value or undefined\n   @public\n   */\n  attr(keyName) {\n    if (keyName in this._attributes) {\n      return this._attributes[keyName];\n    }\n    (test => {\n      {\n        throw new Error(`Model '${this.identifier.lid}' has no attribute named '${keyName}' defined.`);\n      }\n    })();\n  }\n\n  /**\n   Returns all attributes and their corresponding values.\n    Example\n    ```javascript\n   // store.push('post', { id: 1, author: 'Tomster', title: 'Ember.js rocks' });\n   postSnapshot.attributes(); // => { author: 'Tomster', title: 'Ember.js rocks' }\n   ```\n    @method attributes\n   @return {Object} All attributes of the current snapshot\n   @public\n   */\n  attributes() {\n    return {\n      ...this._attributes\n    };\n  }\n\n  /**\n   Returns all changed attributes and their old and new values.\n    Example\n    ```javascript\n   // store.push('post', { id: 1, author: 'Tomster', title: 'Ember.js rocks' });\n   postModel.set('title', 'Ember.js rocks!');\n   postSnapshot.changedAttributes(); // => { title: ['Ember.js rocks', 'Ember.js rocks!'] }\n   ```\n    @method changedAttributes\n   @return {Object} All changed attributes of the current snapshot\n   @public\n   */\n  changedAttributes() {\n    const changedAttributes = Object.create(null);\n    if (!this._changedAttributes) {\n      return changedAttributes;\n    }\n    const changedAttributeKeys = Object.keys(this._changedAttributes);\n    for (let i = 0, length = changedAttributeKeys.length; i < length; i++) {\n      const key = changedAttributeKeys[i];\n      changedAttributes[key] = this._changedAttributes[key].slice();\n    }\n    return changedAttributes;\n  }\n\n  /**\n   Returns the current value of a belongsTo relationship.\n    `belongsTo` takes an optional hash of options as a second parameter,\n   currently supported options are:\n    - `id`: set to `true` if you only want the ID of the related record to be\n   returned.\n    Example\n    ```javascript\n   // store.push('post', { id: 1, title: 'Hello World' });\n   // store.createRecord('comment', { body: 'Lorem ipsum', post: post });\n   commentSnapshot.belongsTo('post'); // => Snapshot\n   commentSnapshot.belongsTo('post', { id: true }); // => '1'\n    // store.push('comment', { id: 1, body: 'Lorem ipsum' });\n   commentSnapshot.belongsTo('post'); // => undefined\n   ```\n    Calling `belongsTo` will return a new Snapshot as long as there's any known\n   data for the relationship available, such as an ID. If the relationship is\n   known but unset, `belongsTo` will return `null`. If the contents of the\n   relationship is unknown `belongsTo` will return `undefined`.\n    Note: Relationships are loaded lazily and cached upon first access.\n    @method belongsTo\n   @param {String} keyName\n   @param {Object} [options]\n   @public\n   @return {(Snapshot|String|null|undefined)} A snapshot or ID of a known\n   relationship or null if the relationship is known but unset. undefined\n   will be returned if the contents of the relationship is unknown.\n   */\n  belongsTo(keyName, options) {\n    const returnModeIsId = !!(options && options.id);\n    let result;\n    const store = this._store;\n    if (returnModeIsId === true && keyName in this._belongsToIds) {\n      return this._belongsToIds[keyName];\n    }\n    if (returnModeIsId === false && keyName in this._belongsToRelationships) {\n      return this._belongsToRelationships[keyName];\n    }\n    const relationshipMeta = store.schema.fields({\n      type: this.modelName\n    }).get(keyName);\n    (test => {\n      if (!test) {\n        throw new Error(`Model '${this.identifier.lid}' has no belongsTo relationship named '${keyName}' defined.`);\n      }\n    })(relationshipMeta && relationshipMeta.kind === 'belongsTo');\n    (test => {\n      if (!test) {\n        throw new Error(`snapshot.belongsTo only supported when using the package @ember-data/graph`);\n      }\n    })(true);\n    const graphFor = (0,_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(__webpack_require__(/*! @ember-data/graph/-private */ \"../../.pnpm/@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string_y53mhzgz7knwb4cijzkjieaw7q/node_modules/@ember-data/graph/dist/-private.js\")).graphFor;\n    const {\n      identifier\n    } = this;\n    {\n      const relationship = graphFor(this._store).get(identifier, keyName);\n      (test => {\n        if (!test) {\n          throw new Error(`You looked up the ${keyName} belongsTo relationship for { type: ${identifier.type}, id: ${identifier.id || ''}, lid: ${identifier.lid} but no such relationship was found.`);\n        }\n      })(relationship);\n      (test => {\n        if (!test) {\n          throw new Error(`You looked up the ${keyName} belongsTo relationship for { type: ${identifier.type}, id: ${identifier.id || ''}, lid: ${identifier.lid} but that relationship is a hasMany.`);\n        }\n      })(relationship.definition.kind === 'belongsTo');\n    }\n    const value = graphFor(this._store).getData(identifier, keyName);\n    const data = value && value.data;\n    const inverseIdentifier = data ? store.identifierCache.getOrCreateRecordIdentifier(data) : null;\n    if (value && value.data !== undefined) {\n      const cache = store.cache;\n      if (inverseIdentifier && !cache.isDeleted(inverseIdentifier)) {\n        if (returnModeIsId) {\n          result = inverseIdentifier.id;\n        } else {\n          result = store._fetchManager.createSnapshot(inverseIdentifier);\n        }\n      } else {\n        result = null;\n      }\n    }\n    if (returnModeIsId) {\n      this._belongsToIds[keyName] = result;\n    } else {\n      this._belongsToRelationships[keyName] = result;\n    }\n    return result;\n  }\n\n  /**\n   Returns the current value of a hasMany relationship.\n    `hasMany` takes an optional hash of options as a second parameter,\n   currently supported options are:\n    - `ids`: set to `true` if you only want the IDs of the related records to be\n   returned.\n    Example\n    ```javascript\n   // store.push('post', { id: 1, title: 'Hello World', comments: [2, 3] });\n   postSnapshot.hasMany('comments'); // => [Snapshot, Snapshot]\n   postSnapshot.hasMany('comments', { ids: true }); // => ['2', '3']\n    // store.push('post', { id: 1, title: 'Hello World' });\n   postSnapshot.hasMany('comments'); // => undefined\n   ```\n    Note: Relationships are loaded lazily and cached upon first access.\n    @method hasMany\n   @param {String} keyName\n   @param {Object} [options]\n   @public\n   @return {(Array|undefined)} An array of snapshots or IDs of a known\n   relationship or an empty array if the relationship is known but unset.\n   undefined will be returned if the contents of the relationship is unknown.\n   */\n  hasMany(keyName, options) {\n    const returnModeIsIds = !!(options && options.ids);\n    let results;\n    const cachedIds = this._hasManyIds[keyName];\n    const cachedSnapshots = this._hasManyRelationships[keyName];\n    if (returnModeIsIds === true && keyName in this._hasManyIds) {\n      return cachedIds;\n    }\n    if (returnModeIsIds === false && keyName in this._hasManyRelationships) {\n      return cachedSnapshots;\n    }\n    const store = this._store;\n    const relationshipMeta = store.schema.fields({\n      type: this.modelName\n    }).get(keyName);\n    (test => {\n      if (!test) {\n        throw new Error(`Model '${this.identifier.lid}' has no hasMany relationship named '${keyName}' defined.`);\n      }\n    })(relationshipMeta && relationshipMeta.kind === 'hasMany');\n\n    // TODO @runspired it seems this code branch would not work with CUSTOM_MODEL_CLASSes\n    // this check is not a regression in behavior because relationships don't currently\n    // function without access to intimate API contracts between RecordData and Model.\n    // This is a requirement we should fix as soon as the relationship layer does not require\n    // this intimate API usage.\n    (test => {\n      if (!test) {\n        throw new Error(`snapshot.hasMany only supported when using the package @ember-data/graph`);\n      }\n    })(true);\n    const graphFor = (0,_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(__webpack_require__(/*! @ember-data/graph/-private */ \"../../.pnpm/@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string_y53mhzgz7knwb4cijzkjieaw7q/node_modules/@ember-data/graph/dist/-private.js\")).graphFor;\n    const {\n      identifier\n    } = this;\n    {\n      const relationship = graphFor(this._store).get(identifier, keyName);\n      (test => {\n        if (!test) {\n          throw new Error(`You looked up the ${keyName} hasMany relationship for { type: ${identifier.type}, id: ${identifier.id || ''}, lid: ${identifier.lid} but no such relationship was found.`);\n        }\n      })(relationship);\n      (test => {\n        if (!test) {\n          throw new Error(`You looked up the ${keyName} hasMany relationship for { type: ${identifier.type}, id: ${identifier.id || ''}, lid: ${identifier.lid} but that relationship is a belongsTo.`);\n        }\n      })(relationship.definition.kind === 'hasMany');\n    }\n    const value = graphFor(this._store).getData(identifier, keyName);\n    if (value.data) {\n      results = [];\n      value.data.forEach(member => {\n        const inverseIdentifier = store.identifierCache.getOrCreateRecordIdentifier(member);\n        const cache = store.cache;\n        if (!cache.isDeleted(inverseIdentifier)) {\n          if (returnModeIsIds) {\n            results.push(inverseIdentifier.id);\n          } else {\n            results.push(store._fetchManager.createSnapshot(inverseIdentifier));\n          }\n        }\n      });\n    }\n\n    // we assign even if `undefined` so that we don't reprocess the relationship\n    // on next access. This works with the `keyName in` checks above.\n    if (returnModeIsIds) {\n      this._hasManyIds[keyName] = results;\n    } else {\n      this._hasManyRelationships[keyName] = results;\n    }\n    return results;\n  }\n\n  /**\n    Iterates through all the attributes of the model, calling the passed\n    function on each attribute.\n     Example\n     ```javascript\n    snapshot.eachAttribute(function(name, meta) {\n      // ...\n    });\n    ```\n     @method eachAttribute\n    @param {Function} callback the callback to execute\n    @param {Object} [binding] the value to which the callback's `this` should be bound\n    @public\n  */\n  eachAttribute(callback, binding) {\n    const fields = this._store.schema.fields(this.identifier);\n    fields.forEach((field, key) => {\n      if (field.kind === 'attribute') {\n        callback.call(binding, key, field);\n      }\n    });\n  }\n\n  /**\n    Iterates through all the relationships of the model, calling the passed\n    function on each relationship.\n     Example\n     ```javascript\n    snapshot.eachRelationship(function(name, relationship) {\n      // ...\n    });\n    ```\n     @method eachRelationship\n    @param {Function} callback the callback to execute\n    @param {Object} [binding] the value to which the callback's `this` should be bound\n    @public\n  */\n  eachRelationship(callback, binding) {\n    const fields = this._store.schema.fields(this.identifier);\n    fields.forEach((field, key) => {\n      if (field.kind === 'belongsTo' || field.kind === 'hasMany') {\n        callback.call(binding, key, field);\n      }\n    });\n  }\n\n  /**\n    Serializes the snapshot using the serializer for the model.\n     Example\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n     export default Adapter.extend({\n      createRecord(store, type, snapshot) {\n        let data = snapshot.serialize({ includeId: true });\n        let url = `/${type.modelName}`;\n         return fetch(url, {\n          method: 'POST',\n          body: data,\n        }).then((response) => response.json())\n      }\n    });\n    ```\n     @method serialize\n    @param {Object} options\n    @return {Object} an object whose values are primitive JSON values only\n    @public\n   */\n  serialize(options) {\n    upgradeStore(this._store);\n    const serializer = this._store.serializerFor(this.modelName);\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot serialize record, no serializer found`);\n      }\n    })(serializer);\n    return serializer.serialize(this, options);\n  }\n}\nconst SaveOp = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('SaveOp', Symbol('SaveOp'));\nclass FetchManager {\n  // fetches pending in the runloop, waiting to be coalesced\n\n  constructor(store) {\n    this._store = store;\n    // used to keep track of all the find requests that need to be coalesced\n    this._pendingFetch = new Map();\n    this.requestCache = store.getRequestStateService();\n    this.isDestroyed = false;\n  }\n  createSnapshot(identifier, options = {}) {\n    return new Snapshot(options, identifier, this._store);\n  }\n\n  /**\n    This method is called by `record.save`, and gets passed a\n    resolver for the promise that `record.save` returns.\n     It schedules saving to happen at the end of the run loop.\n     @internal\n  */\n  scheduleSave(identifier, options) {\n    const resolver = (0,_ember_data_request__WEBPACK_IMPORTED_MODULE_2__.createDeferred)();\n    const query = {\n      op: 'saveRecord',\n      recordIdentifier: identifier,\n      options\n    };\n    const queryRequest = {\n      data: [query]\n    };\n    const snapshot = this.createSnapshot(identifier, options);\n    const pendingSaveItem = {\n      snapshot: snapshot,\n      resolver: resolver,\n      identifier,\n      options,\n      queryRequest\n    };\n    const monitored = this.requestCache._enqueue(resolver.promise, pendingSaveItem.queryRequest);\n    _flushPendingSave(this._store, pendingSaveItem);\n    return monitored;\n  }\n  scheduleFetch(identifier, options, request) {\n    const query = {\n      op: 'findRecord',\n      recordIdentifier: identifier,\n      options\n    };\n    const queryRequest = {\n      data: [query]\n    };\n    const pendingFetch = this.getPendingFetch(identifier, options);\n    if (pendingFetch) {\n      return pendingFetch;\n    }\n    const modelName = identifier.type;\n    const resolver = (0,_ember_data_request__WEBPACK_IMPORTED_MODULE_2__.createDeferred)();\n    const pendingFetchItem = {\n      identifier,\n      resolver,\n      options,\n      queryRequest\n    };\n    const resolverPromise = resolver.promise;\n    const store = this._store;\n    const isInitialLoad = !store._instanceCache.recordIsLoaded(identifier); // we don't use isLoading directly because we are the request\n\n    const monitored = this.requestCache._enqueue(resolverPromise, pendingFetchItem.queryRequest);\n    let promise = monitored.then(payload => {\n      // ensure that regardless of id returned we assign to the correct record\n      if (payload.data && !Array.isArray(payload.data)) {\n        payload.data.lid = identifier.lid;\n      }\n\n      // additional data received in the payload\n      // may result in the merging of identifiers (and thus records)\n      const potentiallyNewIm = store._push(payload, options.reload);\n      if (potentiallyNewIm && !Array.isArray(potentiallyNewIm)) {\n        return potentiallyNewIm;\n      }\n      return identifier;\n    }, error => {\n      (test => {\n        if (!test) {\n          throw new Error(`Async Leak Detected: Expected the store to not be destroyed`);\n        }\n      })(!store.isDestroyed);\n      const cache = store.cache;\n      if (!cache || cache.isEmpty(identifier) || isInitialLoad) {\n        let isReleasable = true;\n        {\n          if (!cache) {\n            const graphFor = (0,_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(__webpack_require__(/*! @ember-data/graph/-private */ \"../../.pnpm/@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string_y53mhzgz7knwb4cijzkjieaw7q/node_modules/@ember-data/graph/dist/-private.js\")).graphFor;\n            const graph = graphFor(store);\n            isReleasable = graph.isReleasable(identifier);\n            if (!isReleasable) {\n              graph.unload(identifier, true);\n            }\n          }\n        }\n        if (cache || isReleasable) {\n          store._enableAsyncFlush = true;\n          store._instanceCache.unloadRecord(identifier);\n          store._enableAsyncFlush = null;\n        }\n      }\n      throw error;\n    });\n    if (this._pendingFetch.size === 0) {\n      void new Promise(resolve => setTimeout(resolve, 0)).then(() => {\n        this.flushAllPendingFetches();\n      });\n    }\n    const fetchesByType = this._pendingFetch;\n    let fetchesById = fetchesByType.get(modelName);\n    if (!fetchesById) {\n      fetchesById = new Map();\n      fetchesByType.set(modelName, fetchesById);\n    }\n    let requestsForIdentifier = fetchesById.get(identifier);\n    if (!requestsForIdentifier) {\n      requestsForIdentifier = [];\n      fetchesById.set(identifier, requestsForIdentifier);\n    }\n    requestsForIdentifier.push(pendingFetchItem);\n    {\n      if (!request.disableTestWaiter) {\n        const {\n          waitForPromise\n        } = (0,_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(__webpack_require__(/*! @ember/test-waiters */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/index.js\"));\n        promise = waitForPromise(promise);\n      }\n    }\n    pendingFetchItem.promise = promise;\n    return promise;\n  }\n  getPendingFetch(identifier, options) {\n    const pendingFetches = this._pendingFetch.get(identifier.type)?.get(identifier);\n\n    // We already have a pending fetch for this\n    if (pendingFetches) {\n      const matchingPendingFetch = pendingFetches.find(fetch => isSameRequest(options, fetch.options));\n      if (matchingPendingFetch) {\n        return matchingPendingFetch.promise;\n      }\n    }\n  }\n  flushAllPendingFetches() {\n    if (this.isDestroyed) {\n      return;\n    }\n    const store = this._store;\n    this._pendingFetch.forEach((fetchItem, type) => _flushPendingFetchForType(store, fetchItem, type));\n    this._pendingFetch.clear();\n  }\n  fetchDataIfNeededForIdentifier(identifier, options = {}, request) {\n    // pre-loading will change the isEmpty value\n    const isEmpty = _isEmpty(this._store._instanceCache, identifier);\n    const isLoading = _isLoading(this._store._instanceCache, identifier);\n    let promise;\n    if (isEmpty) {\n      assertIdentifierHasId(identifier);\n      {\n        promise = this.scheduleFetch(identifier, Object.assign({}, options, {\n          reload: true\n        }), request);\n      }\n    } else if (isLoading) {\n      promise = this.getPendingFetch(identifier, options);\n      (test => {\n        if (!test) {\n          throw new Error(`Expected to find a pending request for a record in the loading state, but found none`);\n        }\n      })(promise);\n    } else {\n      promise = Promise.resolve(identifier);\n    }\n    return promise;\n  }\n  destroy() {\n    this.isDestroyed = true;\n  }\n}\nfunction _isEmpty(instanceCache, identifier) {\n  const cache = instanceCache.cache;\n  if (!cache) {\n    return true;\n  }\n  const isNew = cache.isNew(identifier);\n  const isDeleted = cache.isDeleted(identifier);\n  const isEmpty = cache.isEmpty(identifier);\n  return (!isNew || isDeleted) && isEmpty;\n}\nfunction _isLoading(cache, identifier) {\n  const req = cache.store.getRequestStateService();\n  // const fulfilled = req.getLastRequestForRecord(identifier);\n  const isLoaded = cache.recordIsLoaded(identifier);\n  return !isLoaded &&\n  // fulfilled === null &&\n  req.getPendingRequestsForRecord(identifier).some(r => r.type === 'query');\n}\nfunction includesSatisfies(current, existing) {\n  // if we have no includes we are good\n  if (!current?.length) {\n    return true;\n  }\n\n  // if we are here we have includes,\n  // and if existing has no includes then we will need a new request\n  if (!existing?.length) {\n    return false;\n  }\n  const arrCurrent = (Array.isArray(current) ? current : current.split(',')).sort();\n  const arrExisting = (Array.isArray(existing) ? existing : existing.split(',')).sort();\n\n  // includes are identical\n  if (arrCurrent.join(',') === arrExisting.join(',')) {\n    return true;\n  }\n\n  // if all of current includes are in existing includes then we are good\n  // so if we find one that is not in existing then we need a new request\n  for (let i = 0; i < arrCurrent.length; i++) {\n    if (!arrExisting.includes(arrCurrent[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction optionsSatisfies(current, existing) {\n  return !current || current === existing || Object.keys(current).length === 0;\n}\n\n// this function helps resolve whether we have a pending request that we should use instead\nfunction isSameRequest(options = {}, existingOptions = {}) {\n  return optionsSatisfies(options.adapterOptions, existingOptions.adapterOptions) && includesSatisfies(options.include, existingOptions.include);\n}\nfunction _findMany(store, adapter, modelName, snapshots) {\n  const modelClass = store.modelFor(modelName); // `adapter.findMany` gets the modelClass still\n  const promise = Promise.resolve().then(() => {\n    const ids = snapshots.map(s => s.id);\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot fetch a record without an id`);\n      }\n    })(ids.every(v => v !== null));\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    (test => {\n      if (!test) {\n        throw new Error(`Expected this adapter to implement findMany for coalescing`);\n      }\n    })(adapter.findMany);\n    const ret = adapter.findMany(store, modelClass, ids, snapshots);\n    (test => {\n      if (!test) {\n        throw new Error('adapter.findMany returned undefined, this was very likely a mistake');\n      }\n    })(ret !== undefined);\n    return ret;\n  });\n  return promise.then(adapterPayload => {\n    (test => {\n      if (!test) {\n        throw new Error(`You made a 'findMany' request for '${modelName}' records with ids '[${snapshots.map(s => s.id).join(',')}]', but the adapter's response did not have any data`);\n      }\n    })(!!payloadIsNotBlank(adapterPayload));\n    const serializer = store.serializerFor(modelName);\n    const payload = normalizeResponseHelper(serializer, store, modelClass, adapterPayload, null, 'findMany');\n    return payload;\n  });\n}\nfunction rejectFetchedItems(fetchMap, snapshots, error) {\n  for (let i = 0, l = snapshots.length; i < l; i++) {\n    const snapshot = snapshots[i];\n    const pair = fetchMap.get(snapshot);\n    if (pair) {\n      pair.resolver.reject(error || new Error(`Expected: '<${snapshot.modelName}:${snapshot.id}>' to be present in the adapter provided payload, but it was not found.`));\n    }\n  }\n}\nfunction handleFoundRecords(store, fetchMap, snapshots, coalescedPayload) {\n  /*\n    It is possible that the same ID is included multiple times\n    via multiple snapshots. This happens when more than one\n    options hash was supplied, each of which must be uniquely\n    accounted for.\n     However, since we can't map from response to a specific\n    options object, we resolve all snapshots by id with\n    the first response we see.\n  */\n  const snapshotsById = new Map();\n  for (let i = 0; i < snapshots.length; i++) {\n    const id = snapshots[i].id;\n    let snapshotGroup = snapshotsById.get(id);\n    if (!snapshotGroup) {\n      snapshotGroup = [];\n      snapshotsById.set(id, snapshotGroup);\n    }\n    snapshotGroup.push(snapshots[i]);\n  }\n  const included = Array.isArray(coalescedPayload.included) ? coalescedPayload.included : [];\n\n  // resolve found records\n  const resources = coalescedPayload.data;\n  for (let i = 0, l = resources.length; i < l; i++) {\n    const resource = resources[i];\n    const snapshotGroup = snapshotsById.get(resource.id);\n    snapshotsById.delete(resource.id);\n    if (!snapshotGroup) {\n      // TODO consider whether this should be a deprecation/assertion\n      included.push(resource);\n    } else {\n      snapshotGroup.forEach(snapshot => {\n        const pair = fetchMap.get(snapshot);\n        const resolver = pair.resolver;\n        resolver.resolve({\n          data: resource\n        });\n      });\n    }\n  }\n  if (included.length > 0) {\n    store._push({\n      data: null,\n      included\n    }, true);\n  }\n  if (snapshotsById.size === 0) {\n    return;\n  }\n\n  // reject missing records\n  const rejected = [];\n  snapshotsById.forEach(snapshotArray => {\n    rejected.push(...snapshotArray);\n  });\n  ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.warn)('Ember Data expected to find records with the following ids in the adapter response from findMany but they were missing: [ \"' + [...snapshotsById.values()].map(r => r[0].id).join('\", \"') + '\" ]', {\n    id: 'ds.store.missing-records-from-adapter'\n  }));\n  rejectFetchedItems(fetchMap, rejected);\n}\nfunction _fetchRecord(store, adapter, fetchItem) {\n  const identifier = fetchItem.identifier;\n  const modelName = identifier.type;\n  (test => {\n    if (!test) {\n      throw new Error(`You tried to find a record but you have no adapter (for ${modelName})`);\n    }\n  })(adapter);\n  (test => {\n    if (!test) {\n      throw new Error(`You tried to find a record but your adapter (for ${modelName}) does not implement 'findRecord'`);\n    }\n  })(typeof adapter.findRecord === 'function');\n  const snapshot = store._fetchManager.createSnapshot(identifier, fetchItem.options);\n  const klass = store.modelFor(identifier.type);\n  const id = identifier.id;\n  let promise = Promise.resolve().then(() => {\n    return adapter.findRecord(store, klass, identifier.id, snapshot);\n  });\n  promise = promise.then(adapterPayload => {\n    (test => {\n      if (!test) {\n        throw new Error(`Async Leak Detected: Expected the store to not be destroyed`);\n      }\n    })(!(store.isDestroyed || store.isDestroying));\n    (test => {\n      if (!test) {\n        throw new Error(`You made a 'findRecord' request for a '${modelName}' with id '${id}', but the adapter's response did not have any data`);\n      }\n    })(!!payloadIsNotBlank(adapterPayload));\n    const serializer = store.serializerFor(modelName);\n    const payload = normalizeResponseHelper(serializer, store, klass, adapterPayload, id, 'findRecord');\n    (test => {\n      if (!test) {\n        throw new Error(`Ember Data expected the primary data returned from a 'findRecord' response to be an object but instead it found an array.`);\n      }\n    })(!Array.isArray(payload.data));\n    (test => {\n      if (!test) {\n        throw new Error(`The 'findRecord' request for ${modelName}:${id} resolved indicating success but contained no primary data. To indicate a 404 not found you should either reject the promise returned by the adapter's findRecord method or throw a NotFoundError.`);\n      }\n    })('data' in payload && payload.data !== null && typeof payload.data === 'object');\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.warn)(`You requested a record of type '${modelName}' with id '${id}' but the adapter returned a payload with primary data having an id of '${payload.data.id}'. Use 'store.findRecord()' when the requested id is the same as the one returned by the adapter. In other cases use 'store.queryRecord()' instead.`, (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_0__.coerceId)(payload.data.id) === (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_0__.coerceId)(id), {\n      id: 'ds.store.findRecord.id-mismatch'\n    }));\n    return payload;\n  });\n  fetchItem.resolver.resolve(promise);\n}\nfunction _processCoalescedGroup(store, fetchMap, group, adapter, modelName) {\n  if (group.length > 1) {\n    _findMany(store, adapter, modelName, group).then(payloads => {\n      handleFoundRecords(store, fetchMap, group, payloads);\n    }).catch(error => {\n      rejectFetchedItems(fetchMap, group, error);\n    });\n  } else if (group.length === 1) {\n    _fetchRecord(store, adapter, fetchMap.get(group[0]));\n  } else {\n    (test => {\n      {\n        throw new Error(\"You cannot return an empty array from adapter's method groupRecordsForFindMany\");\n      }\n    })();\n  }\n}\nfunction _flushPendingFetchForType(store, pendingFetchMap, modelName) {\n  const adapter = store.adapterFor(modelName);\n  const shouldCoalesce = !!adapter.findMany && adapter.coalesceFindRequests;\n  if (shouldCoalesce) {\n    const pendingFetchItems = [];\n    pendingFetchMap.forEach((requestsForIdentifier, identifier) => {\n      if (requestsForIdentifier.length > 1) {\n        return;\n      }\n\n      // remove this entry from the map so it's not processed again\n      pendingFetchMap.delete(identifier);\n      pendingFetchItems.push(requestsForIdentifier[0]);\n    });\n    const totalItems = pendingFetchItems.length;\n    if (totalItems > 1) {\n      const snapshots = new Array(totalItems);\n      const fetchMap = new Map();\n      for (let i = 0; i < totalItems; i++) {\n        const fetchItem = pendingFetchItems[i];\n        snapshots[i] = store._fetchManager.createSnapshot(fetchItem.identifier, fetchItem.options);\n        fetchMap.set(snapshots[i], fetchItem);\n      }\n      let groups;\n      if (adapter.groupRecordsForFindMany) {\n        groups = adapter.groupRecordsForFindMany(store, snapshots);\n      } else {\n        groups = [snapshots];\n      }\n      for (let i = 0, l = groups.length; i < l; i++) {\n        _processCoalescedGroup(store, fetchMap, groups[i], adapter, modelName);\n      }\n    } else if (totalItems === 1) {\n      _fetchRecord(store, adapter, pendingFetchItems[0]);\n    }\n  }\n  pendingFetchMap.forEach(pendingFetchItems => {\n    pendingFetchItems.forEach(pendingFetchItem => {\n      _fetchRecord(store, adapter, pendingFetchItem);\n    });\n  });\n}\nfunction _flushPendingSave(store, pending) {\n  const {\n    snapshot,\n    resolver,\n    identifier,\n    options\n  } = pending;\n  const adapter = store.adapterFor(identifier.type);\n  const operation = options[SaveOp];\n  const modelName = snapshot.modelName;\n  const modelClass = store.modelFor(modelName);\n  (test => {\n    if (!test) {\n      throw new Error(`You tried to update a record but you have no adapter (for ${modelName})`);\n    }\n  })(adapter);\n  (test => {\n    if (!test) {\n      throw new Error(`You tried to update a record but your adapter (for ${modelName}) does not implement '${operation}'`);\n    }\n  })(typeof adapter[operation] === 'function');\n  let promise = Promise.resolve().then(() => adapter[operation](store, modelClass, snapshot));\n  const serializer = store.serializerFor(modelName);\n  (test => {\n    if (!test) {\n      throw new Error(`Your adapter's '${operation}' method must return a value, but it returned 'undefined'`);\n    }\n  })(promise !== undefined);\n  promise = promise.then(adapterPayload => {\n    if (adapterPayload) {\n      return normalizeResponseHelper(serializer, store, modelClass, adapterPayload, snapshot.id, operation);\n    }\n  });\n  resolver.resolve(promise);\n}\n\n/**\n * Utilities - often temporary - for maintaining backwards compatibility with\n * older parts of EmberData.\n *\n  @module @ember-data/legacy-compat\n  @main @ember-data/legacy-compat\n*/\nfunction upgradeStore(store) {}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/-private-DVN28hvw.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/-private.js":
/*!****************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/-private.js ***!
  \****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchManager: () => (/* reexport safe */ _private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_0__.F),\n/* harmony export */   SaveOp: () => (/* reexport safe */ _private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_0__.S),\n/* harmony export */   Snapshot: () => (/* reexport safe */ _private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   SnapshotRecordArray: () => (/* reexport safe */ _private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   upgradeStore: () => (/* reexport safe */ _private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_0__.u)\n/* harmony export */ });\n/* harmony import */ var _private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./-private-DVN28hvw.js */ \"../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/-private-DVN28hvw.js\");\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/-private.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/index.js":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/index.js ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LegacyNetworkHandler: () => (/* binding */ LegacyNetworkHandler),\n/* harmony export */   adapterFor: () => (/* binding */ adapterFor),\n/* harmony export */   cleanup: () => (/* binding */ cleanup),\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   pushPayload: () => (/* binding */ pushPayload),\n/* harmony export */   serializeRecord: () => (/* binding */ serializeRecord),\n/* harmony export */   serializerFor: () => (/* binding */ serializerFor)\n/* harmony export */ });\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/application */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js\");\n/* harmony import */ var _ember_data_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/store */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/index.js\");\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/store/-private */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/-private.js\");\n/* harmony import */ var _private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./-private-DVN28hvw.js */ \"../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/-private-DVN28hvw.js\");\n/* harmony import */ var _embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2 */ \"../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2.js\");\n\n\n\n\n\nfunction _findHasMany(adapter, store, identifier, link, relationship, options) {\n  const promise = Promise.resolve().then(() => {\n    const snapshot = store._fetchManager.createSnapshot(identifier, options);\n    const useLink = !link || typeof link === 'string';\n    const relatedLink = useLink ? link : link.href;\n    (test => {\n      if (!test) {\n        throw new Error(`Attempted to load a hasMany relationship from a specified 'link' in the original payload, but the specified link is empty. You must provide a valid 'link' in the original payload to use 'findHasMany'`);\n      }\n    })(relatedLink);\n    (test => {\n      if (!test) {\n        throw new Error(`Expected the adapter to implement 'findHasMany' but it does not`);\n      }\n    })(typeof adapter.findHasMany === 'function');\n    return adapter.findHasMany(store, snapshot, relatedLink, relationship);\n  });\n  return promise.then(adapterPayload => {\n    (test => {\n      if (!test) {\n        throw new Error(`You made a 'findHasMany' request for a ${identifier.type}'s '${relationship.name}' relationship, using link '${JSON.stringify(link)}' , but the adapter's response did not have any data`);\n      }\n    })((0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.p)(adapterPayload));\n    const modelClass = store.modelFor(relationship.type);\n    const serializer = store.serializerFor(relationship.type);\n    let payload = (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.n)(serializer, store, modelClass, adapterPayload, null, 'findHasMany');\n    (test => {\n      if (!test) {\n        throw new Error(`fetched the hasMany relationship '${relationship.name}' for ${identifier.type}:${identifier.id} with link '${JSON.stringify(link)}', but no data member is present in the response. If no data exists, the response should set { data: [] }`);\n      }\n    })('data' in payload && Array.isArray(payload.data));\n    payload = syncRelationshipDataFromLink(store, payload, identifier, relationship);\n    return store._push(payload, true);\n  }, null);\n}\nfunction _findBelongsTo(store, identifier, link, relationship, options) {\n  const promise = Promise.resolve().then(() => {\n    const adapter = store.adapterFor(identifier.type);\n    (test => {\n      if (!test) {\n        throw new Error(`You tried to load a belongsTo relationship but you have no adapter (for ${identifier.type})`);\n      }\n    })(adapter);\n    (test => {\n      if (!test) {\n        throw new Error(`You tried to load a belongsTo relationship from a specified 'link' in the original payload but your adapter does not implement 'findBelongsTo'`);\n      }\n    })(typeof adapter.findBelongsTo === 'function');\n    const snapshot = store._fetchManager.createSnapshot(identifier, options);\n    const useLink = !link || typeof link === 'string';\n    const relatedLink = useLink ? link : link.href;\n    (test => {\n      if (!test) {\n        throw new Error(`Attempted to load a belongsTo relationship from a specified 'link' in the original payload, but the specified link is empty. You must provide a valid 'link' in the original payload to use 'findBelongsTo'`);\n      }\n    })(relatedLink);\n    return adapter.findBelongsTo(store, snapshot, relatedLink, relationship);\n  });\n  return promise.then(adapterPayload => {\n    const modelClass = store.modelFor(relationship.type);\n    const serializer = store.serializerFor(relationship.type);\n    let payload = (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.n)(serializer, store, modelClass, adapterPayload, null, 'findBelongsTo');\n    (test => {\n      if (!test) {\n        throw new Error(`fetched the belongsTo relationship '${relationship.name}' for ${identifier.type}:${identifier.id} with link '${JSON.stringify(link)}', but no data member is present in the response. If no data exists, the response should set { data: null }`);\n      }\n    })('data' in payload && (payload.data === null || typeof payload.data === 'object' && !Array.isArray(payload.data)));\n    if (!payload.data && !payload.links && !payload.meta) {\n      return null;\n    }\n    payload = syncRelationshipDataFromLink(store, payload, identifier, relationship);\n    return store._push(payload, true);\n  }, null);\n}\n\n// sync\n// iterate over records in payload.data\n// for each record\n//   assert that record.relationships[inverse] is either undefined (so we can fix it)\n//     or provide a data: {id, type} that matches the record that requested it\n//   return the relationship data for the parent\nfunction syncRelationshipDataFromLink(store, payload, parentIdentifier, relationship) {\n  // ensure the right hand side (incoming payload) points to the parent record that\n  // requested this relationship\n  const relationshipData = payload.data ? (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.i)(payload.data, (data, index) => {\n    const {\n      id,\n      type\n    } = data;\n    ensureRelationshipIsSetToParent(data, parentIdentifier, store, relationship, index);\n    return {\n      id,\n      type\n    };\n  }) : null;\n  const relatedDataHash = {};\n  if ('meta' in payload) {\n    relatedDataHash.meta = payload.meta;\n  }\n  if ('links' in payload) {\n    relatedDataHash.links = payload.links;\n  }\n  if ('data' in payload) {\n    relatedDataHash.data = relationshipData;\n  }\n\n  // now, push the left hand side (the parent record) to ensure things are in sync, since\n  // the payload will be pushed with store._push\n  const parentPayload = {\n    id: parentIdentifier.id,\n    type: parentIdentifier.type,\n    relationships: {\n      [relationship.name]: relatedDataHash\n    }\n  };\n  if (!Array.isArray(payload.included)) {\n    payload.included = [];\n  }\n  payload.included.push(parentPayload);\n  return payload;\n}\nfunction ensureRelationshipIsSetToParent(payload, parentIdentifier, store, parentRelationship, index) {\n  const {\n    id,\n    type\n  } = payload;\n  if (!payload.relationships) {\n    payload.relationships = {};\n  }\n  const {\n    relationships\n  } = payload;\n  const inverse = getInverse(store, parentIdentifier, parentRelationship, type);\n  if (inverse) {\n    const {\n      inverseKey,\n      kind\n    } = inverse;\n    const relationshipData = relationships[inverseKey]?.data;\n    {\n      if (typeof relationshipData !== 'undefined' && !relationshipDataPointsToParent(relationshipData, parentIdentifier)) {\n        const inspect = function inspect(thing) {\n          return `'${JSON.stringify(thing)}'`;\n        };\n        const quotedType = inspect(type);\n        const quotedInverse = inspect(inverseKey);\n        const expected = inspect({\n          id: parentIdentifier.id,\n          type: parentIdentifier.type\n        });\n        const expectedModel = `${parentIdentifier.type}:${parentIdentifier.id}`;\n        const got = inspect(relationshipData);\n        const prefix = typeof index === 'number' ? `data[${index}]` : `data`;\n        const path = `${prefix}.relationships.${inverseKey}.data`;\n        const data = Array.isArray(relationshipData) ? relationshipData[0] : relationshipData;\n        const other = data ? `<${data.type}:${data.id}>` : null;\n        const relationshipFetched = `${expectedModel}.${parentRelationship.kind}(\"${parentRelationship.name}\")`;\n        const includedRecord = `<${type}:${id}>`;\n        const message = [`Encountered mismatched relationship: Ember Data expected ${path} in the payload from ${relationshipFetched} to include ${expected} but got ${got} instead.\\n`, `The ${includedRecord} record loaded at ${prefix} in the payload specified ${other} as its ${quotedInverse}, but should have specified ${expectedModel} (the record the relationship is being loaded from) as its ${quotedInverse} instead.`, `This could mean that the response for ${relationshipFetched} may have accidentally returned ${quotedType} records that aren't related to ${expectedModel} and could be related to a different ${parentIdentifier.type} record instead.`, `Ember Data has corrected the ${includedRecord} record's ${quotedInverse} relationship to ${expectedModel} so that ${relationshipFetched} will include ${includedRecord}.`, `Please update the response from the server or change your serializer to either ensure that the response for only includes ${quotedType} records that specify ${expectedModel} as their ${quotedInverse}, or omit the ${quotedInverse} relationship from the response.`].join('\\n');\n        (test => {\n          {\n            throw new Error(message);\n          }\n        })();\n      }\n    }\n    if (kind !== 'hasMany' || typeof relationshipData !== 'undefined') {\n      relationships[inverseKey] = relationships[inverseKey] || {};\n      relationships[inverseKey].data = fixRelationshipData(relationshipData ?? null, kind, parentIdentifier);\n    }\n  }\n}\nfunction inverseForRelationship(store, identifier, key) {\n  const definition = store.schema.fields(identifier).get(key);\n  if (!definition) {\n    return null;\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Expected the field definition to be a relationship`);\n    }\n  })(definition.kind === 'hasMany' || definition.kind === 'belongsTo');\n  (test => {\n    if (!test) {\n      throw new Error(`Expected the relationship defintion to specify the inverse type or null.`);\n    }\n  })(definition.options?.inverse === null || typeof definition.options?.inverse === 'string' && definition.options.inverse.length > 0);\n  return definition.options.inverse;\n}\nfunction getInverse(store, parentIdentifier, parentRelationship, type) {\n  const {\n    name: lhs_relationshipName\n  } = parentRelationship;\n  const {\n    type: parentType\n  } = parentIdentifier;\n  const inverseKey = inverseForRelationship(store, {\n    type: parentType\n  }, lhs_relationshipName);\n  if (inverseKey) {\n    const definition = store.schema.fields({\n      type\n    }).get(inverseKey);\n    (test => {\n      if (!test) {\n        throw new Error(`Expected the field definition to be a relationship`);\n      }\n    })(definition && (definition.kind === 'hasMany' || definition.kind === 'belongsTo'));\n    return {\n      inverseKey,\n      kind: definition.kind\n    };\n  }\n}\nfunction relationshipDataPointsToParent(relationshipData, identifier) {\n  if (relationshipData === null) {\n    return false;\n  }\n  if (Array.isArray(relationshipData)) {\n    if (relationshipData.length === 0) {\n      return false;\n    }\n    for (let i = 0; i < relationshipData.length; i++) {\n      const entry = relationshipData[i];\n      if (validateRelationshipEntry(entry, identifier)) {\n        return true;\n      }\n    }\n  } else {\n    return validateRelationshipEntry(relationshipData, identifier);\n  }\n  return false;\n}\nfunction fixRelationshipData(relationshipData, relationshipKind, {\n  id,\n  type\n}) {\n  const parentRelationshipData = {\n    id,\n    type\n  };\n  let payload = null;\n  if (relationshipKind === 'hasMany') {\n    const relData = relationshipData || [];\n    if (relationshipData) {\n      (test => {\n        if (!test) {\n          throw new Error('expected the relationship data to be an array');\n        }\n      })(Array.isArray(relationshipData));\n      // these arrays could be massive so this is better than filter\n      // Note: this is potentially problematic if type/id are not in the\n      // same state of normalization.\n      const found = relationshipData.find(v => {\n        return v.type === parentRelationshipData.type && v.id === parentRelationshipData.id;\n      });\n      if (!found) {\n        relData.push(parentRelationshipData);\n      }\n    } else {\n      relData.push(parentRelationshipData);\n    }\n    payload = relData;\n  } else {\n    const relData = relationshipData || {};\n    Object.assign(relData, parentRelationshipData);\n    payload = relData;\n  }\n  return payload;\n}\nfunction validateRelationshipEntry({\n  id\n}, {\n  id: parentModelID\n}) {\n  return !!id && id.toString() === parentModelID;\n}\nconst PotentialLegacyOperations = new Set(['findRecord', 'findAll', 'query', 'queryRecord', 'findBelongsTo', 'findHasMany', 'updateRecord', 'createRecord', 'deleteRecord']);\nconst LegacyNetworkHandler = {\n  request(context, next) {\n    // if we are not a legacy request, move on\n    if (context.request.url || !context.request.op || !PotentialLegacyOperations.has(context.request.op)) {\n      return next(context.request);\n    }\n    const {\n      store\n    } = context.request;\n    if (!store._fetchManager) {\n      store._fetchManager = new _private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.F(store);\n    }\n    switch (context.request.op) {\n      case 'findRecord':\n        return findRecord(context);\n      case 'findAll':\n        return findAll(context);\n      case 'query':\n        return query(context);\n      case 'queryRecord':\n        return queryRecord(context);\n      case 'findBelongsTo':\n        return findBelongsTo(context);\n      case 'findHasMany':\n        return findHasMany(context);\n      case 'updateRecord':\n        return saveRecord(context);\n      case 'createRecord':\n        return saveRecord(context);\n      case 'deleteRecord':\n        return saveRecord(context);\n      default:\n        return next(context.request);\n    }\n  }\n};\nfunction findBelongsTo(context) {\n  const {\n    store,\n    data,\n    records: identifiers\n  } = context.request;\n  const {\n    options,\n    record,\n    links,\n    useLink,\n    field\n  } = data;\n  const identifier = identifiers?.[0];\n\n  // short circuit if we are already loading\n  const pendingRequest = identifier && store._fetchManager.getPendingFetch(identifier, options);\n  if (pendingRequest) {\n    return pendingRequest;\n  }\n  if (useLink) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a related link when calling store.findBelongsTo, found ${String(links)}`);\n      }\n    })(links && links.related);\n    return _findBelongsTo(store, record, links.related, field, options);\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Expected an identifier`);\n    }\n  })(Array.isArray(identifiers) && identifiers.length === 1);\n  const manager = store._fetchManager;\n  (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.a)(identifier);\n  return options.reload ? manager.scheduleFetch(identifier, options, context.request) : manager.fetchDataIfNeededForIdentifier(identifier, options, context.request);\n}\nfunction findHasMany(context) {\n  const {\n    store,\n    data,\n    records: identifiers\n  } = context.request;\n  const {\n    options,\n    record,\n    links,\n    useLink,\n    field\n  } = data;\n\n  // link case\n  if (useLink) {\n    const adapter = store.adapterFor(record.type);\n    /*\n    If a relationship was originally populated by the adapter as a link\n    (as opposed to a list of IDs), this method is called when the\n    relationship is fetched.\n     The link (which is usually a URL) is passed through unchanged, so the\n    adapter can make whatever request it wants.\n     The usual use-case is for the server to register a URL as a link, and\n    then use that URL in the future to make a request for the relationship.\n    */\n    (test => {\n      if (!test) {\n        throw new Error(`You tried to load a hasMany relationship but you have no adapter (for ${record.type})`);\n      }\n    })(adapter);\n    (test => {\n      if (!test) {\n        throw new Error(`You tried to load a hasMany relationship from a specified 'link' in the original payload but your adapter does not implement 'findHasMany'`);\n      }\n    })(typeof adapter.findHasMany === 'function');\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a related link when calling store.findHasMany, found ${String(links)}`);\n      }\n    })(links && links.related);\n    return _findHasMany(adapter, store, record, links.related, field, options);\n  }\n\n  // identifiers case\n  (test => {\n    if (!test) {\n      throw new Error(`Expected an array of identifiers to fetch`);\n    }\n  })(Array.isArray(identifiers));\n  const fetches = new Array(identifiers.length);\n  const manager = store._fetchManager;\n  for (let i = 0; i < identifiers.length; i++) {\n    const identifier = identifiers[i];\n    // TODO we probably can be lenient here and return from cache for the isNew case\n    (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.a)(identifier);\n    fetches[i] = options.reload ? manager.scheduleFetch(identifier, options, context.request) : manager.fetchDataIfNeededForIdentifier(identifier, options, context.request);\n  }\n  return Promise.all(fetches);\n}\nfunction saveRecord(context) {\n  const {\n    store,\n    data,\n    op: operation\n  } = context.request;\n  const {\n    options,\n    record: identifier\n  } = data;\n  store.cache.willCommit(identifier, context);\n  const saveOptions = Object.assign({\n    [_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.S]: operation\n  }, options);\n  const fetchManagerPromise = store._fetchManager.scheduleSave(identifier, saveOptions);\n  return fetchManagerPromise.then(payload => {\n    let result;\n    store._join(() => {\n      // @ts-expect-error we don't have access to a response in legacy\n      result = store.cache.didCommit(identifier, {\n        request: context.request,\n        content: payload\n      });\n    });\n\n    // blatantly lie if we were a createRecord request\n    // to give some semblance of cache-control to the\n    // CachePolicy while legacy is still around\n    if (store.lifetimes?.didRequest && operation === 'createRecord') {\n      store.lifetimes.didRequest(context.request, {\n        status: 201\n      }, null, store);\n    }\n    return store.peekRecord(result.data);\n  }).catch(e => {\n    let err = e;\n    if (!e) {\n      err = new Error(`Unknown Error Occurred During Request`);\n    } else if (typeof e === 'string') {\n      err = new Error(e);\n    }\n    adapterDidInvalidate(store, identifier, err);\n    throw err;\n  });\n}\nfunction adapterDidInvalidate(store, identifier, error) {\n  if (error && error.isAdapterError === true && error.code === 'InvalidError') {\n    const serializer = store.serializerFor(identifier.type);\n\n    // TODO @deprecate extractErrors being called\n    // TODO remove extractErrors from the default serializers.\n    if (serializer && typeof serializer.extractErrors === 'function') {\n      const errorsHash = serializer.extractErrors(store, store.modelFor(identifier.type), error, identifier.id);\n      error.errors = errorsHashToArray(errorsHash);\n    }\n  }\n  const cache = store.cache;\n  if (error.errors) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected the cache in use by resource ${String(identifier)} to have a getErrors(identifier) method for retrieving errors.`);\n      }\n    })(typeof cache.getErrors === 'function');\n    let jsonApiErrors = error.errors;\n    if (jsonApiErrors.length === 0) {\n      jsonApiErrors = [{\n        title: 'Invalid Error',\n        detail: '',\n        source: {\n          pointer: '/data'\n        }\n      }];\n    }\n    cache.commitWasRejected(identifier, jsonApiErrors);\n  } else {\n    cache.commitWasRejected(identifier);\n  }\n}\nfunction makeArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nconst PRIMARY_ATTRIBUTE_KEY = 'base';\nfunction errorsHashToArray(errors) {\n  const out = [];\n  if (errors) {\n    Object.keys(errors).forEach(key => {\n      const messages = makeArray(errors[key]);\n      for (let i = 0; i < messages.length; i++) {\n        let title = 'Invalid Attribute';\n        let pointer = `/data/attributes/${key}`;\n        if (key === PRIMARY_ATTRIBUTE_KEY) {\n          title = 'Invalid Document';\n          pointer = `/data`;\n        }\n        out.push({\n          title: title,\n          detail: messages[i],\n          source: {\n            pointer: pointer\n          }\n        });\n      }\n    });\n  }\n  return out;\n}\nfunction findRecord(context) {\n  const {\n    store,\n    data\n  } = context.request;\n  const {\n    record: identifier,\n    options\n  } = data;\n  let promise;\n\n  // if not loaded start loading\n  if (!store._instanceCache.recordIsLoaded(identifier)) {\n    promise = store._fetchManager.fetchDataIfNeededForIdentifier(identifier, options, context.request);\n\n    // Refetch if the reload option is passed\n  } else if (options.reload) {\n    (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.a)(identifier);\n    promise = store._fetchManager.scheduleFetch(identifier, options, context.request);\n  } else {\n    let snapshot = null;\n    const adapter = store.adapterFor(identifier.type);\n\n    // Refetch the record if the adapter thinks the record is stale\n    if (typeof options.reload === 'undefined' && adapter.shouldReloadRecord && adapter.shouldReloadRecord(store, snapshot = store._fetchManager.createSnapshot(identifier, options))) {\n      (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.a)(identifier);\n      {\n        promise = store._fetchManager.scheduleFetch(identifier, Object.assign({}, options, {\n          reload: true\n        }), context.request);\n      }\n    } else {\n      // Trigger the background refetch if backgroundReload option is passed\n      if (options.backgroundReload !== false && (options.backgroundReload || !adapter.shouldBackgroundReloadRecord || adapter.shouldBackgroundReloadRecord(store, snapshot = snapshot || store._fetchManager.createSnapshot(identifier, options)))) {\n        (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.a)(identifier);\n        {\n          void store._fetchManager.scheduleFetch(identifier, Object.assign({}, options, {\n            backgroundReload: true\n          }), context.request);\n        }\n      }\n\n      // Return the cached record\n      promise = Promise.resolve(identifier);\n    }\n  }\n  return promise.then(i => store.peekRecord(i));\n}\nfunction findAll(context) {\n  const {\n    store,\n    data\n  } = context.request;\n  const {\n    type,\n    options\n  } = data;\n  const adapter = store.adapterFor(type);\n  (test => {\n    if (!test) {\n      throw new Error(`You tried to load all records but you have no adapter (for ${type})`);\n    }\n  })(adapter);\n  (test => {\n    if (!test) {\n      throw new Error(`You tried to load all records but your adapter does not implement 'findAll'`);\n    }\n  })(typeof adapter.findAll === 'function');\n\n  // avoid initializing the liveArray just to set `isUpdating`\n  const maybeRecordArray = store.recordArrayManager._live.get(type);\n  const snapshotArray = new _private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.b(store, type, options);\n  const shouldReload = options.reload || options.reload !== false && (adapter.shouldReloadAll && adapter.shouldReloadAll(store, snapshotArray) || !adapter.shouldReloadAll && snapshotArray.length === 0);\n  let fetch;\n  if (shouldReload) {\n    maybeRecordArray && (maybeRecordArray.isUpdating = true);\n    fetch = _findAll(adapter, store, type, snapshotArray, context.request, true);\n  } else {\n    fetch = Promise.resolve(store.peekAll(type));\n    if (options.backgroundReload || options.backgroundReload !== false && (!adapter.shouldBackgroundReloadAll || adapter.shouldBackgroundReloadAll(store, snapshotArray))) {\n      maybeRecordArray && (maybeRecordArray.isUpdating = true);\n      void _findAll(adapter, store, type, snapshotArray, context.request, false);\n    }\n  }\n  return fetch;\n}\nfunction _findAll(adapter, store, type, snapshotArray, request, isAsyncFlush) {\n  const schema = store.modelFor(type);\n  let promise = Promise.resolve().then(() => adapter.findAll(store, schema, null, snapshotArray));\n  promise = promise.then(adapterPayload => {\n    (test => {\n      if (!test) {\n        throw new Error(`You made a 'findAll' request for '${type}' records, but the adapter's response did not have any data`);\n      }\n    })((0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.p)(adapterPayload));\n    const serializer = store.serializerFor(type);\n    const payload = (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.n)(serializer, store, schema, adapterPayload, null, 'findAll');\n    store._push(payload, isAsyncFlush);\n    snapshotArray._recordArray.isUpdating = false;\n    return snapshotArray._recordArray;\n  });\n  {\n    if (!request.disableTestWaiter) {\n      const {\n        waitForPromise\n      } = (0,_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(__webpack_require__(/*! @ember/test-waiters */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/index.js\"));\n      promise = waitForPromise(promise);\n    }\n  }\n  return promise;\n}\nfunction query(context) {\n  const {\n    store,\n    data\n  } = context.request;\n  let {\n    options\n  } = data;\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {\n    type,\n    query\n  } = data;\n  const adapter = store.adapterFor(type);\n  (test => {\n    if (!test) {\n      throw new Error(`You tried to make a query but you have no adapter (for ${type})`);\n    }\n  })(adapter);\n  (test => {\n    if (!test) {\n      throw new Error(`You tried to make a query but your adapter does not implement 'query'`);\n    }\n  })(typeof adapter.query === 'function');\n  const recordArray = options._recordArray || store.recordArrayManager.createArray({\n    type,\n    query\n  });\n  {\n    options = Object.assign({}, options);\n    delete options._recordArray;\n  }\n  const schema = store.modelFor(type);\n  const promise = Promise.resolve().then(() => adapter.query(store, schema, query, recordArray, options));\n  return promise.then(adapterPayload => {\n    const serializer = store.serializerFor(type);\n    const payload = (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.n)(serializer, store, schema, adapterPayload, null, 'query');\n    const identifiers = store._push(payload, true);\n    (test => {\n      if (!test) {\n        throw new Error('The response to store.query is expected to be an array but it was a single record. Please wrap your response in an array or use `store.queryRecord` to query for a single record.');\n      }\n    })(Array.isArray(identifiers));\n    store.recordArrayManager.populateManagedArray(recordArray, identifiers, payload);\n    return recordArray;\n  });\n}\nfunction assertSingleResourceDocument(payload) {\n  (test => {\n    if (!test) {\n      throw new Error(`Expected the primary data returned by the serializer for a 'queryRecord' response to be a single object or null but instead it was an array.`);\n    }\n  })(!Array.isArray(payload.data));\n}\nfunction queryRecord(context) {\n  const {\n    store,\n    data\n  } = context.request;\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {\n    type,\n    query,\n    options\n  } = data;\n  const adapter = store.adapterFor(type);\n  (test => {\n    if (!test) {\n      throw new Error(`You tried to make a query but you have no adapter (for ${type})`);\n    }\n  })(adapter);\n  (test => {\n    if (!test) {\n      throw new Error(`You tried to make a query but your adapter does not implement 'queryRecord'`);\n    }\n  })(typeof adapter.queryRecord === 'function');\n  const schema = store.modelFor(type);\n  const promise = Promise.resolve().then(() => adapter.queryRecord(store, schema, query, options));\n  return promise.then(adapterPayload => {\n    const serializer = store.serializerFor(type);\n    const payload = (0,_private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.n)(serializer, store, schema, adapterPayload, null, 'queryRecord');\n    assertSingleResourceDocument(payload);\n    const identifier = store._push(payload, true);\n    return identifier ? store.peekRecord(identifier) : null;\n  });\n}\n\n/**\n * @module @ember-data/store\n * @class Store\n */\n\n/**\n    Returns an instance of the adapter for a given type. For\n    example, `adapterFor('person')` will return an instance of\n    the adapter located at `app/adapters/person.js`\n\n    If no `person` adapter is found, this method will look\n    for an `application` adapter (the default adapter for\n    your entire application).\n\n    @method adapterFor\n    @public\n    @param {String} modelName\n    @return Adapter\n  */\n\nfunction adapterFor(modelName, _allowMissing) {\n  (test => {\n    if (!test) {\n      throw new Error(`Attempted to call store.adapterFor(), but the store instance has already been destroyed.`);\n    }\n  })(!(this.isDestroying || this.isDestroyed));\n  (test => {\n    if (!test) {\n      throw new Error(`You need to pass a model name to the store's adapterFor method`);\n    }\n  })(modelName);\n  (test => {\n    if (!test) {\n      throw new Error(`Passing classes to store.adapterFor has been removed. Please pass a dasherized string instead of ${modelName}`);\n    }\n  })(typeof modelName === 'string');\n  this._adapterCache = this._adapterCache || Object.create(null);\n  const normalizedModelName = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_2__._deprecatingNormalize)(modelName);\n  const {\n    _adapterCache\n  } = this;\n  let adapter = _adapterCache[normalizedModelName];\n  if (adapter) {\n    return adapter;\n  }\n  const owner = (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(this);\n\n  // name specific adapter\n  adapter = owner.lookup(`adapter:${normalizedModelName}`);\n  if (adapter !== undefined) {\n    _adapterCache[normalizedModelName] = adapter;\n    return adapter;\n  }\n\n  // no adapter found for the specific name, fallback and check for application adapter\n  adapter = _adapterCache.application || owner.lookup('adapter:application');\n  if (adapter !== undefined) {\n    _adapterCache[normalizedModelName] = adapter;\n    _adapterCache.application = adapter;\n    return adapter;\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`No adapter was found for '${modelName}' and no 'application' adapter was found as a fallback.`);\n    }\n  })(_allowMissing);\n}\n\n/**\n    Returns an instance of the serializer for a given type. For\n    example, `serializerFor('person')` will return an instance of\n    `App.PersonSerializer`.\n\n    If no `App.PersonSerializer` is found, this method will look\n    for an `App.ApplicationSerializer` (the default serializer for\n    your entire application).\n\n    If a serializer cannot be found on the adapter, it will fall back\n    to an instance of `JSONSerializer`.\n\n    @method serializerFor\n    @public\n    @param {String} modelName the record to serialize\n    @return {Serializer}\n  */\nfunction serializerFor(modelName) {\n  (test => {\n    if (!test) {\n      throw new Error(`Attempted to call store.serializerFor(), but the store instance has already been destroyed.`);\n    }\n  })(!(this.isDestroying || this.isDestroyed));\n  (test => {\n    if (!test) {\n      throw new Error(`You need to pass a model name to the store's serializerFor method`);\n    }\n  })(modelName);\n  (test => {\n    if (!test) {\n      throw new Error(`Passing classes to store.serializerFor has been removed. Please pass a dasherized string instead of ${modelName}`);\n    }\n  })(typeof modelName === 'string');\n  this._serializerCache = this._serializerCache || Object.create(null);\n  const normalizedModelName = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_2__._deprecatingNormalize)(modelName);\n  const {\n    _serializerCache\n  } = this;\n  let serializer = _serializerCache[normalizedModelName];\n  if (serializer) {\n    return serializer;\n  }\n\n  // by name\n  const owner = (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(this);\n  serializer = owner.lookup(`serializer:${normalizedModelName}`);\n  if (serializer !== undefined) {\n    _serializerCache[normalizedModelName] = serializer;\n    return serializer;\n  }\n\n  // no serializer found for the specific model, fallback and check for application serializer\n  serializer = _serializerCache.application || owner.lookup('serializer:application');\n  if (serializer !== undefined) {\n    _serializerCache[normalizedModelName] = serializer;\n    _serializerCache.application = serializer;\n    return serializer;\n  }\n  return null;\n}\n\n/**\n    `normalize` converts a json payload into the normalized form that\n    [push](../methods/push?anchor=push) expects.\n\n    Example\n\n    ```js\n    socket.on('message', function(message) {\n      let modelName = message.model;\n      let data = message.data;\n      store.push(store.normalize(modelName, data));\n    });\n    ```\n\n    @method normalize\n    @public\n    @param {String} modelName The name of the model type for this payload\n    @param {Object} payload\n    @return {Object} The normalized payload\n  */\n// TODO @runspired @deprecate users should call normalize on the associated serializer directly\nfunction normalize(modelName, payload) {\n  (test => {\n    if (!test) {\n      throw new Error(`Attempted to call store.normalize(), but the store instance has already been destroyed.`);\n    }\n  })(!(this.isDestroying || this.isDestroyed));\n  (test => {\n    if (!test) {\n      throw new Error(`You need to pass a model name to the store's normalize method`);\n    }\n  })(modelName);\n  (test => {\n    if (!test) {\n      throw new Error(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${typeof modelName}`);\n    }\n  })(typeof modelName === 'string');\n  const normalizedModelName = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_2__._deprecatingNormalize)(modelName);\n  const serializer = this.serializerFor(normalizedModelName);\n  const schema = this.modelFor(normalizedModelName);\n  (test => {\n    if (!test) {\n      throw new Error(`You must define a normalize method in your serializer in order to call store.normalize`);\n    }\n  })(typeof serializer?.normalize === 'function');\n  return serializer.normalize(schema, payload);\n}\n\n/**\n    Push some raw data into the store.\n\n    This method can be used both to push in brand new\n    records, as well as to update existing records. You\n    can push in more than one type of object at once.\n    All objects should be in the format expected by the\n    serializer.\n\n    ```app/serializers/application.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n\n    export default class ApplicationSerializer extends RESTSerializer;\n    ```\n\n    ```js\n    let pushData = {\n      posts: [\n        { id: 1, postTitle: \"Great post\", commentIds: [2] }\n      ],\n      comments: [\n        { id: 2, commentBody: \"Insightful comment\" }\n      ]\n    }\n\n    store.pushPayload(pushData);\n    ```\n\n    By default, the data will be deserialized using a default\n    serializer (the application serializer if it exists).\n\n    Alternatively, `pushPayload` will accept a model type which\n    will determine which serializer will process the payload.\n\n    ```app/serializers/application.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n\n     export default class ApplicationSerializer extends RESTSerializer;\n    ```\n\n    ```app/serializers/post.js\n    import JSONSerializer from '@ember-data/serializer/json';\n\n    export default JSONSerializer;\n    ```\n\n    ```js\n    store.pushPayload(pushData); // Will use the application serializer\n    store.pushPayload('post', pushData); // Will use the post serializer\n    ```\n\n    @method pushPayload\n    @public\n    @param {String} modelName Optionally, a model type used to determine which serializer will be used\n    @param {Object} inputPayload\n  */\n// TODO @runspired @deprecate pushPayload in favor of looking up the serializer\nfunction pushPayload(modelName, inputPayload) {\n  (test => {\n    if (!test) {\n      throw new Error(`Attempted to call store.pushPayload(), but the store instance has already been destroyed.`);\n    }\n  })(!(this.isDestroying || this.isDestroyed));\n  const payload = inputPayload || modelName;\n  const normalizedModelName = inputPayload ? (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_2__._deprecatingNormalize)(modelName) : 'application';\n  const serializer = this.serializerFor(normalizedModelName);\n  (test => {\n    if (!test) {\n      throw new Error(`You cannot use 'store.pushPayload(<type>, <payload>)' unless the serializer for '${normalizedModelName}' defines 'pushPayload'`);\n    }\n  })(serializer && typeof serializer.pushPayload === 'function');\n  serializer.pushPayload(this, payload);\n}\n\n// TODO @runspired @deprecate records should implement their own serialization if desired\nfunction serializeRecord(record, options) {\n  // TODO we used to check if the record was destroyed here\n  if (!this._fetchManager) {\n    this._fetchManager = new _private_DVN28hvw_js__WEBPACK_IMPORTED_MODULE_3__.F(this);\n  }\n  return this._fetchManager.createSnapshot((0,_ember_data_store__WEBPACK_IMPORTED_MODULE_1__.recordIdentifierFor)(record)).serialize(options);\n}\nfunction cleanup() {\n  // enqueue destruction of any adapters/serializers we have created\n  for (const adapterName in this._adapterCache) {\n    const adapter = this._adapterCache[adapterName];\n    if (typeof adapter.destroy === 'function') {\n      adapter.destroy();\n    }\n  }\n  for (const serializerName in this._serializerCache) {\n    const serializer = this._serializerCache[serializerName];\n    if (typeof serializer.destroy === 'function') {\n      serializer.destroy();\n    }\n  }\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/index.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/hooks-BgrTI_ff.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/hooks-BgrTI_ff.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ instantiateRecord),\n/* harmony export */   m: () => (/* binding */ modelFor),\n/* harmony export */   t: () => (/* binding */ teardownRecord)\n/* harmony export */ });\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/application */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js\");\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/store/-private */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/-private.js\");\n/* harmony import */ var _schema_provider_Cgpcwfn7_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema-provider-Cgpcwfn7.js */ \"../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/schema-provider-Cgpcwfn7.js\");\n/* harmony import */ var _model_BFnMMaye_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./model-BFnMMaye.js */ \"../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/model-BFnMMaye.js\");\n\n\n\n\nfunction instantiateRecord(identifier, createRecordArgs) {\n  const type = identifier.type;\n  const cache = this.cache;\n  // TODO deprecate allowing unknown args setting\n  const createOptions = {\n    _createProps: createRecordArgs,\n    // TODO @deprecate consider deprecating accessing record properties during init which the below is necessary for\n    _secretInit: {\n      identifier,\n      cache,\n      store: this,\n      cb: secretInit\n    }\n  };\n\n  // ensure that `getOwner(this)` works inside a model instance\n  (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.setOwner)(createOptions, (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(this));\n  const factory = (0,_schema_provider_Cgpcwfn7_js__WEBPACK_IMPORTED_MODULE_2__.g)(this, type);\n  (test => {\n    if (!test) {\n      throw new Error(`No model was found for '${type}'`);\n    }\n  })(factory);\n  return factory.class.create(createOptions);\n}\nfunction teardownRecord(record) {\n  (test => {\n    if (!test) {\n      throw new Error(`expected to receive an instance of Model from @ember-data/model. If using a custom model make sure you implement teardownRecord`);\n    }\n  })('destroy' in record);\n  record.destroy();\n}\nfunction modelFor(modelName) {\n  (test => {\n    if (!test) {\n      throw new Error(`Attempted to call store.modelFor(), but the store instance has already been destroyed.`);\n    }\n  })(!this.isDestroyed && !this.isDestroying);\n  (test => {\n    if (!test) {\n      throw new Error(`You need to pass a model name to the store's modelFor method`);\n    }\n  })(modelName);\n  (test => {\n    if (!test) {\n      throw new Error(`Please pass a proper model name to the store's modelFor method`);\n    }\n  })(typeof modelName === 'string' && modelName.length);\n  const type = (0,_model_BFnMMaye_js__WEBPACK_IMPORTED_MODULE_3__.n)(modelName);\n  const maybeFactory = (0,_schema_provider_Cgpcwfn7_js__WEBPACK_IMPORTED_MODULE_2__.g)(this, type);\n  const klass = maybeFactory && maybeFactory.class ? maybeFactory.class : null;\n  const ignoreType = !klass || !klass.isModel || this._forceShim;\n  if (!ignoreType) {\n    return klass;\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`No model was found for '${type}' and no schema handles the type`);\n    }\n  })(this.schema.hasResource({\n    type\n  }));\n}\nfunction secretInit(record, cache, identifier, store) {\n  (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_1__.setRecordIdentifier)(record, identifier);\n  _ember_data_store_private__WEBPACK_IMPORTED_MODULE_1__.StoreMap.set(record, store);\n  (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_1__.setCacheFor)(record, cache);\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/hooks-BgrTI_ff.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/hooks.js":
/*!*****************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/hooks.js ***!
  \*****************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildSchema: () => (/* reexport safe */ _schema_provider_Cgpcwfn7_js__WEBPACK_IMPORTED_MODULE_1__.b),\n/* harmony export */   instantiateRecord: () => (/* reexport safe */ _hooks_BgrTI_ff_js__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   modelFor: () => (/* reexport safe */ _hooks_BgrTI_ff_js__WEBPACK_IMPORTED_MODULE_0__.m),\n/* harmony export */   teardownRecord: () => (/* reexport safe */ _hooks_BgrTI_ff_js__WEBPACK_IMPORTED_MODULE_0__.t)\n/* harmony export */ });\n/* harmony import */ var _hooks_BgrTI_ff_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hooks-BgrTI_ff.js */ \"../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/hooks-BgrTI_ff.js\");\n/* harmony import */ var _schema_provider_Cgpcwfn7_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schema-provider-Cgpcwfn7.js */ \"../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/schema-provider-Cgpcwfn7.js\");\n\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/hooks.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/model-BFnMMaye.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/model-BFnMMaye.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   E: () => (/* binding */ Errors),\n/* harmony export */   L: () => (/* binding */ LEGACY_SUPPORT),\n/* harmony export */   M: () => (/* binding */ Model),\n/* harmony export */   P: () => (/* binding */ PromiseBelongsTo),\n/* harmony export */   R: () => (/* binding */ RelatedCollection),\n/* harmony export */   a: () => (/* binding */ PromiseManyArray),\n/* harmony export */   b: () => (/* binding */ save),\n/* harmony export */   c: () => (/* binding */ reload),\n/* harmony export */   d: () => (/* binding */ destroyRecord),\n/* harmony export */   e: () => (/* binding */ deleteRecord),\n/* harmony export */   f: () => (/* binding */ RecordState),\n/* harmony export */   g: () => (/* binding */ changedAttributes),\n/* harmony export */   h: () => (/* binding */ hasMany),\n/* harmony export */   i: () => (/* binding */ belongsTo),\n/* harmony export */   j: () => (/* binding */ createSnapshot),\n/* harmony export */   k: () => (/* binding */ isElementDescriptor),\n/* harmony export */   l: () => (/* binding */ lookupLegacySupport),\n/* harmony export */   n: () => (/* binding */ normalizeModelName),\n/* harmony export */   r: () => (/* binding */ rollbackAttributes),\n/* harmony export */   s: () => (/* binding */ serialize),\n/* harmony export */   u: () => (/* binding */ unloadRecord)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _ember_data_request_utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/request-utils/string */ \"../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/string.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/object */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/index.js\");\n/* harmony import */ var _ember_data_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember-data/store */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/index.js\");\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember-data/store/-private */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/-private.js\");\n/* harmony import */ var _ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ember-data/tracking */ \"../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/index.js\");\n/* harmony import */ var _ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ember-data/tracking/-private */ \"../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/-private.js\");\n/* harmony import */ var _warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @warp-drive/core-types/symbols */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/symbols.js\");\n/* harmony import */ var _ember_array__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ember/array */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/index.js\");\n/* harmony import */ var _ember_array_proxy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ember/array/proxy */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/array/proxy.js\");\n/* harmony import */ var _ember_object_computed__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ember/object/computed */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/computed.js\");\n/* harmony import */ var _ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ember-data/legacy-compat/-private */ \"../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/-private.js\");\n/* harmony import */ var _warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @warp-drive/core-types/-private */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js\");\n/* harmony import */ var _ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ember/object/promise-proxy-mixin */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/promise-proxy-mixin.js\");\n/* harmony import */ var _ember_object_proxy__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ember/object/proxy */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/proxy.js\");\n/* harmony import */ var _ember_object_internals__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @ember/object/internals */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/internals.js\");\n/* harmony import */ var _embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../../@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2 */ \"../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2.js\");\n\nvar _PromiseBelongsTo, _PromiseManyArray, _HasManyReference, _BelongsToReference, _Errors, _RecordState, _Model;\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction isElementDescriptor(args) {\n  const [maybeTarget, maybeKey, maybeDesc] = args;\n  return (\n    // Ensure we have the right number of args\n    args.length === 3 && (\n    // Make sure the target is a class or object (prototype)\n    typeof maybeTarget === 'function' || typeof maybeTarget === 'object' && maybeTarget !== null) &&\n    // Make sure the key is a string\n    typeof maybeKey === 'string' && (\n    // Make sure the descriptor is the right shape\n    typeof maybeDesc === 'object' && maybeDesc !== null && 'enumerable' in maybeDesc && 'configurable' in maybeDesc ||\n    // TS compatibility\n    maybeDesc === undefined)\n  );\n}\nfunction normalizeModelName(type) {\n  {\n    const result = (0,_ember_data_request_utils_string__WEBPACK_IMPORTED_MODULE_2__.dasherize)(type);\n    ( true && !(result === type) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`The resource type '${type}' is not normalized. Update your application code to use '${result}' instead of '${type}'.`, result === type, {\n      id: 'ember-data:deprecate-non-strict-types',\n      until: '6.0',\n      for: 'ember-data',\n      since: {\n        available: '5.3',\n        enabled: '5.3'\n      }\n    }));\n    return result;\n  }\n  return type;\n}\n\n/**\n  @module @ember-data/store\n*/\n/**\n  A `ManyArray` is a `MutableArray` that represents the contents of a has-many\n  relationship.\n\n  The `ManyArray` is instantiated lazily the first time the relationship is\n  requested.\n\n  This class is not intended to be directly instantiated by consuming applications.\n\n  ### Inverses\n\n  Often, the relationships in Ember Data applications will have\n  an inverse. For example, imagine the following models are\n  defined:\n\n  ```app/models/post.js\n  import Model, { hasMany } from '@ember-data/model';\n\n  export default class PostModel extends Model {\n    @hasMany('comment') comments;\n  }\n  ```\n\n  ```app/models/comment.js\n  import Model, { belongsTo } from '@ember-data/model';\n\n  export default class CommentModel extends Model {\n    @belongsTo('post') post;\n  }\n  ```\n\n  If you created a new instance of `Post` and added\n  a `Comment` record to its `comments` has-many\n  relationship, you would expect the comment's `post`\n  property to be set to the post that contained\n  the has-many.\n\n  We call the record to which a relationship belongs-to the\n  relationship's _owner_.\n\n  @class ManyArray\n  @public\n*/\nclass RelatedCollection extends _ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.LiveArray {\n  /**\n    The loading state of this array\n     @property {Boolean} isLoaded\n    @public\n    */\n\n  /**\n    `true` if the relationship is polymorphic, `false` otherwise.\n     @property {Boolean} isPolymorphic\n    @private\n    */\n\n  /**\n    Metadata associated with the request for async hasMany relationships.\n     Example\n     Given that the server returns the following JSON payload when fetching a\n    hasMany relationship:\n     ```js\n    {\n      \"comments\": [{\n        \"id\": 1,\n        \"comment\": \"This is the first comment\",\n      }, {\n    // ...\n      }],\n       \"meta\": {\n        \"page\": 1,\n        \"total\": 5\n      }\n    }\n    ```\n     You can then access the meta data via the `meta` property:\n     ```js\n    let comments = await post.comments;\n    let meta = comments.meta;\n     // meta.page => 1\n    // meta.total => 5\n    ```\n     @property {Object | null} meta\n    @public\n    */\n\n  /**\n     * Retrieve the links for this relationship\n     *\n     @property {Object | null} links\n     @public\n     */\n\n  constructor(options) {\n    super(options);\n    this.isLoaded = options.isLoaded || false;\n    this.isAsync = options.isAsync || false;\n    this.isPolymorphic = options.isPolymorphic || false;\n    this.identifier = options.identifier;\n    this.key = options.key;\n  }\n  [_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.MUTATE](target, receiver, prop, args, _SIGNAL) {\n    switch (prop) {\n      case 'length 0':\n        {\n          Reflect.set(target, 'length', 0);\n          mutateReplaceRelatedRecords(this, [], _SIGNAL);\n          return true;\n        }\n      case 'replace cell':\n        {\n          const [index, prior, value] = args;\n          target[index] = value;\n          mutateReplaceRelatedRecord(this, {\n            value,\n            prior,\n            index\n          }, _SIGNAL);\n          return true;\n        }\n      case 'push':\n        {\n          const newValues = extractIdentifiersFromRecords(args);\n          assertNoDuplicates(this, target, currentState => currentState.push(...newValues), `Cannot push duplicates to a hasMany's state.`);\n          {\n            // dedupe\n            const seen = new Set(target);\n            const unique = new Set();\n            args.forEach(item => {\n              const identifier = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(item);\n              if (!seen.has(identifier)) {\n                seen.add(identifier);\n                unique.add(item);\n              }\n            });\n            const newArgs = Array.from(unique);\n            const result = Reflect.apply(target[prop], receiver, newArgs);\n            if (newArgs.length) {\n              mutateAddToRelatedRecords(this, {\n                value: extractIdentifiersFromRecords(newArgs)\n              }, _SIGNAL);\n            }\n            return result;\n          }\n\n          // else, no dedupe, error on duplicates\n          const result = Reflect.apply(target[prop], receiver, args);\n          if (newValues.length) {\n            mutateAddToRelatedRecords(this, {\n              value: newValues\n            }, _SIGNAL);\n          }\n          return result;\n        }\n      case 'pop':\n        {\n          const result = Reflect.apply(target[prop], receiver, args);\n          if (result) {\n            mutateRemoveFromRelatedRecords(this, {\n              value: (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(result)\n            }, _SIGNAL);\n          }\n          return result;\n        }\n      case 'unshift':\n        {\n          const newValues = extractIdentifiersFromRecords(args);\n          assertNoDuplicates(this, target, currentState => currentState.unshift(...newValues), `Cannot unshift duplicates to a hasMany's state.`);\n          {\n            // dedupe\n            const seen = new Set(target);\n            const unique = new Set();\n            args.forEach(item => {\n              const identifier = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(item);\n              if (!seen.has(identifier)) {\n                seen.add(identifier);\n                unique.add(item);\n              }\n            });\n            const newArgs = Array.from(unique);\n            const result = Reflect.apply(target[prop], receiver, newArgs);\n            if (newArgs.length) {\n              mutateAddToRelatedRecords(this, {\n                value: extractIdentifiersFromRecords(newArgs),\n                index: 0\n              }, _SIGNAL);\n            }\n            return result;\n          }\n\n          // else, no dedupe, error on duplicates\n          const result = Reflect.apply(target[prop], receiver, args);\n          if (newValues.length) {\n            mutateAddToRelatedRecords(this, {\n              value: newValues,\n              index: 0\n            }, _SIGNAL);\n          }\n          return result;\n        }\n      case 'shift':\n        {\n          const result = Reflect.apply(target[prop], receiver, args);\n          if (result) {\n            mutateRemoveFromRelatedRecords(this, {\n              value: (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(result),\n              index: 0\n            }, _SIGNAL);\n          }\n          return result;\n        }\n      case 'sort':\n        {\n          const result = Reflect.apply(target[prop], receiver, args);\n          mutateSortRelatedRecords(this, result.map(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor), _SIGNAL);\n          return result;\n        }\n      case 'splice':\n        {\n          const [start, deleteCount, ...adds] = args;\n\n          // detect a full replace\n          if (start === 0 && deleteCount === this[_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.SOURCE].length) {\n            const newValues = extractIdentifiersFromRecords(adds);\n            assertNoDuplicates(this, target, currentState => currentState.splice(start, deleteCount, ...newValues), `Cannot replace a hasMany's state with a new state that contains duplicates.`);\n            {\n              // dedupe\n              const current = new Set(adds);\n              const unique = Array.from(current);\n              const newArgs = [start, deleteCount].concat(unique);\n              const result = Reflect.apply(target[prop], receiver, newArgs);\n              mutateReplaceRelatedRecords(this, extractIdentifiersFromRecords(unique), _SIGNAL);\n              return result;\n            }\n\n            // else, no dedupe, error on duplicates\n            const result = Reflect.apply(target[prop], receiver, args);\n            mutateReplaceRelatedRecords(this, newValues, _SIGNAL);\n            return result;\n          }\n          const newValues = extractIdentifiersFromRecords(adds);\n          assertNoDuplicates(this, target, currentState => currentState.splice(start, deleteCount, ...newValues), `Cannot splice a hasMany's state with a new state that contains duplicates.`);\n          {\n            // dedupe\n            const currentState = target.slice();\n            currentState.splice(start, deleteCount);\n            const seen = new Set(currentState);\n            const unique = [];\n            adds.forEach(item => {\n              const identifier = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(item);\n              if (!seen.has(identifier)) {\n                seen.add(identifier);\n                unique.push(item);\n              }\n            });\n            const newArgs = [start, deleteCount, ...unique];\n            const result = Reflect.apply(target[prop], receiver, newArgs);\n            if (deleteCount > 0) {\n              mutateRemoveFromRelatedRecords(this, {\n                value: result.map(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor),\n                index: start\n              }, _SIGNAL);\n            }\n            if (unique.length > 0) {\n              mutateAddToRelatedRecords(this, {\n                value: extractIdentifiersFromRecords(unique),\n                index: start\n              }, _SIGNAL);\n            }\n            return result;\n          }\n\n          // else, no dedupe, error on duplicates\n          const result = Reflect.apply(target[prop], receiver, args);\n          if (deleteCount > 0) {\n            mutateRemoveFromRelatedRecords(this, {\n              value: result.map(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor),\n              index: start\n            }, _SIGNAL);\n          }\n          if (newValues.length > 0) {\n            mutateAddToRelatedRecords(this, {\n              value: newValues,\n              index: start\n            }, _SIGNAL);\n          }\n          return result;\n        }\n      default:\n        (test => {\n          {\n            throw new Error(`unable to convert ${prop} into a transaction that updates the cache state for this record array`);\n          }\n        })();\n    }\n  }\n  notify() {\n    const signal = this[_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.ARRAY_SIGNAL];\n    signal.shouldReset = true;\n    (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.notifyArray)(this);\n  }\n\n  /**\n    Reloads all of the records in the manyArray. If the manyArray\n    holds a relationship that was originally fetched using a links url\n    EmberData will revisit the original links url to repopulate the\n    relationship.\n     If the ManyArray holds the result of a `store.query()` reload will\n    re-run the original query.\n     Example\n     ```javascript\n    let user = store.peekRecord('user', '1')\n    await login(user);\n     let permissions = await user.permissions;\n    await permissions.reload();\n    ```\n     @method reload\n    @public\n  */\n  reload(options) {\n    // TODO this is odd, we don't ask the store for anything else like this?\n    return this._manager.reloadHasMany(this.key, options);\n  }\n\n  /**\n    Saves all of the records in the `ManyArray`.\n     Example\n     ```javascript\n    let inbox = await store.findRecord('inbox', '1');\n    let messages = await inbox.messages;\n    messages.forEach((message) => {\n      message.isRead = true;\n    });\n    messages.save();\n    ```\n     @method save\n    @public\n    @return {PromiseArray} promise\n  */\n\n  /**\n    Create a child record within the owner\n     @method createRecord\n    @public\n    @param {Object} hash\n    @return {Model} record\n  */\n  createRecord(hash) {\n    const {\n      store\n    } = this;\n    (test => {\n      if (!test) {\n        throw new Error(`Expected modelName to be set`);\n      }\n    })(this.modelName);\n    const record = store.createRecord(this.modelName, hash);\n    this.push(record);\n    return record;\n  }\n  destroy() {\n    super.destroy(false);\n  }\n}\nRelatedCollection.prototype.isAsync = false;\nRelatedCollection.prototype.isPolymorphic = false;\nRelatedCollection.prototype.identifier = null;\nRelatedCollection.prototype.cache = null;\nRelatedCollection.prototype._inverseIsAsync = false;\nRelatedCollection.prototype.key = '';\nRelatedCollection.prototype.DEPRECATED_CLASS_NAME = 'ManyArray';\nfunction assertRecordPassedToHasMany(record) {\n  (test => {\n    if (!test) {\n      throw new Error(`All elements of a hasMany relationship must be instances of Model, you passed $${typeof record}`);\n    }\n  })(function () {\n    try {\n      (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(record);\n      return true;\n    } catch {\n      return false;\n    }\n  }());\n}\nfunction extractIdentifiersFromRecords(records) {\n  return records.map(extractIdentifierFromRecord$1);\n}\nfunction extractIdentifierFromRecord$1(recordOrPromiseRecord) {\n  assertRecordPassedToHasMany(recordOrPromiseRecord);\n  return (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(recordOrPromiseRecord);\n}\nfunction assertNoDuplicates(collection, target, callback, reason) {\n  const state = target.slice();\n  callback(state);\n  if (state.length !== new Set(state).size) {\n    const duplicates = state.filter((currentValue, currentIndex) => state.indexOf(currentValue) !== currentIndex);\n    {\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`${reason} This behavior is deprecated. Found duplicates for the following records within the new state provided to \\`<${collection.identifier.type}:${collection.identifier.id || collection.identifier.lid}>.${collection.key}\\`\\n\\t- ${Array.from(new Set(duplicates)).map(r => (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.isStableIdentifier)(r) ? r.lid : (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(r).lid).sort((a, b) => a.localeCompare(b)).join('\\n\\t- ')}`, false, {\n        id: 'ember-data:deprecate-many-array-duplicates',\n        for: 'ember-data',\n        until: '6.0',\n        since: {\n          enabled: '5.3',\n          available: '5.3'\n        }\n      }));\n    }\n  }\n}\nfunction mutateAddToRelatedRecords(collection, operationInfo, _SIGNAL) {\n  mutate(collection, {\n    op: 'addToRelatedRecords',\n    record: collection.identifier,\n    field: collection.key,\n    ...operationInfo\n  }, _SIGNAL);\n}\nfunction mutateRemoveFromRelatedRecords(collection, operationInfo, _SIGNAL) {\n  mutate(collection, {\n    op: 'removeFromRelatedRecords',\n    record: collection.identifier,\n    field: collection.key,\n    ...operationInfo\n  }, _SIGNAL);\n}\nfunction mutateReplaceRelatedRecord(collection, operationInfo, _SIGNAL) {\n  mutate(collection, {\n    op: 'replaceRelatedRecord',\n    record: collection.identifier,\n    field: collection.key,\n    ...operationInfo\n  }, _SIGNAL);\n}\nfunction mutateReplaceRelatedRecords(collection, value, _SIGNAL) {\n  mutate(collection, {\n    op: 'replaceRelatedRecords',\n    record: collection.identifier,\n    field: collection.key,\n    value\n  }, _SIGNAL);\n}\nfunction mutateSortRelatedRecords(collection, value, _SIGNAL) {\n  mutate(collection, {\n    op: 'sortRelatedRecords',\n    record: collection.identifier,\n    field: collection.key,\n    value\n  }, _SIGNAL);\n}\nfunction mutate(collection, mutation, _SIGNAL) {\n  collection._manager.mutate(mutation);\n  (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.addToTransaction)(_SIGNAL);\n}\nconst PromiseObject = _ember_object_proxy__WEBPACK_IMPORTED_MODULE_15__[\"default\"].extend(_ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_14__[\"default\"]);\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\n// src/runtime.ts\nvar runtime_exports = {};\n__export(runtime_exports, {\n  c: () => decorateClass,\n  f: () => decorateFieldV1,\n  g: () => decorateFieldV2,\n  i: () => initializeDeferredDecorator,\n  m: () => decorateMethodV1,\n  n: () => decorateMethodV2,\n  p: () => decoratePOJO\n});\nvar deferred = /* @__PURE__ */new WeakMap();\nfunction deferDecorator(proto, prop, desc) {\n  let map = deferred.get(proto);\n  if (!map) {\n    map = /* @__PURE__ */new Map();\n    deferred.set(proto, map);\n  }\n  map.set(prop, desc);\n}\nfunction findDeferredDecorator(target, prop) {\n  let cursor = target.prototype;\n  while (cursor) {\n    let desc = deferred.get(cursor)?.get(prop);\n    if (desc) {\n      return desc;\n    }\n    cursor = cursor.prototype;\n  }\n}\nfunction decorateFieldV1(target, prop, decorators, initializer) {\n  return decorateFieldV2(target.prototype, prop, decorators, initializer);\n}\nfunction decorateFieldV2(prototype, prop, decorators, initializer) {\n  let desc = {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    initializer: null\n  };\n  if (initializer) {\n    desc.initializer = initializer;\n  }\n  for (let decorator of decorators) {\n    desc = decorator(prototype, prop, desc) || desc;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(prototype, prop, desc);\n  } else {\n    deferDecorator(prototype, prop, desc);\n  }\n}\nfunction decorateMethodV1({\n  prototype\n}, prop, decorators) {\n  return decorateMethodV2(prototype, prop, decorators);\n}\nfunction decorateMethodV2(prototype, prop, decorators) {\n  const origDesc = Object.getOwnPropertyDescriptor(prototype, prop);\n  let desc = {\n    ...origDesc\n  };\n  for (let decorator of decorators) {\n    desc = decorator(prototype, prop, desc) || desc;\n  }\n  if (desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(prototype) : void 0;\n    desc.initializer = void 0;\n  }\n  Object.defineProperty(prototype, prop, desc);\n}\nfunction initializeDeferredDecorator(target, prop) {\n  let desc = findDeferredDecorator(target.constructor, prop);\n  if (desc) {\n    Object.defineProperty(target, prop, {\n      enumerable: desc.enumerable,\n      configurable: desc.configurable,\n      writable: desc.writable,\n      value: desc.initializer ? desc.initializer.call(target) : void 0\n    });\n  }\n}\nfunction decorateClass(target, decorators) {\n  return decorators.reduce((accum, decorator) => decorator(accum) || accum, target);\n}\nfunction decoratePOJO(pojo, decorated) {\n  for (let [type, prop, decorators] of decorated) {\n    if (type === \"field\") {\n      decoratePojoField(pojo, prop, decorators);\n    } else {\n      decorateMethodV2(pojo, prop, decorators);\n    }\n  }\n  return pojo;\n}\nfunction decoratePojoField(pojo, prop, decorators) {\n  let desc = {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    initializer: () => Object.getOwnPropertyDescriptor(pojo, prop)?.value\n  };\n  for (let decorator of decorators) {\n    desc = decorator(pojo, prop, desc) || desc;\n  }\n  if (desc.initializer) {\n    desc.value = desc.initializer.call(pojo);\n    delete desc.initializer;\n  }\n  Object.defineProperty(pojo, prop, desc);\n}\nconst LegacyPromiseProxy = Symbol.for('LegacyPromiseProxy');\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-extraneous-class\n\nconst Extended = PromiseObject;\n\n/**\n @module @ember-data/model\n */\n\n/**\n  A PromiseBelongsTo is a PromiseObject that also proxies certain method calls\n  to the underlying belongsTo model.\n  Right now we proxy:\n    * `reload()`\n  @class PromiseBelongsTo\n  @extends PromiseObject\n  @private\n*/\nclass PromiseBelongsTo extends Extended {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, LegacyPromiseProxy, true);\n  }\n  get id() {\n    const {\n      key,\n      legacySupport\n    } = this._belongsToState;\n    const ref = legacySupport.referenceFor('belongsTo', key);\n    return ref.id();\n  }\n\n  // we don't proxy meta because we would need to proxy it to the relationship state container\n  //  however, meta on relationships does not trigger change notifications.\n  //  if you need relationship meta, you should do `record.belongsTo(relationshipName).meta()`\n\n  get meta() {\n    // eslint-disable-next-line no-constant-condition\n    {\n      (test => {\n        {\n          throw new Error('You attempted to access meta on the promise for the async belongsTo relationship ' + `${this._belongsToState.modelName}:${this._belongsToState.key}'.` + '\\nUse `record.belongsTo(relationshipName).meta()` instead.');\n        }\n      })();\n    }\n    return;\n  }\n  async reload(options) {\n    (test => {\n      if (!test) {\n        throw new Error('You are trying to reload an async belongsTo before it has been created');\n      }\n    })(this.content !== undefined);\n    const {\n      key,\n      legacySupport\n    } = this._belongsToState;\n    await legacySupport.reloadBelongsTo(key, options);\n    return this;\n  }\n}\n\n/**\n @module @ember-data/model\n */\n/**\n  This class is returned as the result of accessing an async hasMany relationship\n  on an instance of a Model extending from `@ember-data/model`.\n\n  A PromiseManyArray is an iterable proxy that allows templates to consume related\n  ManyArrays and update once their contents are no longer pending.\n\n  In your JS code you should resolve the promise first.\n\n  ```js\n  const comments = await post.comments;\n  ```\n\n  @class PromiseManyArray\n  @public\n*/\n_PromiseBelongsTo = PromiseBelongsTo;\ndecorateMethodV2(_PromiseBelongsTo.prototype, \"id\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.cached]);\ndecorateMethodV2(_PromiseBelongsTo.prototype, \"meta\", [(0,_ember_object__WEBPACK_IMPORTED_MODULE_3__.computed)()]);\nclass PromiseManyArray {\n  constructor(promise, content) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, LegacyPromiseProxy, true);\n    this._update(promise, content);\n    this.isDestroyed = false;\n  }\n\n  /**\n   * Retrieve the length of the content\n   * @property length\n   * @public\n   */\n  get length() {\n    // shouldn't be needed, but ends up being needed\n    // for computed chains even in 4.x\n    {\n      this['[]'];\n    }\n    return this.content ? this.content.length : 0;\n  }\n\n  /**\n   * Iterate the proxied content. Called by the glimmer iterator in #each\n   * We do not guarantee that forEach will always be available. This\n   * may eventually be made to use Symbol.Iterator once glimmer supports it.\n   *\n   * @method forEach\n   * @param cb\n   * @return\n   * @private\n   */\n\n  forEach(cb) {\n    if (this.content && this.length) {\n      this.content.forEach(cb);\n    }\n  }\n\n  /**\n   * Reload the relationship\n   * @method reload\n   * @public\n   * @param options\n   * @return\n   */\n  reload(options) {\n    (test => {\n      if (!test) {\n        throw new Error('You are trying to reload an async manyArray before it has been created');\n      }\n    })(this.content);\n    void this.content.reload(options);\n    return this;\n  }\n\n  //----  Properties/Methods from the PromiseProxyMixin that we will keep as our API\n\n  /**\n   * Whether the loading promise is still pending\n   *\n   * @property {boolean} isPending\n   * @public\n   */\n\n  /**\n   * Whether the loading promise rejected\n   *\n   * @property {boolean} isRejected\n   * @public\n   */\n\n  /**\n   * Whether the loading promise succeeded\n   *\n   * @property {boolean} isFulfilled\n   * @public\n   */\n\n  /**\n   * Whether the loading promise completed (resolved or rejected)\n   *\n   * @property {boolean} isSettled\n   * @public\n   */\n\n  /**\n   * chain this promise\n   *\n   * @method then\n   * @public\n   * @param success\n   * @param fail\n   * @return Promise\n   */\n  then(s, f) {\n    return this.promise.then(s, f);\n  }\n\n  /**\n   * catch errors thrown by this promise\n   * @method catch\n   * @public\n   * @param callback\n   * @return Promise\n   */\n  catch(cb) {\n    return this.promise.catch(cb);\n  }\n\n  /**\n   * run cleanup after this promise completes\n   *\n   * @method finally\n   * @public\n   * @param callback\n   * @return Promise\n   */\n  finally(cb) {\n    return this.promise.finally(cb);\n  }\n\n  //---- Methods on EmberObject that we should keep\n\n  destroy() {\n    this.isDestroyed = true;\n    this.content = null;\n    this.promise = null;\n  }\n\n  //---- Methods/Properties on ManyArray that we own and proxy to\n\n  /**\n   * Retrieve the links for this relationship\n   * @property links\n   * @public\n   */\n  get links() {\n    return this.content ? this.content.links : undefined;\n  }\n\n  /**\n   * Retrieve the meta for this relationship\n   * @property meta\n   * @public\n   */\n\n  get meta() {\n    return this.content ? this.content.meta : undefined;\n  }\n\n  //---- Our own stuff\n\n  _update(promise, content) {\n    if (content !== undefined) {\n      this.content = content;\n    }\n    this.promise = tapPromise(this, promise);\n  }\n  static create({\n    promise,\n    content\n  }) {\n    return new this(promise, content);\n  }\n}\n_PromiseManyArray = PromiseManyArray;\ndecorateMethodV2(_PromiseManyArray.prototype, \"length\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_PromiseManyArray.prototype, \"links\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_PromiseManyArray.prototype, \"meta\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.defineSignal)(PromiseManyArray.prototype, 'content', null);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.defineSignal)(PromiseManyArray.prototype, 'isPending', false);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.defineSignal)(PromiseManyArray.prototype, 'isRejected', false);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.defineSignal)(PromiseManyArray.prototype, 'isFulfilled', false);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.defineSignal)(PromiseManyArray.prototype, 'isSettled', false);\n\n// this will error if someone tries to call\n// A(identifierArray) since it is not configurable\n// which is preferrable to the `meta` override we used\n// before which required importing all of Ember\n{\n  const desc = {\n    enumerable: true,\n    configurable: false,\n    get: function () {\n      return this.content?.length && this.content;\n    }\n  };\n  (0,_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat)(desc);\n\n  // ember-source < 3.23 (e.g. 3.20 lts)\n  // requires that the tag `'[]'` be notified\n  // on the ArrayProxy in order for `{{#each}}`\n  // to recompute. We entangle the '[]' tag from content\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  Object.defineProperty(PromiseManyArray.prototype, '[]', desc);\n}\nfunction tapPromise(proxy, promise) {\n  proxy.isPending = true;\n  proxy.isSettled = false;\n  proxy.isFulfilled = false;\n  proxy.isRejected = false;\n  return Promise.resolve(promise).then(content => {\n    proxy.isPending = false;\n    proxy.isFulfilled = true;\n    proxy.isSettled = true;\n    proxy.content = content;\n    return content;\n  }, error => {\n    proxy.isPending = false;\n    proxy.isFulfilled = false;\n    proxy.isRejected = true;\n    proxy.isSettled = true;\n    throw error;\n  });\n}\n\n/*\n  Assert that `addedRecord` has a valid type so it can be added to the\n  relationship of the `record`.\n\n  The assert basically checks if the `addedRecord` can be added to the\n  relationship (specified via `relationshipMeta`) of the `record`.\n\n  This utility should only be used internally, as both record parameters must\n  be stable record identifiers and the `relationshipMeta` needs to be the meta\n  information about the relationship, retrieved via\n  `record.relationshipFor(key)`.\n*/\nlet assertPolymorphicType;\n{\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  assertPolymorphicType = function assertPolymorphicType(parentIdentifier, parentDefinition, addedIdentifier, store) {\n    if (parentDefinition.inverseIsImplicit) {\n      return;\n    }\n    if (parentDefinition.isPolymorphic) {\n      const meta = store.schema.fields(addedIdentifier)?.get(parentDefinition.inverseKey);\n      (test => {\n        if (!test) {\n          throw new Error(`Expected the schema for the field ${parentDefinition.inverseKey} on ${addedIdentifier.type} to be for a legacy relationship`);\n        }\n      })(!meta || meta.kind === 'belongsTo' || meta.kind === 'hasMany');\n      (test => {\n        if (!test) {\n          throw new Error(`The schema for the relationship '${parentDefinition.inverseKey}' on '${addedIdentifier.type}' type does not implement '${parentDefinition.type}' and thus cannot be assigned to the '${parentDefinition.key}' relationship in '${parentIdentifier.type}'. The definition should specify 'as: \"${parentDefinition.type}\"' in options.`);\n        }\n      })(meta?.options.as === parentDefinition.type);\n    }\n  };\n}\nfunction isResourceIdentiferWithRelatedLinks$1(value) {\n  return Boolean(value && value.links && value.links.related);\n}\n/**\n A `HasManyReference` is a low-level API that allows access\n and manipulation of a hasMany relationship.\n\n It is especially useful when you're dealing with `async` relationships\n from `@ember-data/model` as it allows synchronous access to\n the relationship data if loaded, as well as APIs for loading, reloading\n the data or accessing available information without triggering a load.\n\n It may also be useful when using `sync` relationships with `@ember-data/model`\n that need to be loaded/reloaded with more precise timing than marking the\n relationship as `async` and relying on autofetch would have allowed.\n\n However,keep in mind that marking a relationship as `async: false` will introduce\n bugs into your application if the data is not always guaranteed to be available\n by the time the relationship is accessed. Ergo, it is recommended when using this\n approach to utilize `links` for unloaded relationship state instead of identifiers.\n\n Reference APIs are entangled with the relationship's underlying state,\n thus any getters or cached properties that utilize these will properly\n invalidate if the relationship state changes.\n\n References are \"stable\", meaning that multiple calls to retrieve the reference\n  for a given relationship will always return the same HasManyReference.\n\n @class HasManyReference\n @public\n */\nclass HasManyReference {\n  constructor(store, graph, parentIdentifier, hasManyRelationship, key) {\n    /**\n     * The field name on the parent record for this has-many relationship.\n     *\n     * @property {String} key\n     * @public\n     */\n    /**\n     * The type of resource this relationship will contain.\n     *\n     * @property {String} type\n     * @public\n     */\n    // unsubscribe tokens given to us by the notification manager\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"___token\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"___identifier\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"___relatedTokenMap\", void 0);\n    this.graph = graph;\n    this.key = key;\n    this.hasManyRelationship = hasManyRelationship;\n    this.type = hasManyRelationship.definition.type;\n    this.store = store;\n    this.___identifier = parentIdentifier;\n    this.___token = store.notifications.subscribe(parentIdentifier, (_, bucket, notifiedKey) => {\n      if (bucket === 'relationships' && notifiedKey === key) {\n        this._ref++;\n      }\n    });\n    this.___relatedTokenMap = new Map();\n    // TODO inverse\n  }\n\n  /**\n   * This method should never be called by user code.\n   *\n   * @internal\n   */\n  destroy() {\n    this.store.notifications.unsubscribe(this.___token);\n    this.___relatedTokenMap.forEach(token => {\n      this.store.notifications.unsubscribe(token);\n    });\n    this.___relatedTokenMap.clear();\n  }\n\n  /**\n   * An array of identifiers for the records that this reference refers to.\n   *\n   * @property {StableRecordIdentifier[]} identifiers\n   * @public\n   */\n  get identifiers() {\n    this._ref; // consume the tracked prop\n\n    const resource = this._resource();\n    const map = this.___relatedTokenMap;\n    this.___relatedTokenMap = new Map();\n    if (resource && resource.data) {\n      return resource.data.map(resourceIdentifier => {\n        const identifier = this.store.identifierCache.getOrCreateRecordIdentifier(resourceIdentifier);\n        let token = map.get(identifier);\n        if (token) {\n          map.delete(identifier);\n        } else {\n          token = this.store.notifications.subscribe(identifier, (_, bucket, notifiedKey) => {\n            if (bucket === 'identity' || bucket === 'attributes' && notifiedKey === 'id') {\n              this._ref++;\n            }\n          });\n        }\n        this.___relatedTokenMap.set(identifier, token);\n        return identifier;\n      });\n    }\n    map.forEach(token => {\n      this.store.notifications.unsubscribe(token);\n    });\n    map.clear();\n    return [];\n  }\n  _resource() {\n    const cache = this.store.cache;\n    return cache.getRelationship(this.___identifier, this.key);\n  }\n\n  /**\n   This returns a string that represents how the reference will be\n   looked up when it is loaded. If the relationship has a link it will\n   use the \"link\" otherwise it defaults to \"id\".\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    // get the identifier of the reference\n   if (commentsRef.remoteType() === \"ids\") {\n     let ids = commentsRef.ids();\n   } else if (commentsRef.remoteType() === \"link\") {\n     let link = commentsRef.link();\n   }\n   ```\n    @method remoteType\n   @public\n   @return {String} The name of the remote type. This should either be `link` or `ids`\n   */\n  remoteType() {\n    const value = this._resource();\n    if (value && value.links && value.links.related) {\n      return 'link';\n    }\n    return 'ids';\n  }\n\n  /**\n   `ids()` returns an array of the record IDs in this relationship.\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    commentsRef.ids(); // ['1']\n   ```\n    @method ids\n    @public\n   @return {Array} The ids in this has-many relationship\n   */\n  ids() {\n    return this.identifiers.map(identifier => identifier.id);\n  }\n\n  /**\n   The link Ember Data will use to fetch or reload this belongs-to\n   relationship. By default it uses only the \"related\" resource linkage.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n   export default Model.extend({\n      user: belongsTo('user', { async: true, inverse: null })\n    });\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            links: {\n              related: '/articles/1/author'\n            }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    // get the identifier of the reference\n   if (userRef.remoteType() === \"link\") {\n      let link = userRef.link();\n    }\n   ```\n    @method link\n   @public\n   @return {String} The link Ember Data will use to fetch or reload this belongs-to relationship.\n   */\n  link() {\n    const resource = this._resource();\n    if (isResourceIdentiferWithRelatedLinks$1(resource)) {\n      if (resource.links) {\n        const related = resource.links.related;\n        return !related || typeof related === 'string' ? related : related.href;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * any links that have been received for this relationship\n   *\n   * @method links\n   * @public\n   * @return\n   */\n  links() {\n    const resource = this._resource();\n    return resource && resource.links ? resource.links : null;\n  }\n\n  /**\n   The meta data for the has-many relationship.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { hasMany } from '@ember-data/model';\n   export default Model.extend({\n      users: hasMany('user', { async: true, inverse: null })\n    });\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          users: {\n            links: {\n              related: {\n                href: '/articles/1/authors'\n              },\n            },\n            meta: {\n              lastUpdated: 1458014400000\n            }\n          }\n        }\n      }\n    });\n    let usersRef = blog.hasMany('user');\n    usersRef.meta() // { lastUpdated: 1458014400000 }\n   ```\n   @method meta\n  @public\n  @return {Object|null} The meta information for the belongs-to relationship.\n  */\n  meta() {\n    let meta = null;\n    const resource = this._resource();\n    if (resource && resource.meta && typeof resource.meta === 'object') {\n      meta = resource.meta;\n    }\n    return meta;\n  }\n\n  /**\n   `push` can be used to update the data in the relationship and EmberData\n   will treat the new data as the canonical value of this relationship on\n   the backend. An empty array will signify the canonical value should be\n   empty.\n    Example model\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    Setup some initial state, note we haven't loaded the comments yet:\n    ```js\n   const post = store.push({\n     data: {\n       type: 'post',\n       id: '1',\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: '1' }]\n         }\n       }\n     }\n   });\n    const commentsRef = post.hasMany('comments');\n   commentsRef.ids(); // ['1']\n   ```\n    Update the state using `push`, note we can do this even without\n   having loaded these comments yet by providing resource identifiers.\n    Both full resources and resource identifiers are supported.\n    ```js\n   await commentsRef.push({\n    data: [\n     { type: 'comment', id: '2' },\n     { type: 'comment', id: '3' },\n    ]\n   });\n    commentsRef.ids(); // ['2', '3']\n   ```\n    For convenience, you can also pass in an array of resources or resource identifiers\n   without wrapping them in the `data` property:\n    ```js\n   await commentsRef.push([\n     { type: 'comment', id: '4' },\n     { type: 'comment', id: '5' },\n   ]);\n    commentsRef.ids(); // ['4', '5']\n   ```\n    When using the `data` property, you may also include other resource data via included,\n   as well as provide new links and meta to the relationship.\n    ```js\n   await commentsRef.push({\n     links: {\n       related: '/posts/1/comments'\n     },\n     meta: {\n       total: 2\n     },\n     data: [\n       { type: 'comment', id: '4' },\n       { type: 'comment', id: '5' },\n     ],\n     included: [\n       { type: 'other-thing', id: '1', attributes: { foo: 'bar' },\n     ]\n   });\n   ```\n    By default, the store will attempt to fetch any unloaded records before resolving\n   the returned promise with the ManyArray.\n    Alternatively, pass `true` as the second argument to avoid fetching unloaded records\n   and instead the promise will resolve with void without attempting to fetch. This is\n   particularly useful if you want to update the state of the relationship without\n   forcing the load of all of the associated records.\n    @method push\n   @public\n   @param {Array|Object} doc a JSONAPI document object describing the new value of this relationship.\n   @param {Boolean} [skipFetch] if `true`, do not attempt to fetch unloaded records\n   @return {Promise<ManyArray | void>}\n  */\n  async push(doc, skipFetch) {\n    const {\n      store\n    } = this;\n    const dataDoc = Array.isArray(doc) ? {\n      data: doc\n    } : doc;\n    const isResourceData = Array.isArray(dataDoc.data) && dataDoc.data.length > 0 && isMaybeResource(dataDoc.data[0]);\n\n    // enforce that one of links, meta or data is present\n    (test => {\n      if (!test) {\n        throw new Error(`You must provide at least one of 'links', 'meta' or 'data' when calling hasManyReference.push`);\n      }\n    })('links' in dataDoc || 'meta' in dataDoc || 'data' in dataDoc);\n    const identifiers = !Array.isArray(dataDoc.data) ? [] : isResourceData ? store._push(dataDoc, true) : dataDoc.data.map(i => store.identifierCache.getOrCreateRecordIdentifier(i));\n    const {\n      identifier\n    } = this.hasManyRelationship;\n    {\n      const relationshipMeta = this.hasManyRelationship.definition;\n      identifiers.forEach(added => {\n        assertPolymorphicType(identifier, relationshipMeta, added, store);\n      });\n    }\n    const newData = {};\n    // only set data if it was passed in\n    if (Array.isArray(dataDoc.data)) {\n      newData.data = identifiers;\n    }\n    if ('links' in dataDoc) {\n      newData.links = dataDoc.links;\n    }\n    if ('meta' in dataDoc) {\n      newData.meta = dataDoc.meta;\n    }\n    store._join(() => {\n      this.graph.push({\n        op: 'updateRelationship',\n        record: identifier,\n        field: this.key,\n        value: newData\n      });\n    });\n    if (!skipFetch) return this.load();\n  }\n  _isLoaded() {\n    const hasRelationshipDataProperty = this.hasManyRelationship.state.hasReceivedData;\n    if (!hasRelationshipDataProperty) {\n      return false;\n    }\n    const relationship = this.graph.getData(this.hasManyRelationship.identifier, this.key);\n    return relationship.data?.every(identifier => {\n      return this.store._instanceCache.recordIsLoaded(identifier, true) === true;\n    });\n  }\n\n  /**\n   `value()` synchronously returns the current value of the has-many\n   relationship. Unlike `record.relationshipName`, calling\n   `value()` on a reference does not trigger a fetch if the async\n   relationship is not yet loaded. If the relationship is not loaded\n   it will always return `null`.\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    post.comments.then(function(comments) {\n     commentsRef.value() === comments\n   })\n   ```\n    @method value\n    @public\n   @return {ManyArray}\n   */\n  value() {\n    const support = LEGACY_SUPPORT.get(this.___identifier);\n    const loaded = this._isLoaded();\n    if (!loaded) {\n      // subscribe to changes\n      // for when we are not loaded yet\n      this._ref;\n      return null;\n    }\n    return support.getManyArray(this.key);\n  }\n\n  /**\n   Loads the relationship if it is not already loaded.  If the\n   relationship is already loaded this method does not trigger a new\n   load. This causes a request to the specified\n   relationship link or reloads all items currently in the relationship.\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    commentsRef.load().then(function(comments) {\n     //...\n   });\n   ```\n    You may also pass in an options object whose properties will be\n   fed forward. This enables you to pass `adapterOptions` into the\n   request given to the adapter via the reference.\n    Example\n    ```javascript\n   commentsRef.load({ adapterOptions: { isPrivate: true } })\n     .then(function(comments) {\n       //...\n     });\n   ```\n    ```app/adapters/comment.js\n   export default ApplicationAdapter.extend({\n     findMany(store, type, id, snapshots) {\n       // In the adapter you will have access to adapterOptions.\n       let adapterOptions = snapshots[0].adapterOptions;\n     }\n   });\n   ```\n    @method load\n   @public\n   @param {Object} options the options to pass in.\n   @return {Promise} a promise that resolves with the ManyArray in\n   this has-many relationship.\n   */\n  async load(options) {\n    const support = LEGACY_SUPPORT.get(this.___identifier);\n    const fetchSyncRel = !this.hasManyRelationship.definition.isAsync && !areAllInverseRecordsLoaded(this.store, this._resource());\n    return fetchSyncRel ? support.reloadHasMany(this.key, options) :\n    // we cast to fix the return type since typescript and eslint don't understand async functions\n    // properly\n    support.getHasMany(this.key, options);\n  }\n\n  /**\n   Reloads this has-many relationship. This causes a request to the specified\n   relationship link or reloads all items currently in the relationship.\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    commentsRef.reload().then(function(comments) {\n     //...\n   });\n   ```\n    You may also pass in an options object whose properties will be\n   fed forward. This enables you to pass `adapterOptions` into the\n   request given to the adapter via the reference. A full example\n   can be found in the `load` method.\n    Example\n    ```javascript\n   commentsRef.reload({ adapterOptions: { isPrivate: true } })\n   ```\n    @method reload\n    @public\n   @param {Object} options the options to pass in.\n   @return {Promise} a promise that resolves with the ManyArray in this has-many relationship.\n   */\n  reload(options) {\n    const support = LEGACY_SUPPORT.get(this.___identifier);\n    return support.reloadHasMany(this.key, options);\n  }\n}\n_HasManyReference = HasManyReference;\ndecorateMethodV2(_HasManyReference.prototype, \"identifiers\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat, _ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.cached]);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.defineSignal)(HasManyReference.prototype, '_ref', 0);\nfunction isMaybeResource(object) {\n  const keys = Object.keys(object).filter(k => k !== 'id' && k !== 'type' && k !== 'lid');\n  return keys.length > 0;\n}\nfunction isResourceIdentiferWithRelatedLinks(value) {\n  return Boolean(value && value.links && value.links.related);\n}\n\n/**\n A `BelongsToReference` is a low-level API that allows access\n and manipulation of a belongsTo relationship.\n\n It is especially useful when you're dealing with `async` relationships\n from `@ember-data/model` as it allows synchronous access to\n the relationship data if loaded, as well as APIs for loading, reloading\n the data or accessing available information without triggering a load.\n\n It may also be useful when using `sync` relationships with `@ember-data/model`\n that need to be loaded/reloaded with more precise timing than marking the\n relationship as `async` and relying on autofetch would have allowed.\n\n However,keep in mind that marking a relationship as `async: false` will introduce\n bugs into your application if the data is not always guaranteed to be available\n by the time the relationship is accessed. Ergo, it is recommended when using this\n approach to utilize `links` for unloaded relationship state instead of identifiers.\n\n Reference APIs are entangled with the relationship's underlying state,\n thus any getters or cached properties that utilize these will properly\n invalidate if the relationship state changes.\n\n References are \"stable\", meaning that multiple calls to retrieve the reference\n  for a given relationship will always return the same HasManyReference.\n\n @class BelongsToReference\n @public\n */\nclass BelongsToReference {\n  /**\n   * The field name on the parent record for this has-many relationship.\n   *\n   * @property {String} key\n   * @public\n   */\n\n  /**\n   * The type of resource this relationship will contain.\n   *\n   * @property {String} type\n   * @public\n   */\n\n  // unsubscribe tokens given to us by the notification manager\n\n  constructor(store, graph, parentIdentifier, belongsToRelationship, key) {\n    this.graph = graph;\n    this.key = key;\n    this.belongsToRelationship = belongsToRelationship;\n    this.type = belongsToRelationship.definition.type;\n    this.store = store;\n    this.___identifier = parentIdentifier;\n    this.___relatedToken = null;\n    this.___token = store.notifications.subscribe(parentIdentifier, (_, bucket, notifiedKey) => {\n      if (bucket === 'relationships' && notifiedKey === key) {\n        this._ref++;\n      }\n    });\n\n    // TODO inverse\n  }\n  destroy() {\n    // TODO @feature we need the notification manager often enough\n    // we should potentially just expose it fully public\n    this.store.notifications.unsubscribe(this.___token);\n    this.___token = null;\n    if (this.___relatedToken) {\n      this.store.notifications.unsubscribe(this.___relatedToken);\n      this.___relatedToken = null;\n    }\n  }\n\n  /**\n   * The identifier of the record that this reference refers to.\n   * `null` if no related record is known.\n   *\n   * @property {StableRecordIdentifier | null} identifier\n   * @public\n   */\n  get identifier() {\n    if (this.___relatedToken) {\n      this.store.notifications.unsubscribe(this.___relatedToken);\n      this.___relatedToken = null;\n    }\n    const resource = this._resource();\n    if (resource && resource.data) {\n      const identifier = this.store.identifierCache.getOrCreateRecordIdentifier(resource.data);\n      this.___relatedToken = this.store.notifications.subscribe(identifier, (_, bucket, notifiedKey) => {\n        if (bucket === 'identity' || bucket === 'attributes' && notifiedKey === 'id') {\n          this._ref++;\n        }\n      });\n      return identifier;\n    }\n    return null;\n  }\n\n  /**\n   The `id` of the record that this reference refers to. Together, the\n   `type()` and `id()` methods form a composite key for the identity\n   map. This can be used to access the id of an async relationship\n   without triggering a fetch that would normally happen if you\n   attempted to use `record.relationship.id`.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class BlogModel extends Model {\n    @belongsTo('user', { async: true, inverse: null }) user;\n   }\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            data: { type: 'user', id: 1 }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    // get the identifier of the reference\n   if (userRef.remoteType() === \"id\") {\n      let id = userRef.id();\n    }\n   ```\n    @method id\n   @public\n   @return {String} The id of the record in this belongsTo relationship.\n   */\n\n  id() {\n    return this.identifier?.id || null;\n  }\n\n  /**\n   The link Ember Data will use to fetch or reload this belongs-to\n   relationship. By default it uses only the \"related\" resource linkage.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n   export default Model.extend({\n      user: belongsTo('user', { async: true, inverse: null })\n    });\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            links: {\n              related: '/articles/1/author'\n            }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    // get the identifier of the reference\n   if (userRef.remoteType() === \"link\") {\n      let link = userRef.link();\n    }\n   ```\n    @method link\n   @public\n   @return {String} The link Ember Data will use to fetch or reload this belongs-to relationship.\n   */\n  link() {\n    const resource = this._resource();\n    if (isResourceIdentiferWithRelatedLinks(resource)) {\n      if (resource.links) {\n        const related = resource.links.related;\n        return !related || typeof related === 'string' ? related : related.href;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * any links that have been received for this relationship\n   *\n   * @method links\n   * @public\n   * @return\n   */\n  links() {\n    const resource = this._resource();\n    return resource && resource.links ? resource.links : null;\n  }\n\n  /**\n   The meta data for the belongs-to relationship.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n   export default Model.extend({\n      user: belongsTo('user', { async: true, inverse: null })\n    });\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            links: {\n              related: {\n                href: '/articles/1/author'\n              },\n            },\n            meta: {\n              lastUpdated: 1458014400000\n            }\n          }\n        }\n      }\n    });\n    let userRef = blog.belongsTo('user');\n    userRef.meta() // { lastUpdated: 1458014400000 }\n   ```\n    @method meta\n    @public\n   @return {Object} The meta information for the belongs-to relationship.\n   */\n  meta() {\n    let meta = null;\n    const resource = this._resource();\n    if (resource && resource.meta && typeof resource.meta === 'object') {\n      meta = resource.meta;\n    }\n    return meta;\n  }\n  _resource() {\n    this._ref; // subscribe\n    const cache = this.store.cache;\n    return cache.getRelationship(this.___identifier, this.key);\n  }\n\n  /**\n   This returns a string that represents how the reference will be\n   looked up when it is loaded. If the relationship has a link it will\n   use the \"link\" otherwise it defaults to \"id\".\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    // get the identifier of the reference\n   if (commentsRef.remoteType() === \"ids\") {\n     let ids = commentsRef.ids();\n   } else if (commentsRef.remoteType() === \"link\") {\n     let link = commentsRef.link();\n   }\n   ```\n    @method remoteType\n   @public\n   @return {String} The name of the remote type. This should either be `link` or `id`\n   */\n  remoteType() {\n    const value = this._resource();\n    if (isResourceIdentiferWithRelatedLinks(value)) {\n      return 'link';\n    }\n    return 'id';\n  }\n\n  /**\n   `push` can be used to update the data in the relationship and EmberData\n   will treat the new data as the canonical value of this relationship on\n   the backend. A value of `null` (e.g. `{ data: null }`) can be passed to\n   clear the relationship.\n    Example model\n    ```app/models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @belongsTo('user', { async: true, inverse: null }) user;\n    }\n   ```\n    Setup some initial state, note we haven't loaded the user yet:\n    ```js\n   const blog = store.push({\n      data: {\n        type: 'blog',\n        id: '1',\n        relationships: {\n          user: {\n            data: { type: 'user', id: '1' }\n          }\n        }\n      }\n   });\n    const userRef = blog.belongsTo('user');\n   userRef.id(); // '1'\n   ```\n    Update the state using `push`, note we can do this even without\n   having loaded the user yet by providing a resource-identifier.\n    Both full a resource and a resource-identifier are supported.\n    ```js\n   await userRef.push({\n      data: {\n        type: 'user',\n        id: '2',\n      }\n    });\n     userRef.id(); // '2'\n   ```\n    You may also pass in links and meta fore the relationship, and sideload\n   additional resources that might be required.\n    ```js\n    await userRef.push({\n        data: {\n          type: 'user',\n          id: '2',\n        },\n        links: {\n          related: '/articles/1/author'\n        },\n        meta: {\n          lastUpdated: Date.now()\n        },\n        included: [\n          {\n            type: 'user-preview',\n            id: '2',\n            attributes: {\n              username: '@runspired'\n            }\n          }\n        ]\n      });\n    ```\n    By default, the store will attempt to fetch the record if it is not loaded or its\n   resource data is not included in the call to `push` before resolving the returned\n   promise with the new state..\n    Alternatively, pass `true` as the second argument to avoid fetching unloaded records\n   and instead the promise will resolve with void without attempting to fetch. This is\n   particularly useful if you want to update the state of the relationship without\n   forcing the load of all of the associated record.\n    @method push\n   @public\n   @param {Object} doc a JSONAPI document object describing the new value of this relationship.\n   @param {Boolean} [skipFetch] if `true`, do not attempt to fetch unloaded records\n   @return {Promise<OpaqueRecordInstance | null | void>}\n  */\n  async push(doc, skipFetch) {\n    const {\n      store\n    } = this;\n    const isResourceData = doc.data && isMaybeResource(doc.data);\n    const added = isResourceData ? store._push(doc, true) : doc.data ? store.identifierCache.getOrCreateRecordIdentifier(doc.data) : null;\n    const {\n      identifier\n    } = this.belongsToRelationship;\n    {\n      if (added) {\n        assertPolymorphicType(identifier, this.belongsToRelationship.definition, added, store);\n      }\n    }\n    const newData = {};\n\n    // only set data if it was passed in\n    if (doc.data || doc.data === null) {\n      newData.data = added;\n    }\n    if ('links' in doc) {\n      newData.links = doc.links;\n    }\n    if ('meta' in doc) {\n      newData.meta = doc.meta;\n    }\n    store._join(() => {\n      this.graph.push({\n        op: 'updateRelationship',\n        record: identifier,\n        field: this.key,\n        value: newData\n      });\n    });\n    if (!skipFetch) return this.load();\n  }\n\n  /**\n   `value()` synchronously returns the current value of the belongs-to\n   relationship. Unlike `record.relationshipName`, calling\n   `value()` on a reference does not trigger a fetch if the async\n   relationship is not yet loaded. If the relationship is not loaded\n   it will always return `null`.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class BlogModel extends Model {\n     @belongsTo('user', { async: true, inverse: null }) user;\n   }\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            data: { type: 'user', id: 1 }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    userRef.value(); // null\n    // provide data for reference\n   userRef.push({\n      data: {\n        type: 'user',\n        id: 1,\n        attributes: {\n          username: \"@user\"\n        }\n      }\n    }).then(function(user) {\n      userRef.value(); // user\n    });\n   ```\n    @method value\n    @public\n   @return {Model} the record in this relationship\n   */\n  value() {\n    const resource = this._resource();\n    return resource && resource.data ? this.store.peekRecord(resource.data) : null;\n  }\n\n  /**\n   Loads a record in a belongs-to relationship if it is not already\n   loaded. If the relationship is already loaded this method does not\n   trigger a new load.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class BlogModel extends Model {\n     @belongsTo('user', { async: true, inverse: null }) user;\n   }\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            data: { type: 'user', id: 1 }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    userRef.value(); // null\n    userRef.load().then(function(user) {\n      userRef.value() === user\n    });\n   ```\n    You may also pass in an options object whose properties will be\n   fed forward. This enables you to pass `adapterOptions` into the\n   request given to the adapter via the reference.\n    Example\n    ```javascript\n   userRef.load({ adapterOptions: { isPrivate: true } }).then(function(user) {\n     userRef.value() === user;\n   });\n   ```\n   ```app/adapters/user.js\n   import Adapter from '@ember-data/adapter';\n    export default class UserAdapter extends Adapter {\n     findRecord(store, type, id, snapshot) {\n       // In the adapter you will have access to adapterOptions.\n       let adapterOptions = snapshot.adapterOptions;\n     }\n   });\n   ```\n    @method load\n    @public\n   @param {Object} options the options to pass in.\n   @return {Promise} a promise that resolves with the record in this belongs-to relationship.\n   */\n  async load(options) {\n    const support = LEGACY_SUPPORT.get(this.___identifier);\n    const fetchSyncRel = !this.belongsToRelationship.definition.isAsync && !areAllInverseRecordsLoaded(this.store, this._resource());\n    return fetchSyncRel ? support.reloadBelongsTo(this.key, options).then(() => this.value()) :\n    // we cast to fix the return type since typescript and eslint don't understand async functions\n    // properly\n    support.getBelongsTo(this.key, options);\n  }\n\n  /**\n   Triggers a reload of the value in this relationship. If the\n   remoteType is `\"link\"` Ember Data will use the relationship link to\n   reload the relationship. Otherwise it will reload the record by its\n   id.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class BlogModel extends Model {\n     @belongsTo('user', { async: true, inverse: null }) user;\n   }\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            data: { type: 'user', id: 1 }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    userRef.reload().then(function(user) {\n      userRef.value() === user\n    });\n   ```\n    You may also pass in an options object whose properties will be\n   fed forward. This enables you to pass `adapterOptions` into the\n   request given to the adapter via the reference. A full example\n   can be found in the `load` method.\n    Example\n    ```javascript\n   userRef.reload({ adapterOptions: { isPrivate: true } })\n   ```\n    @method reload\n    @public\n   @param {Object} options the options to pass in.\n   @return {Promise} a promise that resolves with the record in this belongs-to relationship after the reload has completed.\n   */\n  reload(options) {\n    const support = LEGACY_SUPPORT.get(this.___identifier);\n    return support.reloadBelongsTo(this.key, options).then(() => this.value());\n  }\n}\n_BelongsToReference = BelongsToReference;\ndecorateMethodV2(_BelongsToReference.prototype, \"identifier\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat, _ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.cached]);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.defineSignal)(BelongsToReference.prototype, '_ref', 0);\nconst LEGACY_SUPPORT = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_13__.getOrSetGlobal)('LEGACY_SUPPORT', new Map());\nfunction lookupLegacySupport(record) {\n  const identifier = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(record);\n  (test => {\n    if (!test) {\n      throw new Error(`Expected a record`);\n    }\n  })(identifier);\n  let support = LEGACY_SUPPORT.get(identifier);\n  if (!support) {\n    (test => {\n      if (!test) {\n        throw new Error(`Memory Leak Detected`);\n      }\n    })(!record.isDestroyed && !record.isDestroying);\n    support = new LegacySupport(record);\n    LEGACY_SUPPORT.set(identifier, support);\n    LEGACY_SUPPORT.set(record, support);\n  }\n  return support;\n}\nclass LegacySupport {\n  constructor(record) {\n    this.record = record;\n    this.store = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.storeFor)(record);\n    this.identifier = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(record);\n    this.cache = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.peekCache)(record);\n    {\n      const graphFor = (0,_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(__webpack_require__(/*! @ember-data/graph/-private */ \"../../.pnpm/@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string_y53mhzgz7knwb4cijzkjieaw7q/node_modules/@ember-data/graph/dist/-private.js\")).graphFor;\n      this.graph = graphFor(this.store);\n    }\n    this._manyArrayCache = Object.create(null);\n    this._relationshipPromisesCache = Object.create(null);\n    this._relationshipProxyCache = Object.create(null);\n    this._pending = Object.create(null);\n    this.references = Object.create(null);\n  }\n  _syncArray(array) {\n    // It’s possible the parent side of the relationship may have been destroyed by this point\n    if (this.isDestroyed || this.isDestroying) {\n      return;\n    }\n    const currentState = array[_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.SOURCE];\n    const identifier = this.identifier;\n    const [identifiers, jsonApi] = this._getCurrentState(identifier, array.key);\n    if (jsonApi.meta) {\n      array.meta = jsonApi.meta;\n    }\n    if (jsonApi.links) {\n      array.links = jsonApi.links;\n    }\n    currentState.length = 0;\n    (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.fastPush)(currentState, identifiers);\n  }\n  mutate(mutation) {\n    this.cache.mutate(mutation);\n  }\n  _findBelongsTo(key, resource, relationship, options) {\n    // TODO @runspired follow up if parent isNew then we should not be attempting load here\n    // TODO @runspired follow up on whether this should be in the relationship requests cache\n    return this._findBelongsToByJsonApiResource(resource, this.identifier, relationship, options).then(identifier => handleCompletedRelationshipRequest(this, key, relationship, identifier), e => handleCompletedRelationshipRequest(this, key, relationship, null, e));\n  }\n  reloadBelongsTo(key, options) {\n    const loadingPromise = this._relationshipPromisesCache[key];\n    if (loadingPromise) {\n      return loadingPromise;\n    }\n    const relationship = this.graph.get(this.identifier, key);\n    (test => {\n      if (!test) {\n        throw new Error(`Expected ${key} to be a belongs-to relationship`);\n      }\n    })(isBelongsTo(relationship));\n    const resource = this.cache.getRelationship(this.identifier, key);\n    relationship.state.hasFailedLoadAttempt = false;\n    relationship.state.shouldForceReload = true;\n    const promise = this._findBelongsTo(key, resource, relationship, options);\n    if (this._relationshipProxyCache[key]) {\n      // @ts-expect-error\n      return this._updatePromiseProxyFor('belongsTo', key, {\n        promise\n      });\n    }\n    return promise;\n  }\n  getBelongsTo(key, options) {\n    const {\n      identifier,\n      cache\n    } = this;\n    const resource = cache.getRelationship(this.identifier, key);\n    const relatedIdentifier = resource && resource.data ? resource.data : null;\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a stable identifier`);\n      }\n    })(!relatedIdentifier || (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.isStableIdentifier)(relatedIdentifier));\n    const store = this.store;\n    const relationship = this.graph.get(this.identifier, key);\n    (test => {\n      if (!test) {\n        throw new Error(`Expected ${key} to be a belongs-to relationship`);\n      }\n    })(isBelongsTo(relationship));\n    const isAsync = relationship.definition.isAsync;\n    const _belongsToState = {\n      key,\n      store,\n      legacySupport: this,\n      modelName: relationship.definition.type\n    };\n    if (isAsync) {\n      if (relationship.state.hasFailedLoadAttempt) {\n        return this._relationshipProxyCache[key];\n      }\n      const promise = this._findBelongsTo(key, resource, relationship, options);\n      const isLoaded = relatedIdentifier && store._instanceCache.recordIsLoaded(relatedIdentifier);\n      return this._updatePromiseProxyFor('belongsTo', key, {\n        promise,\n        content: isLoaded ? store._instanceCache.getRecord(relatedIdentifier) : null,\n        _belongsToState\n      });\n    } else {\n      if (relatedIdentifier === null) {\n        return null;\n      } else {\n        const toReturn = store._instanceCache.getRecord(relatedIdentifier);\n        (test => {\n          if (!test) {\n            throw new Error(`You looked up the '${key}' relationship on a '${identifier.type}' with id ${identifier.id || 'null'} but some of the associated records were not loaded. Either make sure they are all loaded together with the parent record, or specify that the relationship is async (\\`belongsTo(<type>, { async: true, inverse: <inverse> })\\`)`);\n          }\n        })(toReturn === null || store._instanceCache.recordIsLoaded(relatedIdentifier, true));\n        return toReturn;\n      }\n    }\n  }\n  setDirtyBelongsTo(key, value) {\n    return this.cache.mutate({\n      op: 'replaceRelatedRecord',\n      record: this.identifier,\n      field: key,\n      value: extractIdentifierFromRecord(value)\n    },\n    // @ts-expect-error\n    true);\n  }\n  _getCurrentState(identifier, field) {\n    const jsonApi = this.cache.getRelationship(identifier, field);\n    const cache = this.store._instanceCache;\n    const identifiers = [];\n    if (jsonApi.data) {\n      for (let i = 0; i < jsonApi.data.length; i++) {\n        const relatedIdentifier = jsonApi.data[i];\n        (test => {\n          if (!test) {\n            throw new Error(`Expected a stable identifier`);\n          }\n        })((0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.isStableIdentifier)(relatedIdentifier));\n        if (cache.recordIsLoaded(relatedIdentifier, true)) {\n          identifiers.push(relatedIdentifier);\n        }\n      }\n    }\n    return [identifiers, jsonApi];\n  }\n  getManyArray(key, definition) {\n    {\n      let manyArray = this._manyArrayCache[key];\n      if (!definition) {\n        definition = this.graph.get(this.identifier, key).definition;\n      }\n      if (!manyArray) {\n        const [identifiers, doc] = this._getCurrentState(this.identifier, key);\n        manyArray = new RelatedCollection({\n          store: this.store,\n          type: definition.type,\n          identifier: this.identifier,\n          cache: this.cache,\n          identifiers,\n          key,\n          meta: doc.meta || null,\n          links: doc.links || null,\n          isPolymorphic: definition.isPolymorphic,\n          isAsync: definition.isAsync,\n          _inverseIsAsync: definition.inverseIsAsync,\n          manager: this,\n          isLoaded: !definition.isAsync,\n          allowMutation: true\n        });\n        this._manyArrayCache[key] = manyArray;\n      }\n      return manyArray;\n    }\n    (test => {\n      {\n        throw new Error('hasMany only works with the @ember-data/json-api package');\n      }\n    })();\n  }\n  fetchAsyncHasMany(key, relationship, manyArray, options) {\n    {\n      let loadingPromise = this._relationshipPromisesCache[key];\n      if (loadingPromise) {\n        return loadingPromise;\n      }\n      const jsonApi = this.cache.getRelationship(this.identifier, key);\n      const promise = this._findHasManyByJsonApiResource(jsonApi, this.identifier, relationship, options);\n      if (!promise) {\n        manyArray.isLoaded = true;\n        return Promise.resolve(manyArray);\n      }\n      loadingPromise = promise.then(() => handleCompletedRelationshipRequest(this, key, relationship, manyArray), e => handleCompletedRelationshipRequest(this, key, relationship, manyArray, e));\n      this._relationshipPromisesCache[key] = loadingPromise;\n      return loadingPromise;\n    }\n    (test => {\n      {\n        throw new Error('hasMany only works with the @ember-data/json-api package');\n      }\n    })();\n  }\n  reloadHasMany(key, options) {\n    {\n      const loadingPromise = this._relationshipPromisesCache[key];\n      if (loadingPromise) {\n        return loadingPromise;\n      }\n      const relationship = this.graph.get(this.identifier, key);\n      const {\n        definition,\n        state\n      } = relationship;\n      state.hasFailedLoadAttempt = false;\n      state.shouldForceReload = true;\n      const manyArray = this.getManyArray(key, definition);\n      const promise = this.fetchAsyncHasMany(key, relationship, manyArray, options);\n      if (this._relationshipProxyCache[key]) {\n        return this._updatePromiseProxyFor('hasMany', key, {\n          promise\n        });\n      }\n      return promise;\n    }\n    (test => {\n      {\n        throw new Error(`hasMany only works with the @ember-data/json-api package`);\n      }\n    })();\n  }\n  getHasMany(key, options) {\n    {\n      const relationship = this.graph.get(this.identifier, key);\n      const {\n        definition,\n        state\n      } = relationship;\n      const manyArray = this.getManyArray(key, definition);\n      if (definition.isAsync) {\n        if (state.hasFailedLoadAttempt) {\n          return this._relationshipProxyCache[key];\n        }\n        const promise = this.fetchAsyncHasMany(key, relationship, manyArray, options);\n        return this._updatePromiseProxyFor('hasMany', key, {\n          promise,\n          content: manyArray\n        });\n      } else {\n        (test => {\n          if (!test) {\n            throw new Error(`You looked up the '${key}' relationship on a '${this.identifier.type}' with id ${this.identifier.id || 'null'} but some of the associated records were not loaded. Either make sure they are all loaded together with the parent record, or specify that the relationship is async ('hasMany(<type>, { async: true, inverse: <inverse> })')`);\n          }\n        })(!anyUnloaded(this.store, relationship));\n        return manyArray;\n      }\n    }\n    (test => {\n      {\n        throw new Error(`hasMany only works with the @ember-data/json-api package`);\n      }\n    })();\n  }\n  _updatePromiseProxyFor(kind, key, args) {\n    let promiseProxy = this._relationshipProxyCache[key];\n    if (kind === 'hasMany') {\n      const {\n        promise,\n        content\n      } = args;\n      if (promiseProxy) {\n        (test => {\n          if (!test) {\n            throw new Error(`Expected a PromiseManyArray`);\n          }\n        })('_update' in promiseProxy);\n        promiseProxy._update(promise, content);\n      } else {\n        promiseProxy = this._relationshipProxyCache[key] = new PromiseManyArray(promise, content);\n      }\n      return promiseProxy;\n    }\n    if (promiseProxy) {\n      const {\n        promise,\n        content\n      } = args;\n      (test => {\n        if (!test) {\n          throw new Error(`Expected a PromiseBelongsTo`);\n        }\n      })('_belongsToState' in promiseProxy);\n      if (content !== undefined) {\n        promiseProxy.set('content', content);\n      }\n      void promiseProxy.set('promise', promise);\n    } else {\n      promiseProxy = PromiseBelongsTo.create(args);\n      this._relationshipProxyCache[key] = promiseProxy;\n    }\n    return promiseProxy;\n  }\n  referenceFor(kind, name) {\n    let reference = this.references[name];\n    if (!reference) {\n      const {\n        graph,\n        identifier\n      } = this;\n      const relationship = graph.get(identifier, name);\n      {\n        if (kind) {\n          const modelName = identifier.type;\n          const actualRelationshipKind = relationship.definition.kind;\n          (test => {\n            if (!test) {\n              throw new Error(`You tried to get the '${name}' relationship on a '${modelName}' via record.${kind}('${name}'), but the relationship is of kind '${actualRelationshipKind}'. Use record.${actualRelationshipKind}('${name}') instead.`);\n            }\n          })(actualRelationshipKind === kind);\n        }\n      }\n      const relationshipKind = relationship.definition.kind;\n      if (relationshipKind === 'belongsTo') {\n        reference = new BelongsToReference(this.store, graph, identifier, relationship, name);\n      } else if (relationshipKind === 'hasMany') {\n        reference = new HasManyReference(this.store, graph, identifier, relationship, name);\n      }\n      this.references[name] = reference;\n    }\n    return reference;\n  }\n  _findHasManyByJsonApiResource(resource, parentIdentifier, relationship, options = {}) {\n    {\n      if (!resource) {\n        return;\n      }\n      const {\n        definition,\n        state\n      } = relationship;\n      (0,_ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_12__.upgradeStore)(this.store);\n      const adapter = this.store.adapterFor?.(definition.type);\n      const {\n        isStale,\n        hasDematerializedInverse,\n        hasReceivedData,\n        isEmpty,\n        shouldForceReload\n      } = state;\n      const allInverseRecordsAreLoaded = areAllInverseRecordsLoaded(this.store, resource);\n      const identifiers = resource.data;\n      const shouldFindViaLink = resource.links && resource.links.related && (typeof adapter?.findHasMany === 'function' || typeof identifiers === 'undefined') && (shouldForceReload || hasDematerializedInverse || isStale || !allInverseRecordsAreLoaded && !isEmpty);\n      const field = this.store.schema.fields({\n        type: definition.inverseType\n      }).get(definition.key);\n      (test => {\n        if (!test) {\n          throw new Error(`Expected a hasMany field definition for ${definition.inverseType}.${definition.key}`);\n        }\n      })(field && field.kind === 'hasMany');\n      const request = {\n        useLink: shouldFindViaLink,\n        field,\n        links: resource.links,\n        meta: resource.meta,\n        options,\n        record: parentIdentifier\n      };\n\n      // fetch via link\n      if (shouldFindViaLink) {\n        (test => {\n          if (!test) {\n            throw new Error(`Expected collection to be an array`);\n          }\n        })(!identifiers || Array.isArray(identifiers));\n        (test => {\n          if (!test) {\n            throw new Error(`Expected stable identifiers`);\n          }\n        })(!identifiers || identifiers.every(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.isStableIdentifier));\n        return this.store.request({\n          op: 'findHasMany',\n          records: identifiers || [],\n          data: request,\n          cacheOptions: {\n            [Symbol.for('wd:skip-cache')]: true\n          }\n        });\n      }\n      const preferLocalCache = hasReceivedData && !isEmpty;\n      const hasLocalPartialData = hasDematerializedInverse || isEmpty && Array.isArray(identifiers) && identifiers.length > 0;\n      const attemptLocalCache = !shouldForceReload && !isStale && (preferLocalCache || hasLocalPartialData);\n      if (attemptLocalCache && allInverseRecordsAreLoaded) {\n        return;\n      }\n      const hasData = hasReceivedData && !isEmpty;\n      if (attemptLocalCache || hasData || hasLocalPartialData) {\n        (test => {\n          if (!test) {\n            throw new Error(`Expected collection to be an array`);\n          }\n        })(Array.isArray(identifiers));\n        (test => {\n          if (!test) {\n            throw new Error(`Expected stable identifiers`);\n          }\n        })(identifiers.every(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.isStableIdentifier));\n        options.reload = options.reload || !attemptLocalCache || undefined;\n        return this.store.request({\n          op: 'findHasMany',\n          records: identifiers,\n          data: request,\n          cacheOptions: {\n            [Symbol.for('wd:skip-cache')]: true\n          }\n        });\n      }\n\n      // we were explicitly told we have no data and no links.\n      //   TODO if the relationshipIsStale, should we hit the adapter anyway?\n      return;\n    }\n    (test => {\n      {\n        throw new Error(`hasMany only works with the @ember-data/json-api package`);\n      }\n    })();\n  }\n  _findBelongsToByJsonApiResource(resource, parentIdentifier, relationship, options = {}) {\n    if (!resource) {\n      return Promise.resolve(null);\n    }\n    const key = relationship.definition.key;\n\n    // interleaved promises mean that we MUST cache this here\n    // in order to prevent infinite re-render if the request\n    // fails.\n    if (this._pending[key]) {\n      return this._pending[key];\n    }\n    const identifier = resource.data ? resource.data : null;\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a stable identifier`);\n      }\n    })(!identifier || (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.isStableIdentifier)(identifier));\n    const {\n      isStale,\n      hasDematerializedInverse,\n      hasReceivedData,\n      isEmpty,\n      shouldForceReload\n    } = relationship.state;\n    const allInverseRecordsAreLoaded = areAllInverseRecordsLoaded(this.store, resource);\n    const shouldFindViaLink = resource.links?.related && (shouldForceReload || hasDematerializedInverse || isStale || !allInverseRecordsAreLoaded && !isEmpty);\n    const field = this.store.schema.fields(this.identifier).get(relationship.definition.key);\n    (test => {\n      if (!test) {\n        throw new Error(`Attempted to access a belongsTo relationship but no definition exists for it`);\n      }\n    })(field && field.kind === 'belongsTo');\n    const request = {\n      useLink: shouldFindViaLink,\n      field,\n      links: resource.links,\n      meta: resource.meta,\n      options,\n      record: parentIdentifier\n    };\n\n    // fetch via link\n    if (shouldFindViaLink) {\n      const future = this.store.request({\n        op: 'findBelongsTo',\n        records: identifier ? [identifier] : [],\n        data: request,\n        cacheOptions: {\n          [Symbol.for('wd:skip-cache')]: true\n        }\n      });\n      this._pending[key] = future.then(doc => doc.content).finally(() => {\n        this._pending[key] = undefined;\n      });\n      return this._pending[key];\n    }\n    const preferLocalCache = hasReceivedData && allInverseRecordsAreLoaded && !isEmpty;\n    const hasLocalPartialData = hasDematerializedInverse || isEmpty && resource.data;\n    // null is explicit empty, undefined is \"we don't know anything\"\n    const localDataIsEmpty = !identifier;\n    const attemptLocalCache = !shouldForceReload && !isStale && (preferLocalCache || hasLocalPartialData);\n\n    // we dont need to fetch and are empty\n    if (attemptLocalCache && localDataIsEmpty) {\n      return Promise.resolve(null);\n    }\n\n    // we dont need to fetch because we are local state\n    const resourceIsLocal = identifier?.id === null;\n    if (attemptLocalCache && allInverseRecordsAreLoaded || resourceIsLocal) {\n      return Promise.resolve(identifier);\n    }\n\n    // we may need to fetch\n    if (identifier) {\n      (test => {\n        if (!test) {\n          throw new Error(`Cannot fetch belongs-to relationship with no information`);\n        }\n      })(identifier);\n      options.reload = options.reload || !attemptLocalCache || undefined;\n      this._pending[key] = this.store.request({\n        op: 'findBelongsTo',\n        records: [identifier],\n        data: request,\n        cacheOptions: {\n          [Symbol.for('wd:skip-cache')]: true\n        }\n      }).then(doc => doc.content).finally(() => {\n        this._pending[key] = undefined;\n      });\n      return this._pending[key];\n    }\n\n    // we were explicitly told we have no data and no links.\n    //   TODO if the relationshipIsStale, should we hit the adapter anyway?\n    return Promise.resolve(null);\n  }\n  destroy() {\n    this.isDestroying = true;\n    let cache = this._manyArrayCache;\n    this._manyArrayCache = Object.create(null);\n    Object.keys(cache).forEach(key => {\n      cache[key].destroy();\n    });\n    cache = this._relationshipProxyCache;\n    this._relationshipProxyCache = Object.create(null);\n    Object.keys(cache).forEach(key => {\n      const proxy = cache[key];\n      if (proxy.destroy) {\n        proxy.destroy();\n      }\n    });\n    cache = this.references;\n    this.references = Object.create(null);\n    Object.keys(cache).forEach(key => {\n      cache[key].destroy();\n    });\n    this.isDestroyed = true;\n  }\n}\nfunction handleCompletedRelationshipRequest(recordExt, key, relationship, value, error) {\n  delete recordExt._relationshipPromisesCache[key];\n  relationship.state.shouldForceReload = false;\n  const isHasMany = relationship.definition.kind === 'hasMany';\n  if (isHasMany) {\n    // we don't notify the record property here to avoid refetch\n    // only the many array\n    value.notify();\n  }\n  if (error) {\n    relationship.state.hasFailedLoadAttempt = true;\n    const proxy = recordExt._relationshipProxyCache[key];\n    // belongsTo relationships are sometimes unloaded\n    // when a load fails, in this case we need\n    // to make sure that we aren't proxying\n    // to destroyed content\n    // for the sync belongsTo reload case there will be no proxy\n    // for the async reload case there will be no proxy if the ui\n    // has never been accessed\n    if (proxy && !isHasMany) {\n      // @ts-expect-error unsure why this is not resolving the boolean but async belongsTo is weird\n      if (proxy.content && proxy.content.isDestroying) {\n        proxy.set('content', null);\n      }\n      recordExt.store.notifications._flush();\n    }\n    throw error;\n  }\n  if (isHasMany) {\n    value.isLoaded = true;\n  } else {\n    recordExt.store.notifications._flush();\n  }\n  relationship.state.hasFailedLoadAttempt = false;\n  // only set to not stale if no error is thrown\n  relationship.state.isStale = false;\n  return isHasMany || !value ? value : recordExt.store.peekRecord(value);\n}\nfunction extractIdentifierFromRecord(record) {\n  if (!record) {\n    return null;\n  }\n  return (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(record);\n}\nfunction anyUnloaded(store, relationship) {\n  const graph = store._graph;\n  (test => {\n    if (!test) {\n      throw new Error(`Expected a Graph instance to be available`);\n    }\n  })(graph);\n  const relationshipData = graph.getData(relationship.identifier, relationship.definition.key);\n  const state = relationshipData.data;\n  const cache = store._instanceCache;\n  const unloaded = state?.find(s => {\n    const isLoaded = cache.recordIsLoaded(s, true);\n    return !isLoaded;\n  });\n  return unloaded || false;\n}\nfunction areAllInverseRecordsLoaded(store, resource) {\n  const instanceCache = store._instanceCache;\n  const identifiers = resource.data;\n  if (Array.isArray(identifiers)) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected stable identifiers`);\n      }\n    })(identifiers.every(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.isStableIdentifier));\n    // treat as collection\n    // check for unloaded records\n    return identifiers.every(identifier => instanceCache.recordIsLoaded(identifier));\n  }\n\n  // treat as single resource\n  if (!identifiers) return true;\n  (test => {\n    if (!test) {\n      throw new Error(`Expected stable identifiers`);\n    }\n  })((0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.isStableIdentifier)(identifiers));\n  return instanceCache.recordIsLoaded(identifiers);\n}\nfunction isBelongsTo(relationship) {\n  return relationship.definition.kind === 'belongsTo';\n}\n\n// we force the type here to our own construct because mixin and extend patterns\n// lose generic signatures. We also do this because we need to Omit `clear` from\n// the type of ArrayProxy as we override it's signature.\nconst ArrayProxyWithCustomOverrides = _ember_array_proxy__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\n\n/**\n  Holds validation errors for a given record, organized by attribute names.\n\n  This class is not directly instantiable.\n\n  Every `Model` has an `errors` property that is an instance of\n  `Errors`. This can be used to display validation error\n  messages returned from the server when a `record.save()` rejects.\n\n  For Example, if you had a `User` model that looked like this:\n\n  ```app/models/user.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class UserModel extends Model {\n    @attr('string') username;\n    @attr('string') email;\n  }\n  ```\n  And you attempted to save a record that did not validate on the backend:\n\n  ```javascript\n  let user = store.createRecord('user', {\n    username: 'tomster',\n    email: 'invalidEmail'\n  });\n  user.save();\n  ```\n\n  Your backend would be expected to return an error response that described\n  the problem, so that error messages can be generated on the app.\n\n  API responses will be translated into instances of `Errors` differently,\n  depending on the specific combination of adapter and serializer used. You\n  may want to check the documentation or the source code of the libraries\n  that you are using, to know how they expect errors to be communicated.\n\n  Errors can be displayed to the user by accessing their property name\n  to get an array of all the error objects for that property. Each\n  error object is a JavaScript object with two keys:\n\n  - `message` A string containing the error message from the backend\n  - `attribute` The name of the property associated with this error message\n\n  ```handlebars\n  <label>Username: <Input @value={{@model.username}} /> </label>\n  {{#each @model.errors.username as |error|}}\n    <div class=\"error\">\n      {{error.message}}\n    </div>\n  {{/each}}\n\n  <label>Email: <Input @value={{@model.email}} /> </label>\n  {{#each @model.errors.email as |error|}}\n    <div class=\"error\">\n      {{error.message}}\n    </div>\n  {{/each}}\n  ```\n\n  You can also access the special `messages` property on the error\n  object to get an array of all the error strings.\n\n  ```handlebars\n  {{#each @model.errors.messages as |message|}}\n    <div class=\"error\">\n      {{message}}\n    </div>\n  {{/each}}\n  ```\n\n  @class Errors\n  @public\n  @extends Ember.ArrayProxy\n */\nvar _messages2 = /*#__PURE__*/new WeakMap();\nvar _isEmpty = /*#__PURE__*/new WeakMap();\nclass Errors extends ArrayProxyWithCustomOverrides {\n  constructor(...args) {\n    super(...args);\n    _classPrivateFieldInitSpec(this, _messages2, (initializeDeferredDecorator(this, \"messages\"), void 0));\n    _classPrivateFieldInitSpec(this, _isEmpty, (initializeDeferredDecorator(this, \"isEmpty\"), void 0));\n  }\n  /**\n    @property errorsByAttributeName\n    @type {MapWithDefault}\n    @private\n  */\n  get errorsByAttributeName() {\n    return new Map();\n  }\n\n  /**\n    Returns errors for a given attribute\n     ```javascript\n    let user = store.createRecord('user', {\n      username: 'tomster',\n      email: 'invalidEmail'\n    });\n    user.save().catch(function(){\n      user.errors.errorsFor('email'); // returns:\n      // [{attribute: \"email\", message: \"Doesn't look like a valid email.\"}]\n    });\n    ```\n     @method errorsFor\n    @public\n    @param {String} attribute\n    @return {Array}\n  */\n\n  errorsFor(attribute) {\n    const map = this.errorsByAttributeName;\n    let errors = map.get(attribute);\n    if (errors === undefined) {\n      errors = (0,_ember_array__WEBPACK_IMPORTED_MODULE_9__.A)();\n      map.set(attribute, errors);\n    }\n\n    // Errors may be a native array with extensions turned on. Since we access\n    // the array via a method, and not a computed or using `Ember.get`, it does\n    // not entangle properly with autotracking, so we entangle manually by\n    // getting the `[]` property.\n    (0,_ember_object__WEBPACK_IMPORTED_MODULE_3__.get)(errors, '[]');\n    return errors;\n  }\n\n  /**\n    An array containing all of the error messages for this\n    record. This is useful for displaying all errors to the user.\n     ```handlebars\n    {{#each @model.errors.messages as |message|}}\n      <div class=\"error\">\n        {{message}}\n      </div>\n    {{/each}}\n    ```\n     @property messages\n    @public\n    @type {Array}\n  */\n\n  /**\n    @property content\n    @type {Array}\n    @private\n  */\n  get content() {\n    return (0,_ember_array__WEBPACK_IMPORTED_MODULE_9__.A)();\n  }\n\n  /**\n    @method unknownProperty\n    @private\n  */\n\n  unknownProperty(attribute) {\n    const errors = this.errorsFor(attribute);\n    if (errors.length === 0) {\n      return undefined;\n    }\n    return errors;\n  }\n\n  /**\n    Total number of errors.\n     @property length\n    @type {Number}\n    @public\n    @readOnly\n  */\n\n  /**\n    `true` if we have no errors.\n     @property isEmpty\n    @type {Boolean}\n    @public\n    @readOnly\n  */\n\n  /**\n   Manually adds errors to the record. This will trigger the `becameInvalid` event/ lifecycle method on\n    the record and transition the record into an `invalid` state.\n    Example\n   ```javascript\n    let errors = user.errors;\n     // add multiple errors\n    errors.add('password', [\n      'Must be at least 12 characters',\n      'Must contain at least one symbol',\n      'Cannot contain your name'\n    ]);\n     errors.errorsFor('password');\n    // =>\n    // [\n    //   { attribute: 'password', message: 'Must be at least 12 characters' },\n    //   { attribute: 'password', message: 'Must contain at least one symbol' },\n    //   { attribute: 'password', message: 'Cannot contain your name' },\n    // ]\n     // add a single error\n    errors.add('username', 'This field is required');\n     errors.errorsFor('username');\n    // =>\n    // [\n    //   { attribute: 'username', message: 'This field is required' },\n    // ]\n   ```\n    @method add\n    @public\n    @param {string} attribute - the property name of an attribute or relationship\n    @param {string[]|string} messages - an error message or array of error messages for the attribute\n   */\n  add(attribute, messages) {\n    const errors = this._findOrCreateMessages(attribute, messages);\n    this.addObjects(errors);\n    this.errorsFor(attribute).addObjects(errors);\n    this.__record.currentState.notify('isValid');\n    this.notifyPropertyChange(attribute);\n  }\n\n  /**\n    @method _findOrCreateMessages\n    @private\n  */\n  _findOrCreateMessages(attribute, messages) {\n    const errors = this.errorsFor(attribute);\n    const messagesArray = Array.isArray(messages) ? messages : [messages];\n    const _messages = new Array(messagesArray.length);\n    for (let i = 0; i < messagesArray.length; i++) {\n      const message = messagesArray[i];\n      const err = errors.findBy('message', message);\n      if (err) {\n        _messages[i] = err;\n      } else {\n        _messages[i] = {\n          attribute: attribute,\n          message\n        };\n      }\n    }\n    return _messages;\n  }\n\n  /**\n   Manually removes all errors for a given member from the record.\n     This will transition the record into a `valid` state, and\n    triggers the `becameValid` event and lifecycle method.\n    Example:\n    ```javascript\n    let errors = user.errors;\n    errors.add('phone', ['error-1', 'error-2']);\n     errors.errorsFor('phone');\n    // =>\n    // [\n    //   { attribute: 'phone', message: 'error-1' },\n    //   { attribute: 'phone', message: 'error-2' },\n    // ]\n     errors.remove('phone');\n     errors.errorsFor('phone');\n    // => undefined\n   ```\n   @method remove\n    @public\n   @param {string} member - the property name of an attribute or relationship\n   */\n  remove(attribute) {\n    if (this.isEmpty) {\n      return;\n    }\n    const content = this.rejectBy('attribute', attribute);\n    this.content.setObjects(content);\n\n    // Although errorsByAttributeName.delete is technically enough to sync errors state, we also\n    // must mutate the array as well for autotracking\n    const errors = this.errorsFor(attribute);\n    for (let i = 0; i < errors.length; i++) {\n      if (errors[i].attribute === attribute) {\n        // .replace from Ember.NativeArray is necessary. JS splice will not work.\n        errors.replace(i, 1);\n      }\n    }\n    this.errorsByAttributeName.delete(attribute);\n    this.__record.currentState.notify('isValid');\n    this.notifyPropertyChange(attribute);\n    this.notifyPropertyChange('length');\n  }\n\n  /**\n   Manually clears all errors for the record.\n     This will transition the record into a `valid` state, and\n     will trigger the `becameValid` event and lifecycle method.\n   Example:\n    ```javascript\n   let errors = user.errors;\n   errors.add('username', ['error-a']);\n   errors.add('phone', ['error-1', 'error-2']);\n    errors.errorsFor('username');\n   // =>\n   // [\n   //   { attribute: 'username', message: 'error-a' },\n   // ]\n    errors.errorsFor('phone');\n   // =>\n   // [\n   //   { attribute: 'phone', message: 'error-1' },\n   //   { attribute: 'phone', message: 'error-2' },\n   // ]\n    errors.clear();\n    errors.errorsFor('username');\n   // => undefined\n    errors.errorsFor('phone');\n   // => undefined\n    errors.messages\n   // => []\n   ```\n   @method clear\n   @public\n   */\n  clear() {\n    if (this.isEmpty) {\n      return;\n    }\n    const errorsByAttributeName = this.errorsByAttributeName;\n    const attributes = [];\n    errorsByAttributeName.forEach(function (_, attribute) {\n      attributes.push(attribute);\n    });\n    errorsByAttributeName.clear();\n    attributes.forEach(attribute => {\n      this.notifyPropertyChange(attribute);\n    });\n    this.__record.currentState.notify('isValid');\n    super.clear();\n  }\n\n  /**\n    Checks if there are error messages for the given attribute.\n     ```app/controllers/user/edit.js\n    export default class UserEditController extends Controller {\n      @action\n      save(user) {\n        if (user.errors.has('email')) {\n          return alert('Please update your email before attempting to save.');\n        }\n        user.save();\n      }\n    }\n    ```\n     @method has\n    @public\n    @param {String} attribute\n    @return {Boolean} true if there some errors on given attribute\n  */\n  has(attribute) {\n    return this.errorsFor(attribute).length > 0;\n  }\n}\n_Errors = Errors;\ndecorateMethodV2(_Errors.prototype, \"errorsByAttributeName\", [(0,_ember_object__WEBPACK_IMPORTED_MODULE_3__.computed)()]);\ndecorateFieldV2(_Errors.prototype, \"messages\", [(0,_ember_object_computed__WEBPACK_IMPORTED_MODULE_11__.mapBy)('content', 'message')]);\ndecorateMethodV2(_Errors.prototype, \"content\", [(0,_ember_object__WEBPACK_IMPORTED_MODULE_3__.computed)()]);\ndecorateFieldV2(_Errors.prototype, \"isEmpty\", [(0,_ember_object_computed__WEBPACK_IMPORTED_MODULE_11__.not)('length')]);\nfunction rollbackAttributes() {\n  const {\n    currentState\n  } = this;\n  const {\n    isNew\n  } = currentState;\n  this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_8__.RecordStore]._join(() => {\n    (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.peekCache)(this).rollbackAttrs((0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.recordIdentifierFor)(this));\n    this.errors.clear();\n    currentState.cleanErrorRequests();\n    if (isNew) {\n      this.unloadRecord();\n    }\n  });\n}\nfunction unloadRecord() {\n  if (this.currentState.isNew && (this.isDestroyed || this.isDestroying)) {\n    return;\n  }\n  this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_8__.RecordStore].unloadRecord(this);\n}\nfunction belongsTo(prop) {\n  return lookupLegacySupport(this).referenceFor('belongsTo', prop);\n}\nfunction hasMany(prop) {\n  return lookupLegacySupport(this).referenceFor('hasMany', prop);\n}\nfunction reload(options = {}) {\n  options.isReloading = true;\n  options.reload = true;\n  const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.recordIdentifierFor)(this);\n  (test => {\n    if (!test) {\n      throw new Error(`You cannot reload a record without an ID`);\n    }\n  })(identifier.id);\n  this.isReloading = true;\n  const promise = this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_8__.RecordStore].request({\n    op: 'findRecord',\n    data: {\n      options,\n      record: identifier\n    },\n    cacheOptions: {\n      [Symbol.for('wd:skip-cache')]: true\n    }\n  }).then(() => this).finally(() => {\n    this.isReloading = false;\n  });\n  return promise;\n}\nfunction changedAttributes() {\n  return (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.peekCache)(this).changedAttrs((0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.recordIdentifierFor)(this));\n}\nfunction serialize(options) {\n  (0,_ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_12__.upgradeStore)(this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_8__.RecordStore]);\n  return this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_8__.RecordStore].serializeRecord(this, options);\n}\nfunction deleteRecord() {\n  // ensure we've populated currentState prior to deleting a new record\n  if (this.currentState) {\n    this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_8__.RecordStore].deleteRecord(this);\n  }\n}\nfunction save(options) {\n  let promise;\n  if (this.currentState.isNew && this.currentState.isDeleted) {\n    promise = Promise.resolve(this);\n  } else {\n    this.errors.clear();\n    promise = this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_8__.RecordStore].saveRecord(this, options);\n  }\n  return promise;\n}\nfunction destroyRecord(options) {\n  const {\n    isNew\n  } = this.currentState;\n  this.deleteRecord();\n  if (isNew) {\n    return Promise.resolve(this);\n  }\n  return this.save(options).then(_ => {\n    this.unloadRecord();\n    return this;\n  });\n}\nfunction createSnapshot() {\n  const store = this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_8__.RecordStore];\n  (0,_ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_12__.upgradeStore)(store);\n  if (!store._fetchManager) {\n    const FetchManager = (0,_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(__webpack_require__(/*! @ember-data/legacy-compat/-private */ \"../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/-private.js\")).FetchManager;\n    store._fetchManager = new FetchManager(store);\n  }\n\n  // @ts-expect-error Typescript isn't able to curry narrowed args that are divorced from each other.\n  return store._fetchManager.createSnapshot((0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.recordIdentifierFor)(this));\n}\nfunction notifyChanges(identifier, value, key, record, store) {\n  if (value === 'attributes') {\n    if (key) {\n      notifyAttribute(store, identifier, key, record);\n    } else {\n      record.eachAttribute(name => {\n        notifyAttribute(store, identifier, name, record);\n      });\n    }\n  } else if (value === 'relationships') {\n    if (key) {\n      const meta = record.constructor.relationshipsByName.get(key);\n      (test => {\n        if (!test) {\n          throw new Error(`Expected to find a relationship for ${key} on ${identifier.type}`);\n        }\n      })(meta);\n      notifyRelationship(identifier, key, record, meta);\n    } else {\n      record.eachRelationship((name, meta) => {\n        notifyRelationship(identifier, name, record, meta);\n      });\n    }\n  } else if (value === 'identity') {\n    record.notifyPropertyChange('id');\n  }\n}\nfunction notifyRelationship(identifier, key, record, meta) {\n  if (meta.kind === 'belongsTo') {\n    record.notifyPropertyChange(key);\n  } else if (meta.kind === 'hasMany') {\n    const support = LEGACY_SUPPORT.get(identifier);\n    const manyArray = support && support._manyArrayCache[key];\n    const hasPromise = support && support._relationshipPromisesCache[key];\n    if (manyArray && hasPromise) {\n      // do nothing, we will notify the ManyArray directly\n      // once the fetch has completed.\n      return;\n    }\n    if (manyArray) {\n      manyArray.notify();\n\n      //We need to notifyPropertyChange in the adding case because we need to make sure\n      //we fetch the newly added record in case it is unloaded\n      //TODO(Igor): Consider whether we could do this only if the record state is unloaded\n      (test => {\n        if (!test) {\n          throw new Error(`Expected options to exist on relationship meta`);\n        }\n      })(meta.options);\n      (test => {\n        if (!test) {\n          throw new Error(`Expected async to exist on relationship meta options`);\n        }\n      })('async' in meta.options);\n      if (meta.options.async) {\n        record.notifyPropertyChange(key);\n      }\n    }\n  }\n}\nfunction notifyAttribute(store, identifier, key, record) {\n  const currentValue = (0,_ember_object_internals__WEBPACK_IMPORTED_MODULE_16__.cacheFor)(record, key);\n  const cache = store.cache;\n  if (currentValue !== cache.getAttr(identifier, key)) {\n    record.notifyPropertyChange(key);\n  }\n}\nconst SOURCE_POINTER_REGEXP = /^\\/?data\\/(attributes|relationships)\\/(.*)/;\nconst SOURCE_POINTER_PRIMARY_REGEXP = /^\\/?data/;\nconst PRIMARY_ATTRIBUTE_KEY = 'base';\nfunction isInvalidError(error) {\n  return !!error && error instanceof Error && 'isAdapterError' in error && error.isAdapterError === true && 'code' in error && error.code === 'InvalidError';\n}\n\n/**\n * A decorator that caches a getter while\n * providing the ability to bust that cache\n * when we so choose in a way that notifies\n * tracking systems.\n *\n * @internal\n */\nfunction tagged(_target, key, desc) {\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const getter = desc.get;\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const setter = desc.set;\n  desc.get = function () {\n    const signal = (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.getSignal)(this, key, true);\n    (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.subscribe)(signal);\n    if (signal.shouldReset) {\n      signal.shouldReset = false;\n      signal.lastValue = getter.call(this);\n    }\n    return signal.lastValue;\n  };\n  desc.set = function (v) {\n    (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.getSignal)(this, key, true); // ensure signal is setup in case we want to use it.\n    // probably notify here but not yet.\n    setter.call(this, v);\n  };\n  (0,_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat)(desc);\n  return desc;\n}\nfunction notifySignal(obj, key) {\n  const signal = (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.peekSignal)(obj, key);\n  if (signal) {\n    signal.shouldReset = true;\n    (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.addToTransaction)(signal);\n  }\n}\n\n/**\nHistorically EmberData managed a state machine\nfor each record, the localState for which\nwas reflected onto Model.\n\nThis implements the flags and stateName for backwards compat\nwith the state tree that used to be possible (listed below).\n\nstateName and dirtyType are candidates for deprecation.\n\nroot\n  empty\n    deleted    // hidden from stateName\n    preloaded  // hidden from stateName\n\n  loading\n     empty     // hidden from stateName\n     preloaded // hidden from stateName\n\n  loaded\n    saved\n    updated\n      uncommitted\n      invalid\n      inFlight\n    created\n      uncommitted\n      invalid\n      inFlight\n\n  deleted\n    saved\n      new      // hidden from stateName\n    uncommitted\n    invalid\n    inFlight\n\n  @internal\n*/\nclass RecordState {\n  constructor(record) {\n    const store = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.storeFor)(record);\n    const identity = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.recordIdentifierFor)(record);\n    this.identifier = identity;\n    this.record = record;\n    this.cache = store.cache;\n    this.pendingCount = 0;\n    this.fulfilledCount = 0;\n    this.rejectedCount = 0;\n    this._errorRequests = [];\n    this._lastError = null;\n    const requests = store.getRequestStateService();\n    const notifications = store.notifications;\n    const handleRequest = req => {\n      if (req.type === 'mutation') {\n        switch (req.state) {\n          case 'pending':\n            this.isSaving = true;\n            break;\n          case 'rejected':\n            this.isSaving = false;\n            this._lastError = req;\n            if (!(req.response && isInvalidError(req.response.data))) {\n              this._errorRequests.push(req);\n            }\n            notifyErrorsStateChanged(this);\n            break;\n          case 'fulfilled':\n            this._errorRequests = [];\n            this._lastError = null;\n            this.isSaving = false;\n            this.notify('isDirty');\n            notifyErrorsStateChanged(this);\n            break;\n        }\n      } else {\n        switch (req.state) {\n          case 'pending':\n            this.pendingCount++;\n            this.notify('isLoading');\n            break;\n          case 'rejected':\n            this.pendingCount--;\n            this._lastError = req;\n            if (!(req.response && isInvalidError(req.response.data))) {\n              this._errorRequests.push(req);\n            }\n            this.notify('isLoading');\n            notifyErrorsStateChanged(this);\n            break;\n          case 'fulfilled':\n            this.pendingCount--;\n            this.fulfilledCount++;\n            this.notify('isLoading');\n            this.notify('isDirty');\n            notifyErrorsStateChanged(this);\n            this._errorRequests = [];\n            this._lastError = null;\n            break;\n        }\n      }\n    };\n    requests.subscribeForRecord(identity, handleRequest);\n\n    // we instantiate lazily\n    // so we grab anything we don't have yet\n    const lastRequest = requests.getLastRequestForRecord(identity);\n    if (lastRequest) {\n      handleRequest(lastRequest);\n    }\n    this.handler = notifications.subscribe(identity, (identifier, type, key) => {\n      switch (type) {\n        case 'state':\n          this.notify('isSaved');\n          this.notify('isNew');\n          this.notify('isDeleted');\n          this.notify('isDirty');\n          break;\n        case 'attributes':\n          this.notify('isEmpty');\n          this.notify('isDirty');\n          break;\n        case 'errors':\n          this.updateInvalidErrors(this.record.errors);\n          this.notify('isValid');\n          break;\n      }\n    });\n  }\n  destroy() {\n    (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.storeFor)(this.record).notifications.unsubscribe(this.handler);\n  }\n  notify(key) {\n    notifySignal(this, key);\n  }\n  updateInvalidErrors(errors) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected the Cache instance for ${this.identifier.lid}  to implement getErrors(identifier)`);\n      }\n    })(typeof this.cache.getErrors === 'function');\n    const jsonApiErrors = this.cache.getErrors(this.identifier);\n    errors.clear();\n    for (let i = 0; i < jsonApiErrors.length; i++) {\n      const error = jsonApiErrors[i];\n      if (error.source && error.source.pointer) {\n        const keyMatch = error.source.pointer.match(SOURCE_POINTER_REGEXP);\n        let key;\n        if (keyMatch) {\n          key = keyMatch[2];\n        } else if (error.source.pointer.search(SOURCE_POINTER_PRIMARY_REGEXP) !== -1) {\n          key = PRIMARY_ATTRIBUTE_KEY;\n        }\n        if (key) {\n          const errMsg = error.detail || error.title;\n          (test => {\n            if (!test) {\n              throw new Error(`Expected field error to have a detail or title to use as the message`);\n            }\n          })(errMsg);\n          errors.add(key, errMsg);\n        }\n      }\n    }\n  }\n  cleanErrorRequests() {\n    this.notify('isValid');\n    this.notify('isError');\n    this.notify('adapterError');\n    this._errorRequests = [];\n    this._lastError = null;\n  }\n  get isLoading() {\n    return !this.isLoaded && this.pendingCount > 0 && this.fulfilledCount === 0;\n  }\n  get isLoaded() {\n    if (this.isNew) {\n      return true;\n    }\n    return this.fulfilledCount > 0 || !this.isEmpty;\n  }\n  get isSaved() {\n    const rd = this.cache;\n    if (this.isDeleted) {\n      (test => {\n        if (!test) {\n          throw new Error(`Expected Cache to implement isDeletionCommitted()`);\n        }\n      })(typeof rd.isDeletionCommitted === 'function');\n      return rd.isDeletionCommitted(this.identifier);\n    }\n    if (this.isNew || this.isEmpty || !this.isValid || this.isDirty || this.isLoading) {\n      return false;\n    }\n    return true;\n  }\n  get isEmpty() {\n    const rd = this.cache;\n    // TODO this is not actually an RFC'd concept. Determine the\n    // correct heuristic to replace this with.\n    (test => {\n      if (!test) {\n        throw new Error(`Expected Cache to implement isEmpty()`);\n      }\n    })(typeof rd.isEmpty === 'function');\n    return !this.isNew && rd.isEmpty(this.identifier);\n  }\n  get isNew() {\n    const rd = this.cache;\n    (test => {\n      if (!test) {\n        throw new Error(`Expected Cache to implement isNew()`);\n      }\n    })(typeof rd.isNew === 'function');\n    return rd.isNew(this.identifier);\n  }\n  get isDeleted() {\n    const rd = this.cache;\n    (test => {\n      if (!test) {\n        throw new Error(`Expected Cache to implement isDeleted()`);\n      }\n    })(typeof rd.isDeleted === 'function');\n    return rd.isDeleted(this.identifier);\n  }\n  get isValid() {\n    return this.record.errors.length === 0;\n  }\n  get isDirty() {\n    const rd = this.cache;\n    if (this.isEmpty || rd.isDeletionCommitted(this.identifier) || this.isDeleted && this.isNew) {\n      return false;\n    }\n    return this.isDeleted || this.isNew || rd.hasChangedAttrs(this.identifier);\n  }\n  get isError() {\n    const errorReq = this._errorRequests[this._errorRequests.length - 1];\n    if (!errorReq) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  get adapterError() {\n    const request = this._lastError;\n    if (!request) {\n      return null;\n    }\n    return request.state === 'rejected' && request.response.data;\n  }\n  get isPreloaded() {\n    return !this.isEmpty && this.isLoading;\n  }\n  get stateName() {\n    // we might be empty while loading so check this first\n    if (this.isLoading) {\n      return 'root.loading';\n\n      // got nothing yet or were unloaded\n    } else if (this.isEmpty) {\n      return 'root.empty';\n\n      // deleted substates\n    } else if (this.isDeleted) {\n      if (this.isSaving) {\n        return 'root.deleted.inFlight';\n      } else if (this.isSaved) {\n        // TODO ensure isSaved isn't true from previous requests\n        return 'root.deleted.saved';\n      } else if (!this.isValid) {\n        return 'root.deleted.invalid';\n      } else {\n        return 'root.deleted.uncommitted';\n      }\n\n      // loaded.created substates\n    } else if (this.isNew) {\n      if (this.isSaving) {\n        return 'root.loaded.created.inFlight';\n      } else if (!this.isValid) {\n        return 'root.loaded.created.invalid';\n      }\n      return 'root.loaded.created.uncommitted';\n\n      // loaded.updated substates\n    } else if (this.isSaving) {\n      return 'root.loaded.updated.inFlight';\n    } else if (!this.isValid) {\n      return 'root.loaded.updated.invalid';\n    } else if (this.isDirty) {\n      return 'root.loaded.updated.uncommitted';\n\n      // if nothing remains, we are loaded saved!\n    } else {\n      return 'root.loaded.saved';\n    }\n  }\n  get dirtyType() {\n    // we might be empty while loading so check this first\n    if (this.isLoading || this.isEmpty) {\n      return '';\n\n      // deleted substates\n    } else if (this.isDirty && this.isDeleted) {\n      return 'deleted';\n\n      // loaded.created substates\n    } else if (this.isNew) {\n      return 'created';\n\n      // loaded.updated substates\n    } else if (this.isSaving || !this.isValid || this.isDirty) {\n      return 'updated';\n\n      // if nothing remains, we are loaded saved!\n    } else {\n      return '';\n    }\n  }\n}\n_RecordState = RecordState;\ndecorateMethodV2(_RecordState.prototype, \"isLoading\", [tagged]);\ndecorateMethodV2(_RecordState.prototype, \"isLoaded\", [tagged]);\ndecorateMethodV2(_RecordState.prototype, \"isSaved\", [tagged]);\ndecorateMethodV2(_RecordState.prototype, \"isEmpty\", [tagged]);\ndecorateMethodV2(_RecordState.prototype, \"isNew\", [tagged]);\ndecorateMethodV2(_RecordState.prototype, \"isDeleted\", [tagged]);\ndecorateMethodV2(_RecordState.prototype, \"isValid\", [tagged]);\ndecorateMethodV2(_RecordState.prototype, \"isDirty\", [tagged]);\ndecorateMethodV2(_RecordState.prototype, \"isError\", [tagged]);\ndecorateMethodV2(_RecordState.prototype, \"adapterError\", [tagged]);\ndecorateMethodV2(_RecordState.prototype, \"isPreloaded\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.cached]);\ndecorateMethodV2(_RecordState.prototype, \"stateName\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.cached]);\ndecorateMethodV2(_RecordState.prototype, \"dirtyType\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.cached]);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.defineSignal)(RecordState.prototype, 'isSaving', false);\nfunction notifyErrorsStateChanged(state) {\n  state.notify('isValid');\n  state.notify('isError');\n  state.notify('adapterError');\n}\n\n/**\n  @module @ember-data/model\n */\n\n/*\n * This decorator allows us to lazily compute\n * an expensive getter on first-access and thereafter\n * never recompute it.\n */\nfunction computeOnce(target, propertyName, desc) {\n  const cache = new WeakMap();\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const getter = desc.get;\n  desc.get = function () {\n    let meta = cache.get(this);\n    if (!meta) {\n      meta = {\n        hasComputed: false,\n        value: undefined\n      };\n      cache.set(this, meta);\n    }\n    if (!meta.hasComputed) {\n      meta.value = getter.call(this);\n      meta.hasComputed = true;\n    }\n    return meta.value;\n  };\n  return desc;\n}\n\n/**\n  Base class from which Models can be defined.\n\n  ```js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class User extends Model {\n    @attr name;\n  }\n  ```\n\n  Models are used both to define the static schema for a\n  particular resource type as well as the class to instantiate\n  to present that data from cache.\n\n  @class Model\n  @public\n  @extends Ember.EmberObject\n*/\n\nclass Model extends _ember_object__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  // set during create by the store\n\n  init(options) {\n    {\n      if (!options?._secretInit && !options?._createProps) {\n        throw new Error('You should not call `create` on a model. Instead, call `store.createRecord` with the attributes you would like to set.');\n      }\n    }\n    const createProps = options._createProps;\n    const _secretInit = options._secretInit;\n    options._createProps = null;\n    options._secretInit = null;\n    const store = this.store = _secretInit.store;\n    super.init(options);\n    this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_8__.RecordStore] = store;\n    const identity = _secretInit.identifier;\n    _secretInit.cb(this, _secretInit.cache, identity, _secretInit.store);\n    this.___recordState = new RecordState(this);\n    this.setProperties(createProps);\n    const notifications = store.notifications;\n    this.___private_notifications = notifications.subscribe(identity, (identifier, type, field) => {\n      notifyChanges(identifier, type, field, this, store);\n    });\n  }\n\n  // @ts-expect-error destroy should not return a value, but ember's types force it to\n  destroy() {\n    const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.recordIdentifierFor)(this);\n    this.___recordState?.destroy();\n    const store = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.storeFor)(this);\n    store.notifications.unsubscribe(this.___private_notifications);\n    // Legacy behavior is to notify the relationships on destroy\n    // such that they \"clear\". It's uncertain this behavior would\n    // be good for a new model paradigm, likely cheaper and safer\n    // to simply not notify, for this reason the store does not itself\n    // notify individual changes once the delete has been signaled,\n    // this decision is left to model instances.\n\n    this.eachRelationship((name, meta) => {\n      if (meta.kind === 'belongsTo') {\n        this.notifyPropertyChange(name);\n      }\n    });\n    LEGACY_SUPPORT.get(this)?.destroy();\n    LEGACY_SUPPORT.delete(this);\n    LEGACY_SUPPORT.delete(identifier);\n    super.destroy();\n  }\n\n  /**\n    If this property is `true` the record is in the `empty`\n    state. Empty is the first state all records enter after they have\n    been created. Most records created by the store will quickly\n    transition to the `loading` state if data needs to be fetched from\n    the server or the `created` state if the record is created on the\n    client. A record can also enter the empty state if the adapter is\n    unable to locate the record.\n     @property isEmpty\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n  get isEmpty() {\n    return this.currentState.isEmpty;\n  }\n\n  /**\n    If this property is `true` the record is in the `loading` state. A\n    record enters this state when the store asks the adapter for its\n    data. It remains in this state until the adapter provides the\n    requested data.\n     @property isLoading\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n\n  get isLoading() {\n    return this.currentState.isLoading;\n  }\n\n  /**\n    If this property is `true` the record is in the `loaded` state. A\n    record enters this state when its data is populated. Most of a\n    record's lifecycle is spent inside substates of the `loaded`\n    state.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.isLoaded; // true\n     store.findRecord('model', 1).then(function(model) {\n      model.isLoaded; // true\n    });\n    ```\n     @property isLoaded\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n\n  get isLoaded() {\n    return this.currentState.isLoaded;\n  }\n\n  /**\n    If this property is `true` the record is in the `dirty` state. The\n    record has local changes that have not yet been saved by the\n    adapter. This includes records that have been created (but not yet\n    saved) or deleted.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.hasDirtyAttributes; // true\n     store.findRecord('model', 1).then(function(model) {\n      model.hasDirtyAttributes; // false\n      model.set('foo', 'some value');\n      model.hasDirtyAttributes; // true\n    });\n    ```\n     @since 1.13.0\n    @property hasDirtyAttributes\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n\n  get hasDirtyAttributes() {\n    return this.currentState.isDirty;\n  }\n\n  /**\n    If this property is `true` the record is in the `saving` state. A\n    record enters the saving state when `save` is called, but the\n    adapter has not yet acknowledged that the changes have been\n    persisted to the backend.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.isSaving; // false\n    let promise = record.save();\n    record.isSaving; // true\n    promise.then(function() {\n      record.isSaving; // false\n    });\n    ```\n     @property isSaving\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n\n  get isSaving() {\n    return this.currentState.isSaving;\n  }\n\n  /**\n    If this property is `true` the record is in the `deleted` state\n    and has been marked for deletion. When `isDeleted` is true and\n    `hasDirtyAttributes` is true, the record is deleted locally but the deletion\n    was not yet persisted. When `isSaving` is true, the change is\n    in-flight. When both `hasDirtyAttributes` and `isSaving` are false, the\n    change has persisted.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.isDeleted;    // false\n    record.deleteRecord();\n     // Locally deleted\n    record.isDeleted;           // true\n    record.hasDirtyAttributes;  // true\n    record.isSaving;            // false\n     // Persisting the deletion\n    let promise = record.save();\n    record.isDeleted;    // true\n    record.isSaving;     // true\n     // Deletion Persisted\n    promise.then(function() {\n      record.isDeleted;          // true\n      record.isSaving;           // false\n      record.hasDirtyAttributes; // false\n    });\n    ```\n     @property isDeleted\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n\n  get isDeleted() {\n    return this.currentState.isDeleted;\n  }\n\n  /**\n    If this property is `true` the record is in the `new` state. A\n    record will be in the `new` state when it has been created on the\n    client and the adapter has not yet report that it was successfully\n    saved.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.isNew; // true\n     record.save().then(function(model) {\n      model.isNew; // false\n    });\n    ```\n     @property isNew\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n\n  get isNew() {\n    return this.currentState.isNew;\n  }\n\n  /**\n    If this property is `true` the record is in the `valid` state.\n     A record will be in the `valid` state when the adapter did not report any\n    server-side validation failures.\n     @property isValid\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n\n  get isValid() {\n    return this.currentState.isValid;\n  }\n\n  /**\n    If the record is in the dirty state this property will report what\n    kind of change has caused it to move into the dirty\n    state. Possible values are:\n     - `created` The record has been created by the client and not yet saved to the adapter.\n    - `updated` The record has been updated by the client and not yet saved to the adapter.\n    - `deleted` The record has been deleted by the client and not yet saved to the adapter.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.dirtyType; // 'created'\n    ```\n     @property dirtyType\n    @public\n    @type {String}\n    @readOnly\n  */\n\n  get dirtyType() {\n    return this.currentState.dirtyType;\n  }\n\n  /**\n    If `true` the adapter reported that it was unable to save local\n    changes to the backend for any reason other than a server-side\n    validation error.\n     Example\n     ```javascript\n    record.isError; // false\n    record.set('foo', 'valid value');\n    record.save().then(null, function() {\n      record.isError; // true\n    });\n    ```\n     @property isError\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n\n  get isError() {\n    return this.currentState.isError;\n  }\n  set isError(v) {\n    {\n      throw new Error(`isError is not directly settable`);\n    }\n  }\n\n  /**\n    If `true` the store is attempting to reload the record from the adapter.\n     Example\n     ```javascript\n    record.isReloading; // false\n    record.reload();\n    record.isReloading; // true\n    ```\n     @property isReloading\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n\n  /**\n    All ember models have an id property. This is an identifier\n    managed by an external source. These are always coerced to be\n    strings before being used internally. Note when declaring the\n    attributes for a model it is an error to declare an id\n    attribute.\n     ```javascript\n    let record = store.createRecord('model');\n    record.id; // null\n     store.findRecord('model', 1).then(function(model) {\n      model.id; // '1'\n    });\n    ```\n     @property id\n    @public\n    @type {String}\n  */\n  get id() {\n    // this guard exists, because some dev-only deprecation code\n    // (addListener via validatePropertyInjections) invokes toString before the\n    // object is real.\n    {\n      try {\n        return (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.recordIdentifierFor)(this).id;\n      } catch {\n        return null;\n      }\n    }\n    return (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.recordIdentifierFor)(this).id;\n  }\n  set id(id) {\n    const normalizedId = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_5__.coerceId)(id);\n    const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.recordIdentifierFor)(this);\n    const didChange = normalizedId !== identifier.id;\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot set ${identifier.type} record's id to ${id}, because id is already ${identifier.id}`);\n      }\n    })(!didChange || identifier.id === null);\n    if (normalizedId !== null && didChange) {\n      this.store._instanceCache.setRecordId(identifier, normalizedId);\n      this.store.notifications.notify(identifier, 'identity');\n    }\n  }\n  toString() {\n    return `<model::${this.constructor.modelName}:${this.id}>`;\n  }\n\n  /**\n    @property currentState\n    @private\n    @type {Object}\n  */\n  // TODO we can probably make this a computeOnce\n  // we likely do not need to notify the currentState root anymore\n  get currentState() {\n    // descriptors are called with the wrong `this` context during mergeMixins\n    // when using legacy/classic ember classes. Basically: lazy in prod and eager in dev.\n    // so we do this to try to steer folks to the nicer \"dont user currentState\"\n    // error.\n\n    return this.___recordState;\n  }\n  set currentState(_v) {\n    throw new Error('cannot set currentState');\n  }\n\n  /**\n    The store service instance which created this record instance\n    @property store\n    @public\n   */\n\n  /**\n    When the record is in the `invalid` state this object will contain\n    any errors returned by the adapter. When present the errors hash\n    contains keys corresponding to the invalid property names\n    and values which are arrays of Javascript objects with two keys:\n     - `message` A string containing the error message from the backend\n    - `attribute` The name of the property associated with this error message\n     ```javascript\n    record.errors.length; // 0\n    record.set('foo', 'invalid value');\n    record.save().catch(function() {\n      record.errors.foo;\n      // [{message: 'foo should be a number.', attribute: 'foo'}]\n    });\n    ```\n     The `errors` property is useful for displaying error messages to\n    the user.\n     ```handlebars\n    <label>Username: <Input @value={{@model.username}} /> </label>\n    {{#each @model.errors.username as |error|}}\n      <div class=\"error\">\n        {{error.message}}\n      </div>\n    {{/each}}\n    <label>Email: <Input @value={{@model.email}} /> </label>\n    {{#each @model.errors.email as |error|}}\n      <div class=\"error\">\n        {{error.message}}\n      </div>\n    {{/each}}\n    ```\n      You can also access the special `messages` property on the error\n    object to get an array of all the error strings.\n     ```handlebars\n    {{#each @model.errors.messages as |message|}}\n      <div class=\"error\">\n        {{message}}\n      </div>\n    {{/each}}\n    ```\n     @property errors\n    @public\n    @type {Errors}\n  */\n  get errors() {\n    const errors = Errors.create({\n      __record: this\n    });\n    this.currentState.updateInvalidErrors(errors);\n    return errors;\n  }\n\n  /**\n    This property holds the `AdapterError` object with which\n    last adapter operation was rejected.\n     @property adapterError\n    @public\n    @type {AdapterError}\n  */\n\n  get adapterError() {\n    return this.currentState.adapterError;\n  }\n  set adapterError(v) {\n    throw new Error(`adapterError is not directly settable`);\n  }\n\n  /**\n    Create a JSON representation of the record, using the serialization\n    strategy of the store's adapter.\n    `serialize` takes an optional hash as a parameter, currently\n    supported options are:\n    - `includeId`: `true` if the record's ID should be included in the\n      JSON representation.\n     @method serialize\n    @public\n    @param {Object} options\n    @return {Object} an object whose values are primitive JSON values only\n  */\n  /*\n    We hook the default implementation to ensure\n    our tagged properties are properly notified\n    as well. We still super for everything because\n    sync observers require a direct call occuring\n    to trigger their flush. We wouldn't need to\n    super in 4.0+ where sync observers are removed.\n   */\n  // @ts-expect-error no return is necessary, but Ember's types are forcing it\n  notifyPropertyChange(prop) {\n    notifySignal(this, prop);\n    super.notifyPropertyChange(prop);\n  }\n\n  /**\n    Marks the record as deleted but does not save it. You must call\n    `save` afterwards if you want to persist it. You might use this\n    method if you want to allow the user to still `rollbackAttributes()`\n    after a delete was made.\n     Example\n     ```js\n    import Component from '@glimmer/component';\n     export default class extends Component {\n      softDelete = () => {\n        this.args.model.deleteRecord();\n      }\n       confirm = () => {\n        this.args.model.save();\n      }\n       undo = () => {\n        this.args.model.rollbackAttributes();\n      }\n    }\n    ```\n     @method deleteRecord\n    @public\n  */\n\n  /**\n    Same as `deleteRecord`, but saves the record immediately.\n     Example\n     ```js\n    import Component from '@glimmer/component';\n     export default class extends Component {\n      delete = () => {\n        this.args.model.destroyRecord().then(function() {\n          this.transitionToRoute('model.index');\n        });\n      }\n    }\n    ```\n     If you pass an object on the `adapterOptions` property of the options\n    argument it will be passed to your adapter via the snapshot\n     ```js\n    record.destroyRecord({ adapterOptions: { subscribe: false } });\n    ```\n     ```app/adapters/post.js\n    import MyCustomAdapter from './custom-adapter';\n     export default class PostAdapter extends MyCustomAdapter {\n      deleteRecord(store, type, snapshot) {\n        if (snapshot.adapterOptions.subscribe) {\n          // ...\n        }\n        // ...\n      }\n    }\n    ```\n     @method destroyRecord\n    @public\n    @param {Object} options\n    @return {Promise} a promise that will be resolved when the adapter returns\n    successfully or rejected if the adapter returns with an error.\n  */\n\n  /**\n    Unloads the record from the store. This will not send a delete request\n    to your server, it just unloads the record from memory.\n     @method unloadRecord\n    @public\n  */\n\n  /**\n    Returns an object, whose keys are changed properties, and value is\n    an [oldProp, newProp] array.\n     The array represents the diff of the canonical state with the local state\n    of the model. Note: if the model is created locally, the canonical state is\n    empty since the adapter hasn't acknowledged the attributes yet:\n     Example\n     ```app/models/mascot.js\n    import Model, { attr } from '@ember-data/model';\n     export default class MascotModel extends Model {\n      @attr('string') name;\n      @attr('boolean', {\n        defaultValue: false\n      })\n      isAdmin;\n    }\n    ```\n     ```javascript\n    let mascot = store.createRecord('mascot');\n     mascot.changedAttributes(); // {}\n     mascot.set('name', 'Tomster');\n    mascot.changedAttributes(); // { name: [undefined, 'Tomster'] }\n     mascot.set('isAdmin', true);\n    mascot.changedAttributes(); // { isAdmin: [undefined, true], name: [undefined, 'Tomster'] }\n     mascot.save().then(function() {\n      mascot.changedAttributes(); // {}\n       mascot.set('isAdmin', false);\n      mascot.changedAttributes(); // { isAdmin: [true, false] }\n    });\n    ```\n     @method changedAttributes\n    @public\n    @return {Object} an object, whose keys are changed properties,\n      and value is an [oldProp, newProp] array.\n  */\n\n  /**\n    If the model `hasDirtyAttributes` this function will discard any unsaved\n    changes. If the model `isNew` it will be removed from the store.\n     Example\n     ```javascript\n    record.name; // 'Untitled Document'\n    record.set('name', 'Doc 1');\n    record.name; // 'Doc 1'\n    record.rollbackAttributes();\n    record.name; // 'Untitled Document'\n    ```\n     @since 1.13.0\n    @method rollbackAttributes\n    @public\n  */\n\n  /**\n    @method _createSnapshot\n    @private\n  */\n  // TODO @deprecate in favor of a public API or examples of how to test successfully\n\n  /**\n    Save the record and persist any changes to the record to an\n    external source via the adapter.\n     Example\n     ```javascript\n    record.set('name', 'Tomster');\n    record.save().then(function() {\n      // Success callback\n    }, function() {\n      // Error callback\n    });\n    ```\n    If you pass an object using the `adapterOptions` property of the options\n   argument it will be passed to your adapter via the snapshot.\n     ```js\n    record.save({ adapterOptions: { subscribe: false } });\n    ```\n     ```app/adapters/post.js\n    import MyCustomAdapter from './custom-adapter';\n     export default class PostAdapter extends MyCustomAdapter {\n      updateRecord(store, type, snapshot) {\n        if (snapshot.adapterOptions.subscribe) {\n          // ...\n        }\n        // ...\n      }\n    }\n    ```\n     @method save\n    @public\n    @param {Object} options\n    @return {Promise} a promise that will be resolved when the adapter returns\n    successfully or rejected if the adapter returns with an error.\n  */\n\n  /**\n    Reload the record from the adapter.\n     This will only work if the record has already finished loading.\n     Example\n     ```js\n    import Component from '@glimmer/component';\n     export default class extends Component {\n      async reload = () => {\n        await this.args.model.reload();\n        // do something with the reloaded model\n      }\n    }\n    ```\n     @method reload\n    @public\n    @param {Object} options optional, may include `adapterOptions` hash which will be passed to adapter request\n    @return {Promise} a promise that will be resolved with the record when the\n    adapter returns successfully or rejected if the adapter returns\n    with an error.\n  */\n\n  attr() {\n    (test => {\n      {\n        throw new Error('The `attr` method is not available on Model, a Snapshot was probably expected. Are you passing a Model instead of a Snapshot to your serializer?');\n      }\n    })();\n  }\n\n  /**\n    Get the reference for the specified belongsTo relationship.\n     For instance, given the following model\n     ```app/models/blog-post.js\n    import Model, { belongsTo } from '@ember-data/model';\n     export default class BlogPost extends Model {\n      @belongsTo('user', { async: true, inverse: null }) author;\n    }\n    ```\n     Then the reference for the author relationship would be\n    retrieved from a record instance like so:\n     ```js\n    blogPost.belongsTo('author');\n    ```\n     A `BelongsToReference` is a low-level API that allows access\n    and manipulation of a belongsTo relationship.\n     It is especially useful when you're dealing with `async` relationships\n    as it allows synchronous access to the relationship data if loaded, as\n    well as APIs for loading, reloading the data or accessing available\n    information without triggering a load.\n     It may also be useful when using `sync` relationships that need to be\n    loaded/reloaded with more precise timing than marking the\n    relationship as `async` and relying on autofetch would have allowed.\n     However,keep in mind that marking a relationship as `async: false` will introduce\n    bugs into your application if the data is not always guaranteed to be available\n    by the time the relationship is accessed. Ergo, it is recommended when using this\n    approach to utilize `links` for unloaded relationship state instead of identifiers.\n     Reference APIs are entangled with the relationship's underlying state,\n    thus any getters or cached properties that utilize these will properly\n    invalidate if the relationship state changes.\n     References are \"stable\", meaning that multiple calls to retrieve the reference\n    for a given relationship will always return the same HasManyReference.\n     @method belongsTo\n    @public\n    @param {String} name of the relationship\n    @since 2.5.0\n    @return {BelongsToReference} reference for this relationship\n  */\n\n  /**\n    Get the reference for the specified hasMany relationship.\n     For instance, given the following model\n     ```app/models/blog-post.js\n    import Model, { hasMany } from '@ember-data/model';\n     export default class BlogPost extends Model {\n      @hasMany('comment', { async: true, inverse: null }) comments;\n    }\n    ```\n     Then the reference for the comments relationship would be\n    retrieved from a record instance like so:\n     ```js\n    blogPost.hasMany('comments');\n    ```\n     A `HasManyReference` is a low-level API that allows access\n    and manipulation of a hasMany relationship.\n     It is especially useful when you are dealing with `async` relationships\n    as it allows synchronous access to the relationship data if loaded, as\n    well as APIs for loading, reloading the data or accessing available\n    information without triggering a load.\n     It may also be useful when using `sync` relationships with `@ember-data/model`\n    that need to be loaded/reloaded with more precise timing than marking the\n    relationship as `async` and relying on autofetch would have allowed.\n     However,keep in mind that marking a relationship as `async: false` will introduce\n    bugs into your application if the data is not always guaranteed to be available\n    by the time the relationship is accessed. Ergo, it is recommended when using this\n    approach to utilize `links` for unloaded relationship state instead of identifiers.\n     Reference APIs are entangled with the relationship's underlying state,\n    thus any getters or cached properties that utilize these will properly\n    invalidate if the relationship state changes.\n     References are \"stable\", meaning that multiple calls to retrieve the reference\n    for a given relationship will always return the same HasManyReference.\n     @method hasMany\n    @public\n    @param {String} name of the relationship\n    @since 2.5.0\n    @return {HasManyReference} reference for this relationship\n  */\n\n  /**\n   Given a callback, iterates over each of the relationships in the model,\n   invoking the callback with the name of each relationship and its relationship\n   descriptor.\n     The callback method you provide should have the following signature (all\n   parameters are optional):\n    ```javascript\n   function(name, descriptor);\n   ```\n    - `name` the name of the current property in the iteration\n   - `descriptor` the meta object that describes this relationship\n    The relationship descriptor argument is an object with the following properties.\n    - **name** <span class=\"type\">String</span> the name of this relationship on the Model\n   - **kind** <span class=\"type\">String</span> \"hasMany\" or \"belongsTo\"\n   - **options** <span class=\"type\">Object</span> the original options hash passed when the relationship was declared\n   - **parentType** <span class=\"type\">Model</span> the type of the Model that owns this relationship\n   - **type** <span class=\"type\">String</span> the type name of the related Model\n    Note that in addition to a callback, you can also pass an optional target\n   object that will be set as `this` on the context.\n    Example\n    ```app/serializers/application.js\n   import JSONSerializer from '@ember-data/serializer/json';\n    export default class ApplicationSerializer extends JSONSerializer {\n      serialize(record, options) {\n      let json = {};\n       record.eachRelationship(function(name, descriptor) {\n        if (descriptor.kind === 'hasMany') {\n          let serializedHasManyName = name.toUpperCase() + '_IDS';\n          json[serializedHasManyName] = record.get(name).map(r => r.id);\n        }\n      });\n       return json;\n    }\n  }\n   ```\n    @method eachRelationship\n   @public\n   @param {Function} callback the callback to invoke\n   @param {any} binding the value to which the callback's `this` should be bound\n   */\n  eachRelationship(callback, binding) {\n    this.constructor.eachRelationship(callback, binding);\n  }\n  relationshipFor(name) {\n    return this.constructor.relationshipsByName.get(name);\n  }\n  inverseFor(name) {\n    return this.constructor.inverseFor(name, (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_4__.storeFor)(this));\n  }\n  eachAttribute(callback, binding) {\n    this.constructor.eachAttribute(callback, binding);\n  }\n  /*\n   These class methods below provide relationship\n   introspection abilities about relationships.\n    A note about the computed properties contained here:\n    **These properties are effectively sealed once called for the first time.**\n   To avoid repeatedly doing expensive iteration over a model's fields, these\n   values are computed once and then cached for the remainder of the runtime of\n   your application.\n    If your application needs to modify a class after its initial definition\n   (for example, using `reopen()` to add additional attributes), make sure you\n   do it before using your model with the store, which uses these properties\n   extensively.\n   */\n\n  /**\n   For a given relationship name, returns the model type of the relationship.\n    For example, if you define a model like this:\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment') comments;\n   }\n   ```\n    Calling `store.modelFor('post').typeForRelationship('comments', store)` will return `Comment`.\n    @method typeForRelationship\n    @public\n   @static\n   @param {String} name the name of the relationship\n   @param {store} store an instance of Store\n   @return {Model} the type of the relationship, or undefined\n   */\n  static typeForRelationship(name, store) {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const relationship = this.relationshipsByName.get(name);\n    return relationship && store.modelFor(relationship.type);\n  }\n  static get inverseMap() {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    return Object.create(null);\n  }\n\n  /**\n   Find the relationship which is the inverse of the one asked for.\n    For example, if you define models like this:\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n      @hasMany('message') comments;\n    }\n   ```\n    ```app/models/message.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class MessageModel extends Model {\n      @belongsTo('post') owner;\n    }\n   ```\n    ``` js\n   store.modelFor('post').inverseFor('comments', store) // { type: 'message', name: 'owner', kind: 'belongsTo' }\n   store.modelFor('message').inverseFor('owner', store) // { type: 'post', name: 'comments', kind: 'hasMany' }\n   ```\n    @method inverseFor\n    @public\n   @static\n   @param {String} name the name of the relationship\n   @param {Store} store\n   @return {Object} the inverse relationship, or null\n   */\n\n  static inverseFor(name, store) {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const inverseMap = this.inverseMap;\n    if (inverseMap[name]) {\n      return inverseMap[name];\n    } else {\n      const inverse = this._findInverseFor(name, store);\n      inverseMap[name] = inverse;\n      return inverse;\n    }\n  }\n\n  //Calculate the inverse, ignoring the cache\n  static _findInverseFor(name, store) {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const relationship = this.relationshipsByName.get(name);\n    (test => {\n      if (!test) {\n        throw new Error(`No relationship named '${name}' on '${this.modelName}' exists.`);\n      }\n    })(relationship);\n    if (!relationship) {\n      return null;\n    }\n    const {\n      options\n    } = relationship;\n    (test => {\n      if (!test) {\n        throw new Error(`Expected the relationship ${name} on ${this.modelName} to define an inverse.`);\n      }\n    })(options.inverse === null || typeof options.inverse === 'string' && options.inverse.length > 0);\n    if (options.inverse === null) {\n      return null;\n    }\n    const schemaExists = store.schema.hasResource(relationship);\n    (test => {\n      if (!test) {\n        throw new Error(`No associated schema found for '${relationship.type}' while calculating the inverse of ${name} on ${this.modelName}`);\n      }\n    })(schemaExists);\n    if (!schemaExists) {\n      return null;\n    }\n    const inverseField = store.schema.fields(relationship).get(options.inverse);\n    (test => {\n      if (!test) {\n        throw new Error(`No inverse relationship found for '${name}' on '${this.modelName}'`);\n      }\n    })(inverseField && (inverseField.kind === 'belongsTo' || inverseField.kind === 'hasMany'));\n    return inverseField || null;\n  }\n\n  /**\n   The model's relationships as a map, keyed on the type of the\n   relationship. The value of each entry is an array containing a descriptor\n   for each relationship with that type, describing the name of the relationship\n   as well as the type.\n    For example, given the following model definition:\n    ```app/models/blog.js\n   import Model, { belongsTo, hasMany } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @hasMany('user') users;\n      @belongsTo('user') owner;\n      @hasMany('post') posts;\n    }\n   ```\n    This computed property would return a map describing these\n   relationships, like this:\n    ```javascript\n   import Blog from 'app/models/blog';\n   import User from 'app/models/user';\n   import Post from 'app/models/post';\n    let relationships = Blog.relationships;\n   relationships.user;\n   //=> [ { name: 'users', kind: 'hasMany' },\n   //     { name: 'owner', kind: 'belongsTo' } ]\n   relationships.post;\n   //=> [ { name: 'posts', kind: 'hasMany' } ]\n   ```\n    @property relationships\n    @public\n   @static\n   @type Map\n   @readOnly\n   */\n\n  static get relationships() {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const map = new Map();\n    const relationshipsByName = this.relationshipsByName;\n\n    // Loop through each computed property on the class\n    relationshipsByName.forEach(desc => {\n      const {\n        type\n      } = desc;\n      if (!map.has(type)) {\n        map.set(type, []);\n      }\n      map.get(type).push(desc);\n    });\n    return map;\n  }\n\n  /**\n   A hash containing lists of the model's relationships, grouped\n   by the relationship kind. For example, given a model with this\n   definition:\n    ```app/models/blog.js\n   import Model, { belongsTo, hasMany } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @hasMany('user') users;\n      @belongsTo('user') owner;\n       @hasMany('post') posts;\n    }\n   ```\n    This property would contain the following:\n    ```javascript\n   import Blog from 'app/models/blog';\n    let relationshipNames = Blog.relationshipNames;\n   relationshipNames.hasMany;\n   //=> ['users', 'posts']\n   relationshipNames.belongsTo;\n   //=> ['owner']\n   ```\n    @property relationshipNames\n    @public\n   @static\n   @type Object\n   @readOnly\n   */\n\n  static get relationshipNames() {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const names = {\n      hasMany: [],\n      belongsTo: []\n    };\n    this.eachComputedProperty((name, meta) => {\n      if (isRelationshipSchema(meta)) {\n        names[meta.kind].push(name);\n      }\n    });\n    return names;\n  }\n\n  /**\n   An array of types directly related to a model. Each type will be\n   included once, regardless of the number of relationships it has with\n   the model.\n    For example, given a model with this definition:\n    ```app/models/blog.js\n   import Model, { belongsTo, hasMany } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @hasMany('user') users;\n      @belongsTo('user') owner;\n       @hasMany('post') posts;\n    }\n   ```\n    This property would contain the following:\n    ```javascript\n   import Blog from 'app/models/blog';\n    let relatedTypes = Blog.relatedTypes');\n   //=> ['user', 'post']\n   ```\n    @property relatedTypes\n   @public\n   @static\n   @type Array\n   @readOnly\n   */\n\n  static get relatedTypes() {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const types = [];\n    const rels = this.relationshipsObject;\n    const relationships = Object.keys(rels);\n\n    // create an array of the unique types involved\n    // in relationships\n    for (let i = 0; i < relationships.length; i++) {\n      const name = relationships[i];\n      const meta = rels[name];\n      const modelName = meta.type;\n      if (!types.includes(modelName)) {\n        types.push(modelName);\n      }\n    }\n    return types;\n  }\n\n  /**\n   A map whose keys are the relationships of a model and whose values are\n   relationship descriptors.\n    For example, given a model with this\n   definition:\n    ```app/models/blog.js\n   import Model, { belongsTo, hasMany } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @hasMany('user') users;\n      @belongsTo('user') owner;\n       @hasMany('post') posts;\n    }\n   ```\n    This property would contain the following:\n    ```javascript\n   import Blog from 'app/models/blog';\n    let relationshipsByName = Blog.relationshipsByName;\n   relationshipsByName.users;\n   //=> { name: 'users', kind: 'hasMany', type: 'user', options: Object }\n   relationshipsByName.owner;\n   //=> { name: 'owner', kind: 'belongsTo', type: 'user', options: Object }\n   ```\n    @property relationshipsByName\n    @public\n   @static\n   @type Map\n   @readOnly\n   */\n\n  static get relationshipsByName() {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const map = new Map();\n    const rels = this.relationshipsObject;\n    const relationships = Object.keys(rels);\n    for (let i = 0; i < relationships.length; i++) {\n      const name = relationships[i];\n      const value = rels[name];\n      map.set(value.name, value);\n    }\n    return map;\n  }\n  static get relationshipsObject() {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const relationships = Object.create(null);\n    const modelName = this.modelName;\n    this.eachComputedProperty((name, meta) => {\n      if (!isRelationshipSchema(meta)) {\n        return;\n      }\n      // TODO deprecate key being here\n      meta.key = name;\n      meta.name = name;\n      relationships[name] = meta;\n      (test => {\n        if (!test) {\n          throw new Error(`Expected options in meta`);\n        }\n      })(meta.options && typeof meta.options === 'object');\n      (test => {\n        if (!test) {\n          throw new Error(`You should not specify both options.as and options.inverse as null on ${modelName}.${meta.name}, as if there is no inverse field there is no abstract type to conform to. You may have intended for this relationship to be polymorphic, or you may have mistakenly set inverse to null.`);\n        }\n      })(!(meta.options.inverse === null && meta.options.as?.length));\n    });\n    return relationships;\n  }\n\n  /**\n   A map whose keys are the fields of the model and whose values are strings\n   describing the kind of the field. A model's fields are the union of all of its\n   attributes and relationships.\n    For example:\n    ```app/models/blog.js\n   import Model, { attr, belongsTo, hasMany } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @hasMany('user') users;\n      @belongsTo('user') owner;\n       @hasMany('post') posts;\n       @attr('string') title;\n    }\n   ```\n    ```js\n   import Blog from 'app/models/blog'\n    let fields = Blog.fields;\n   fields.forEach(function(kind, field) {\n      // do thing\n    });\n    // prints:\n   // users, hasMany\n   // owner, belongsTo\n   // posts, hasMany\n   // title, attribute\n   ```\n    @property fields\n    @public\n   @static\n   @type Map\n   @readOnly\n   */\n\n  static get fields() {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const map = new Map();\n    this.eachComputedProperty((name, meta) => {\n      if (isRelationshipSchema(meta)) {\n        map.set(name, meta.kind);\n      } else if (isAttributeSchema(meta)) {\n        map.set(name, 'attribute');\n      }\n    });\n    return map;\n  }\n\n  /**\n   Given a callback, iterates over each of the relationships in the model,\n   invoking the callback with the name of each relationship and its relationship\n   descriptor.\n    @method eachRelationship\n    @public\n   @static\n   @param {Function} callback the callback to invoke\n   @param {any} binding the value to which the callback's `this` should be bound\n   */\n\n  static eachRelationship(callback, binding) {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    this.relationshipsByName.forEach((relationship, name) => {\n      callback.call(binding, name, relationship);\n    });\n  }\n\n  /**\n   Given a callback, iterates over each of the types related to a model,\n   invoking the callback with the related type's class. Each type will be\n   returned just once, regardless of how many different relationships it has\n   with a model.\n    @method eachRelatedType\n    @public\n   @static\n   @param {Function} callback the callback to invoke\n   @param {any} binding the value to which the callback's `this` should be bound\n   */\n  static eachRelatedType(callback, binding) {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const relationshipTypes = this.relatedTypes;\n    for (let i = 0; i < relationshipTypes.length; i++) {\n      const type = relationshipTypes[i];\n      callback.call(binding, type);\n    }\n  }\n\n  /**\n   *\n   * @method determineRelationshipType\n   * @private\n   * @deprecated\n   */\n  static determineRelationshipType(knownSide, store) {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const knownKey = knownSide.name;\n    const knownKind = knownSide.kind;\n    const inverse = this.inverseFor(knownKey, store);\n    // let key;\n\n    if (!inverse) {\n      return knownKind === 'belongsTo' ? 'oneToNone' : 'manyToNone';\n    }\n\n    // key = inverse.name;\n    const otherKind = inverse.kind;\n    if (otherKind === 'belongsTo') {\n      return knownKind === 'belongsTo' ? 'oneToOne' : 'manyToOne';\n    } else {\n      return knownKind === 'belongsTo' ? 'oneToMany' : 'manyToMany';\n    }\n  }\n\n  /**\n   A map whose keys are the attributes of the model (properties\n   described by attr) and whose values are the meta object for the\n   property.\n    Example\n    ```app/models/person.js\n   import Model, { attr } from '@ember-data/model';\n    export default class PersonModel extends Model {\n      @attr('string') firstName;\n      @attr('string') lastName;\n      @attr('date') birthday;\n    }\n   ```\n    ```javascript\n   import Person from 'app/models/person'\n    let attributes = Person.attributes\n    attributes.forEach(function(meta, name) {\n      // do thing\n    });\n    // prints:\n   // firstName {type: \"string\", kind: 'attribute', options: Object, parentType: function, name: \"firstName\"}\n   // lastName {type: \"string\", kind: 'attribute', options: Object, parentType: function, name: \"lastName\"}\n   // birthday {type: \"date\", kind: 'attribute', options: Object, parentType: function, name: \"birthday\"}\n   ```\n    @property attributes\n    @public\n   @static\n   @type {Map}\n   @readOnly\n   */\n  static get attributes() {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const map = new Map();\n    this.eachComputedProperty((name, meta) => {\n      if (isAttributeSchema(meta)) {\n        (test => {\n          if (!test) {\n            throw new Error(\"You may not set `id` as an attribute on your model. Please remove any lines that look like: `id: attr('<type>')` from \" + this.toString());\n          }\n        })(name !== 'id');\n\n        // TODO deprecate key being here\n        meta.key = name;\n        meta.name = name;\n        map.set(name, meta);\n      }\n    });\n    return map;\n  }\n\n  /**\n   A map whose keys are the attributes of the model (properties\n   described by attr) and whose values are type of transformation\n   applied to each attribute. This map does not include any\n   attributes that do not have an transformation type.\n    Example\n    ```app/models/person.js\n   import Model, { attr } from '@ember-data/model';\n    export default class PersonModel extends Model {\n      @attr firstName;\n      @attr('string') lastName;\n      @attr('date') birthday;\n    }\n   ```\n    ```javascript\n   import Person from 'app/models/person';\n    let transformedAttributes = Person.transformedAttributes\n    transformedAttributes.forEach(function(field, type) {\n      // do thing\n    });\n    // prints:\n   // lastName string\n   // birthday date\n   ```\n    @property transformedAttributes\n    @public\n   @static\n   @type {Map}\n   @readOnly\n   */\n\n  static get transformedAttributes() {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    const map = new Map();\n    this.eachAttribute((name, meta) => {\n      if (meta.type) {\n        map.set(name, meta.type);\n      }\n    });\n    return map;\n  }\n\n  /**\n   Iterates through the attributes of the model, calling the passed function on each\n   attribute.\n    The callback method you provide should have the following signature (all\n   parameters are optional):\n    ```javascript\n   function(name, meta);\n   ```\n    - `name` the name of the current property in the iteration\n   - `meta` the meta object for the attribute property in the iteration\n    Note that in addition to a callback, you can also pass an optional target\n   object that will be set as `this` on the context.\n    Example\n    ```javascript\n   import Model, { attr } from '@ember-data/model';\n    class PersonModel extends Model {\n      @attr('string') firstName;\n      @attr('string') lastName;\n      @attr('date') birthday;\n    }\n    PersonModel.eachAttribute(function(name, meta) {\n      // do thing\n    });\n    // prints:\n   // firstName {type: \"string\", kind: 'attribute', options: Object, parentType: function, name: \"firstName\"}\n   // lastName {type: \"string\", kind: 'attribute', options: Object, parentType: function, name: \"lastName\"}\n   // birthday {type: \"date\", kind: 'attribute', options: Object, parentType: function, name: \"birthday\"}\n   ```\n    @method eachAttribute\n    @public\n   @param {Function} callback The callback to execute\n   @param {Object} [binding] the value to which the callback's `this` should be bound\n   @static\n   */\n\n  static eachAttribute(callback, binding) {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    this.attributes.forEach((meta, name) => {\n      callback.call(binding, name, meta);\n    });\n  }\n\n  /**\n   Iterates through the transformedAttributes of the model, calling\n   the passed function on each attribute. Note the callback will not be\n   called for any attributes that do not have an transformation type.\n    The callback method you provide should have the following signature (all\n   parameters are optional):\n    ```javascript\n   function(name, type);\n   ```\n    - `name` the name of the current property in the iteration\n   - `type` a string containing the name of the type of transformed\n   applied to the attribute\n    Note that in addition to a callback, you can also pass an optional target\n   object that will be set as `this` on the context.\n    Example\n    ```javascript\n   import Model, { attr } from '@ember-data/model';\n    let Person = Model.extend({\n      firstName: attr(),\n      lastName: attr('string'),\n      birthday: attr('date')\n    });\n    Person.eachTransformedAttribute(function(name, type) {\n      // do thing\n    });\n    // prints:\n   // lastName string\n   // birthday date\n   ```\n    @method eachTransformedAttribute\n    @public\n   @param {Function} callback The callback to execute\n   @param {Object} [binding] the value to which the callback's `this` should be bound\n   @static\n   */\n  static eachTransformedAttribute(callback, binding) {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    this.transformedAttributes.forEach((type, name) => {\n      callback.call(binding, name, type);\n    });\n  }\n\n  /**\n   Returns the name of the model class.\n    @method toString\n    @public\n   @static\n   */\n  static toString() {\n    (test => {\n      if (!test) {\n        throw new Error(`Accessing schema information on Models without looking up the model via the store is disallowed.`);\n      }\n    })(this.modelName);\n    return `model:${this.modelName}`;\n  }\n}\n\n// @ts-expect-error TS doesn't know how to do `this` function overloads\n_Model = Model;\ndecorateMethodV2(_Model.prototype, \"isEmpty\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_Model.prototype, \"isLoading\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_Model.prototype, \"isLoaded\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_Model.prototype, \"hasDirtyAttributes\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_Model.prototype, \"isSaving\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_Model.prototype, \"isDeleted\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_Model.prototype, \"isNew\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_Model.prototype, \"isValid\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_Model.prototype, \"dirtyType\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_Model.prototype, \"isError\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\ndecorateMethodV2(_Model.prototype, \"id\", [tagged]);\ndecorateMethodV2(_Model.prototype, \"currentState\", [tagged]);\ndecorateMethodV2(_Model.prototype, \"errors\", [computeOnce]);\ndecorateMethodV2(_Model.prototype, \"adapterError\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_6__.compat]);\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Model, \"isModel\", true);\n/**\n  Create should only ever be called by the store. To create an instance of a\n  `Model` in a dirty state use `store.createRecord`.\n  To create instances of `Model` in a clean state, use `store.push`\n   @method create\n  @private\n  @static\n*/\n/**\n Represents the model's class name as a string. This can be used to look up the model's class name through\n `Store`'s modelFor method.\n  `modelName` is generated for you by EmberData. It will be a lowercased, dasherized string.\n For example:\n  ```javascript\n store.modelFor('post').modelName; // 'post'\n store.modelFor('blog-post').modelName; // 'blog-post'\n ```\n  The most common place you'll want to access `modelName` is in your serializer's `payloadKeyFromModelName` method. For example, to change payload\n keys to underscore (instead of dasherized), you might use the following code:\n  ```javascript\n import RESTSerializer from '@ember-data/serializer/rest';\n import { underscore } from '<app-name>/utils/string-utils';\n  export default const PostSerializer = RESTSerializer.extend({\n   payloadKeyFromModelName(modelName) {\n     return underscore(modelName);\n   }\n });\n ```\n @property modelName\n  @public\n @type String\n @readonly\n @static\n*/\n(0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Model, \"modelName\", null);\ndecorateMethodV2(_Model, \"inverseMap\", [computeOnce]);\ndecorateMethodV2(_Model, \"relationships\", [computeOnce]);\ndecorateMethodV2(_Model, \"relationshipNames\", [computeOnce]);\ndecorateMethodV2(_Model, \"relatedTypes\", [computeOnce]);\ndecorateMethodV2(_Model, \"relationshipsByName\", [computeOnce]);\ndecorateMethodV2(_Model, \"relationshipsObject\", [computeOnce]);\ndecorateMethodV2(_Model, \"fields\", [computeOnce]);\ndecorateMethodV2(_Model, \"attributes\", [computeOnce]);\ndecorateMethodV2(_Model, \"transformedAttributes\", [computeOnce]);\nModel.prototype.save = save;\n// @ts-expect-error TS doesn't know how to do `this` function overloads\nModel.prototype.destroyRecord = destroyRecord;\nModel.prototype.unloadRecord = unloadRecord;\nModel.prototype.hasMany = hasMany;\nModel.prototype.belongsTo = belongsTo;\nModel.prototype.serialize = serialize;\nModel.prototype._createSnapshot = createSnapshot;\nModel.prototype.deleteRecord = deleteRecord;\nModel.prototype.changedAttributes = changedAttributes;\nModel.prototype.rollbackAttributes = rollbackAttributes;\nModel.prototype.reload = reload;\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_7__.defineSignal)(Model.prototype, 'isReloading', false);\n\n// this is required to prevent `init` from passing\n// the values initialized during create to `setUnknownProperty`\nModel.prototype._createProps = null;\nModel.prototype._secretInit = null;\n{\n  const lookupDescriptor = function lookupDescriptor(obj, keyName) {\n    let current = obj;\n    do {\n      const descriptor = Object.getOwnPropertyDescriptor(current, keyName);\n      if (descriptor !== undefined) {\n        return descriptor;\n      }\n      current = Object.getPrototypeOf(current);\n    } while (current !== null);\n    return null;\n  };\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const init = Model.prototype.init;\n  Model.prototype.init = function (createArgs) {\n    init.call(this, createArgs);\n    const ourDescriptor = lookupDescriptor(Model.prototype, 'currentState');\n    const theirDescriptor = lookupDescriptor(this, 'currentState');\n    if (!ourDescriptor || !theirDescriptor) {\n      throw new Error(`Unable to determine if 'currentState' is a reserved property name on instances of classes extending Model. Please ensure that 'currentState' is not defined as a property on ${this.constructor.toString()}`);\n    }\n    const realState = this.___recordState;\n    if (ourDescriptor.get !== theirDescriptor.get || realState !== this.currentState) {\n      throw new Error(`'currentState' is a reserved property name on instances of classes extending Model. Please choose a different property name for ${this.constructor.toString()}`);\n    }\n    const ID_DESCRIPTOR = lookupDescriptor(Model.prototype, 'id');\n    const idDesc = lookupDescriptor(this, 'id');\n    if (!ID_DESCRIPTOR || !idDesc) {\n      throw new Error(`Unable to determine if 'id' is a reserved property name on instances of classes extending Model. Please ensure that 'id' is not defined as a property on ${this.constructor.toString()}`);\n    }\n    if (idDesc.get !== ID_DESCRIPTOR.get) {\n      throw new Error(`You may not set 'id' as an attribute on your model. Please remove any lines that look like: \\`id: attr('<type>')\\` from ${this.constructor.toString()}`);\n    }\n  };\n  delete Model.reopen;\n  delete Model.reopenClass;\n}\nfunction isRelationshipSchema(meta) {\n  const hasKind = typeof meta === 'object' && meta !== null && 'kind' in meta && 'options' in meta;\n  return hasKind && (meta.kind === 'hasMany' || meta.kind === 'belongsTo');\n}\nfunction isAttributeSchema(meta) {\n  return typeof meta === 'object' && meta !== null && 'kind' in meta && meta.kind === 'attribute';\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/model-BFnMMaye.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/schema-provider-Cgpcwfn7.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/schema-provider-Cgpcwfn7.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   M: () => (/* binding */ ModelSchemaProvider),\n/* harmony export */   b: () => (/* binding */ buildSchema),\n/* harmony export */   g: () => (/* binding */ getModelFactory)\n/* harmony export */ });\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/application */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/application/index.js\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _model_BFnMMaye_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./model-BFnMMaye.js */ \"../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/model-BFnMMaye.js\");\n\n\n\n/*\n    In case someone defined a relationship to a mixin, for example:\n    ```ts\n      class CommentModel extends Model {\n        @belongsTo('commentable', { polymorphic: true }) owner;\n      }\n\n      let Commentable = Mixin.create({\n        @hasMany('comment') comments;\n      });\n    ```\n    we want to look up a Commentable class which has all the necessary\n    relationship meta data. Thus, we look up the mixin and create a mock\n    Model, so we can access the relationship CPs of the mixin (`comments`)\n    in this case\n  */\nfunction modelForMixin(store, normalizedModelName) {\n  const owner = (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(store);\n  const MaybeMixin = owner.factoryFor(`mixin:${normalizedModelName}`);\n  const mixin = MaybeMixin && MaybeMixin.class;\n  if (mixin) {\n    const ModelForMixin = _model_BFnMMaye_js__WEBPACK_IMPORTED_MODULE_2__.M.extend(mixin);\n    ModelForMixin.__isMixin = true;\n    ModelForMixin.__mixin = mixin;\n    //Cache the class as a model\n    owner.register(`model:${normalizedModelName}`, ModelForMixin);\n  }\n  return owner.factoryFor(`model:${normalizedModelName}`);\n}\nclass ModelSchemaProvider {\n  constructor(store) {\n    this.store = store;\n    this._schemas = new Map();\n    this._typeMisses = new Set();\n  }\n  hasTrait(type) {\n    (test => {\n      {\n        throw new Error(`hasTrait is not available with @ember-data/model's SchemaService`);\n      }\n    })();\n    return false;\n  }\n  resourceHasTrait(resource, trait) {\n    (test => {\n      {\n        throw new Error(`resourceHasTrait is not available with @ember-data/model's SchemaService`);\n      }\n    })();\n    return false;\n  }\n  transformation(field) {\n    (test => {\n      {\n        throw new Error(`transformation is not available with @ember-data/model's SchemaService`);\n      }\n    })();\n  }\n  derivation(field) {\n    (test => {\n      {\n        throw new Error(`derivation is not available with @ember-data/model's SchemaService`);\n      }\n    })();\n  }\n  hashFn(field) {\n    (test => {\n      {\n        throw new Error(`hashFn is not available with @ember-data/model's SchemaService`);\n      }\n    })();\n  }\n  resource(resource) {\n    const type = (0,_model_BFnMMaye_js__WEBPACK_IMPORTED_MODULE_2__.n)(resource.type);\n    if (!this._schemas.has(type)) {\n      this._loadModelSchema(type);\n    }\n    return this._schemas.get(type).schema;\n  }\n  registerResources(schemas) {\n    (test => {\n      {\n        throw new Error(`registerResources is not available with @ember-data/model's SchemaService`);\n      }\n    })();\n  }\n  registerResource(schema) {\n    (test => {\n      {\n        throw new Error(`registerResource is not available with @ember-data/model's SchemaService`);\n      }\n    })();\n  }\n  registerTransformation(transform) {\n    (test => {\n      {\n        throw new Error(`registerTransformation is not available with @ember-data/model's SchemaService`);\n      }\n    })();\n  }\n  registerDerivation(derivation) {\n    (test => {\n      {\n        throw new Error(`registerDerivation is not available with @ember-data/model's SchemaService`);\n      }\n    })();\n  }\n  registerHashFn(hashFn) {\n    (test => {\n      {\n        throw new Error(`registerHashFn is not available with @ember-data/model's SchemaService`);\n      }\n    })();\n  }\n  _loadModelSchema(type) {\n    const modelClass = this.store.modelFor(type);\n    const attributeMap = modelClass.attributes;\n    const attributes = Object.create(null);\n    attributeMap.forEach((meta, name) => attributes[name] = meta);\n    const relationships = modelClass.relationshipsObject || null;\n    const fields = new Map();\n    for (const attr of Object.values(attributes)) {\n      fields.set(attr.name, attr);\n    }\n    for (const rel of Object.values(relationships)) {\n      fields.set(rel.name, rel);\n    }\n    const schema = {\n      legacy: true,\n      identity: {\n        name: 'id',\n        kind: '@id'\n      },\n      type,\n      fields: Array.from(fields.values())\n    };\n    const internalSchema = {\n      schema,\n      attributes,\n      relationships,\n      fields\n    };\n    this._schemas.set(type, internalSchema);\n    return internalSchema;\n  }\n  fields(resource) {\n    const type = (0,_model_BFnMMaye_js__WEBPACK_IMPORTED_MODULE_2__.n)(resource.type);\n    if (!this._schemas.has(type)) {\n      this._loadModelSchema(type);\n    }\n    return this._schemas.get(type).fields;\n  }\n  hasResource(resource) {\n    const type = (0,_model_BFnMMaye_js__WEBPACK_IMPORTED_MODULE_2__.n)(resource.type);\n    if (this._schemas.has(type)) {\n      return true;\n    }\n    if (this._typeMisses.has(type)) {\n      return false;\n    }\n    const factory = getModelFactory(this.store, type);\n    const exists = factory !== null;\n    if (!exists) {\n      this._typeMisses.add(type);\n      return false;\n    }\n    return true;\n  }\n}\n{\n  ModelSchemaProvider.prototype.doesTypeExist = function (type) {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`Use \\`schema.hasResource({ type })\\` instead of \\`schema.doesTypeExist(type)\\``, false, {\n      id: 'ember-data:schema-service-updates',\n      until: '5.0',\n      for: 'ember-data',\n      since: {\n        available: '5.4',\n        enabled: '5.4'\n      }\n    }));\n    return this.hasResource({\n      type\n    });\n  };\n  ModelSchemaProvider.prototype.attributesDefinitionFor = function (resource) {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`Use \\`schema.fields({ type })\\` instead of \\`schema.attributesDefinitionFor({ type })\\``, false, {\n      id: 'ember-data:schema-service-updates',\n      until: '5.0',\n      for: 'ember-data',\n      since: {\n        available: '5.4',\n        enabled: '5.4'\n      }\n    }));\n    const type = (0,_model_BFnMMaye_js__WEBPACK_IMPORTED_MODULE_2__.n)(resource.type);\n    if (!this._schemas.has(type)) {\n      this._loadModelSchema(type);\n    }\n    return this._schemas.get(type).attributes;\n  };\n  ModelSchemaProvider.prototype.relationshipsDefinitionFor = function (resource) {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`Use \\`schema.fields({ type })\\` instead of \\`schema.relationshipsDefinitionFor({ type })\\``, false, {\n      id: 'ember-data:schema-service-updates',\n      until: '5.0',\n      for: 'ember-data',\n      since: {\n        available: '5.4',\n        enabled: '5.4'\n      }\n    }));\n    const type = (0,_model_BFnMMaye_js__WEBPACK_IMPORTED_MODULE_2__.n)(resource.type);\n    if (!this._schemas.has(type)) {\n      this._loadModelSchema(type);\n    }\n    return this._schemas.get(type).relationships;\n  };\n}\nfunction buildSchema(store) {\n  return new ModelSchemaProvider(store);\n}\nfunction getModelFactory(store, type) {\n  if (!store._modelFactoryCache) {\n    store._modelFactoryCache = Object.create(null);\n  }\n  const cache = store._modelFactoryCache;\n  let factory = cache[type];\n  if (!factory) {\n    const owner = (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(store);\n    factory = owner.factoryFor(`model:${type}`);\n    if (!factory) {\n      //Support looking up mixins as base types for polymorphic relationships\n      factory = modelForMixin(store, type);\n    }\n    if (!factory) {\n      // we don't cache misses in case someone wants to register a missing model\n      return null;\n    }\n    const klass = factory.class;\n    if (klass.isModel) {\n      const hasOwnModelNameSet = klass.modelName && Object.prototype.hasOwnProperty.call(klass, 'modelName');\n      if (!hasOwnModelNameSet) {\n        Object.defineProperty(klass, 'modelName', {\n          value: type\n        });\n      }\n    }\n    cache[type] = factory;\n  }\n  return factory;\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/schema-provider-Cgpcwfn7.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/deprecation-support.js":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/deprecation-support.js ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inflect-8aYUyMN7.js */ \"../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/inflect-8aYUyMN7.js\");\n\n\n{}\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/deprecation-support.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/inflect-8aYUyMN7.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/inflect-8aYUyMN7.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ singular),\n/* harmony export */   b: () => (/* binding */ plural),\n/* harmony export */   c: () => (/* binding */ loadUncountable),\n/* harmony export */   d: () => (/* binding */ clear),\n/* harmony export */   e: () => (/* binding */ clearRules),\n/* harmony export */   f: () => (/* binding */ dasherize),\n/* harmony export */   g: () => (/* binding */ camelize),\n/* harmony export */   h: () => (/* binding */ capitalize),\n/* harmony export */   i: () => (/* binding */ irregular),\n/* harmony export */   j: () => (/* binding */ underscore),\n/* harmony export */   k: () => (/* binding */ setMaxLRUCacheSize),\n/* harmony export */   l: () => (/* binding */ loadIrregular),\n/* harmony export */   m: () => (/* binding */ defaultRules),\n/* harmony export */   p: () => (/* binding */ pluralize),\n/* harmony export */   r: () => (/* binding */ resetToDefaults),\n/* harmony export */   s: () => (/* binding */ singularize),\n/* harmony export */   u: () => (/* binding */ uncountable)\n/* harmony export */ });\nconst defaultRules = {\n  plurals: [[/$/, 's'], [/s$/i, 's'], [/^(ax|test)is$/i, '$1es'], [/(octop|vir)us$/i, '$1i'], [/(octop|vir)i$/i, '$1i'], [/(alias|status|bonus)$/i, '$1es'], [/(bu)s$/i, '$1ses'], [/(buffal|tomat)o$/i, '$1oes'], [/([ti])um$/i, '$1a'], [/([ti])a$/i, '$1a'], [/sis$/i, 'ses'], [/(?:([^f])fe|([lr])f)$/i, '$1$2ves'], [/(hive)$/i, '$1s'], [/([^aeiouy]|qu)y$/i, '$1ies'], [/(x|ch|ss|sh)$/i, '$1es'], [/(matr|vert|ind)(?:ix|ex)$/i, '$1ices'], [/^(m|l)ouse$/i, '$1ice'], [/^(m|l)ice$/i, '$1ice'], [/^(ox)$/i, '$1en'], [/^(oxen)$/i, '$1'], [/(quiz)$/i, '$1zes']],\n  singular: [[/s$/i, ''], [/(ss)$/i, '$1'], [/(n)ews$/i, '$1ews'], [/([ti])a$/i, '$1um'], [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(sis|ses)$/i, '$1sis'], [/(^analy)(sis|ses)$/i, '$1sis'], [/([^f])ves$/i, '$1fe'], [/(hive)s$/i, '$1'], [/(tive)s$/i, '$1'], [/([lr])ves$/i, '$1f'], [/([^aeiouy]|qu)ies$/i, '$1y'], [/(s)eries$/i, '$1eries'], [/(m)ovies$/i, '$1ovie'], [/(x|ch|ss|sh)es$/i, '$1'], [/^(m|l)ice$/i, '$1ouse'], [/(bus)(es)?$/i, '$1'], [/(o)es$/i, '$1'], [/(shoe)s$/i, '$1'], [/(cris|test)(is|es)$/i, '$1is'], [/^(a)x[ie]s$/i, '$1xis'], [/(octop|vir)(us|i)$/i, '$1us'], [/(alias|status|bonus)(es)?$/i, '$1'], [/^(ox)en/i, '$1'], [/(vert|ind)ices$/i, '$1ex'], [/(matr)ices$/i, '$1ix'], [/(quiz)zes$/i, '$1'], [/(database)s$/i, '$1']],\n  irregularPairs: [['person', 'people'], ['man', 'men'], ['child', 'children'], ['sex', 'sexes'], ['move', 'moves'], ['cow', 'kine'], ['zombie', 'zombies']],\n  uncountable: ['equipment', 'information', 'rice', 'money', 'species', 'series', 'fish', 'sheep', 'jeans', 'police']\n};\nconst DEFAULT_MAX_CACHE_SIZE = 10_000;\nclass LRUCache {\n  // debug stats\n\n  constructor(doWork, size) {\n    this.size = size || DEFAULT_MAX_CACHE_SIZE;\n    this.state = new Map();\n    this.doWork = doWork;\n    {\n      this._hits = 0;\n      this._misses = 0;\n      this._ejected = 0;\n    }\n  }\n  get(key) {\n    const value = this.state.get(key);\n    if (value) {\n      {\n        this._hits++;\n      }\n      this.state.delete(key);\n      this.state.set(key, value);\n      return value;\n    }\n    {\n      this._misses++;\n    }\n    const newValue = this.doWork(key);\n    this.set(key, newValue);\n    return newValue;\n  }\n  set(key, value) {\n    if (this.state.size === this.size) {\n      for (const [k] of this.state) {\n        {\n          this._ejected++;\n        }\n        this.state.delete(k);\n        break;\n      }\n    }\n    this.state.set(key, value);\n  }\n  clear() {\n    this.state.clear();\n    {\n      this._hits = 0;\n      this._misses = 0;\n      this._ejected = 0;\n    }\n  }\n}\nconst STRING_DASHERIZE_REGEXP = /[ _]/g;\nconst STRING_DECAMELIZE_REGEXP = /([a-z\\d])([A-Z])/g;\nconst STRING_DASHERIZE_CACHE = new LRUCache(key => key.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase().replace(STRING_DASHERIZE_REGEXP, '-'));\n\n// eslint-disable-next-line no-useless-escape\nconst STRING_CAMELIZE_REGEXP_1 = /(\\-|\\_|\\.|\\s)+(.)?/g;\nconst STRING_CAMELIZE_REGEXP_2 = /(^|\\/)([A-Z])/g;\nconst CAMELIZE_CACHE = new LRUCache(key => key.replace(STRING_CAMELIZE_REGEXP_1, (_match, _separator, chr) => chr ? chr.toUpperCase() : '').replace(STRING_CAMELIZE_REGEXP_2, (match /*, separator, chr */) => match.toLowerCase()));\nconst STRING_UNDERSCORE_REGEXP_1 = /([a-z\\d])([A-Z]+)/g;\n// eslint-disable-next-line no-useless-escape\nconst STRING_UNDERSCORE_REGEXP_2 = /\\-|\\s+/g;\nconst UNDERSCORE_CACHE = new LRUCache(str => str.replace(STRING_UNDERSCORE_REGEXP_1, '$1_$2').replace(STRING_UNDERSCORE_REGEXP_2, '_').toLowerCase());\nconst STRING_CAPITALIZE_REGEXP = /(^|\\/)([a-z\\u00C0-\\u024F])/g;\nconst CAPITALIZE_CACHE = new LRUCache(str => str.replace(STRING_CAPITALIZE_REGEXP, (match /*, separator, chr */) => match.toUpperCase()));\n\n/**\n  Replaces underscores, spaces, or camelCase with dashes.\n\n  ```js\n  import { dasherize } from '@ember-data/request-utils/string';\n\n  dasherize('innerHTML');                // 'inner-html'\n  dasherize('action_name');              // 'action-name'\n  dasherize('css-class-name');           // 'css-class-name'\n  dasherize('my favorite items');        // 'my-favorite-items'\n  dasherize('privateDocs/ownerInvoice';  // 'private-docs/owner-invoice'\n  ```\n\n  @typedoc\n*/\nfunction dasherize(str) {\n  return STRING_DASHERIZE_CACHE.get(str);\n}\n\n/**\n  Returns the lowerCamelCase form of a string.\n\n  ```js\n  import { camelize } from '@ember-data/request-utils/string';\n\n  camelize('innerHTML');                   // 'innerHTML'\n  camelize('action_name');                 // 'actionName'\n  camelize('css-class-name');              // 'cssClassName'\n  camelize('my favorite items');           // 'myFavoriteItems'\n  camelize('My Favorite Items');           // 'myFavoriteItems'\n  camelize('private-docs/owner-invoice');  // 'privateDocs/ownerInvoice'\n```\n\n  @typedoc\n*/\nfunction camelize(str) {\n  return CAMELIZE_CACHE.get(str);\n}\n\n/**\n  Returns the lower\\_case\\_and\\_underscored form of a string.\n\n  ```js\n  import { underscore } from '@ember-data/request-utils/string';\n\n  underscore('innerHTML');                 // 'inner_html'\n  underscore('action_name');               // 'action_name'\n  underscore('css-class-name');            // 'css_class_name'\n  underscore('my favorite items');         // 'my_favorite_items'\n  underscore('privateDocs/ownerInvoice');  // 'private_docs/owner_invoice'\n  ```\n\n  @typedoc\n*/\nfunction underscore(str) {\n  return UNDERSCORE_CACHE.get(str);\n}\n\n/**\n  Returns the Capitalized form of a string\n\n  ```js\n  import { capitalize } from '@ember-data/request-utils/string';\n\n  capitalize('innerHTML')                 // 'InnerHTML'\n  capitalize('action_name')               // 'Action_name'\n  capitalize('css-class-name')            // 'Css-class-name'\n  capitalize('my favorite items')         // 'My favorite items'\n  capitalize('privateDocs/ownerInvoice'); // 'PrivateDocs/ownerInvoice'\n  ```\n\n  @typedoc\n*/\nfunction capitalize(str) {\n  return CAPITALIZE_CACHE.get(str);\n}\nfunction setMaxLRUCacheSize(size) {\n  CAMELIZE_CACHE.size = size;\n  UNDERSCORE_CACHE.size = size;\n  CAPITALIZE_CACHE.size = size;\n  STRING_DASHERIZE_CACHE.size = size;\n}\nconst BLANK_REGEX = /^\\s*$/;\nconst LAST_WORD_DASHED_REGEX = /([\\w/-]+[_/\\s-])([a-z\\d]+$)/;\nconst LAST_WORD_CAMELIZED_REGEX = /([\\w/\\s-]+)([A-Z][a-z\\d]*$)/;\nconst CAMELIZED_REGEX = /[A-Z][a-z\\d]*$/;\nconst SINGULARS = new LRUCache(word => {\n  return _singularize(word);\n});\nconst PLURALS = new LRUCache(word => {\n  return _pluralize(word);\n});\nconst UNCOUNTABLE = new Set(defaultRules.uncountable);\nconst IRREGULAR = new Map();\nconst INVERSE_IRREGULAR = new Map();\nconst SINGULAR_RULES = new Map(defaultRules.singular.reverse());\nconst PLURAL_RULES = new Map(defaultRules.plurals.reverse());\nfunction uncountable(word) {\n  UNCOUNTABLE.add(word.toLowerCase());\n}\nfunction loadUncountable(uncountables) {\n  uncountables.forEach(word => {\n    uncountable(word);\n  });\n}\nfunction irregular(single, plur) {\n  //pluralizing\n  IRREGULAR.set(single.toLowerCase(), plur);\n  IRREGULAR.set(plur.toLowerCase(), plur);\n\n  //singularizing\n  INVERSE_IRREGULAR.set(plur.toLowerCase(), single);\n  INVERSE_IRREGULAR.set(single.toLowerCase(), single);\n}\nfunction loadIrregular(irregularPairs) {\n  irregularPairs.forEach(pair => {\n    //pluralizing\n    IRREGULAR.set(pair[0].toLowerCase(), pair[1]);\n    IRREGULAR.set(pair[1].toLowerCase(), pair[1]);\n\n    //singularizing\n    INVERSE_IRREGULAR.set(pair[1].toLowerCase(), pair[0]);\n    INVERSE_IRREGULAR.set(pair[0].toLowerCase(), pair[0]);\n  });\n}\nloadIrregular(defaultRules.irregularPairs);\nfunction clear() {\n  SINGULARS.clear();\n  PLURALS.clear();\n}\nfunction resetToDefaults() {\n  clearRules();\n  defaultRules.uncountable.forEach(v => UNCOUNTABLE.add(v));\n  defaultRules.singular.forEach(v => SINGULAR_RULES.set(v[0], v[1]));\n  defaultRules.plurals.forEach(v => PLURAL_RULES.set(v[0], v[1]));\n  loadIrregular(defaultRules.irregularPairs);\n}\nfunction clearRules() {\n  SINGULARS.clear();\n  PLURALS.clear();\n  UNCOUNTABLE.clear();\n  IRREGULAR.clear();\n  INVERSE_IRREGULAR.clear();\n  SINGULAR_RULES.clear();\n  PLURAL_RULES.clear();\n}\nfunction singularize(word) {\n  (test => {\n    if (!test) {\n      throw new Error(`singularize expects to receive a non-empty string`);\n    }\n  })(typeof word === 'string' && word.length > 0);\n  if (!word) return '';\n  return SINGULARS.get(word);\n}\nfunction pluralize(word) {\n  (test => {\n    if (!test) {\n      throw new Error(`pluralize expects to receive a non-empty string`);\n    }\n  })(typeof word === 'string' && word.length > 0);\n  if (!word) return '';\n  return PLURALS.get(word);\n}\nfunction unshiftMap(v, map) {\n  // reorder\n  const rules = [v, ...map.entries()];\n  map.clear();\n  rules.forEach(rule => {\n    map.set(rule[0], rule[1]);\n  });\n}\nfunction plural(regex, string) {\n  // rule requires reordering if exists, so remove it first\n  if (PLURAL_RULES.has(regex)) {\n    PLURAL_RULES.delete(regex);\n  }\n\n  // reorder\n  unshiftMap([regex, string], PLURAL_RULES);\n}\nfunction singular(regex, string) {\n  // rule requires reordering if exists, so remove it first\n  if (SINGULAR_RULES.has(regex)) {\n    SINGULAR_RULES.delete(regex);\n  }\n\n  // reorder\n  unshiftMap([regex, string], SINGULAR_RULES);\n}\nfunction _pluralize(word) {\n  return inflect(word, PLURAL_RULES, IRREGULAR);\n}\nfunction _singularize(word) {\n  return inflect(word, SINGULAR_RULES, INVERSE_IRREGULAR);\n}\nfunction inflect(word, typeRules, irregulars) {\n  // empty strings\n  const isBlank = !word || BLANK_REGEX.test(word);\n  if (isBlank) {\n    return word;\n  }\n\n  // basic uncountables\n  const lowercase = word.toLowerCase();\n  if (UNCOUNTABLE.has(lowercase)) {\n    return word;\n  }\n\n  // adv uncountables\n  const wordSplit = LAST_WORD_DASHED_REGEX.exec(word) || LAST_WORD_CAMELIZED_REGEX.exec(word);\n  const lastWord = wordSplit ? wordSplit[2].toLowerCase() : null;\n  if (lastWord && UNCOUNTABLE.has(lastWord)) {\n    return word;\n  }\n\n  // handle irregulars\n  const isCamelized = CAMELIZED_REGEX.test(word);\n  for (let [rule, substitution] of irregulars) {\n    if (lowercase.match(rule + '$')) {\n      if (isCamelized && lastWord && irregulars.has(lastWord)) {\n        substitution = capitalize(substitution);\n        rule = capitalize(rule);\n      }\n      return word.replace(new RegExp(rule, 'i'), substitution);\n    }\n  }\n\n  // do the actual inflection\n  for (const [rule, substitution] of typeRules) {\n    if (rule.test(word)) {\n      return word.replace(rule, substitution);\n    }\n  }\n  return word;\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/inflect-8aYUyMN7.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/string.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/string.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelize: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   capitalize: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.h),\n/* harmony export */   clear: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   clearRules: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   dasherize: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.f),\n/* harmony export */   irregular: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   loadIrregular: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.l),\n/* harmony export */   loadUncountable: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   plural: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   pluralize: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   resetToDefaults: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.r),\n/* harmony export */   setMaxLRUCacheSize: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.k),\n/* harmony export */   singular: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   singularize: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.s),\n/* harmony export */   uncountable: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.u),\n/* harmony export */   underscore: () => (/* reexport safe */ _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__.j)\n/* harmony export */ });\n/* harmony import */ var _inflect_8aYUyMN7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inflect-8aYUyMN7.js */ \"../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/inflect-8aYUyMN7.js\");\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/string.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/debug-DGStaRpE.js":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/debug-DGStaRpE.js ***!
  \***************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   I: () => (/* binding */ IS_CACHE_HANDLER),\n/* harmony export */   a: () => (/* binding */ assertValidRequest),\n/* harmony export */   b: () => (/* binding */ createDeferred),\n/* harmony export */   c: () => (/* binding */ clearRequestResult),\n/* harmony export */   d: () => (/* binding */ getPromiseResult),\n/* harmony export */   e: () => (/* binding */ executeNextHandler),\n/* harmony export */   f: () => (/* binding */ cloneResponseProperties),\n/* harmony export */   g: () => (/* binding */ getRequestResult),\n/* harmony export */   s: () => (/* binding */ setPromiseResult),\n/* harmony export */   u: () => (/* binding */ upgradePromise)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @warp-drive/core-types/-private */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js\");\n/* harmony import */ var _warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @warp-drive/core-types/request */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/request.js\");\n\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\n\n\nconst PromiseCache = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_1__.getOrSetUniversal)('PromiseCache', new WeakMap());\nconst RequestMap = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_1__.getOrSetUniversal)('RequestMap', new Map());\nfunction setRequestResult(requestId, result) {\n  RequestMap.set(requestId, result);\n}\nfunction clearRequestResult(requestId) {\n  RequestMap.delete(requestId);\n}\nfunction getRequestResult(requestId) {\n  return RequestMap.get(requestId);\n}\nfunction setPromiseResult(promise, result) {\n  PromiseCache.set(promise, result);\n}\nfunction getPromiseResult(promise) {\n  return PromiseCache.get(promise);\n}\nconst IS_CACHE_HANDLER = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_1__.getOrSetGlobal)('IS_CACHE_HANDLER', Symbol('IS_CACHE_HANDLER'));\nfunction curryFuture(owner, inbound, outbound) {\n  owner.setStream(inbound.getStream());\n  inbound.then(doc => {\n    const document = {\n      [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.STRUCTURED]: true,\n      request: owner.request,\n      response: doc.response,\n      content: doc.content\n    };\n    outbound.resolve(document);\n  }, error => {\n    if (isDoc(error)) {\n      owner.setStream(owner.god.stream);\n    }\n    if (!error || !(error instanceof Error)) {\n      try {\n        throw new Error(error ? error : `Request Rejected with an Unknown Error`);\n      } catch (e) {\n        if (error && typeof error === 'object') {\n          Object.assign(e, error);\n          e.message = error.message || `Request Rejected with an Unknown Error`;\n        }\n        error = e;\n      }\n    }\n    error[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.STRUCTURED] = true;\n    error.request = owner.request;\n    error.response = owner.getResponse();\n    error.error = error.error || error.message;\n    outbound.reject(error);\n  });\n  return outbound.promise;\n}\nfunction isDoc(doc) {\n  return doc && doc[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.STRUCTURED] === true;\n}\nfunction ensureDoc(owner, content, isError) {\n  if (isDoc(content)) {\n    return content;\n  }\n  if (isError) {\n    return {\n      [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.STRUCTURED]: true,\n      request: owner.request,\n      response: owner.getResponse(),\n      error: content\n    };\n  }\n  return {\n    [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.STRUCTURED]: true,\n    request: owner.request,\n    response: owner.getResponse(),\n    content: content\n  };\n}\nfunction enhanceReason(reason) {\n  return new DOMException(reason || 'The user aborted a request.', 'AbortError');\n}\nfunction handleOutcome(owner, inbound, outbound) {\n  inbound.then(content => {\n    if (owner.controller.signal.aborted) {\n      // the next function did not respect the signal, we handle it here\n      outbound.reject(enhanceReason(owner.controller.signal.reason));\n      return;\n    }\n    if (isDoc(content)) {\n      owner.setStream(owner.god.stream);\n      content = content.content;\n    }\n    const document = {\n      [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.STRUCTURED]: true,\n      request: owner.request,\n      response: owner.getResponse(),\n      content\n    };\n    outbound.resolve(document);\n  }, error => {\n    if (isDoc(error)) {\n      owner.setStream(owner.god.stream);\n    }\n    if (!error || !(error instanceof Error)) {\n      try {\n        throw new Error(error ? error : `Request Rejected with an Unknown Error`);\n      } catch (e) {\n        if (error && typeof error === 'object') {\n          Object.assign(e, error);\n          e.message = error.message || `Request Rejected with an Unknown Error`;\n        }\n        error = e;\n      }\n    }\n    error[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.STRUCTURED] = true;\n    error.request = owner.request;\n    error.response = owner.getResponse();\n    error.error = error.error || error.message;\n    outbound.reject(error);\n  });\n  return outbound.promise;\n}\nfunction isCacheHandler(handler, index) {\n  return index === 0 && Boolean(handler[IS_CACHE_HANDLER]);\n}\nfunction executeNextHandler(wares, request, i, god) {\n  {\n    if (i === wares.length) {\n      throw new Error(`No handler was able to handle this request.`);\n    }\n    assertValidRequest(request, false);\n  }\n  const owner = new ContextOwner(request, god, i === 0);\n  function next(r) {\n    owner.nextCalled++;\n    return executeNextHandler(wares, r, i + 1, god);\n  }\n  const context = new Context(owner);\n  let outcome;\n  try {\n    outcome = wares[i].request(context, next);\n    if (!!outcome && isCacheHandler(wares[i], i)) {\n      if (!(outcome instanceof Promise)) {\n        setRequestResult(owner.requestId, {\n          isError: false,\n          result: ensureDoc(owner, outcome, false)\n        });\n        outcome = Promise.resolve(outcome);\n      }\n    } else {\n      if (!outcome || !(outcome instanceof Promise) && !(typeof outcome === 'object' && 'then' in outcome)) {\n        // eslint-disable-next-line no-console\n        console.log({\n          request,\n          handler: wares[i],\n          outcome\n        });\n        if (outcome === undefined) {\n          throw new Error(`Expected handler.request to return a promise, instead received undefined.`);\n        }\n        throw new Error(`Expected handler.request to return a promise, instead received a synchronous value.`);\n      }\n    }\n  } catch (e) {\n    if (isCacheHandler(wares[i], i)) {\n      setRequestResult(owner.requestId, {\n        isError: true,\n        result: ensureDoc(owner, e, true)\n      });\n    }\n    outcome = Promise.reject(e);\n  }\n  const future = createFuture(owner);\n  if (isFuture(outcome)) {\n    return curryFuture(owner, outcome, future);\n  }\n  return handleOutcome(owner, outcome, future);\n}\nfunction isFuture(maybe) {\n  return Boolean(maybe && maybe instanceof Promise && maybe[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.IS_FUTURE] === true);\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    resolve,\n    reject,\n    promise\n  };\n}\nfunction upgradePromise(promise, future) {\n  promise[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.IS_FUTURE] = true;\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  promise.getStream = future.getStream;\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  promise.abort = future.abort;\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  promise.onFinalize = future.onFinalize;\n  return promise;\n}\nfunction createFuture(owner) {\n  const deferred = createDeferred();\n  let {\n    promise\n  } = deferred;\n  let cbs;\n  promise = promise.finally(() => {\n    owner.resolveStream();\n    if (cbs) {\n      cbs.forEach(cb => cb());\n    }\n  });\n  promise.onFinalize = fn => {\n    cbs = cbs || [];\n    cbs.push(fn);\n  };\n  promise[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.IS_FUTURE] = true;\n  promise.getStream = () => {\n    return owner.getStream();\n  };\n  promise.abort = reason => {\n    owner.abort(enhanceReason(reason));\n  };\n  deferred.promise = promise;\n  return deferred;\n}\nfunction upgradeHeaders(headers) {\n  headers.clone = () => {\n    return new Headers(headers);\n  };\n  headers.toJSON = () => {\n    return Array.from(headers);\n  };\n  return headers;\n}\nfunction cloneResponseProperties(response) {\n  const {\n    headers,\n    ok,\n    redirected,\n    status,\n    statusText,\n    type,\n    url\n  } = response;\n  upgradeHeaders(headers);\n  return {\n    headers: headers,\n    ok,\n    redirected,\n    status,\n    statusText,\n    type,\n    url\n  };\n}\nclass ContextOwner {\n  constructor(request, god, isRoot = false) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"hasSetStream\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"hasSetResponse\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"hasSubscribers\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"stream\", createDeferred());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"response\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"nextCalled\", 0);\n    this.isRoot = isRoot;\n    this.requestId = god.id;\n    this.controller = request.controller || god.controller;\n    this.stream.promise.sizeHint = 0;\n    if (request.controller) {\n      if (request.controller !== god.controller) {\n        god.controller.signal.addEventListener('abort', () => {\n          this.controller.abort(god.controller.signal.reason);\n        });\n      }\n      delete request.controller;\n    }\n    let enhancedRequest = Object.assign({\n      signal: this.controller.signal\n    }, request);\n    {\n      if (!request?.cacheOptions?.[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]) {\n        request = deepFreeze(request);\n        enhancedRequest = deepFreeze(enhancedRequest);\n      }\n    }\n    this.enhancedRequest = enhancedRequest;\n    this.request = request;\n    this.god = god;\n    this.stream.promise = this.stream.promise.then(stream => {\n      if (this.god.stream === stream && this.hasSubscribers) {\n        this.god.stream = null;\n      }\n      return stream;\n    });\n  }\n  get hasRequestedStream() {\n    return this.god.hasRequestedStream;\n  }\n  getResponse() {\n    if (this.hasSetResponse) {\n      return this.response;\n    }\n    if (this.nextCalled === 1) {\n      return this.god.response;\n    }\n    return null;\n  }\n  getStream() {\n    if (this.isRoot) {\n      this.god.hasRequestedStream = true;\n    }\n    if (!this.hasSetResponse) {\n      const hint = this.god.response?.headers?.get('content-length');\n      this.stream.promise.sizeHint = hint ? parseInt(hint, 10) : 0;\n    }\n    this.hasSubscribers = true;\n    return this.stream.promise;\n  }\n  abort(reason) {\n    this.controller.abort(reason);\n  }\n  setStream(stream) {\n    if (!this.hasSetStream) {\n      this.hasSetStream = true;\n      if (!(stream instanceof Promise)) {\n        this.god.stream = stream;\n      }\n      // @ts-expect-error\n      this.stream.resolve(stream);\n    }\n  }\n  resolveStream() {\n    this.setStream(this.nextCalled === 1 ? this.god.stream : null);\n  }\n  setResponse(response) {\n    if (this.hasSetResponse) {\n      {\n        throw new Error(`Cannot setResponse when a response has already been set`);\n      }\n      return;\n    }\n    this.hasSetResponse = true;\n    if (response instanceof Response) {\n      // TODO potentially avoid cloning in prod\n      let responseData = cloneResponseProperties(response);\n      {\n        responseData = deepFreeze(responseData);\n      }\n      this.response = responseData;\n      this.god.response = responseData;\n      const sizeHint = response.headers?.get('content-length');\n      this.stream.promise.sizeHint = sizeHint ? parseInt(sizeHint, 10) : 0;\n    } else {\n      this.response = response;\n      this.god.response = response;\n    }\n  }\n}\nvar _owner = /*#__PURE__*/new WeakMap();\nclass Context {\n  constructor(owner) {\n    _classPrivateFieldInitSpec(this, _owner, void 0);\n    this.id = owner.requestId;\n    _classPrivateFieldSet(_owner, this, owner);\n    this.request = owner.enhancedRequest;\n  }\n  setStream(stream) {\n    _classPrivateFieldGet(_owner, this).setStream(stream);\n  }\n  setResponse(response) {\n    _classPrivateFieldGet(_owner, this).setResponse(response);\n  }\n  get hasRequestedStream() {\n    return _classPrivateFieldGet(_owner, this).hasRequestedStream;\n  }\n}\nconst BODY_TYPES = {\n  type: 'string',\n  klass: ['Blob', 'ArrayBuffer', 'TypedArray', 'DataView', 'FormData', 'URLSearchParams', 'ReadableStream']\n};\nconst ValidKeys = new Map([['records', 'array'], ['data', 'json'], ['body', BODY_TYPES], ['disableTestWaiter', 'boolean'], ['options', 'object'], ['cacheOptions', 'object'], ['op', 'string'], ['store', 'object'], ['url', 'string'], ['cache', ['default', 'force-cache', 'no-cache', 'no-store', 'only-if-cached', 'reload']], ['credentials', ['include', 'omit', 'same-origin']], ['destination', ['', 'object', 'audio', 'audioworklet', 'document', 'embed', 'font', 'frame', 'iframe', 'image', 'manifest', 'paintworklet', 'report', 'script', 'sharedworker', 'style', 'track', 'video', 'worker', 'xslt']], ['headers', 'headers'], ['integrity', 'string'], ['keepalive', 'boolean'], ['method', ['GET', 'PUT', 'PATCH', 'DELETE', 'POST', 'OPTIONS']], ['mode', ['same-origin', 'cors', 'navigate', 'no-cors']], ['redirect', ['error', 'follow', 'manual']], ['referrer', 'string'], ['signal', 'AbortSignal'], ['controller', 'AbortController'], ['referrerPolicy', ['', 'same-origin', 'no-referrer', 'no-referrer-when-downgrade', 'origin', 'origin-when-cross-origin', 'strict-origin', 'strict-origin-when-cross-origin', 'unsafe-url']]]);\nconst IS_FROZEN = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_1__.getOrSetGlobal)('IS_FROZEN', Symbol('FROZEN'));\nconst IS_COLLECTION = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_1__.getOrSetGlobal)('IS_COLLECTION', Symbol.for('Collection'));\nfunction freezeHeaders(headers) {\n  headers.delete = headers.set = headers.append = () => {\n    throw new Error(`Cannot Mutate Immutatable Headers, use headers.clone to get a copy`);\n  };\n  upgradeHeaders(headers);\n  return headers;\n}\nfunction deepFreeze(value) {\n  if (value && value[IS_FROZEN]) {\n    return value;\n  }\n  const _type = typeof value;\n  switch (_type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'undefined':\n    case 'bigint':\n      return value;\n    case 'function':\n      throw new Error(`Cannot deep-freeze a function`);\n    case 'object':\n      {\n        const _niceType = niceTypeOf(value);\n        switch (_niceType) {\n          case 'array':\n            {\n              if (value[IS_COLLECTION]) {\n                return value;\n              }\n              const arr = value.map(deepFreeze);\n              arr[IS_FROZEN] = true;\n              return Object.freeze(arr);\n            }\n          case 'null':\n            return value;\n          case 'object':\n            Object.keys(value).forEach(key => {\n              try {\n                value[key] = deepFreeze(value[key]);\n              } catch {\n                // continue\n              }\n            });\n            value[IS_FROZEN] = true;\n            return Object.freeze(value);\n          case 'headers':\n            return freezeHeaders(value);\n          case 'Collection':\n          case 'Store':\n          case 'AbortSignal':\n            return value;\n          case 'date':\n          case 'map':\n          case 'set':\n          case 'error':\n          case 'stream':\n          default:\n            // console.log(`Cannot deep-freeze ${_niceType}`);\n            return value;\n        }\n      }\n  }\n}\nfunction isMaybeContext(request) {\n  if (request && typeof request === 'object') {\n    const keys = Object.keys(request);\n    if (keys.length === 1 && keys[0] === 'request') {\n      return true;\n    }\n  }\n  return false;\n}\nfunction niceTypeOf(v) {\n  if (v === null) {\n    return 'null';\n  }\n  if (typeof v === 'string') {\n    return v ? 'non-empty-string' : 'empty-string';\n  }\n  if (!v) {\n    return typeof v;\n  }\n  if (Array.isArray(v)) {\n    return 'array';\n  }\n  if (v instanceof Date) {\n    return 'date';\n  }\n  if (v instanceof Map) {\n    return 'map';\n  }\n  if (v instanceof Set) {\n    return 'set';\n  }\n  if (v instanceof Error) {\n    return 'error';\n  }\n  if (v instanceof ReadableStream || v instanceof WritableStream || v instanceof TransformStream) {\n    return 'stream';\n  }\n  if (v instanceof Headers) {\n    return 'headers';\n  }\n  if (typeof v === 'object' && v.constructor && v.constructor.name !== 'Object') {\n    return v.constructor.name;\n  }\n  return typeof v;\n}\nfunction validateKey(key, value, errors) {\n  const schema = ValidKeys.get(key);\n  if (!schema && !IgnoredKeys.has(key)) {\n    errors.push(`InvalidKey: '${key}'`);\n    return;\n  }\n  if (schema) {\n    if (schema === BODY_TYPES) {\n      if (typeof value === 'string' || value instanceof ReadableStream) {\n        return;\n      }\n      const type = niceTypeOf(value);\n      if (schema.klass.includes(type)) {\n        return;\n      }\n      errors.push(`InvalidValue: key 'body' should be a string or one of '${schema.klass.join(\"', '\")}', received ${'<a value of type ' + niceTypeOf(value) + '>'}`);\n      return;\n    }\n    if (Array.isArray(schema)) {\n      if (!schema.includes(value)) {\n        errors.push(`InvalidValue: key ${key} should be a one of '${schema.join(\"', '\")}', received ${typeof value === 'string' ? value : '<a value of type ' + niceTypeOf(value) + '>'}`);\n      }\n      return;\n    } else if (schema === 'json') {\n      try {\n        JSON.stringify(value);\n      } catch (e) {\n        errors.push(`InvalidValue: key ${key} should be a JSON serializable value, but failed to serialize with Error - ${e.message}`);\n      }\n      return;\n    } else if (schema === 'headers') {\n      if (!(value instanceof Headers)) {\n        errors.push(`InvalidValue: key ${key} should be an instance of Headers, received ${niceTypeOf(value)}`);\n      }\n      return;\n    } else if (schema === 'record') {\n      const _type = typeof value;\n      // record must extend plain object or Object.create(null)\n      if (!value || _type !== 'object' || value.constructor && value.constructor !== Object) {\n        errors.push(`InvalidValue: key ${key} should be a dictionary of string keys to string values, received ${niceTypeOf(value)}`);\n        return;\n      }\n      const keys = Object.keys(value);\n      keys.forEach(k => {\n        const v = value[k];\n        if (typeof k !== 'string') {\n          errors.push(`\\tThe key ${String(k)} on ${key} should be a string key`);\n        } else if (typeof v !== 'string') {\n          errors.push(`\\tThe value of ${key}.${k} should be a string not ${niceTypeOf(v)}`);\n        }\n      });\n      return;\n    } else if (schema === 'string') {\n      if (typeof value !== 'string' || value.length === 0) {\n        errors.push(`InvalidValue: key ${key} should be a non-empty string, received ${typeof value === 'string' ? \"''\" : typeof value}`);\n      }\n      return;\n    } else if (schema === 'object') {\n      if (!value || Array.isArray(value) || typeof value !== 'object') {\n        errors.push(`InvalidValue: key ${key} should be an object`);\n      }\n      return;\n    } else if (schema === 'boolean') {\n      if (typeof value !== 'boolean') {\n        errors.push(`InvalidValue: key ${key} should be a boolean, received ${typeof value}`);\n      }\n      return;\n    } else if (schema === 'array') {\n      if (!Array.isArray(value)) {\n        errors.push(`InvalidValue: key ${key} should be an array, received ${typeof value}`);\n      }\n      return;\n    }\n  }\n}\nconst IgnoredKeys = new Set([]);\nfunction assertValidRequest(request, isTopLevel) {\n  {\n    // handle basic shape\n    if (!request) {\n      throw new Error(`Expected ${isTopLevel ? 'RequestManager.request' : 'next'}(<request>) to be called with a request, but none was provided.`);\n    }\n    if (Array.isArray(request) || typeof request !== 'object') {\n      throw new Error(`The \\`request\\` passed to \\`${isTopLevel ? 'RequestManager.request' : 'next'}(<request>)\\` should be an object, received \\`${niceTypeOf(request)}\\``);\n    }\n    if (Object.keys(request).length === 0) {\n      throw new Error(`The \\`request\\` passed to \\`${isTopLevel ? 'RequestManager.request' : 'next'}(<request>)\\` was empty (\\`{}\\`). Requests need at least one valid key.`);\n    }\n\n    // handle accidentally passing context entirely\n    if (request instanceof Context) {\n      throw new Error(`Expected a request passed to \\`${isTopLevel ? 'RequestManager.request' : 'next'}(<request>)\\` but received the previous handler's context instead`);\n    }\n    // handle Object.assign({}, context);\n    if (isMaybeContext(request)) {\n      throw new Error(`Expected a request passed to \\`${isTopLevel ? 'RequestManager.request' : 'next'}(<request>)\\` but received an object with a request key instead.`);\n    }\n\n    // handle schema\n    const keys = Object.keys(request);\n    const validationErrors = [];\n    const isLegacyRequest = Boolean('op' in request && !request.url);\n    keys.forEach(key => {\n      if (isLegacyRequest && key === 'data') {\n        return;\n      }\n      validateKey(key, request[key], validationErrors);\n    });\n    if (validationErrors.length) {\n      const error = new Error(`Invalid Request passed to \\`${isTopLevel ? 'RequestManager.request' : 'next'}(<request>)\\`.\\n\\nThe following issues were found:\\n\\n\\t${validationErrors.join('\\n\\t')}`);\n      error.errors = validationErrors;\n      throw error;\n    }\n  }\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/debug-DGStaRpE.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/fetch.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/fetch.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fetch)\n/* harmony export */ });\n/* harmony import */ var _debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug-DGStaRpE.js */ \"../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/debug-DGStaRpE.js\");\n\n/**\n * A basic Fetch Handler which converts a request into a\n * `fetch` call presuming the response to be `json`.\n *\n * ```ts\n * import Fetch from '@ember-data/request/fetch';\n *\n * manager.use([Fetch]);\n * ```\n *\n * @module @ember-data/request/fetch\n * @main @ember-data/request/fetch\n */\n\n// Lazily close over fetch to avoid breaking Mirage\nconst _fetch = typeof fetch !== 'undefined' ? (...args) => fetch(...args) : typeof FastBoot !== 'undefined' ? (...args) => FastBoot.require('node-fetch')(...args) : () => {\n  throw new Error('No Fetch Implementation Found');\n};\n\n// clones a response in a way that should still\n// allow it to stream\nfunction cloneResponse(response, overrides) {\n  const props = (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_0__.f)(response);\n  return new Response(response.body, Object.assign(props, overrides));\n}\nlet IS_MAYBE_MIRAGE = () => false;\n{\n  IS_MAYBE_MIRAGE = () => Boolean(typeof window !== 'undefined' && (window.server?.pretender || window.fetch.toString().replace(/\\s+/g, '') !== 'function fetch() { [native code] }'.replace(/\\s+/g, '')));\n}\nconst MUTATION_OPS = new Set(['updateRecord', 'createRecord', 'deleteRecord']);\nconst ERROR_STATUS_CODE_FOR = new Map([[400, 'Bad Request'], [401, 'Unauthorized'], [402, 'Payment Required'], [403, 'Forbidden'], [404, 'Not Found'], [405, 'Method Not Allowed'], [406, 'Not Acceptable'], [407, 'Proxy Authentication Required'], [408, 'Request Timeout'], [409, 'Conflict'], [410, 'Gone'], [411, 'Length Required'], [412, 'Precondition Failed'], [413, 'Payload Too Large'], [414, 'URI Too Long'], [415, 'Unsupported Media Type'], [416, 'Range Not Satisfiable'], [417, 'Expectation Failed'], [419, 'Page Expired'], [420, 'Enhance Your Calm'], [421, 'Misdirected Request'], [422, 'Unprocessable Entity'], [423, 'Locked'], [424, 'Failed Dependency'], [425, 'Too Early'], [426, 'Upgrade Required'], [428, 'Precondition Required'], [429, 'Too Many Requests'], [430, 'Request Header Fields Too Large'], [431, 'Request Header Fields Too Large'], [450, 'Blocked By Windows Parental Controls'], [451, 'Unavailable For Legal Reasons'], [500, 'Internal Server Error'], [501, 'Not Implemented'], [502, 'Bad Gateway'], [503, 'Service Unavailable'], [504, 'Gateway Timeout'], [505, 'HTTP Version Not Supported'], [506, 'Variant Also Negotiates'], [507, 'Insufficient Storage'], [508, 'Loop Detected'], [509, 'Bandwidth Limit Exceeded'], [510, 'Not Extended'], [511, 'Network Authentication Required']]);\n\n/**\n * A basic handler which converts a request into a\n * `fetch` call presuming the response to be `json`.\n *\n * ```ts\n * import Fetch from '@ember-data/request/fetch';\n *\n * manager.use([Fetch]);\n * ```\n *\n * @class Fetch\n * @public\n */\nconst Fetch = {\n  async request(context) {\n    let response;\n    try {\n      response = await _fetch(context.request.url, context.request);\n    } catch (e) {\n      if (e instanceof DOMException && e.name === 'AbortError') {\n        e.statusText = 'Aborted';\n        e.status = 20;\n        e.isRequestError = true;\n      } else {\n        e.statusText = 'Unknown Network Error';\n        e.status = 0;\n        e.isRequestError = true;\n      }\n      throw e;\n    }\n    const isError = !response.ok || response.status >= 400;\n    const op = context.request.op;\n    const isMutationOp = Boolean(op && MUTATION_OPS.has(op));\n    if (!isError && !isMutationOp && response.status !== 204 && !response.headers.has('date')) {\n      if (IS_MAYBE_MIRAGE()) {\n        response.headers.set('date', new Date().toUTCString());\n      } else {\n        const headers = new Headers(response.headers);\n        headers.set('date', new Date().toUTCString());\n        response = cloneResponse(response, {\n          headers\n        });\n      }\n    }\n    context.setResponse(response);\n    if (response.status === 204) {\n      return null;\n    }\n    let text = '';\n    // if we are in a mirage context, we cannot support streaming\n    if (IS_MAYBE_MIRAGE()) {\n      text = await response.text();\n    } else {\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let isStreaming = context.hasRequestedStream;\n      let stream = isStreaming ? new TransformStream() : null;\n      let writer = stream?.writable.getWriter();\n      if (isStreaming) {\n        // Listen for the abort event on the AbortSignal\n        context.request.signal?.addEventListener('abort', () => {\n          if (!isStreaming) {\n            return;\n          }\n          void stream.writable.abort('Request Aborted');\n          void stream.readable.cancel('Request Aborted');\n        });\n        context.setStream(stream.readable);\n      }\n\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        // we manually read the stream instead of using `response.json()`\n        // or `response.text()` because if we need to stream the body\n        // we need to be able to pass the stream along efficiently.\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) {\n          if (isStreaming) {\n            isStreaming = false;\n            await writer.ready;\n            await writer.close();\n          }\n          break;\n        }\n        text += decoder.decode(value, {\n          stream: true\n        });\n\n        // if we are streaming, we want to pass the stream along\n        if (isStreaming) {\n          await writer.ready;\n          await writer.write(value);\n        } else if (context.hasRequestedStream) {\n          const encode = new TextEncoder();\n          isStreaming = true;\n          stream = new TransformStream();\n          // Listen for the abort event on the AbortSignal\n          // eslint-disable-next-line @typescript-eslint/no-loop-func\n          context.request.signal?.addEventListener('abort', () => {\n            if (!isStreaming) {\n              return;\n            }\n            void stream.writable.abort('Request Aborted');\n            void stream.readable.cancel('Request Aborted');\n          });\n          context.setStream(stream.readable);\n          writer = stream.writable.getWriter();\n          await writer.ready;\n          await writer.write(encode.encode(text));\n          await writer.ready;\n          await writer.write(value);\n        }\n      }\n      if (isStreaming) {\n        isStreaming = false;\n        await writer.ready;\n        await writer.close();\n      }\n    }\n    // if we are an error, we will want to throw\n    if (isError) {\n      let errorPayload;\n      try {\n        errorPayload = JSON.parse(text);\n      } catch {\n        // void;\n      }\n      // attempt errors discovery\n      const errors = Array.isArray(errorPayload) ? errorPayload : isDict(errorPayload) && Array.isArray(errorPayload.errors) ? errorPayload.errors : null;\n      const statusText = response.statusText || ERROR_STATUS_CODE_FOR.get(response.status) || 'Unknown Request Error';\n      const msg = `[${response.status} ${statusText}] ${context.request.method ?? 'GET'} (${response.type}) - ${response.url}`;\n      const error = errors ? new AggregateError(errors, msg) : new Error(msg);\n      error.status = response.status;\n      error.statusText = statusText;\n      error.isRequestError = true;\n      error.code = error.status;\n      error.name = error.statusText.replaceAll(' ', '') + 'Error';\n      error.content = errorPayload;\n      throw error;\n    } else {\n      return JSON.parse(text);\n    }\n  }\n};\nfunction isDict(v) {\n  return v !== null && typeof v === 'object';\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/fetch.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/index.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/index.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDeferred: () => (/* reexport safe */ _debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.b),\n/* harmony export */   \"default\": () => (/* binding */ RequestManager),\n/* harmony export */   getPromiseResult: () => (/* reexport safe */ _debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.d),\n/* harmony export */   setPromiseResult: () => (/* reexport safe */ _debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.s)\n/* harmony export */ });\n/* harmony import */ var _warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @warp-drive/core-types/-private */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js\");\n/* harmony import */ var _debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-DGStaRpE.js */ \"../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/debug-DGStaRpE.js\");\n/* harmony import */ var _embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2 */ \"../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2.js\");\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\n\n\n\n\n\n/* eslint-disable no-irregular-whitespace */\n/**\n *\n  <p align=\"center\">\n  <img\n    class=\"project-logo\"\n    src=\"https://raw.githubusercontent.com/emberjs/data/4612c9354e4c54d53327ec2cf21955075ce21294/ember-data-logo-light.svg#gh-light-mode-only\"\n    alt=\"EmberData RequestManager\"\n    width=\"240px\"\n    title=\"EmberData RequestManager\"\n    />\n</p>\n\n<p align=\"center\">⚡️ a simple abstraction over fetch to enable easy management of request/response flows</p>\n\nThis package provides [*Ember*‍**Data**](https://github.com/emberjs/data/)'s `RequestManager`, a framework agnostic library that can be integrated with any Javascript application to make [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) happen.\n\n- [Installation](#installation)\n- [Basic Usage](#🚀-basic-usage)\n- [Architecture](#🪜-architecture)\n- [Usage](#usage)\n  - [Making Requests](#making-requests)\n    - [Using The Response](#using-the-response)\n  - [Request Handlers](#handling-requests)\n    - [Handling Errors](#handling-errors)\n    - [Handling Abort](#handling-abort)\n    - [Stream Currying](#stream-currying)\n    - [Automatic Currying](#automatic-currying-of-stream-and-response)\n  - [Using as a Service](#using-as-a-service)\n    - [Using with `@ember-data/store`](#using-with-ember-datastore)\n    - [Using with `ember-data`](#using-with-ember-data)\n\n---\n\n## Installation\n\nInstall using your javascript package manager of choice. For instance with [pnpm](https://pnpm.io/)\n\n```no-highlight\npnpm add @ember-data/request\n```\n\n---\n\n## 🚀 Basic Usage\n\nA `RequestManager` provides a request/response flow in which configured handlers are successively given the opportunity to handle, modify, or pass-along a request.\n\nThe RequestManager on its own does not know how to fulfill requests. For this we must register at least one handler. A basic `Fetch` handler is provided that will take the request options provided and execute `fetch`.\n\n```ts\nimport RequestManager from '@ember-data/request';\nimport Fetch from '@ember-data/request/fetch';\nimport { apiUrl } from './config';\n\n// ... create manager and add our Fetch handler\nconst manager = new RequestManager();\nmanager.use([Fetch]);\n\n// ... execute a request\nconst response = await manager.request({\n  url: `${apiUrl}/users`\n});\n```\n\n---\n\n## 🪜 Architecture\n\nA `RequestManager` receives a request and manages fulfillment via configured handlers. It may be used standalone from the rest of *Ember*‍**Data** and is not specific to any library or framework.\n\nEach handler may choose to fulfill the request using some source of data or to pass the request along to other handlers.\n\nThe same or a separate instance of a `RequestManager` may also be used to fulfill requests issued by [*Ember*‍**Data**{Store}](https://github.com/emberjs/data/tree/main/packages/store)\n\nWhen the same instance is used by both this allows for simple coordination throughout the application. Requests issued by the Store will use the in-memory cache\nand return hydrated responses, requests issued directly to the RequestManager\nwill skip the in-memory cache and return raw responses.\n\n---\n\n## Usage\n\n```ts\nconst userList = await manager.request({\n  url: `/api/v1/users.list`\n});\n\nconst users = userList.content;\n```\n\n---\n\n### Making Requests\n\n`RequestManager` has a single asyncronous method as it's API: `request`\n\n```ts\nclass RequestManager {\n  request<T>(req: RequestInfo): Future<T>;\n}\n```\n\n`manager.request(<RequestInfo>)` accepts an object containing the information\nnecessary for the request to be handled successfully.\n\nThese options extend the [options](https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters) provided to `fetch`, and can accept a [`Request`](https://developer.mozilla.org/en-US/docs/Web/API/Request/Request). All properties accepted by Request options and fetch options are valid.\n\n```ts\ninterface RequestInfo extends FetchOptions {\n  op?: string;\n  store?: Store;\n\n  url: string;\n   // data that a handler should convert into\n   // the query (GET) or body (POST)\n  data?: Record<string, unknown>;\n\n  // options specifically intended for handlers\n  // to utilize to process the request\n  options?: Record<string, unknown>;\n}\n```\n\n> **note**\n> providing a `signal` is unnecessary as an `AbortController` is automatically provided if none is present.\n\n---\n\n#### Using the Response\n\n`manager.request` returns a `Future`, which allows access to limited information about the request while it is still pending and fulfills with the final state when the request completes and the response has been read.\n\n```ts\nconst usersFuture = manager.request({\n  url: `/api/v1/users.list`\n});\n```\n\nA `Future` is cancellable via `abort`.\n\n```ts\nusersFuture.abort();\n```\n\nHandlers may *optionally* expose a ReadableStream to the `Future` for streaming data; however, when doing so the handler should not resolve until it has fully read the response stream itself.\n\n```ts\ninterface Future<T> extends Promise<StructuredDocument<T>> {\n  abort(): void;\n\n  async getStream(): ReadableStream | null;\n}\n```\n\nA Future resolves or rejects with a `StructuredDocument`.\n\n```ts\ninterface StructuredDocument<T> {\n  request: RequestInfo;\n  response: ResponseInfo | null;\n  content?: T;\n  error?: Error;\n}\n```\n\nThe `RequestInfo` specified by `document.request` is the same as originally provided to `manager.request`. If any handler fulfilled this request using different request info it is not represented here. This contract helps to ensure that `retry` and `caching` are possible since the original arguments are correctly preserved. This also allows handlers to \"fork\" the request or fulfill from multiple sources without the details of fulfillment muddying the original request.\n\nThe `ResponseInfo` is a serializable fulfilled subset of a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) if set via `setResponse`. If no response was ever set this will be `null`.\n\n```ts\ninterface ResponseInfo {\n  headers?: Record<string, string>;\n  ok?: boolean;\n  redirected?: boolean;\n  status?: HTTPStatusCode;\n  statusText?: string;\n  type?: 'basic' | 'cors';\n  url?: string;\n}\n```\n\n---\n\n### Request Handlers\n\nRequests are fulfilled by handlers. A handler receives the request context\nas well as a `next` function with which to pass along a request to the next\nhandler if it so chooses.\n\nA handler may be any object with a `request` method. This allows both stateful and non-stateful\nhandlers to be utilized.\n\nIf a handler calls `next`, it receives a `Future` which resolves to a `StructuredDocument`\nthat it can then compose how it sees fit with its own response.\n\n```ts\n\ntype NextFn<P> = (req: RequestInfo) => Future<P>;\n\ninterface Handler {\n  async request<T>(context: RequestContext, next: NextFn<P>): T;\n}\n```\n\n`RequestContext` contains a readonly version of the RequestInfo as well as a few methods for building up the `StructuredDocument` and `Future` that will be part of the response.\n\n```ts\ninterface RequestContext<T> {\n  readonly request: RequestInfo;\n\n  setStream(stream: ReadableStream | Promise<ReadableStream>): void;\n  setResponse(response: Response | ResponseInfo): void;\n}\n```\n\nA basic `fetch` handler with support for streaming content updates while\nthe download is still underway might look like the following, where we use\n[`response.clone()`](https://developer.mozilla.org/en-US/docs/Web/API/Response/clone) to `tee` the `ReadableStream` into two streams.\n\nA more efficient handler might read from the response stream, building up the\nresponse content before passing along the chunk downstream.\n\n```ts\nconst FetchHandler = {\n  async request(context) {\n    const response = await fetch(context.request);\n    context.setResponse(reponse);\n    context.setStream(response.clone().body);\n\n    return response.json();\n  }\n}\n```\n\nRequest handlers are registered by configuring the manager via `use`\n\n```ts\nmanager.use([Handler1, Handler2])\n```\n\nHandlers will be invoked in the order they are registered (\"fifo\", first-in first-out), and may only be registered up until the first request is made. It is recommended but not required to register all handlers at one time in order to ensure explicitly visible handler ordering.\n\n---\n\n#### Handling Errors\n\nEach handler in the chain can catch errors from upstream and choose to\neither handle the error, re-throw the error, or throw a new error.\n\n```ts\nconst MAX_RETRIES = 5;\n\nconst Handler = {\n  async request(context, next) {\n    let attempts = 0;\n\n    while (attempts < MAX_RETRIES) {\n      attempts++;\n      try {\n        const response = await next(context.request);\n        return response;\n      } catch (e) {\n        if (isTimeoutError(e) && attempts < MAX_RETRIES) {\n          // retry request\n          continue;\n        }\n        // rethrow if it is not a timeout error\n        throw e;\n      }\n    }\n  }\n}\n```\n\n---\n\n#### Handling Abort\n\nAborting a request will reject the current handler in the chain. However,\nevery handler can potentially catch this error. If your handler needs to\nseparate AbortError from other Error types, it is recommended to check\n`context.request.signal.aborted` (or if a custom controller was supplied `controller.signal.aborted`).\n\nIn this manner it is possible for a request to recover from an abort and\nstill proceed; however, as a best practice this should be used for necessary\ncleanup only and the original AbortError rethrown if the abort signal comes\nfrom the root controller.\n\n**AbortControllers are Always Present and Always Entangled**\n\nIf the initial request does not supply an [AbortController](https://developer.mozilla.org/en-US/docs/Web/API/AbortController), one will be generated.\n\nThe [signal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) for this controller is automatically added to the request passed into the first handler.\n\nEach handler has the option to supply a new controller to the request when calling `next`. If a new controller is provided it will be automatically\nentangled with the root controller. If the root controller aborts, so will\nany entangled controllers.\n\nIf an entangled controller aborts, the root controller will not abort. This\nallows for advanced request-flow scenarios to abort subsections of the request tree without aborting the entire request.\n\n---\n\n#### Stream Currying\n\n`RequestManager.request` and `next` differ from `fetch` in one **crucial detail** in that the outer Promise resolves only once the response stream has been processed.\n\nFor context, it helps to understand a few of the use-cases that RequestManager\nis intended to allow.\n\n- to manage and return streaming content (such as video files)\n- to fulfill a request from multiple sources or by splitting one request into multiple requests\n  - for instance one API call for a user and another for the user's friends\n  - or e.g. fulfilling part of the request from one source (one API, in-memory, localStorage, IndexedDB\n   etc.) and the rest from another source (a different API, a WebWorker, etc.)\n- to coalesce multiple requests\n- to decorate a request with additional info\n  - e.g. an Auth handler that ensures the correct tokens or headers or cookies are attached.\n\n\n`await fetch(<req>)` resolves at the moment headers are received. This allows for the body of the request to be processed as a stream by application\ncode *while chunks are still being received by the browser*.\n\nWhen an app chooses to `await response.json()` what occurs is the browser reads the stream to completion and then returns the result. Additionally, this stream may only be read **once**.\n\nThe `RequestManager` preserves this ability to subscribe to and utilize the stream by either the application or the handler – thereby delivering the full power and flexibility of native APIs – without restricting developers in ways that lead to complicated workarounds.\n\nEach handler may call `setStream` only once, but may do so *at any time* until the promise that the handler returns has resolved. The associated promise returned by calling `future.getStream` will resolve with the stream set by `setStream` if that method is called, or `null` if that method\nhas not been called by the time that the handler's request method has resolved.\n\nHandlers that do not create a stream of their own, but which call `next`, should defensively pipe the stream forward. While this is not required (see automatic currying below) it is better to do so in most cases as otherwise the stream may not become available to downstream handlers or the application until the upstream handler has fully read it.\n\n```ts\ncontext.setStream(future.getStream());\n```\n\nHandlers that either call `next` multiple times or otherwise have reason to create multiple  fetch requests should either choose to return no stream, meaningfully combine the streams, or select a single prioritized stream.\n\nOf course, any handler may choose to read and handle the stream, and return either no stream or a different stream in the process.\n\n---\n\n#### Automatic Currying of Stream and Response\n\nIn order to simplify the common case for handlers which decorate a request, if `next` is called only a single time and `setResponse` was never called by the handler, the response set by the next handler in the chain will be applied to that handler's outcome. For instance, this makes the following pattern possible `return (await next(<req>)).content;`.\n\nSimilarly, if `next` is called only a single time and neither `setStream` nor `getStream` was called, we automatically curry the stream from the future returned by `next` onto the future returned by the handler.\n\nFinally, if the return value of a handler is a `Future`, we curry `content` and `errors` as well, thus enabling the simplest form `return next(<req>)`.\n\nIn the case of the `Future` being returned, `Stream` proxying is automatic and immediate and does not wait for the `Future` to resolve.\n\n---\n\n### Using as a Service\n\nMost applications will desire to have a single `RequestManager` instance, which can be achieved using module-state patterns for singletons, or for [Ember](https://emberjs.com) applications by exporting the manager as a [service](https://guides.emberjs.com/release/services/).\n\n*services/request.ts*\n```ts\nimport RequestManager from '@ember-data/request';\nimport Fetch from '@ember-data/request/fetch';\nimport Auth from 'ember-simple-auth/ember-data-handler';\n\nexport default class extends RequestManager {\n  constructor(createArgs) {\n    super(createArgs);\n    this.use([Auth, Fetch]);\n  }\n}\n```\n\n---\n\n#### Using with `@ember-data/store`\n\nTo have a request service unique to a Store:\n\n```ts\nimport Store, { CacheHandler } from '@ember-data/store';\nimport RequestManager from '@ember-data/request';\nimport Fetch from '@ember-data/request/fetch';\n\nclass extends Store {\n  requestManager = new RequestManager();\n\n  constructor(args) {\n    super(args);\n    this.requestManager.use([Fetch]);\n    this.requestManager.useCache(CacheHandler);\n  }\n}\n```\n\n---\n\n#### Using with `ember-data`\n\nIf using the package [ember-data](https://github.com/emberjs/data/tree/main/packages/-ember-data),\nthe following configuration will automatically be done in order to preserve the\nlegacy [Adapter](https://github.com/emberjs/data/tree/main/packages/adapter) and\n[Serializer](https://github.com/emberjs/data/tree/main/packages/serializer) behavior.\nAdditional handlers or a service injection like the above would need to be done by the\nconsuming application in order to make broader use of `RequestManager`.\n\n```ts\nimport Store, { CacheHandler } from 'ember-data/store';\nimport RequestManager from '@ember-data/request';\nimport Fetch from '@ember-data/request/fetch';\nimport { LegacyNetworkHandler } from '@ember-data/legacy-compat';\n\nexport default class extends Store {\n  requestManager = new RequestManager();\n\n  constructor(args) {\n    super(args);\n    this.requestManager.use([LegacyNetworkHandler, Fetch]);\n    this.requestManager.useCache(CacheHandler);\n  }\n}\n```\n\nTo provide a different configuration, import and extend `ember-data/store`. The\ndefault configuration will be ignored if the `requestManager` property is set,\nthough the store will still register the CacheHandler.\n\nFor usage of the store's `requestManager` via `store.request(<req>)` see the\n[Store](https://api.emberjs.com/ember-data/release/modules/@ember-data%2Fstore) documentation.\n\n *\n * @module @ember-data/request\n * @main @ember-data/request\n */\n\n/**\n * ```js\n * import RequestManager from '@ember-data/request';\n * ```\n *\n * A RequestManager provides a request/response flow in which configured\n * handlers are successively given the opportunity to handle, modify, or\n * pass-along a request.\n *\n * ```ts\n * interface RequestManager {\n *   request<T>(req: RequestInfo): Future<T>;\n * }\n * ```\n *\n * For example:\n *\n * ```ts\n * import RequestManager from '@ember-data/request';\n * import Fetch from '@ember-data/request/fetch';\n * import Auth from 'ember-simple-auth/ember-data-handler';\n * import Config from './config';\n *\n * const { apiUrl } = Config;\n *\n * // ... create manager\n * const manager = new RequestManager();\n * manager.use([Auth, Fetch]);\n *\n * // ... execute a request\n * const response = await manager.request({\n *   url: `${apiUrl}/users`\n * });\n * ```\n *\n * ### Futures\n *\n * The return value of `manager.request` is a `Future`, which allows\n * access to limited information about the request while it is still\n * pending and fulfills with the final state when the request completes.\n *\n * A `Future` is cancellable via `abort`.\n *\n * Handlers may optionally expose a `ReadableStream` to the `Future` for\n * streaming data; however, when doing so the future should not resolve\n * until the response stream is fully read.\n *\n * ```ts\n * interface Future<T> extends Promise<StructuredDocument<T>> {\n *   abort(): void;\n *\n *   async getStream(): ReadableStream | null;\n * }\n * ```\n *\n * ### StructuredDocuments\n *\n * A Future resolves with a `StructuredDataDocument` or rejects with a `StructuredErrorDocument`.\n *\n * ```ts\n * interface StructuredDataDocument<T> {\n *   request: ImmutableRequestInfo;\n *   response: ImmutableResponseInfo;\n *   content: T;\n * }\n * interface StructuredErrorDocument extends Error {\n *   request: ImmutableRequestInfo;\n *   response: ImmutableResponseInfo;\n *   error: string | object;\n * }\n * type StructuredDocument<T> = StructuredDataDocument<T> | StructuredErrorDocument;\n * ```\n *\n * @class RequestManager\n * @public\n */\nvar _handlers = /*#__PURE__*/new WeakMap();\nclass RequestManager {\n  constructor(options) {\n    _classPrivateFieldInitSpec(this, _handlers, []);\n    Object.assign(this, options);\n    this._pending = new Map();\n  }\n\n  /**\n   * Register a handler to use for primary cache intercept.\n   *\n   * Only one such handler may exist. If using the same\n   * RequestManager as the Store instance the Store\n   * registers itself as a Cache handler.\n   *\n   * @method useCache\n   * @public\n   * @param {Handler[]} cacheHandler\n   * @return {void}\n   */\n  useCache(cacheHandler) {\n    {\n      if (this._hasCacheHandler) {\n        throw new Error(`\\`RequestManager.useCache(<handler>)\\` May only be invoked once.`);\n      }\n      if (Object.isFrozen(_classPrivateFieldGet(_handlers, this))) {\n        throw new Error(`\\`RequestManager.useCache(<handler>)\\` May only be invoked prior to any request having been made.`);\n      }\n      this._hasCacheHandler = true;\n    }\n    cacheHandler[_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.I] = true;\n    _classPrivateFieldGet(_handlers, this).unshift(cacheHandler);\n  }\n\n  /**\n   * Register handler(s) to use when a request is issued.\n   *\n   * Handlers will be invoked in the order they are registered.\n   * Each Handler is given the opportunity to handle the request,\n   * curry the request, or pass along a modified request.\n   *\n   * @method use\n   * @public\n   * @param {Handler[]} newHandlers\n   * @return {void}\n   */\n  use(newHandlers) {\n    const handlers = _classPrivateFieldGet(_handlers, this);\n    {\n      if (Object.isFrozen(handlers)) {\n        throw new Error(`Cannot add a Handler to a RequestManager after a request has been made`);\n      }\n      if (!Array.isArray(newHandlers)) {\n        throw new Error(`\\`RequestManager.use(<Handler[]>)\\` expects an array of handlers, but was called with \\`${typeof newHandlers}\\``);\n      }\n      newHandlers.forEach((handler, index) => {\n        if (!handler || typeof handler !== 'object' || typeof handler.request !== 'function') {\n          throw new Error(`\\`RequestManager.use(<Handler[]>)\\` expected to receive an array of handler objects with request methods, by the handler at index ${index} does not conform.`);\n        }\n      });\n    }\n    handlers.push(...newHandlers);\n  }\n\n  /**\n   * Issue a Request.\n   *\n   * Returns a Future that fulfills with a StructuredDocument\n   *\n   * @method request\n   * @public\n   * @param {RequestInfo} request\n   * @return {Future}\n   */\n  request(request) {\n    const handlers = _classPrivateFieldGet(_handlers, this);\n    {\n      if (!Object.isFrozen(handlers)) {\n        Object.freeze(handlers);\n      }\n      (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.a)(request, true);\n    }\n    const controller = request.controller || new AbortController();\n    if (request.controller) {\n      delete request.controller;\n    }\n    const requestId = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_0__.peekUniversalTransient)('REQ_ID') ?? 0;\n    (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_0__.setUniversalTransient)('REQ_ID', requestId + 1);\n    const promise = (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.e)(handlers, request, 0, {\n      controller,\n      response: null,\n      stream: null,\n      hasRequestedStream: false,\n      id: requestId\n    });\n\n    // the cache handler will set the result of the request synchronously\n    // if it is able to fulfill the request from the cache\n    const cacheResult = (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.g)(requestId);\n    {\n      if (!request.disableTestWaiter) {\n        const {\n          waitForPromise\n        } = (0,_embroider_macros_1_16_5_glint_template_1_4_0_node_modules_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(__webpack_require__(/*! @ember/test-waiters */ \"../rewritten-packages/@ember/test-waiters.33f2b497/node_modules/@ember/test-waiters/index.js\"));\n        const newPromise = waitForPromise(promise);\n        const finalPromise = (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.u)(newPromise.then(result => {\n          (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.s)(finalPromise, {\n            isError: false,\n            result\n          });\n          (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.c)(requestId);\n          return result;\n        }, error => {\n          (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.s)(finalPromise, {\n            isError: true,\n            result: error\n          });\n          (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.c)(requestId);\n          throw error;\n        }), promise);\n        if (cacheResult) {\n          (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.s)(finalPromise, cacheResult);\n        }\n        return finalPromise;\n      }\n    }\n\n    // const promise1 = store.request(myRequest);\n    // const promise2 = store.request(myRequest);\n    // promise1 === promise2; // false\n    // either we need to make promise1 === promise2, or we need to make sure that\n    // we need to have a way to key from request to result\n    // such that we can lookup the result here and return it if it exists\n    const finalPromise = (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.u)(promise.then(result => {\n      (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.s)(finalPromise, {\n        isError: false,\n        result\n      });\n      (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.c)(requestId);\n      return result;\n    }, error => {\n      (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.s)(finalPromise, {\n        isError: true,\n        result: error\n      });\n      (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.c)(requestId);\n      throw error;\n    }), promise);\n    if (cacheResult) {\n      (0,_debug_DGStaRpE_js__WEBPACK_IMPORTED_MODULE_1__.s)(finalPromise, cacheResult);\n    }\n    return finalPromise;\n  }\n  static create(options) {\n    return new this(options);\n  }\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/index.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+serializer@5.3.8_@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-d_ktds2re24fkm2vcobtq7pgosvu/node_modules/@ember-data/serializer/dist/transform.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+serializer@5.3.8_@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-d_ktds2re24fkm2vcobtq7pgosvu/node_modules/@ember-data/serializer/dist/transform.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BooleanTransform: () => (/* binding */ BooleanTransform),\n/* harmony export */   DateTransform: () => (/* binding */ DateTransform),\n/* harmony export */   NumberTransform: () => (/* binding */ NumberTransform),\n/* harmony export */   StringTransform: () => (/* binding */ StringTransform),\n/* harmony export */   \"default\": () => (/* binding */ Transform)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/object */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/index.js\");\n/* harmony import */ var _warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @warp-drive/core-types/symbols */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/symbols.js\");\n\n\n\n\n/**\n  @module @ember-data/serializer\n*/\n\n/**\n  The `Transform` class is used to serialize and deserialize model\n  attributes when they are saved or loaded from an\n  adapter. Subclassing `Transform` is useful for creating custom\n  attributes. All subclasses of `Transform` must implement a\n  `serialize` and a `deserialize` method.\n\n  Example\n\n  ```app/transforms/temperature.js\n\n  // Converts centigrade in the JSON to fahrenheit in the app\n  export default class TemperatureTransform {\n    deserialize(serialized, options) {\n      return (serialized *  1.8) + 32;\n    }\n\n    serialize(deserialized, options) {\n      return (deserialized - 32) / 1.8;\n    }\n\n    static create() {\n      return new this();\n    }\n  }\n  ```\n\n  Usage\n\n  ```app/models/requirement.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class RequirementModel extends Model {\n    @attr('string') name;\n    @attr('temperature') temperature;\n  }\n  ```\n\n  The options passed into the `attr` function when the attribute is\n  declared on the model is also available in the transform.\n\n  ```app/models/post.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class PostModel extends Model {\n    @attr('string') title;\n    @attr('markdown', {\n      markdown: {\n        gfm: false,\n        sanitize: true\n      }\n    })\n    markdown;\n  }\n  ```\n\n  ```app/transforms/markdown.js\n  export default class MarkdownTransform {\n    serialize(deserialized, options) {\n      return deserialized.raw;\n    }\n\n    deserialize(serialized, options) {\n      let markdownOptions = options.markdown || {};\n\n      return marked(serialized, markdownOptions);\n    }\n\n    static create() {\n      return new this();\n    }\n  }\n  ```\n\n  @class Transform\n  @public\n */\n/**\n  When given a deserialized value from a record attribute this\n  method must return the serialized value.\n\n  Example\n\n  ```javascript\n  serialize(deserialized, options) {\n    return deserialized ? null : Number(deserialized);\n  }\n  ```\n\n  @method serialize\n  @public\n  @param deserialized The deserialized value\n  @param options hash of options passed to `attr`\n  @return The serialized value\n*/\n/**\n  When given a serialized value from a JSON object this method must\n  return the deserialized value for the record attribute.\n\n  Example\n\n  ```javascript\n  deserialize(serialized, options) {\n    return empty(serialized) ? null : Number(serialized);\n  }\n  ```\n\n  @method deserialize\n  @public\n  @param serialized The serialized value\n  @param options hash of options passed to `attr`\n  @return The deserialized value\n*/\n\nconst Transform = _ember_object__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n\n/**\n  @module @ember-data/serializer\n*/\n\n/**\n  The `BooleanTransform` class is used to serialize and deserialize\n  boolean attributes on Ember Data record objects. This transform is\n  used when `boolean` is passed as the type parameter to the\n  [attr](/ember-data/release/functions/@ember-data%2Fmodel/attr) function.\n\n  Usage\n\n  ```app/models/user.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class UserModel extends Model {\n    @attr('boolean') isAdmin;\n    @attr('string') name;\n    @attr('string') email;\n  }\n  ```\n\n  By default, the boolean transform only allows for values of `true` or\n  `false`. You can opt into allowing `null` values for\n  boolean attributes via `attr('boolean', { allowNull: true })`\n\n  ```app/models/user.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class UserModel extends Model {\n    @attr('string') email;\n    @attr('string') username;\n    @attr('boolean', { allowNull: true }) wantsWeeklyEmail;\n  }\n  ```\n\n  @class BooleanTransform\n  @public\n */\nclass BooleanTransform {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, _warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_2__.TransformName, 'boolean');\n  }\n  deserialize(serialized, options) {\n    if ((serialized === null || serialized === undefined) && options?.allowNull === true) {\n      return null;\n    }\n    if (typeof serialized === 'boolean') {\n      return serialized;\n    } else if (typeof serialized === 'string') {\n      return /^(true|t|1)$/i.test(serialized);\n    } else if (typeof serialized === 'number') {\n      return serialized === 1;\n    } else {\n      return false;\n    }\n  }\n  serialize(deserialized, options) {\n    if ((deserialized === null || deserialized === undefined) && options?.allowNull === true) {\n      return null;\n    }\n    return Boolean(deserialized);\n  }\n  static create() {\n    return new this();\n  }\n}\n\n/**\n  @module @ember-data/serializer\n*/\n\n/**\n The `DateTransform` class is used to serialize and deserialize\n date attributes on Ember Data record objects. This transform is used\n when `date` is passed as the type parameter to the\n [attr](/ember-data/release/functions/@ember-data%2Fmodel/attr) function. It uses the [`ISO 8601`](https://en.wikipedia.org/wiki/ISO_8601)\n standard.\n\n ```app/models/score.js\n import Model, { attr, belongsTo } from '@ember-data/model';\n\n export default class ScoreModel extends Model {\n    @attr('number') value;\n    @belongsTo('player') player;\n    @attr('date') date;\n  }\n ```\n\n @class DateTransform\n  @public\n */\n\nclass DateTransform {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, _warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_2__.TransformName, 'date');\n  }\n  deserialize(serialized, _options) {\n    if (typeof serialized === 'string') {\n      let offset = serialized.indexOf('+');\n      if (offset !== -1 && serialized.length - 5 === offset) {\n        offset += 3;\n        return new Date(serialized.slice(0, offset) + ':' + serialized.slice(offset));\n      }\n      return new Date(serialized);\n    } else if (typeof serialized === 'number') {\n      return new Date(serialized);\n    } else if (serialized === null || serialized === undefined) {\n      // if the value is null return null\n      // if the value is not present in the data return undefined\n      return serialized;\n    } else {\n      return null;\n    }\n  }\n  serialize(date, _options) {\n    // @ts-expect-error isNaN accepts date as it is coercible\n    if (date instanceof Date && !isNaN(date)) {\n      return date.toISOString();\n    } else {\n      return null;\n    }\n  }\n  static create() {\n    return new this();\n  }\n}\n\n/**\n  @module @ember-data/serializer\n*/\n\nfunction isNumber(value) {\n  return value === value && value !== Infinity && value !== -Infinity;\n}\n\n/**\n  The `NumberTransform` class is used to serialize and deserialize\n  numeric attributes on Ember Data record objects. This transform is\n  used when `number` is passed as the type parameter to the\n  [attr](/ember-data/release/functions/@ember-data%2Fmodel/attr) function.\n\n  Usage\n\n  ```app/models/score.js\n  import Model, { attr, belongsTo } from '@ember-data/model';\n\n  export default class ScoreModel extends Model {\n    @attr('number') value;\n    @belongsTo('player') player;\n    @attr('date') date;\n  }\n  ```\n\n  @class NumberTransform\n  @public\n */\nclass NumberTransform {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, _warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_2__.TransformName, 'number');\n  }\n  deserialize(serialized, _options) {\n    if (serialized === '' || serialized === null || serialized === undefined) {\n      return null;\n    } else {\n      const transformed = Number(serialized);\n      return isNumber(transformed) ? transformed : null;\n    }\n  }\n  serialize(deserialized, _options) {\n    if (deserialized === '' || deserialized === null || deserialized === undefined) {\n      return null;\n    } else {\n      const transformed = Number(deserialized);\n      return isNumber(transformed) ? transformed : null;\n    }\n  }\n  static create() {\n    return new this();\n  }\n}\n\n/**\n  @module @ember-data/serializer\n*/\n\n/**\n  The `StringTransform` class is used to serialize and deserialize\n  string attributes on Ember Data record objects. This transform is\n  used when `string` is passed as the type parameter to the\n  [attr](/ember-data/release/functions/@ember-data%2Fmodel/attr) function.\n\n  Usage\n\n  ```app/models/user.js\n  import Model, { attr, belongsTo } from '@ember-data/model';\n\n  export default class UserModel extends Model {\n    @attr('boolean') isAdmin;\n    @attr('string') name;\n    @attr('string') email;\n  }\n  ```\n\n  @class StringTransform\n  @public\n */\nclass StringTransform {\n  constructor() {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, _warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_2__.TransformName, 'string');\n  }\n  deserialize(serialized, _options) {\n    return !serialized && serialized !== '' ? null : String(serialized);\n  }\n  serialize(deserialized, _options) {\n    return !deserialized && deserialized !== '' ? null : String(deserialized);\n  }\n  static create() {\n    return new this();\n  }\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+serializer@5.3.8_@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-d_ktds2re24fkm2vcobtq7pgosvu/node_modules/@ember-data/serializer/dist/transform.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/-private.js":
/*!********************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/-private.js ***!
  \********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ARRAY_SIGNAL: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.A),\n/* harmony export */   CacheHandler: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.C),\n/* harmony export */   CollectionRecordArray: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.j),\n/* harmony export */   LiveArray: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.I),\n/* harmony export */   MUTATE: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.M),\n/* harmony export */   RecordArrayManager: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.R),\n/* harmony export */   SOURCE: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.k),\n/* harmony export */   Store: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.S),\n/* harmony export */   StoreMap: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.q),\n/* harmony export */   _clearCaches: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__._),\n/* harmony export */   _deprecatingNormalize: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.u),\n/* harmony export */   coerceId: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   constructResource: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.f),\n/* harmony export */   ensureStringId: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.h),\n/* harmony export */   fastPush: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.l),\n/* harmony export */   isStableIdentifier: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   notifyArray: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.n),\n/* harmony export */   peekCache: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   recordIdentifierFor: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.r),\n/* harmony export */   removeRecordDataFor: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.m),\n/* harmony export */   setCacheFor: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.t),\n/* harmony export */   setRecordIdentifier: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.o),\n/* harmony export */   storeFor: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.s)\n/* harmony export */ });\n/* harmony import */ var _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache-handler-C5ilAUZ5.js */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/cache-handler-C5ilAUZ5.js\");\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/-private.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/cache-handler-C5ilAUZ5.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/cache-handler-C5ilAUZ5.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ ARRAY_SIGNAL),\n/* harmony export */   C: () => (/* binding */ CacheHandler),\n/* harmony export */   I: () => (/* binding */ IdentifierArray),\n/* harmony export */   M: () => (/* binding */ MUTATE),\n/* harmony export */   R: () => (/* binding */ RecordArrayManager),\n/* harmony export */   S: () => (/* binding */ Store),\n/* harmony export */   _: () => (/* binding */ _clearCaches),\n/* harmony export */   a: () => (/* binding */ setIdentifierGenerationMethod),\n/* harmony export */   b: () => (/* binding */ setIdentifierUpdateMethod),\n/* harmony export */   c: () => (/* binding */ setIdentifierForgetMethod),\n/* harmony export */   d: () => (/* binding */ setIdentifierResetMethod),\n/* harmony export */   e: () => (/* binding */ setKeyInfoForResource),\n/* harmony export */   f: () => (/* binding */ constructResource),\n/* harmony export */   g: () => (/* binding */ coerceId),\n/* harmony export */   h: () => (/* binding */ ensureStringId),\n/* harmony export */   i: () => (/* binding */ isStableIdentifier),\n/* harmony export */   j: () => (/* binding */ Collection),\n/* harmony export */   k: () => (/* binding */ SOURCE),\n/* harmony export */   l: () => (/* binding */ fastPush),\n/* harmony export */   m: () => (/* binding */ removeRecordDataFor),\n/* harmony export */   n: () => (/* binding */ notifyArray),\n/* harmony export */   o: () => (/* binding */ setRecordIdentifier),\n/* harmony export */   p: () => (/* binding */ peekCache),\n/* harmony export */   q: () => (/* binding */ StoreMap),\n/* harmony export */   r: () => (/* binding */ recordIdentifierFor),\n/* harmony export */   s: () => (/* binding */ storeFor),\n/* harmony export */   t: () => (/* binding */ setCacheFor),\n/* harmony export */   u: () => (/* binding */ normalizeModelName)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @warp-drive/core-types/request */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/request.js\");\n/* harmony import */ var _warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @warp-drive/core-types/-private */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js\");\n/* harmony import */ var _warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @warp-drive/core-types/identifier */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/identifier.js\");\n/* harmony import */ var _ember_data_request_utils_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember-data/request-utils/string */ \"../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/string.js\");\n/* harmony import */ var _ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ember-data/tracking/-private */ \"../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/-private.js\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ember/runloop */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/runloop/index.js\");\n/* harmony import */ var _ember_data_tracking__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ember-data/tracking */ \"../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/index.js\");\n\nvar _IdentifierArray;\nfunction _classPrivateMethodInitSpec(e, a) { _checkPrivateRedeclaration(e, a), a.add(e); }\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\n\n\n\n\n\n\n\n\n\n/**\n  @module @ember-data/store\n*/\n\nfunction coerceId(id) {\n  {\n    let normalized;\n    if (id === null || id === undefined || id === '') {\n      normalized = null;\n    } else {\n      normalized = String(id);\n    }\n    ( true && !(normalized === id) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`The resource id '<${typeof id}> ${String(id)} ' is not normalized. Update your application code to use '${JSON.stringify(normalized)}' instead.`, normalized === id, {\n      id: 'ember-data:deprecate-non-strict-id',\n      until: '6.0',\n      for: 'ember-data',\n      since: {\n        available: '5.3',\n        enabled: '5.3'\n      }\n    }));\n    return normalized;\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Resource IDs must be a non-empty string or null. Received '${String(id)}'.`);\n    }\n  })(id === null || typeof id === 'string' && id.length > 0);\n  return id;\n}\nfunction ensureStringId(id) {\n  let normalized = null;\n  if (typeof id === 'string') {\n    normalized = id.length > 0 ? id : null;\n  } else if (typeof id === 'number' && !isNaN(id)) {\n    normalized = String(id);\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Expected id to be a string or number, received ${String(id)}`);\n    }\n  })(normalized !== null);\n  return normalized;\n}\nfunction normalizeModelName(type) {\n  {\n    const result = (0,_ember_data_request_utils_string__WEBPACK_IMPORTED_MODULE_5__.dasherize)(type);\n    ( true && !(result === type) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`The resource type '${type}' is not normalized. Update your application code to use '${result}' instead of '${type}'.`, result === type, {\n      id: 'ember-data:deprecate-non-strict-types',\n      until: '6.0',\n      for: 'ember-data',\n      since: {\n        available: '5.3',\n        enabled: '5.3'\n      }\n    }));\n    return result;\n  }\n  return type;\n}\n\n/**\n  @module @ember-data/store\n*/\n\nfunction installPolyfill() {\n  const isFastBoot = typeof FastBoot !== 'undefined';\n  const CRYPTO = isFastBoot ? FastBoot.require('crypto') : window.crypto;\n  if (!CRYPTO.randomUUID) {\n    // we might be able to optimize this by requesting more bytes than we need at a time\n    const rng = function () {\n      // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n      const rnds8 = new Uint8Array(16);\n      if (!CRYPTO.getRandomValues && !isFastBoot) {\n        throw new Error(`Unable to generate bytes for UUID`);\n      }\n      return CRYPTO.getRandomValues ? CRYPTO.getRandomValues(rnds8) : CRYPTO.randomFillSync(rnds8);\n    };\n\n    /*\n     * Convert array of 16 byte values to UUID string format of the form:\n     * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n     */\n    const byteToHex = [];\n    for (let i = 0; i < 256; ++i) {\n      byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    }\n    const bytesToUuid = function (buf) {\n      const bth = byteToHex;\n      // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n      return [bth[buf[0]], bth[buf[1]], bth[buf[2]], bth[buf[3]], '-', bth[buf[4]], bth[buf[5]], '-', bth[buf[6]], bth[buf[7]], '-', bth[buf[8]], bth[buf[9]], '-', bth[buf[10]], bth[buf[11]], bth[buf[12]], bth[buf[13]], bth[buf[14]], bth[buf[15]]].join('');\n    };\n    CRYPTO.randomUUID = function uuidv4() {\n      const rnds = rng();\n\n      // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n      rnds[6] = rnds[6] & 0x0f | 0x40;\n      rnds[8] = rnds[8] & 0x3f | 0x80;\n      return bytesToUuid(rnds);\n    };\n  }\n}\nfunction isResource(resource) {\n  return Boolean(resource && typeof resource === 'object');\n}\nfunction hasProp(resource, prop) {\n  return Boolean(isResource(resource) && prop in resource && typeof resource[prop] === 'string' && resource[prop].length);\n}\nfunction hasLid(resource) {\n  return hasProp(resource, 'lid');\n}\nfunction hasId(resource) {\n  return hasProp(resource, 'id') || Boolean(isResource(resource) && 'id' in resource && typeof resource.id === 'number');\n}\nfunction hasType(resource) {\n  return hasProp(resource, 'type');\n}\n\n/**\n  @module @ember-data/store\n*/\nconst IDENTIFIERS = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('IDENTIFIERS', new Set());\nconst DOCUMENTS = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('DOCUMENTS', new Set());\nfunction isStableIdentifier(identifier) {\n  return identifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.CACHE_OWNER] !== undefined || IDENTIFIERS.has(identifier);\n}\nfunction isDocumentIdentifier(identifier) {\n  return DOCUMENTS.has(identifier);\n}\nconst isFastBoot = typeof FastBoot !== 'undefined';\nconst _crypto = isFastBoot ? FastBoot.require('crypto') : window.crypto;\nfunction uuidv4() {\n  (test => {\n    if (!test) {\n      throw new Error('crypto.randomUUID needs to be avaliable. Some browsers incorrectly disallow it in insecure contexts. You maybe want to enable the polyfill: https://github.com/emberjs/data#randomuuid-polyfill');\n    }\n  })(typeof _crypto.randomUUID === 'function');\n  return _crypto.randomUUID();\n}\nfunction freeze(obj) {\n  if (typeof Object.freeze === 'function') {\n    return Object.freeze(obj);\n  }\n  return obj;\n}\n\n// type IdentifierTypeLookup = { all: Set<StableRecordIdentifier>; id: Map<string, StableRecordIdentifier> };\n// type IdentifiersByType = Map<string, IdentifierTypeLookup>;\n\nfunction setIdentifierGenerationMethod(method) {\n  (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.setTransient)('configuredGenerationMethod', method);\n}\nfunction setIdentifierUpdateMethod(method) {\n  (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.setTransient)('configuredUpdateMethod', method);\n}\nfunction setIdentifierForgetMethod(method) {\n  (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.setTransient)('configuredForgetMethod', method);\n}\nfunction setIdentifierResetMethod(method) {\n  (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.setTransient)('configuredResetMethod', method);\n}\nfunction setKeyInfoForResource(method) {\n  (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.setTransient)('configuredKeyInfoMethod', method);\n}\n\n// Map<type, Map<id, lid>>\n\n// TODO can we just delete this?\nconst NEW_IDENTIFIERS = new Map();\n// TODO @runspired maybe needs peekTransient ?\nlet IDENTIFIER_CACHE_ID = 0;\nfunction updateTypeIdMapping(typeMap, identifier, id) {\n  let idMap = typeMap.get(identifier.type);\n  if (!idMap) {\n    idMap = new Map();\n    typeMap.set(identifier.type, idMap);\n  }\n  idMap.set(id, identifier.lid);\n}\nfunction defaultUpdateMethod(identifier, data, bucket) {\n  if (bucket === 'record') {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected identifier to be a StableRecordIdentifier`);\n      }\n    })(isStableIdentifier(identifier));\n    if (!identifier.id && hasId(data)) {\n      updateTypeIdMapping(NEW_IDENTIFIERS, identifier, data.id);\n    }\n  }\n}\nfunction defaultKeyInfoMethod(resource, known) {\n  // TODO RFC something to make this configurable\n  const id = hasId(resource) ? coerceId(resource.id) : null;\n  const type = hasType(resource) ? normalizeModelName(resource.type) : known ? known.type : null;\n  (test => {\n    if (!test) {\n      throw new Error(`Expected keyInfoForResource to provide a type for the resource`);\n    }\n  })(type);\n  return {\n    type,\n    id\n  };\n}\nfunction defaultGenerationMethod(data, bucket) {\n  if (bucket === 'record') {\n    if (hasLid(data)) {\n      return data.lid;\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot generate an identifier for a resource without a type`);\n      }\n    })(hasType(data));\n    if (hasId(data)) {\n      const type = normalizeModelName(data.type);\n      const lid = NEW_IDENTIFIERS.get(type)?.get(data.id);\n      return lid || `@lid:${type}-${data.id}`;\n    }\n    return uuidv4();\n  } else if (bucket === 'document') {\n    if (!data.url) {\n      return null;\n    }\n    if (!data.method || data.method.toUpperCase() === 'GET') {\n      return data.url;\n    }\n    return null;\n  }\n  (test => {\n    {\n      throw new Error(`Unknown bucket ${bucket}`);\n    }\n  })();\n}\nfunction defaultEmptyCallback(...args) {}\nfunction defaultMergeMethod(a, _b, _c) {\n  return a;\n}\nlet DEBUG_MAP;\n{\n  DEBUG_MAP = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('DEBUG_MAP', new WeakMap());\n}\n\n/**\n * Each instance of {Store} receives a unique instance of a IdentifierCache.\n *\n * This cache is responsible for assigning or retrieving the unique identify\n * for arbitrary resource data encountered by the store. Data representing\n * a unique resource or record should always be represented by the same\n * identifier.\n *\n * It can be configured by consuming applications.\n *\n * @class IdentifierCache\n   @public\n */\nclass IdentifierCache {\n  constructor() {\n    // we cache the user configuredGenerationMethod at init because it must\n    // be configured prior and is not allowed to be changed\n    this._generate = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.peekTransient)('configuredGenerationMethod') || defaultGenerationMethod;\n    this._update = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.peekTransient)('configuredUpdateMethod') || defaultUpdateMethod;\n    this._forget = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.peekTransient)('configuredForgetMethod') || defaultEmptyCallback;\n    this._reset = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.peekTransient)('configuredResetMethod') || defaultEmptyCallback;\n    this._merge = defaultMergeMethod;\n    this._keyInfoForResource = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.peekTransient)('configuredKeyInfoMethod') || defaultKeyInfoMethod;\n    this._id = IDENTIFIER_CACHE_ID++;\n    this._cache = {\n      resources: new Map(),\n      resourcesByType: Object.create(null),\n      documents: new Map(),\n      polymorphicLidBackMap: new Map()\n    };\n  }\n\n  /**\n   * Internal hook to allow management of merge conflicts with identifiers.\n   *\n   * we allow late binding of this private internal merge so that\n   * the cache can insert itself here to handle elimination of duplicates\n   *\n   * @method __configureMerge\n   * @private\n   */\n  __configureMerge(method) {\n    this._merge = method || defaultMergeMethod;\n  }\n  upgradeIdentifier(resource) {\n    return this._getRecordIdentifier(resource, 2);\n  }\n\n  /**\n   * @method _getRecordIdentifier\n   * @private\n   */\n\n  _getRecordIdentifier(resource, shouldGenerate) {\n    // short circuit if we're already the stable version\n    if (isStableIdentifier(resource)) {\n      {\n        // TODO should we instead just treat this case as a new generation skipping the short circuit?\n        if (!this._cache.resources.has(resource.lid) || this._cache.resources.get(resource.lid) !== resource) {\n          throw new Error(`The supplied identifier ${JSON.stringify(resource)} does not belong to this store instance`);\n        }\n      }\n      return resource;\n    }\n\n    // the resource is unknown, ask the application to identify this data for us\n    const lid = this._generate(resource, 'record');\n    let identifier = /*#__NOINLINE__*/getIdentifierFromLid(this._cache, lid, resource);\n    if (identifier !== null) {\n      return identifier;\n    }\n    if (shouldGenerate === 0) {\n      return;\n    }\n\n    // if we still don't have an identifier, time to generate one\n    if (shouldGenerate === 2) {\n      resource.lid = lid;\n      resource[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.CACHE_OWNER] = this._id;\n      identifier = /*#__NOINLINE__*/makeStableRecordIdentifier(resource, 'record', false);\n    } else {\n      // we lie a bit here as a memory optimization\n      const keyInfo = this._keyInfoForResource(resource, null);\n      keyInfo.lid = lid;\n      keyInfo[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.CACHE_OWNER] = this._id;\n      identifier = /*#__NOINLINE__*/makeStableRecordIdentifier(keyInfo, 'record', false);\n    }\n    addResourceToCache(this._cache, identifier);\n    return identifier;\n  }\n\n  /**\n   * allows us to peek without generating when needed\n   * useful for the \"create\" case when we need to see if\n   * we are accidentally overwritting something\n   *\n   * @method peekRecordIdentifier\n   * @param resource\n   * @return {StableRecordIdentifier | undefined}\n   * @private\n   */\n  peekRecordIdentifier(resource) {\n    return this._getRecordIdentifier(resource, 0);\n  }\n\n  /**\n    Returns the DocumentIdentifier for the given Request, creates one if it does not yet exist.\n    Returns `null` if the request does not have a `cacheKey` or `url`.\n     @method getOrCreateDocumentIdentifier\n    @param request\n    @return {StableDocumentIdentifier | null}\n    @public\n  */\n  getOrCreateDocumentIdentifier(request) {\n    let cacheKey = request.cacheOptions?.key;\n    if (!cacheKey) {\n      cacheKey = this._generate(request, 'document');\n    }\n    if (!cacheKey) {\n      return null;\n    }\n    let identifier = this._cache.documents.get(cacheKey);\n    if (identifier === undefined) {\n      identifier = {\n        lid: cacheKey\n      };\n      {\n        Object.freeze(identifier);\n      }\n      DOCUMENTS.add(identifier);\n      this._cache.documents.set(cacheKey, identifier);\n    }\n    return identifier;\n  }\n\n  /**\n    Returns the Identifier for the given Resource, creates one if it does not yet exist.\n     Specifically this means that we:\n     - validate the `id` `type` and `lid` combo against known identifiers\n    - return an object with an `lid` that is stable (repeated calls with the same\n      `id` + `type` or `lid` will return the same `lid` value)\n    - this referential stability of the object itself is guaranteed\n     @method getOrCreateRecordIdentifier\n    @param resource\n    @return {StableRecordIdentifier}\n    @public\n  */\n  getOrCreateRecordIdentifier(resource) {\n    return this._getRecordIdentifier(resource, 1);\n  }\n\n  /**\n   Returns a new Identifier for the supplied data. Call this method to generate\n   an identifier when a new resource is being created local to the client and\n   potentially does not have an `id`.\n    Delegates generation to the user supplied `GenerateMethod` if one has been provided\n   with the signature `generateMethod({ type }, 'record')`.\n    @method createIdentifierForNewRecord\n   @param data\n   @return {StableRecordIdentifier}\n   @public\n  */\n  createIdentifierForNewRecord(data) {\n    const newLid = this._generate(data, 'record');\n    const identifier = /*#__NOINLINE__*/makeStableRecordIdentifier({\n      id: data.id || null,\n      type: data.type,\n      lid: newLid,\n      [_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.CACHE_OWNER]: this._id\n    }, 'record', true);\n\n    // populate our unique table\n    {\n      if (this._cache.resources.has(identifier.lid)) {\n        throw new Error(`The lid generated for the new record is not unique as it matches an existing identifier`);\n      }\n    }\n\n    /*#__NOINLINE__*/\n    addResourceToCache(this._cache, identifier);\n    return identifier;\n  }\n\n  /**\n   Provides the opportunity to update secondary lookup tables for existing identifiers\n   Called after an identifier created with `createIdentifierForNewRecord` has been\n   committed.\n    Assigned `id` to an `Identifier` if `id` has not previously existed; however,\n   attempting to change the `id` or calling update without providing an `id` when\n   one is missing will throw an error.\n     - sets `id` (if `id` was previously `null`)\n    - `lid` and `type` MUST NOT be altered post creation\n     If a merge occurs, it is possible the returned identifier does not match the originally\n    provided identifier. In this case the abandoned identifier will go through the usual\n    `forgetRecordIdentifier` codepaths.\n     @method updateRecordIdentifier\n    @param identifierObject\n    @param data\n    @return {StableRecordIdentifier}\n    @public\n  */\n  updateRecordIdentifier(identifierObject, data) {\n    let identifier = this.getOrCreateRecordIdentifier(identifierObject);\n    const keyInfo = this._keyInfoForResource(data, identifier);\n    let existingIdentifier = /*#__NOINLINE__*/detectMerge(this._cache, keyInfo, identifier, data);\n    const hadLid = hasLid(data);\n    if (!existingIdentifier) {\n      // If the incoming type does not match the identifier type, we need to create an identifier for the incoming\n      // data so we can merge the incoming data with the existing identifier, see #7325 and #7363\n      if (identifier.type !== keyInfo.type) {\n        if (hadLid) {\n          // Strip the lid to ensure we force a new identifier creation\n          delete data.lid;\n        }\n        existingIdentifier = this.getOrCreateRecordIdentifier(data);\n      }\n    }\n    if (existingIdentifier) {\n      const generatedIdentifier = identifier;\n      identifier = this._mergeRecordIdentifiers(keyInfo, generatedIdentifier, existingIdentifier, data);\n\n      // make sure that the `lid` on the data we are processing matches the lid we kept\n      if (hadLid) {\n        data.lid = identifier.lid;\n      }\n    }\n    const id = identifier.id;\n    /*#__NOINLINE__*/\n    performRecordIdentifierUpdate(identifier, keyInfo, data, this._update);\n    const newId = identifier.id;\n\n    // add to our own secondary lookup table\n    if (id !== newId && newId !== null) {\n      const typeSet = this._cache.resourcesByType[identifier.type];\n      (test => {\n        if (!test) {\n          throw new Error(`Expected to find a typeSet for ${identifier.type}`);\n        }\n      })(typeSet);\n      typeSet.id.set(newId, identifier);\n      if (id !== null) {\n        typeSet.id.delete(id);\n      }\n    }\n    return identifier;\n  }\n\n  /**\n   * @method _mergeRecordIdentifiers\n   * @private\n   */\n  _mergeRecordIdentifiers(keyInfo, identifier, existingIdentifier, data) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected keyInfo to contain an id`);\n      }\n    })(hasId(keyInfo));\n    // delegate determining which identifier to keep to the configured MergeMethod\n    const kept = this._merge(identifier, existingIdentifier, data);\n    const abandoned = kept === identifier ? existingIdentifier : identifier;\n\n    // get any backreferences before forgetting this identifier, as it will be removed from the cache\n    // and we will no longer be able to find them\n    const abandonedBackReferences = this._cache.polymorphicLidBackMap.get(abandoned.lid);\n    // delete the backreferences for the abandoned identifier so that forgetRecordIdentifier\n    // does not try to remove them.\n    if (abandonedBackReferences) this._cache.polymorphicLidBackMap.delete(abandoned.lid);\n\n    // cleanup the identifier we no longer need\n    this.forgetRecordIdentifier(abandoned);\n\n    // ensure a secondary cache entry for the original lid for the abandoned identifier\n    this._cache.resources.set(abandoned.lid, kept);\n\n    // backReferences let us know which other identifiers are pointing at this identifier\n    // so we can delete them later if we forget this identifier\n    const keptBackReferences = this._cache.polymorphicLidBackMap.get(kept.lid) ?? [];\n    keptBackReferences.push(abandoned.lid);\n\n    // update the backreferences from the abandoned identifier to be for the kept identifier\n    if (abandonedBackReferences) {\n      abandonedBackReferences.forEach(lid => {\n        keptBackReferences.push(lid);\n        this._cache.resources.set(lid, kept);\n      });\n    }\n    this._cache.polymorphicLidBackMap.set(kept.lid, keptBackReferences);\n    return kept;\n  }\n\n  /**\n   Provides the opportunity to eliminate an identifier from secondary lookup tables\n   as well as eliminates it from ember-data's own lookup tables and book keeping.\n    Useful when a record has been deleted and the deletion has been persisted and\n   we do not care about the record anymore. Especially useful when an `id` of a\n   deleted record might be reused later for a new record.\n    @method forgetRecordIdentifier\n   @param identifierObject\n   @public\n  */\n  forgetRecordIdentifier(identifierObject) {\n    const identifier = this.getOrCreateRecordIdentifier(identifierObject);\n    const typeSet = this._cache.resourcesByType[identifier.type];\n    (test => {\n      if (!test) {\n        throw new Error(`Expected to find a typeSet for ${identifier.type}`);\n      }\n    })(typeSet);\n    if (identifier.id !== null) {\n      typeSet.id.delete(identifier.id);\n    }\n    this._cache.resources.delete(identifier.lid);\n    typeSet.lid.delete(identifier.lid);\n    const backReferences = this._cache.polymorphicLidBackMap.get(identifier.lid);\n    if (backReferences) {\n      backReferences.forEach(lid => {\n        this._cache.resources.delete(lid);\n      });\n      this._cache.polymorphicLidBackMap.delete(identifier.lid);\n    }\n    {\n      identifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.DEBUG_STALE_CACHE_OWNER] = identifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.CACHE_OWNER];\n    }\n    identifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.CACHE_OWNER] = undefined;\n    IDENTIFIERS.delete(identifier);\n    this._forget(identifier, 'record');\n  }\n  destroy() {\n    NEW_IDENTIFIERS.clear();\n    this._cache.documents.forEach(identifier => {\n      DOCUMENTS.delete(identifier);\n    });\n    this._reset();\n  }\n}\nfunction makeStableRecordIdentifier(recordIdentifier, bucket, clientOriginated) {\n  IDENTIFIERS.add(recordIdentifier);\n  {\n    // we enforce immutability in dev\n    //  but preserve our ability to do controlled updates to the reference\n    let wrapper = {\n      get lid() {\n        return recordIdentifier.lid;\n      },\n      get id() {\n        return recordIdentifier.id;\n      },\n      get type() {\n        return recordIdentifier.type;\n      },\n      get [_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.CACHE_OWNER]() {\n        return recordIdentifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.CACHE_OWNER];\n      },\n      set [_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.CACHE_OWNER](value) {\n        recordIdentifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.CACHE_OWNER] = value;\n      },\n      get [_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.DEBUG_STALE_CACHE_OWNER]() {\n        return recordIdentifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.DEBUG_STALE_CACHE_OWNER];\n      },\n      set [_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.DEBUG_STALE_CACHE_OWNER](value) {\n        recordIdentifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.DEBUG_STALE_CACHE_OWNER] = value;\n      }\n    };\n    Object.defineProperty(wrapper, 'toString', {\n      enumerable: false,\n      value: () => {\n        const {\n          type,\n          id,\n          lid\n        } = recordIdentifier;\n        return `${clientOriginated ? '[CLIENT_ORIGINATED] ' : ''}${String(type)}:${String(id)} (${lid})`;\n      }\n    });\n    Object.defineProperty(wrapper, 'toJSON', {\n      enumerable: false,\n      value: () => {\n        const {\n          type,\n          id,\n          lid\n        } = recordIdentifier;\n        return {\n          type,\n          id,\n          lid\n        };\n      }\n    });\n    wrapper[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.DEBUG_CLIENT_ORIGINATED] = clientOriginated;\n    wrapper[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_4__.DEBUG_IDENTIFIER_BUCKET] = bucket;\n    IDENTIFIERS.add(wrapper);\n    DEBUG_MAP.set(wrapper, recordIdentifier);\n    wrapper = freeze(wrapper);\n    return wrapper;\n  }\n  return recordIdentifier;\n}\nfunction performRecordIdentifierUpdate(identifier, keyInfo, data, updateFn) {\n  {\n    const {\n      id,\n      type\n    } = keyInfo;\n\n    // get the mutable instance behind our proxy wrapper\n    const wrapper = identifier;\n    identifier = DEBUG_MAP.get(wrapper);\n    if (hasLid(data)) {\n      const lid = data.lid;\n      if (lid !== identifier.lid) {\n        throw new Error(`The 'lid' for a RecordIdentifier cannot be updated once it has been created. Attempted to set lid for '${wrapper.lid}' to '${lid}'.`);\n      }\n    }\n    if (id && identifier.id !== null && identifier.id !== id) {\n      // here we warn and ignore, as this may be a mistake, but we allow the user\n      // to have multiple cache-keys pointing at a single lid so we cannot error\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.warn)(`The 'id' for a RecordIdentifier should not be updated once it has been set. Attempted to set id for '${wrapper.lid}' to '${id}'.`, false, {\n        id: 'ember-data:multiple-ids-for-identifier'\n      }));\n    }\n\n    // TODO consider just ignoring here to allow flexible polymorphic support\n    if (type && type !== identifier.type) {\n      throw new Error(`The 'type' for a RecordIdentifier cannot be updated once it has been set. Attempted to set type for '${wrapper.lid}' to '${type}'.`);\n    }\n    updateFn(wrapper, data, 'record');\n  }\n\n  // upgrade the ID, this is a \"one time only\" ability\n  // for the multiple-cache-key scenario we \"could\"\n  // use a heuristic to guess the best id for display\n  // (usually when `data.id` is available and `data.attributes` is not)\n  if (data.id !== undefined) {\n    identifier.id = coerceId(data.id);\n  }\n}\nfunction detectMerge(cache, keyInfo, identifier, data) {\n  const newId = keyInfo.id;\n  const {\n    id,\n    type,\n    lid\n  } = identifier;\n  const typeSet = cache.resourcesByType[identifier.type];\n\n  // if the IDs are present but do not match\n  // then check if we have an existing identifier\n  // for the newer ID.\n  if (id !== null && id !== newId && newId !== null) {\n    const existingIdentifier = typeSet && typeSet.id.get(newId);\n    return existingIdentifier !== undefined ? existingIdentifier : false;\n  } else {\n    const newType = keyInfo.type;\n\n    // If the ids and type are the same but lid is not the same, we should trigger a merge of the identifiers\n    // we trigger a merge of the identifiers\n    // though probably we should just throw an error here\n    if (id !== null && id === newId && newType === type && hasLid(data) && data.lid !== lid) {\n      return getIdentifierFromLid(cache, data.lid, data) || false;\n\n      // If the lids are the same, and ids are the same, but types are different we should trigger a merge of the identifiers\n    } else if (id !== null && id === newId && newType && newType !== type && hasLid(data) && data.lid === lid) {\n      const newTypeSet = cache.resourcesByType[newType];\n      const existingIdentifier = newTypeSet && newTypeSet.id.get(newId);\n      return existingIdentifier !== undefined ? existingIdentifier : false;\n    }\n  }\n  return false;\n}\nfunction getIdentifierFromLid(cache, lid, resource) {\n  const identifier = cache.resources.get(lid);\n  return identifier || null;\n}\nfunction addResourceToCache(cache, identifier) {\n  cache.resources.set(identifier.lid, identifier);\n  let typeSet = cache.resourcesByType[identifier.type];\n  if (!typeSet) {\n    typeSet = {\n      lid: new Map(),\n      id: new Map()\n    };\n    cache.resourcesByType[identifier.type] = typeSet;\n  }\n  typeSet.lid.set(identifier.lid, identifier);\n  if (identifier.id) {\n    typeSet.id.set(identifier.id, identifier);\n  }\n}\n\n/**\n  @module @ember-data/store\n*/\n\n/**\n   A `RecordReference` is a low-level API that allows users and\n   addon authors to perform meta-operations on a record.\n\n   @class RecordReference\n   @public\n*/\nclass RecordReference {\n  constructor(store, identifier) {\n    // unsubscribe token given to us by the notification manager\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"___token\", void 0);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"___identifier\", void 0);\n    this.store = store;\n    this.___identifier = identifier;\n    this.___token = store.notifications.subscribe(identifier, (_, bucket, notifiedKey) => {\n      if (bucket === 'identity' || bucket === 'attributes' && notifiedKey === 'id') {\n        this._ref++;\n      }\n    });\n  }\n  destroy() {\n    this.store.notifications.unsubscribe(this.___token);\n  }\n  get type() {\n    return this.identifier().type;\n  }\n\n  /**\n     The `id` of the record that this reference refers to.\n      Together, the `type` and `id` properties form a composite key for\n     the identity map.\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      userRef.id(); // '1'\n     ```\n      @method id\n    @public\n     @return {String} The id of the record.\n  */\n  id() {\n    this._ref; // consume the tracked prop\n    return this.___identifier.id;\n  }\n\n  /**\n     The `identifier` of the record that this reference refers to.\n      Together, the `type` and `id` properties form a composite key for\n     the identity map.\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      userRef.identifier(); // '1'\n     ```\n      @method identifier\n    @public\n     @return {String} The identifier of the record.\n  */\n  identifier() {\n    return this.___identifier;\n  }\n\n  /**\n     How the reference will be looked up when it is loaded. Currently\n     this always returns `identity` to signify that a record will be\n     loaded by its `type` and `id`.\n      Example\n      ```javascript\n     const userRef = store.getReference('user', 1);\n      userRef.remoteType(); // 'identity'\n     ```\n      @method remoteType\n     @public\n     @return {String} 'identity'\n  */\n  remoteType() {\n    return 'identity';\n  }\n\n  /**\n    This API allows you to provide a reference with new data. The\n    simplest usage of this API is similar to `store.push`: you provide a\n    normalized hash of data and the object represented by the reference\n    will update.\n     If you pass a promise to `push`, Ember Data will not ask the adapter\n    for the data if another attempt to fetch it is made in the\n    interim. When the promise resolves, the underlying object is updated\n    with the new data, and the promise returned by *this function* is resolved\n    with that object.\n     For example, `recordReference.push(promise)` will be resolved with a\n    record.\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      // provide data for reference\n     userRef.push({\n       data: {\n         id: \"1\",\n         type: \"user\",\n         attributes: {\n           username: \"@user\"\n         }\n       }\n     }).then(function(user) {\n       userRef.value() === user;\n     });\n     ```\n     @method push\n    @public\n    @param objectOrPromise a JSON:API ResourceDocument or a promise resolving to one\n    @return a promise for the value (record or relationship)\n  */\n  push(objectOrPromise) {\n    // TODO @deprecate pushing unresolved payloads\n    return Promise.resolve(objectOrPromise).then(data => {\n      return this.store.push(data);\n    });\n  }\n\n  /**\n    If the entity referred to by the reference is already loaded, it is\n    present as `reference.value`. Otherwise the value returned by this function\n    is `null`.\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      userRef.value(); // user\n     ```\n      @method value\n    @public\n     @return {Model} the record for this RecordReference\n  */\n  value() {\n    return this.store.peekRecord(this.___identifier);\n  }\n\n  /**\n     Triggers a fetch for the backing entity based on its `remoteType`\n     (see `remoteType` definitions per reference type).\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      // load user (via store.find)\n     userRef.load().then(...)\n     ```\n      @method load\n    @public\n     @return {Promise<record>} the record for this RecordReference\n  */\n  load() {\n    const id = this.id();\n    if (id !== null) {\n      return this.store.findRecord(this.type, id);\n    }\n    (test => {\n      {\n        throw new Error(`Unable to fetch record of type ${this.type} without an id`);\n      }\n    })();\n  }\n\n  /**\n     Reloads the record if it is already loaded. If the record is not\n     loaded it will load the record via `store.findRecord`\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      // or trigger a reload\n     userRef.reload().then(...)\n     ```\n      @method reload\n    @public\n     @return {Promise<record>} the record for this RecordReference\n  */\n  reload() {\n    const id = this.id();\n    if (id !== null) {\n      return this.store.findRecord(this.type, id, {\n        reload: true\n      });\n    }\n    (test => {\n      {\n        throw new Error(`Unable to fetch record of type ${this.type} without an id`);\n      }\n    })();\n  }\n}\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.defineSignal)(RecordReference.prototype, '_ref');\n\n/**\n  @module @ember-data/store\n*/\nclass CacheCapabilitiesManager {\n  constructor(_store) {\n    this._store = _store;\n    this._willNotify = false;\n    this._pendingNotifies = new Map();\n  }\n  get identifierCache() {\n    return this._store.identifierCache;\n  }\n  _scheduleNotification(identifier, key) {\n    let pending = this._pendingNotifies.get(identifier);\n    if (!pending) {\n      pending = new Set();\n      this._pendingNotifies.set(identifier, pending);\n    }\n    pending.add(key);\n    if (this._willNotify === true) {\n      return;\n    }\n    this._willNotify = true;\n    // it's possible a cache adhoc notifies us,\n    // in which case we sync flush\n    if (this._store._cbs) {\n      this._store._schedule('notify', () => this._flushNotifications());\n    } else {\n      // TODO @runspired determine if relationship mutations should schedule\n      // into join/run vs immediate flush\n      this._flushNotifications();\n    }\n  }\n  _flushNotifications() {\n    if (this._willNotify === false) {\n      return;\n    }\n    const pending = this._pendingNotifies;\n    this._pendingNotifies = new Map();\n    this._willNotify = false;\n    pending.forEach((set, identifier) => {\n      set.forEach(key => {\n        this._store.notifications.notify(identifier, 'relationships', key);\n      });\n    });\n  }\n  notifyChange(identifier, namespace, key) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a stable identifier`);\n      }\n    })(isStableIdentifier(identifier) || isDocumentIdentifier(identifier));\n\n    // TODO do we still get value from this?\n    if (namespace === 'relationships' && key) {\n      this._scheduleNotification(identifier, key);\n      return;\n    }\n\n    // @ts-expect-error\n    this._store.notifications.notify(identifier, namespace, key);\n  }\n  get schema() {\n    return this._store.schema;\n  }\n  setRecordId(identifier, id) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a stable identifier`);\n      }\n    })(isStableIdentifier(identifier));\n    this._store._instanceCache.setRecordId(identifier, id);\n  }\n  hasRecord(identifier) {\n    return Boolean(this._store._instanceCache.peek(identifier));\n  }\n  disconnectRecord(identifier) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a stable identifier`);\n      }\n    })(isStableIdentifier(identifier));\n    this._store._instanceCache.disconnect(identifier);\n    this._pendingNotifies.delete(identifier);\n  }\n}\n{\n  CacheCapabilitiesManager.prototype.getSchemaDefinitionService = function () {\n    // FIXME add deprecation for this\n    return this._store.schema;\n  };\n}\n\n/*\n * Returns the Cache instance associated with a given\n * Model or Identifier\n */\n\nconst CacheForIdentifierCache = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('CacheForIdentifierCache', new Map());\nfunction setCacheFor(identifier, cache) {\n  (test => {\n    if (!test) {\n      throw new Error(`Illegal set of identifier`);\n    }\n  })(!CacheForIdentifierCache.has(identifier) || CacheForIdentifierCache.get(identifier) === cache);\n  CacheForIdentifierCache.set(identifier, cache);\n}\nfunction removeRecordDataFor(identifier) {\n  CacheForIdentifierCache.delete(identifier);\n}\nfunction peekCache(instance) {\n  if (CacheForIdentifierCache.has(instance)) {\n    return CacheForIdentifierCache.get(instance);\n  }\n  return null;\n}\nfunction isDestroyable(record) {\n  return Boolean(record && typeof record === 'object' && typeof record.destroy === 'function');\n}\n\n/**\n  @module @ember-data/store\n*/\n\nconst RecordCache = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('RecordCache', new Map());\nfunction peekRecordIdentifier(record) {\n  return RecordCache.get(record);\n}\n\n/**\n  Retrieves the unique referentially-stable [RecordIdentifier](/ember-data/release/classes/StableRecordIdentifier)\n  assigned to the given record instance.\n  ```js\n  import { recordIdentifierFor } from \"@ember-data/store\";\n  // ... gain access to a record, for instance with peekRecord or findRecord\n  const record = store.peekRecord(\"user\", \"1\");\n  // get the identifier for the record (see docs for StableRecordIdentifier)\n  const identifier = recordIdentifierFor(record);\n  // access the identifier's properties.\n  const { id, type, lid } = identifier;\n  ```\n  @method recordIdentifierFor\n  @public\n  @static\n  @for @ember-data/store\n  @param {Object} record a record instance previously obstained from the store.\n  @return {StableRecordIdentifier}\n */\n\nfunction recordIdentifierFor(record) {\n  (test => {\n    if (!test) {\n      throw new Error(`${String(record)} is not a record instantiated by @ember-data/store`);\n    }\n  })(RecordCache.has(record));\n  return RecordCache.get(record);\n}\nfunction setRecordIdentifier(record, identifier) {\n  {\n    if (RecordCache.has(record) && RecordCache.get(record) !== identifier) {\n      throw new Error(`${String(record)} was already assigned an identifier`);\n    }\n  }\n\n  /*\n  It would be nice to do a reverse check here that an identifier has not\n  previously been assigned a record; however, unload + rematerialization\n  prevents us from having a great way of doing so when CustomRecordClasses\n  don't necessarily give us access to a `isDestroyed` for dematerialized\n  instance.\n  */\n\n  RecordCache.set(record, identifier);\n}\nconst StoreMap = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('StoreMap', new Map());\nfunction storeFor(record) {\n  const store = StoreMap.get(record);\n  (test => {\n    if (!test) {\n      throw new Error(`A record in a disconnected state cannot utilize the store. This typically means the record has been destroyed, most commonly by unloading it.`);\n    }\n  })(store);\n  return store;\n}\nclass InstanceCache {\n  constructor(store) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"__instances\", {\n      record: new Map(),\n      reference: new WeakMap()\n    });\n    this.store = store;\n    this._storeWrapper = new CacheCapabilitiesManager(this.store);\n    store.identifierCache.__configureMerge((identifier, matchedIdentifier, resourceData) => {\n      let keptIdentifier = identifier;\n      if (identifier.id !== matchedIdentifier.id) {\n        // @ts-expect-error TODO this needs to be fixed\n        keptIdentifier = 'id' in resourceData && identifier.id === resourceData.id ? identifier : matchedIdentifier;\n      } else if (identifier.type !== matchedIdentifier.type) {\n        keptIdentifier =\n        // @ts-expect-error TODO this needs to be fixed\n        'type' in resourceData && identifier.type === resourceData.type ? identifier : matchedIdentifier;\n      }\n      const staleIdentifier = identifier === keptIdentifier ? matchedIdentifier : identifier;\n\n      // check for duplicate entities\n      const keptHasRecord = this.__instances.record.has(keptIdentifier);\n      const staleHasRecord = this.__instances.record.has(staleIdentifier);\n\n      // we cannot merge entities when both have records\n      // (this may not be strictly true, we could probably swap the cache data the record points at)\n      if (keptHasRecord && staleHasRecord) {\n        // TODO we probably don't need to throw these errors anymore\n        // we can probably just \"swap\" what data source the abandoned\n        // record points at so long as\n        // it itself is not retained by the store in any way.\n        // @ts-expect-error TODO this needs to be fixed\n        if ('id' in resourceData) {\n          throw new Error(`Failed to update the 'id' for the RecordIdentifier '${identifier.type}:${String(identifier.id)} (${identifier.lid})' to '${String(resourceData.id)}', because that id is already in use by '${matchedIdentifier.type}:${String(matchedIdentifier.id)} (${matchedIdentifier.lid})'`);\n        }\n        (test => {\n          {\n            throw new Error(`Failed to update the RecordIdentifier '${identifier.type}:${String(identifier.id)} (${identifier.lid})' to merge with the detected duplicate identifier '${matchedIdentifier.type}:${String(matchedIdentifier.id)} (${String(matchedIdentifier.lid)})'`);\n          }\n        })();\n      }\n      this.store.cache.patch({\n        op: 'mergeIdentifiers',\n        record: staleIdentifier,\n        value: keptIdentifier\n      });\n\n      /*\n      TODO @runspired consider adding this to make polymorphism even nicer\n      if (identifier.type !== matchedIdentifier.type) {\n      this.store._graph?.registerPolymorphicType(identifier.type, matchedIdentifier.type);\n      }\n      */\n\n      this.unloadRecord(staleIdentifier);\n      return keptIdentifier;\n    });\n  }\n  peek(identifier) {\n    return this.__instances.record.get(identifier);\n  }\n  getRecord(identifier, properties) {\n    let record = this.__instances.record.get(identifier);\n    if (!record) {\n      (test => {\n        if (!test) {\n          throw new Error(`Cannot create a new record instance while the store is being destroyed`);\n        }\n      })(!this.store.isDestroying && !this.store.isDestroyed);\n      const cache = this.store.cache;\n      setCacheFor(identifier, cache);\n      record = this.store.instantiateRecord(identifier, properties || {});\n      setRecordIdentifier(record, identifier);\n      setCacheFor(record, cache);\n      StoreMap.set(record, this.store);\n      this.__instances.record.set(identifier, record);\n    }\n    return record;\n  }\n  getReference(identifier) {\n    const cache = this.__instances.reference;\n    let reference = cache.get(identifier);\n    if (!reference) {\n      reference = new RecordReference(this.store, identifier);\n      cache.set(identifier, reference);\n    }\n    return reference;\n  }\n  recordIsLoaded(identifier, filterDeleted = false) {\n    const cache = this.cache;\n    if (!cache) {\n      return false;\n    }\n    const isNew = cache.isNew(identifier);\n    const isEmpty = cache.isEmpty(identifier);\n\n    // if we are new we must consider ourselves loaded\n    if (isNew) {\n      return !cache.isDeleted(identifier);\n    }\n    // even if we have a past request, if we are now empty we are not loaded\n    // typically this is true after an unloadRecord call\n\n    // if we are not empty, not new && we have a fulfilled request then we are loaded\n    // we should consider allowing for something to be loaded that is simply \"not empty\".\n    // which is how RecordState currently handles this case; however, RecordState is buggy\n    // in that it does not account for unloading.\n    return filterDeleted && cache.isDeletionCommitted(identifier) ? false : !isEmpty;\n  }\n  disconnect(identifier) {\n    const record = this.__instances.record.get(identifier);\n    (test => {\n      if (!test) {\n        throw new Error('Cannot destroy record while it is still materialized');\n      }\n    })(!isDestroyable(record) || record.isDestroyed || record.isDestroying);\n    this.store._graph?.remove(identifier);\n    this.store.identifierCache.forgetRecordIdentifier(identifier);\n    removeRecordDataFor(identifier);\n    this.store._requestCache._clearEntries(identifier);\n  }\n  unloadRecord(identifier) {\n    {\n      const requests = this.store.getRequestStateService().getPendingRequestsForRecord(identifier);\n      if (requests.some(req => {\n        return req.type === 'mutation';\n      })) {\n        (test => {\n          {\n            throw new Error(`You can only unload a record which is not inFlight. '${String(identifier)}'`);\n          }\n        })();\n      }\n    }\n    // TODO is this join still necessary?\n    this.store._join(() => {\n      const record = this.__instances.record.get(identifier);\n      const cache = this.cache;\n      if (record) {\n        this.store.teardownRecord(record);\n        this.__instances.record.delete(identifier);\n        StoreMap.delete(record);\n        RecordCache.delete(record);\n        removeRecordDataFor(record);\n      }\n      if (cache) {\n        cache.unloadRecord(identifier);\n        removeRecordDataFor(identifier);\n      } else {\n        this.disconnect(identifier);\n      }\n      this.store._requestCache._clearEntries(identifier);\n    });\n  }\n  clear(type) {\n    const cache = this.store.identifierCache._cache;\n    if (type === undefined) {\n      // it would be cool if we could just de-ref cache here\n      // but probably would require WeakRef models to do so.\n      cache.resources.forEach(identifier => {\n        this.unloadRecord(identifier);\n      });\n    } else {\n      const typeCache = cache.resourcesByType;\n      const identifiers = typeCache[type]?.lid;\n      if (identifiers) {\n        identifiers.forEach(identifier => {\n          // if (rds.has(identifier)) {\n          this.unloadRecord(identifier);\n          // }\n          // TODO we don't remove the identifier, should we?\n        });\n      }\n    }\n  }\n\n  // TODO this should move into something coordinating operations\n  setRecordId(identifier, id) {\n    const {\n      type,\n      lid\n    } = identifier;\n    const oldId = identifier.id;\n\n    // ID absolutely can't be missing if the oldID is empty (missing Id in response for a new record)\n    (test => {\n      if (!test) {\n        throw new Error(`'${type}' was saved to the server, but the response does not have an id and your record does not either.`);\n      }\n    })(!(id === null && oldId === null));\n\n    // ID absolutely can't be different than oldID if oldID is not null\n    // TODO this assertion and restriction may not strictly be needed in the identifiers world\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot update the id for '${type}:${lid}' from '${String(oldId)}' to '${id}'.`);\n      }\n    })(!(oldId !== null && id !== oldId));\n\n    // ID can be null if oldID is not null (altered ID in response for a record)\n    // however, this is more than likely a developer error.\n    if (oldId !== null && id === null) {\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.warn)(`Your ${type} record was saved to the server, but the response does not have an id.`, !(oldId !== null && id === null)));\n      return;\n    }\n    const existingIdentifier = this.store.identifierCache.peekRecordIdentifier({\n      type,\n      id\n    });\n    (test => {\n      if (!test) {\n        throw new Error(`'${type}' was saved to the server, but the response returned the new id '${id}', which has already been used with another record.'`);\n      }\n    })(!existingIdentifier || existingIdentifier === identifier);\n    if (identifier.id === null) {\n      // TODO potentially this needs to handle merged result\n      this.store.identifierCache.updateRecordIdentifier(identifier, {\n        type,\n        id\n      });\n    }\n\n    // TODO update resource cache if needed ?\n    // TODO handle consequences of identifier merge for notifications\n    this.store.notifications.notify(identifier, 'identity');\n  }\n}\nfunction _resourceIsFullDeleted(identifier, cache) {\n  return cache.isDeletionCommitted(identifier) || cache.isNew(identifier) && cache.isDeleted(identifier);\n}\nfunction resourceIsFullyDeleted(instanceCache, identifier) {\n  const cache = instanceCache.cache;\n  return !cache || _resourceIsFullDeleted(identifier, cache);\n}\n\n/*\n    When a find request is triggered on the store, the user can optionally pass in\n    attributes and relationships to be preloaded. These are meant to behave as if they\n    came back from the server, except the user obtained them out of band and is informing\n    the store of their existence. The most common use case is for supporting client side\n    nested URLs, such as `/posts/1/comments/2` so the user can do\n    `store.findRecord('comment', 2, { preload: { post: 1 } })` without having to fetch the post.\n\n    Preloaded data can be attributes and relationships passed in either as IDs or as actual\n    models.\n  */\n\nfunction preloadData(store, identifier, preload) {\n  const jsonPayload = {};\n  //TODO(Igor) consider the polymorphic case\n  const schemas = store.schema;\n  const fields = schemas.fields(identifier);\n  Object.keys(preload).forEach(key => {\n    const preloadValue = preload[key];\n    const field = fields.get(key);\n    if (field && (field.kind === 'hasMany' || field.kind === 'belongsTo')) {\n      if (!jsonPayload.relationships) {\n        jsonPayload.relationships = {};\n      }\n      jsonPayload.relationships[key] = preloadRelationship(field, preloadValue);\n    } else {\n      if (!jsonPayload.attributes) {\n        jsonPayload.attributes = {};\n      }\n      jsonPayload.attributes[key] = preloadValue;\n    }\n  });\n  const cache = store.cache;\n  const hasRecord = Boolean(store._instanceCache.peek(identifier));\n  cache.upsert(identifier, jsonPayload, hasRecord);\n}\nfunction preloadRelationship(schema, preloadValue) {\n  const relatedType = schema.type;\n  if (schema.kind === 'hasMany') {\n    (test => {\n      if (!test) {\n        throw new Error('You need to pass in an array to set a hasMany property on a record');\n      }\n    })(Array.isArray(preloadValue));\n    return {\n      data: preloadValue.map(value => _convertPreloadRelationshipToJSON(value, relatedType))\n    };\n  }\n  (test => {\n    if (!test) {\n      throw new Error('You should not pass in an array to set a belongsTo property on a record');\n    }\n  })(!Array.isArray(preloadValue));\n  return {\n    data: preloadValue ? _convertPreloadRelationshipToJSON(preloadValue, relatedType) : null\n  };\n}\n\n/*\n  findRecord('user', '1', { preload: { friends: ['1'] }});\n  findRecord('user', '1', { preload: { friends: [record] }});\n*/\nfunction _convertPreloadRelationshipToJSON(value, type) {\n  if (typeof value === 'string' || typeof value === 'number') {\n    return {\n      type,\n      id: ensureStringId(value)\n    };\n  }\n  // TODO if not a record instance assert it's an identifier\n  // and allow identifiers to be used\n  return recordIdentifierFor(value);\n}\nfunction _clearCaches() {\n  RecordCache.clear();\n  StoreMap.clear();\n  CacheForIdentifierCache.clear();\n}\n\n// if modelFor turns out to be a bottleneck we should replace with a Map\n// and clear it during store teardown.\nconst AvailableShims = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('AvailableShims', new WeakMap());\nfunction getShimClass(store, modelName) {\n  let shims = AvailableShims.get(store);\n  if (!shims) {\n    shims = Object.create(null);\n    AvailableShims.set(store, shims);\n  }\n  let shim = shims[modelName];\n  if (shim === undefined) {\n    shim = shims[modelName] = new ShimModelClass(store, modelName);\n  }\n  return shim;\n}\n\n// Mimics the static apis of @ember-data/model\nclass ShimModelClass {\n  constructor(store, modelName) {\n    this.__store = store;\n    this.modelName = modelName;\n  }\n  get fields() {\n    const fields = new Map();\n    const fieldSchemas = this.__store.schema.fields({\n      type: this.modelName\n    });\n    fieldSchemas.forEach((schema, key) => {\n      if (schema.kind === 'attribute' || schema.kind === 'belongsTo' || schema.kind === 'hasMany') {\n        fields.set(key, schema.kind);\n      }\n    });\n    return fields;\n  }\n  get attributes() {\n    const attrs = new Map();\n    const fields = this.__store.schema.fields({\n      type: this.modelName\n    });\n    fields.forEach((schema, key) => {\n      if (schema.kind === 'attribute') {\n        attrs.set(key, schema);\n      }\n    });\n    return attrs;\n  }\n  get relationshipsByName() {\n    const rels = new Map();\n    const fields = this.__store.schema.fields({\n      type: this.modelName\n    });\n    fields.forEach((schema, key) => {\n      if (schema.kind === 'belongsTo' || schema.kind === 'hasMany') {\n        rels.set(key, schema);\n      }\n    });\n    return rels;\n  }\n  eachAttribute(callback, binding) {\n    this.__store.schema.fields({\n      type: this.modelName\n    }).forEach((schema, key) => {\n      if (schema.kind === 'attribute') {\n        callback.call(binding, key, schema);\n      }\n    });\n  }\n  eachRelationship(callback, binding) {\n    this.__store.schema.fields({\n      type: this.modelName\n    }).forEach((schema, key) => {\n      if (schema.kind === 'belongsTo' || schema.kind === 'hasMany') {\n        callback.call(binding, key, schema);\n      }\n    });\n  }\n  eachTransformedAttribute(callback, binding) {\n    this.__store.schema.fields({\n      type: this.modelName\n    }).forEach((schema, key) => {\n      if (schema.kind === 'attribute') {\n        const type = schema.type;\n        if (type) callback.call(binding, key, type);\n      }\n    });\n  }\n}\n\n/**\n * The CacheManager wraps a Cache enforcing that only\n * the public API surface area is exposed.\n *\n * Hence, it is the value of `Store.cache`, wrapping\n * the cache instance returned by `Store.createCache`.\n *\n * It handles translating between cache versions when\n * necessary, for instance when a Store is configured\n * to use both a v1 and a v2 cache depending on some\n * heuristic.\n *\n * Starting with the v2 spec, the cache is designed such\n * that it must be implemented as a singleton.\n *\n * @class CacheManager\n * @public\n */\nvar _cache = /*#__PURE__*/new WeakMap();\nclass CacheManager {\n  constructor(cache) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"version\", '2');\n    _classPrivateFieldInitSpec(this, _cache, void 0);\n    _classPrivateFieldSet(_cache, this, cache);\n  }\n\n  // Cache Management\n  // ================\n\n  /**\n   * Cache the response to a request\n   *\n   * Unlike `store.push` which has UPSERT\n   * semantics, `put` has `replace` semantics similar to\n   * the `http` method `PUT`\n   *\n   * the individually cacheable\n   * e resource data it may contain\n   * should upsert, but the document data surrounding it should\n   * fully replace any existing information\n   *\n   * Note that in order to support inserting arbitrary data\n   * to the cache that did not originate from a request `put`\n   * should expect to sometimes encounter a document with only\n   * a `content` member and therefor must not assume the existence\n   * of `request` and `response` on the document.\n   *\n   * @method put\n   * @param {StructuredDocument} doc\n   * @return {ResourceDocument}\n   * @public\n   */\n  put(doc) {\n    return _classPrivateFieldGet(_cache, this).put(doc);\n  }\n\n  /**\n   * Perform an operation on the cache to update the remote state.\n   *\n   * Note: currently the only valid operation is a MergeOperation\n   * which occurs when a collision of identifiers is detected.\n   *\n   * @method patch\n   * @public\n   * @param op the operation to perform\n   * @return {void}\n   */\n  patch(op) {\n    _classPrivateFieldGet(_cache, this).patch(op);\n  }\n\n  /**\n   * Update resource data with a local mutation. Currently supports operations\n   * on relationships only.\n   *\n   * @method mutate\n   * @public\n   * @param mutation\n   */\n  mutate(mutation) {\n    _classPrivateFieldGet(_cache, this).mutate(mutation);\n  }\n\n  /**\n   * Peek resource data from the Cache.\n   *\n   * In development, if the return value\n   * is JSON the return value\n   * will be deep-cloned and deep-frozen\n   * to prevent mutation thereby enforcing cache\n   * Immutability.\n   *\n   * This form of peek is useful for implementations\n   * that want to feed raw-data from cache to the UI\n   * or which want to interact with a blob of data\n   * directly from the presentation cache.\n   *\n   * An implementation might want to do this because\n   * de-referencing records which read from their own\n   * blob is generally safer because the record does\n   * not require retaining connections to the Store\n   * and Cache to present data on a per-field basis.\n   *\n   * This generally takes the place of `getAttr` as\n   * an API and may even take the place of `getRelationship`\n   * depending on implementation specifics, though this\n   * latter usage is less recommended due to the advantages\n   * of the Graph handling necessary entanglements and\n   * notifications for relational data.\n   *\n   * @method peek\n   * @public\n   * @param {StableRecordIdentifier | StableDocumentIdentifier} identifier\n   * @return {ResourceDocument | ResourceBlob | null} the known resource data\n   */\n\n  peek(identifier) {\n    return _classPrivateFieldGet(_cache, this).peek(identifier);\n  }\n\n  /**\n   * Peek the Cache for the existing request data associated with\n   * a cacheable request\n   *\n   * @method peekRequest\n   * @param {StableDocumentIdentifier}\n   * @return {StableDocumentIdentifier | null}\n   * @public\n   */\n  peekRequest(identifier) {\n    return _classPrivateFieldGet(_cache, this).peekRequest(identifier);\n  }\n\n  /**\n   * Push resource data from a remote source into the cache for this identifier\n   *\n   * @method upsert\n   * @public\n   * @param identifier\n   * @param data\n   * @param hasRecord\n   * @return {void | string[]} if `hasRecord` is true then calculated key changes should be returned\n   */\n  upsert(identifier, data, hasRecord) {\n    return _classPrivateFieldGet(_cache, this).upsert(identifier, data, hasRecord);\n  }\n\n  // Cache Forking Support\n  // =====================\n\n  /**\n   * Create a fork of the cache from the current state.\n   *\n   * Applications should typically not call this method themselves,\n   * preferring instead to fork at the Store level, which will\n   * utilize this method to fork the cache.\n   *\n   * @method fork\n   * @public\n   * @return Promise<Cache>\n   */\n  fork() {\n    return _classPrivateFieldGet(_cache, this).fork();\n  }\n\n  /**\n   * Merge a fork back into a parent Cache.\n   *\n   * Applications should typically not call this method themselves,\n   * preferring instead to merge at the Store level, which will\n   * utilize this method to merge the caches.\n   *\n   * @method merge\n   * @param {Cache} cache\n   * @public\n   * @return Promise<void>\n   */\n  merge(cache) {\n    return _classPrivateFieldGet(_cache, this).merge(cache);\n  }\n\n  /**\n   * Generate the list of changes applied to all\n   * record in the store.\n   *\n   * Each individual resource or document that has\n   * been mutated should be described as an individual\n   * `Change` entry in the returned array.\n   *\n   * A `Change` is described by an object containing up to\n   * three properties: (1) the `identifier` of the entity that\n   * changed; (2) the `op` code of that change being one of\n   * `upsert` or `remove`, and if the op is `upsert` a `patch`\n   * containing the data to merge into the cache for the given\n   * entity.\n   *\n   * This `patch` is opaque to the Store but should be understood\n   * by the Cache and may expect to be utilized by an Adapter\n   * when generating data during a `save` operation.\n   *\n   * It is generally recommended that the `patch` contain only\n   * the updated state, ignoring fields that are unchanged\n   *\n   * ```ts\n   * interface Change {\n   *  identifier: StableRecordIdentifier | StableDocumentIdentifier;\n   *  op: 'upsert' | 'remove';\n   *  patch?: unknown;\n   * }\n   * ```\n   *\n   * @method diff\n   * @public\n   */\n  diff() {\n    return _classPrivateFieldGet(_cache, this).diff();\n  }\n\n  // SSR Support\n  // ===========\n\n  /**\n   * Serialize the entire contents of the Cache into a Stream\n   * which may be fed back into a new instance of the same Cache\n   * via `cache.hydrate`.\n   *\n   * @method dump\n   * @return {Promise<ReadableStream>}\n   * @public\n   */\n  dump() {\n    return _classPrivateFieldGet(_cache, this).dump();\n  }\n\n  /**\n   * hydrate a Cache from a Stream with content previously serialized\n   * from another instance of the same Cache, resolving when hydration\n   * is complete.\n   *\n   * This method should expect to be called both in the context of restoring\n   * the Cache during application rehydration after SSR **AND** at unknown\n   * times during the lifetime of an already booted application when it is\n   * desired to bulk-load additional information into the cache. This latter\n   * behavior supports optimizing pre/fetching of data for route transitions\n   * via data-only SSR modes.\n   *\n   * @method hydrate\n   * @param {ReadableStream} stream\n   * @return {Promise<void>}\n   * @public\n   */\n  hydrate(stream) {\n    return _classPrivateFieldGet(_cache, this).hydrate(stream);\n  }\n\n  // Cache\n  // =====\n\n  // Resource Support\n  // ================\n\n  /**\n   * [LIFECYCLE] Signal to the cache that a new record has been instantiated on the client\n   *\n   * It returns properties from options that should be set on the record during the create\n   * process. This return value behavior is deprecated.\n   *\n   * @method clientDidCreate\n   * @public\n   * @param identifier\n   * @param options\n   */\n  clientDidCreate(identifier, options) {\n    return _classPrivateFieldGet(_cache, this).clientDidCreate(identifier, options);\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * will be part of a save transaction.\n   *\n   * @method willCommit\n   * @public\n   * @param identifier\n   */\n  willCommit(identifier, context) {\n    _classPrivateFieldGet(_cache, this).willCommit(identifier, context);\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * was successfully updated as part of a save transaction.\n   *\n   * @method didCommit\n   * @public\n   * @param identifier\n   * @param data\n   */\n  didCommit(identifier, result) {\n    return _classPrivateFieldGet(_cache, this).didCommit(identifier, result);\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * was update via a save transaction failed.\n   *\n   * @method commitWasRejected\n   * @public\n   * @param identifier\n   * @param errors\n   */\n  commitWasRejected(identifier, errors) {\n    _classPrivateFieldGet(_cache, this).commitWasRejected(identifier, errors);\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that all data for a resource\n   * should be cleared.\n   *\n   * @method unloadRecord\n   * @public\n   * @param identifier\n   */\n  unloadRecord(identifier) {\n    _classPrivateFieldGet(_cache, this).unloadRecord(identifier);\n  }\n\n  // Granular Resource Data APIs\n  // ===========================\n\n  /**\n   * Retrieve the data for an attribute from the cache\n   *\n   * @method getAttr\n   * @public\n   * @param identifier\n   * @param propertyName\n   * @return {unknown}\n   */\n  getAttr(identifier, propertyName) {\n    return _classPrivateFieldGet(_cache, this).getAttr(identifier, propertyName);\n  }\n\n  /**\n   * Mutate the data for an attribute in the cache\n   *\n   * @method setAttr\n   * @public\n   * @param identifier\n   * @param propertyName\n   * @param value\n   */\n  setAttr(identifier, propertyName, value) {\n    _classPrivateFieldGet(_cache, this).setAttr(identifier, propertyName, value);\n  }\n\n  /**\n   * Query the cache for the changed attributes of a resource.\n   *\n   * @method changedAttrs\n   * @public\n   * @param identifier\n   * @return\n   */\n  changedAttrs(identifier) {\n    return _classPrivateFieldGet(_cache, this).changedAttrs(identifier);\n  }\n\n  /**\n   * Query the cache for whether any mutated attributes exist\n   *\n   * @method hasChangedAttrs\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  hasChangedAttrs(identifier) {\n    return _classPrivateFieldGet(_cache, this).hasChangedAttrs(identifier);\n  }\n\n  /**\n   * Tell the cache to discard any uncommitted mutations to attributes\n   *\n   * @method rollbackAttrs\n   * @public\n   * @param identifier\n   * @return the names of attributes that were restored\n   */\n  rollbackAttrs(identifier) {\n    return _classPrivateFieldGet(_cache, this).rollbackAttrs(identifier);\n  }\n\n  // Relationships\n  // =============\n\n  /**\n   * Query the cache for the changes to relationships of a resource.\n   *\n   * Returns a map of relationship names to RelationshipDiff objects.\n   *\n   * ```ts\n   * type RelationshipDiff =\n  | {\n      kind: 'collection';\n      remoteState: StableRecordIdentifier[];\n      additions: Set<StableRecordIdentifier>;\n      removals: Set<StableRecordIdentifier>;\n      localState: StableRecordIdentifier[];\n      reordered: boolean;\n    }\n  | {\n      kind: 'resource';\n      remoteState: StableRecordIdentifier | null;\n      localState: StableRecordIdentifier | null;\n    };\n    ```\n   *\n   * @method changedRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {Map<string, RelationshipDiff>}\n   */\n  changedRelationships(identifier) {\n    return _classPrivateFieldGet(_cache, this).changedRelationships(identifier);\n  }\n\n  /**\n   * Query the cache for whether any mutated attributes exist\n   *\n   * @method hasChangedRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {boolean}\n   */\n  hasChangedRelationships(identifier) {\n    return _classPrivateFieldGet(_cache, this).hasChangedRelationships(identifier);\n  }\n\n  /**\n   * Tell the cache to discard any uncommitted mutations to relationships.\n   *\n   * This will also discard the change on any appropriate inverses.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method rollbackRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {string[]} the names of relationships that were restored\n   */\n  rollbackRelationships(identifier) {\n    return _classPrivateFieldGet(_cache, this).rollbackRelationships(identifier);\n  }\n\n  /**\n   * Query the cache for the current state of a relationship property\n   *\n   * @method getRelationship\n   * @public\n   * @param identifier\n   * @param propertyName\n   * @return resource relationship object\n   */\n  getRelationship(identifier, propertyName) {\n    return _classPrivateFieldGet(_cache, this).getRelationship(identifier, propertyName);\n  }\n\n  // Resource State\n  // ===============\n\n  /**\n   * Update the cache state for the given resource to be marked as locally deleted,\n   * or remove such a mark.\n   *\n   * @method setIsDeleted\n   * @public\n   * @param identifier\n   * @param isDeleted\n   */\n  setIsDeleted(identifier, isDeleted) {\n    _classPrivateFieldGet(_cache, this).setIsDeleted(identifier, isDeleted);\n  }\n\n  /**\n   * Query the cache for any validation errors applicable to the given resource.\n   *\n   * @method getErrors\n   * @public\n   * @param identifier\n   * @return\n   */\n  getErrors(identifier) {\n    return _classPrivateFieldGet(_cache, this).getErrors(identifier);\n  }\n\n  /**\n   * Query the cache for whether a given resource has any available data\n   *\n   * @method isEmpty\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isEmpty(identifier) {\n    return _classPrivateFieldGet(_cache, this).isEmpty(identifier);\n  }\n\n  /**\n   * Query the cache for whether a given resource was created locally and not\n   * yet persisted.\n   *\n   * @method isNew\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isNew(identifier) {\n    return _classPrivateFieldGet(_cache, this).isNew(identifier);\n  }\n\n  /**\n   * Query the cache for whether a given resource is marked as deleted (but not\n   * necessarily persisted yet).\n   *\n   * @method isDeleted\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isDeleted(identifier) {\n    return _classPrivateFieldGet(_cache, this).isDeleted(identifier);\n  }\n\n  /**\n   * Query the cache for whether a given resource has been deleted and that deletion\n   * has also been persisted.\n   *\n   * @method isDeletionCommitted\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isDeletionCommitted(identifier) {\n    return _classPrivateFieldGet(_cache, this).isDeletionCommitted(identifier);\n  }\n}\n\n/**\n * @module @ember-data/store\n */\n// eslint-disable-next-line no-restricted-imports\nlet tokenId = 0;\nconst CacheOperations = new Set(['added', 'removed', 'state', 'updated']);\nfunction isCacheOperationValue(value) {\n  return CacheOperations.has(value);\n}\nfunction runLoopIsFlushing() {\n  //@ts-expect-error\n  return !!_ember_runloop__WEBPACK_IMPORTED_MODULE_7__._backburner.currentInstance && _ember_runloop__WEBPACK_IMPORTED_MODULE_7__._backburner._autorun !== true;\n}\nfunction _unsubscribe(tokens, token, cache) {\n  const identifier = tokens.get(token);\n  if (identifier) {\n    tokens.delete(token);\n    const map = cache.get(identifier);\n    map?.delete(token);\n  }\n}\n\n/**\n * The NotificationManager provides the ability to subscribe to\n * changes to Cache state.\n *\n * This Feature is what allows EmberData to create subscriptions that\n * work with any framework or change-notification system.\n *\n * @class NotificationManager\n * @public\n */\nclass NotificationManager {\n  constructor(store) {\n    this.store = store;\n    this.isDestroyed = false;\n    this._buffered = new Map();\n    this._hasFlush = false;\n    this._cache = new Map();\n    this._tokens = new Map();\n  }\n\n  /**\n   * Subscribe to changes for a given resource identifier, resource addition/removal, or document addition/removal.\n   *\n   * ```ts\n   * export type CacheOperation = 'added' | 'removed' | 'updated' | 'state';\n   *\n   * export interface NotificationCallback {\n   *   (identifier: StableRecordIdentifier, notificationType: 'attributes' | 'relationships', key?: string): void;\n   *   (identifier: StableRecordIdentifier, notificationType: 'errors' | 'meta' | 'identity' | 'state'): void;\n   *   (identifier: StableRecordIdentifier, notificationType: NotificationType, key?: string): void;\n   * }\n   * export interface ResourceOperationCallback {\n   *   // resource updates\n   *   (identifier: StableRecordIdentifier, notificationType: CacheOperation): void;\n   * }\n   * export interface DocumentOperationCallback {\n   *   // document updates\n   *   (identifier: StableDocumentIdentifier, notificationType: CacheOperation): void;\n   * }\n   * ```\n   *\n   * @method subscribe\n   * @public\n   * @param {StableDocumentIdentifier | StableRecordIdentifier | 'resource' | 'document'} identifier\n   * @param {NotificationCallback | ResourceOperationCallback | DocumentOperationCallback} callback\n   * @return {UnsubscribeToken} an opaque token to be used with unsubscribe\n   */\n\n  subscribe(identifier, callback) {\n    (test => {\n      if (!test) {\n        throw new Error(`Expected to receive a stable Identifier to subscribe to`);\n      }\n    })(identifier === 'resource' || identifier === 'document' || isStableIdentifier(identifier) || isDocumentIdentifier(identifier));\n    let map = this._cache.get(identifier);\n    if (!map) {\n      map = new Map();\n      this._cache.set(identifier, map);\n    }\n    const unsubToken = {\n      _tokenRef: tokenId++\n    };\n    map.set(unsubToken, callback);\n    this._tokens.set(unsubToken, identifier);\n    return unsubToken;\n  }\n\n  /**\n   * remove a previous subscription\n   *\n   * @method unsubscribe\n   * @public\n   * @param {UnsubscribeToken} token\n   */\n  unsubscribe(token) {\n    if (!this.isDestroyed) {\n      _unsubscribe(this._tokens, token, this._cache);\n    }\n  }\n\n  /**\n   * Custom Caches and Application Code should not call this method directly.\n   *\n   * @method notify\n   * @param identifier\n   * @param value\n   * @param key\n   * @return {Boolean} whether a notification was delivered to any subscribers\n   * @private\n   */\n\n  notify(identifier, value, key) {\n    (test => {\n      if (!test) {\n        throw new Error(`Notify does not accept a key argument for the namespace '${value}'. Received key '${key || ''}'.`);\n      }\n    })(!key || value === 'attributes' || value === 'relationships');\n    if (!isStableIdentifier(identifier) && !isDocumentIdentifier(identifier)) {\n      return false;\n    }\n    const hasSubscribers = Boolean(this._cache.get(identifier)?.size);\n    if (isCacheOperationValue(value) || hasSubscribers) {\n      let buffer = this._buffered.get(identifier);\n      if (!buffer) {\n        buffer = [];\n        this._buffered.set(identifier, buffer);\n      }\n      buffer.push([value, key]);\n      this._scheduleNotify();\n    }\n    return hasSubscribers;\n  }\n  _onNextFlush(cb) {\n    this._onFlushCB = cb;\n  }\n  _scheduleNotify() {\n    const asyncFlush = this.store._enableAsyncFlush;\n    if (this._hasFlush) {\n      if (asyncFlush !== false && !runLoopIsFlushing()) {\n        return;\n      }\n    }\n    if (asyncFlush && !runLoopIsFlushing()) {\n      this._hasFlush = true;\n      return;\n    }\n    this._flush();\n  }\n  _flush() {\n    if (this._buffered.size) {\n      this._buffered.forEach((states, identifier) => {\n        states.forEach(args => {\n          // @ts-expect-error\n          this._flushNotification(identifier, args[0], args[1]);\n        });\n      });\n      this._buffered = new Map();\n    }\n    this._hasFlush = false;\n    this._onFlushCB?.();\n    this._onFlushCB = undefined;\n  }\n  _flushNotification(identifier, value, key) {\n    // TODO for documents this will need to switch based on Identifier kind\n    if (isCacheOperationValue(value)) {\n      const callbackMap = this._cache.get(isDocumentIdentifier(identifier) ? 'document' : 'resource');\n      if (callbackMap) {\n        callbackMap.forEach(cb => {\n          cb(identifier, value);\n        });\n      }\n    }\n    const callbackMap = this._cache.get(identifier);\n    if (!callbackMap || !callbackMap.size) {\n      return false;\n    }\n    callbackMap.forEach(cb => {\n      // @ts-expect-error overload doesn't narrow within body\n      cb(identifier, value, key);\n    });\n    return true;\n  }\n  destroy() {\n    this.isDestroyed = true;\n    this._tokens.clear();\n    this._cache.clear();\n  }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/*\n  We redefine Proxy because the native Proxy type treats the `target` and\n  `receiver` as the same type incorrectly.\n\n  We ported this from Typescript's own Proxy types on 3/10/2024.\n*/\n\nconst NativeProxy = Proxy;\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\n// src/runtime.ts\nvar runtime_exports = {};\n__export(runtime_exports, {\n  c: () => decorateClass,\n  f: () => decorateFieldV1,\n  g: () => decorateFieldV2,\n  i: () => initializeDeferredDecorator,\n  m: () => decorateMethodV1,\n  n: () => decorateMethodV2,\n  p: () => decoratePOJO\n});\nvar deferred = /* @__PURE__ */new WeakMap();\nfunction deferDecorator(proto, prop, desc) {\n  let map = deferred.get(proto);\n  if (!map) {\n    map = /* @__PURE__ */new Map();\n    deferred.set(proto, map);\n  }\n  map.set(prop, desc);\n}\nfunction findDeferredDecorator(target, prop) {\n  let cursor = target.prototype;\n  while (cursor) {\n    let desc = deferred.get(cursor)?.get(prop);\n    if (desc) {\n      return desc;\n    }\n    cursor = cursor.prototype;\n  }\n}\nfunction decorateFieldV1(target, prop, decorators, initializer) {\n  return decorateFieldV2(target.prototype, prop, decorators, initializer);\n}\nfunction decorateFieldV2(prototype, prop, decorators, initializer) {\n  let desc = {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    initializer: null\n  };\n  if (initializer) {\n    desc.initializer = initializer;\n  }\n  for (let decorator of decorators) {\n    desc = decorator(prototype, prop, desc) || desc;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(prototype, prop, desc);\n  } else {\n    deferDecorator(prototype, prop, desc);\n  }\n}\nfunction decorateMethodV1({\n  prototype\n}, prop, decorators) {\n  return decorateMethodV2(prototype, prop, decorators);\n}\nfunction decorateMethodV2(prototype, prop, decorators) {\n  const origDesc = Object.getOwnPropertyDescriptor(prototype, prop);\n  let desc = {\n    ...origDesc\n  };\n  for (let decorator of decorators) {\n    desc = decorator(prototype, prop, desc) || desc;\n  }\n  if (desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(prototype) : void 0;\n    desc.initializer = void 0;\n  }\n  Object.defineProperty(prototype, prop, desc);\n}\nfunction initializeDeferredDecorator(target, prop) {\n  let desc = findDeferredDecorator(target.constructor, prop);\n  if (desc) {\n    Object.defineProperty(target, prop, {\n      enumerable: desc.enumerable,\n      configurable: desc.configurable,\n      writable: desc.writable,\n      value: desc.initializer ? desc.initializer.call(target) : void 0\n    });\n  }\n}\nfunction decorateClass(target, decorators) {\n  return decorators.reduce((accum, decorator) => decorator(accum) || accum, target);\n}\nfunction decoratePOJO(pojo, decorated) {\n  for (let [type, prop, decorators] of decorated) {\n    if (type === \"field\") {\n      decoratePojoField(pojo, prop, decorators);\n    } else {\n      decorateMethodV2(pojo, prop, decorators);\n    }\n  }\n  return pojo;\n}\nfunction decoratePojoField(pojo, prop, decorators) {\n  let desc = {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    initializer: () => Object.getOwnPropertyDescriptor(pojo, prop)?.value\n  };\n  for (let decorator of decorators) {\n    desc = decorator(pojo, prop, desc) || desc;\n  }\n  if (desc.initializer) {\n    desc.value = desc.initializer.call(pojo);\n    delete desc.initializer;\n  }\n  Object.defineProperty(pojo, prop, desc);\n}\n\n/**\n  @module @ember-data/store\n*/\nconst ARRAY_GETTER_METHODS = new Set([Symbol.iterator, 'concat', 'entries', 'every', 'fill', 'filter', 'find', 'findIndex', 'flat', 'flatMap', 'forEach', 'includes', 'indexOf', 'join', 'keys', 'lastIndexOf', 'map', 'reduce', 'reduceRight', 'slice', 'some', 'values']);\nconst ARRAY_SETTER_METHODS = new Set(['push', 'pop', 'unshift', 'shift', 'splice', 'sort']);\nconst SYNC_PROPS = new Set(['[]', 'length', 'links', 'meta']);\nfunction isArrayGetter(prop) {\n  return ARRAY_GETTER_METHODS.has(prop);\n}\nfunction isArraySetter(prop) {\n  return ARRAY_SETTER_METHODS.has(prop);\n}\nfunction isSelfProp(self, prop) {\n  return prop in self;\n}\nconst ARRAY_SIGNAL = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('#signal', Symbol('#signal'));\nconst SOURCE = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('#source', Symbol('#source'));\nconst MUTATE = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('#update', Symbol('#update'));\nconst NOTIFY = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('#notify', Symbol('#notify'));\nconst IS_COLLECTION = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('IS_COLLECTION', Symbol.for('Collection'));\nfunction notifyArray(arr) {\n  (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.addToTransaction)(arr[ARRAY_SIGNAL]);\n}\nfunction convertToInt(prop) {\n  if (typeof prop === 'symbol') return null;\n  const num = Number(prop);\n  if (isNaN(num)) return null;\n  return num % 1 === 0 ? num : null;\n}\nfunction safeForEach(instance, arr, store, callback, target) {\n  if (target === undefined) {\n    target = null;\n  }\n  // clone to prevent mutation\n  arr = arr.slice();\n  (test => {\n    if (!test) {\n      throw new Error('`forEach` expects a function as first argument.');\n    }\n  })(typeof callback === 'function');\n\n  // because we retrieveLatest above we need not worry if array is mutated during iteration\n  // by unloadRecord/rollbackAttributes\n  // push/add/removeObject may still be problematic\n  // but this is a more traditionally expected forEach bug.\n  const length = arr.length; // we need to access length to ensure we are consumed\n\n  for (let index = 0; index < length; index++) {\n    callback.call(target, store._instanceCache.getRecord(arr[index]), index, instance);\n  }\n  return instance;\n}\n\n/**\n  A record array is an array that contains records of a certain type (or modelName).\n  The record array materializes records as needed when they are retrieved for the first\n  time. You should not create record arrays yourself. Instead, an instance of\n  `RecordArray` or its subclasses will be returned by your application's store\n  in response to queries.\n\n  This class should not be imported and instantiated by consuming applications.\n\n  @class RecordArray\n  @public\n*/\n\nclass IdentifierArray {\n  [NOTIFY]() {\n    notifyArray(this);\n  }\n\n  /**\n    The store that created this record array.\n     @property store\n    @private\n    @type Store\n    */\n\n  destroy(clear) {\n    this.isDestroying = !clear;\n    // changing the reference breaks the Proxy\n    // this[SOURCE] = [];\n    this[SOURCE].length = 0;\n    this[NOTIFY]();\n    this.isDestroyed = !clear;\n  }\n\n  // length must be on self for proxied methods to work properly\n  get length() {\n    return this[SOURCE].length;\n  }\n  set length(value) {\n    this[SOURCE].length = value;\n  }\n  constructor(options) {\n    /**\n      The flag to signal a `RecordArray` is currently loading data.\n      Example\n      ```javascript\n      let people = store.peekAll('person');\n      people.isUpdating; // false\n      people.update();\n      people.isUpdating; // true\n      ```\n      @property isUpdating\n      @public\n      @type Boolean\n    */\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isLoaded\", true);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isDestroying\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isDestroyed\", false);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_updatingPromise\", null);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, IS_COLLECTION, true);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, SOURCE, void 0);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    this.modelName = options.type;\n    this.store = options.store;\n    this._manager = options.manager;\n    this[SOURCE] = options.identifiers;\n    this[ARRAY_SIGNAL] = (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.createSignal)(this, 'length');\n    const store = options.store;\n    const boundFns = new Map();\n    const _SIGNAL = this[ARRAY_SIGNAL];\n    const PrivateState = {\n      links: options.links || null,\n      meta: options.meta || null\n    };\n    let transaction = false;\n\n    // when a mutation occurs\n    // we track all mutations within the call\n    // and forward them as one\n\n    const proxy = new NativeProxy(this[SOURCE], {\n      get(target, prop, receiver) {\n        const index = convertToInt(prop);\n        if (_SIGNAL.shouldReset && (index !== null || SYNC_PROPS.has(prop) || isArrayGetter(prop))) {\n          options.manager._syncArray(receiver);\n          _SIGNAL.t = false;\n          _SIGNAL.shouldReset = false;\n        }\n        if (index !== null) {\n          const identifier = target[index];\n          if (!transaction) {\n            (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.subscribe)(_SIGNAL);\n          }\n          return identifier && store._instanceCache.getRecord(identifier);\n        }\n        if (prop === 'meta') return (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.subscribe)(_SIGNAL), PrivateState.meta;\n        if (prop === 'links') return (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.subscribe)(_SIGNAL), PrivateState.links;\n        if (prop === '[]') return (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.subscribe)(_SIGNAL), receiver;\n        if (isArrayGetter(prop)) {\n          let fn = boundFns.get(prop);\n          if (fn === undefined) {\n            if (prop === 'forEach') {\n              fn = function () {\n                (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.subscribe)(_SIGNAL);\n                transaction = true;\n                const result = safeForEach(receiver, target, store, arguments[0], arguments[1]);\n                transaction = false;\n                return result;\n              };\n            } else {\n              fn = function () {\n                (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.subscribe)(_SIGNAL);\n                // array functions must run through Reflect to work properly\n                // binding via other means will not work.\n                transaction = true;\n                const result = Reflect.apply(target[prop], receiver, arguments);\n                transaction = false;\n                return result;\n              };\n            }\n            boundFns.set(prop, fn);\n          }\n          return fn;\n        }\n        if (isArraySetter(prop)) {\n          let fn = boundFns.get(prop);\n          if (fn === undefined) {\n            fn = function () {\n              // array functions must run through Reflect to work properly\n              // binding via other means will not work.\n              if (!options.allowMutation) {\n                (test => {\n                  if (!test) {\n                    throw new Error(`Mutating this array of records via ${String(prop)} is not allowed.`);\n                  }\n                })(options.allowMutation);\n                return;\n              }\n              const args = Array.prototype.slice.call(arguments);\n              (test => {\n                if (!test) {\n                  throw new Error(`Cannot start a new array transaction while a previous transaction is underway`);\n                }\n              })(!transaction);\n              transaction = true;\n              const result = self[MUTATE](target, receiver, prop, args, _SIGNAL);\n              transaction = false;\n              return result;\n            };\n            boundFns.set(prop, fn);\n          }\n          return fn;\n        }\n        if (isSelfProp(self, prop)) {\n          if (prop === NOTIFY || prop === ARRAY_SIGNAL || prop === SOURCE) {\n            return self[prop];\n          }\n          let fn = boundFns.get(prop);\n          if (fn) return fn;\n          const outcome = self[prop];\n          if (typeof outcome === 'function') {\n            fn = function () {\n              (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.subscribe)(_SIGNAL);\n              // array functions must run through Reflect to work properly\n              // binding via other means will not work.\n              return Reflect.apply(outcome, receiver, arguments);\n            };\n            boundFns.set(prop, fn);\n            return fn;\n          }\n          return (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.subscribe)(_SIGNAL), outcome;\n        }\n        return target[prop];\n      },\n      // FIXME: Should this get a generic like get above?\n      set(target, prop, value, receiver) {\n        if (prop === 'length') {\n          if (!transaction && value === 0) {\n            transaction = true;\n            self[MUTATE](target, receiver, 'length 0', [], _SIGNAL);\n            transaction = false;\n            return true;\n          } else if (transaction) {\n            return Reflect.set(target, prop, value);\n          } else {\n            (test => {\n              {\n                throw new Error(`unexpected length set`);\n              }\n            })();\n          }\n        }\n        if (prop === 'links') {\n          PrivateState.links = value || null;\n          return true;\n        }\n        if (prop === 'meta') {\n          PrivateState.meta = value || null;\n          return true;\n        }\n        const index = convertToInt(prop);\n\n        // we do not allow \"holey\" arrays and so if the index is\n        // greater than length then we will disallow setting it.\n        // however, there is a special case for \"unshift\" with more than\n        // one item being inserted since current items will be moved to the\n        // new indices first.\n        // we \"loosely\" detect this by just checking whether we are in\n        // a transaction.\n        if (index === null || index > target.length) {\n          if (index !== null && transaction) {\n            const identifier = recordIdentifierFor(value);\n            (test => {\n              if (!test) {\n                throw new Error(`Cannot set index ${index} past the end of the array.`);\n              }\n            })(isStableIdentifier(identifier));\n            target[index] = identifier;\n            return true;\n          } else if (isSelfProp(self, prop)) {\n            // @ts-expect-error not all properties are indeces and we can't safely cast\n            self[prop] = value;\n            return true;\n          }\n          return false;\n        }\n        if (!options.allowMutation) {\n          (test => {\n            if (!test) {\n              throw new Error(`Mutating ${String(prop)} on this Array is not allowed.`);\n            }\n          })(options.allowMutation);\n          return false;\n        }\n        const original = target[index];\n        const newIdentifier = extractIdentifierFromRecord$1(value);\n        target[index] = newIdentifier;\n        (test => {\n          if (!test) {\n            throw new Error(`Expected a record`);\n          }\n        })(isStableIdentifier(newIdentifier));\n        // We generate \"transactions\" whenever a setter method on the array\n        // is called and might bulk update multiple array cells. Fundamentally,\n        // all array operations decompose into individual cell replacements.\n        // e.g. a push is really a \"replace cell at next index with new value\"\n        // or a splice is \"shift all values left/right by X and set out of new\n        // bounds cells to undefined\"\n        //\n        // so, if we are in a transaction, then this is not a user generated change\n        // but one generated by a setter method. In this case we want to only apply\n        // the change to the target array and not call the MUTATE method.\n        // If there is no transaction though, then this means the user themselves has\n        // directly changed the value of a specific index and we need to thus generate\n        // a mutation for that change.\n        // e.g. \"arr.push(newVal)\" is handled by a \"addToRelatedRecords\" mutation within\n        // a transaction.\n        // while \"arr[arr.length] = newVal;\" is handled by this replace cell code path.\n        if (!transaction) {\n          self[MUTATE](target, receiver, 'replace cell', [index, original, newIdentifier], _SIGNAL);\n        } else {\n          target[index] = newIdentifier;\n        }\n        return true;\n      },\n      deleteProperty(target, prop) {\n        (test => {\n          if (!test) {\n            throw new Error(`Deleting keys on managed arrays is disallowed`);\n          }\n        })(transaction);\n        if (!transaction) {\n          return false;\n        }\n        return Reflect.deleteProperty(target, prop);\n      },\n      getPrototypeOf() {\n        return IdentifierArray.prototype;\n      }\n    });\n    (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.createArrayTags)(proxy, _SIGNAL);\n    this[NOTIFY] = this[NOTIFY].bind(proxy);\n    return proxy;\n  }\n\n  /**\n    Used to get the latest version of all of the records in this array\n    from the adapter.\n     Example\n     ```javascript\n    let people = store.peekAll('person');\n    people.isUpdating; // false\n     people.update().then(function() {\n      people.isUpdating; // false\n    });\n     people.isUpdating; // true\n    ```\n     @method update\n    @public\n  */\n  update() {\n    if (this.isUpdating) {\n      return this._updatingPromise;\n    }\n    this.isUpdating = true;\n    const updatingPromise = this._update();\n    void updatingPromise.finally(() => {\n      this._updatingPromise = null;\n      if (this.isDestroying || this.isDestroyed) {\n        return;\n      }\n      this.isUpdating = false;\n    });\n    this._updatingPromise = updatingPromise;\n    return updatingPromise;\n  }\n\n  /*\n    Update this Array and return a promise which resolves once the update\n    is finished.\n   */\n  _update() {\n    (test => {\n      if (!test) {\n        throw new Error(`_update cannot be used with this array`);\n      }\n    })(this.modelName);\n    // @ts-expect-error typescript is unable to handle the complexity of\n    //   T = unknown, modelName = string\n    //   T extends TypedRecordInstance, modelName = TypeFromInstance<T>\n    // both being valid options to pass through here.\n    return this.store.findAll(this.modelName, {\n      reload: true\n    });\n  }\n\n  // TODO deprecate\n  /**\n    Saves all of the records in the `RecordArray`.\n     Example\n     ```javascript\n    let messages = store.peekAll('message');\n    messages.forEach(function(message) {\n      message.hasBeenSeen = true;\n    });\n    messages.save();\n    ```\n     @method save\n    @public\n    @return {Promise<IdentifierArray>} promise\n  */\n  save() {\n    const promise = Promise.all(this.map(record => this.store.saveRecord(record))).then(() => this);\n    return promise;\n  }\n}\n\n// this will error if someone tries to call\n// A(identifierArray) since it is not configurable\n// which is preferable to the `meta` override we used\n// before which required importing all of Ember\n_IdentifierArray = IdentifierArray;\ndecorateMethodV2(_IdentifierArray.prototype, \"length\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_8__.compat]);\nconst desc = {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    return this;\n  }\n};\n(0,_ember_data_tracking__WEBPACK_IMPORTED_MODULE_8__.compat)(desc);\nObject.defineProperty(IdentifierArray.prototype, '[]', desc);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.defineSignal)(IdentifierArray.prototype, 'isUpdating', false);\nclass Collection extends IdentifierArray {\n  constructor(options) {\n    super(options);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"query\", null);\n    this.query = options.query || null;\n    this.isLoaded = options.isLoaded || false;\n  }\n  _update() {\n    const {\n      store,\n      query\n    } = this;\n\n    // TODO save options from initial request?\n    (test => {\n      if (!test) {\n        throw new Error(`update cannot be used with this array`);\n      }\n    })(this.modelName);\n    (test => {\n      if (!test) {\n        throw new Error(`update cannot be used with no query`);\n      }\n    })(query);\n    // @ts-expect-error typescript is unable to handle the complexity of\n    //   T = unknown, modelName = string\n    //   T extends TypedRecordInstance, modelName = TypeFromInstance<T>\n    // both being valid options to pass through here.\n    const promise = store.query(this.modelName, query, {\n      _recordArray: this\n    });\n    return promise;\n  }\n  destroy(clear) {\n    super.destroy(clear);\n    this._manager._managed.delete(this);\n    this._manager._pending.delete(this);\n  }\n}\n// trick the proxy \"in\" check\nCollection.prototype.query = null;\n\n// Ensure instanceof works correctly\n// Object.setPrototypeOf(IdentifierArray.prototype, Array.prototype);\n\nfunction assertRecordPassedToHasMany(record) {\n  (test => {\n    if (!test) {\n      throw new Error(`All elements of a hasMany relationship must be instances of Model, you passed $${typeof record}`);\n    }\n  })(function () {\n    try {\n      recordIdentifierFor(record);\n      return true;\n    } catch {\n      return false;\n    }\n  }());\n}\nfunction extractIdentifierFromRecord$1(record) {\n  if (!record) {\n    return null;\n  }\n  assertRecordPassedToHasMany(record);\n  return recordIdentifierFor(record);\n}\n\n/**\n  @module @ember-data/store\n*/\nconst FAKE_ARR = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('FAKE_ARR', {});\nconst SLICE_BATCH_SIZE = 1200;\n/**\n * This is a clever optimization.\n *\n * clever optimizations rarely stand the test of time, so if you're\n * ever curious or think something better is possible please benchmark\n * and discuss. The benchmark for this at the time of writing is in\n * `scripts/benchmark-push.js`\n *\n * This approach turns out to be 150x faster in Chrome and node than\n * simply using push or concat. It's highly susceptible to the specifics\n * of the batch size, and may require tuning.\n *\n * Clever optimizations should always come with a `why`. This optimization\n * exists for two reasons.\n *\n * 1) array.push(...objects) and Array.prototype.push.apply(arr, objects)\n *   are susceptible to stack overflows. The size of objects at which this\n *   occurs varies by environment, browser, and current stack depth and memory\n *   pressure; however, it occurs in all browsers in fairly pristine conditions\n *   somewhere around 125k to 200k elements. Since EmberData regularly encounters\n *   arrays larger than this in size, we cannot use push.\n *\n * 2) `array.concat` or simply setting the array to a new reference is often an\n *   easier approach; however, native Proxy to an array cannot swap it's target array\n *   and attempts at juggling multiple array sources have proven to be victim to a number\n *   of browser implementation bugs. Should these bugs be addressed then we could\n *   simplify to using `concat`, however, do note this is currently 150x faster\n *   than concat, and due to the overloaded signature of concat will likely always\n *   be faster.\n *\n * Sincerely,\n *   - runspired (Chris Thoburn) 08/21/2022\n *\n * @function fastPush\n * @internal\n * @param target the array to push into\n * @param source the items to push into target\n */\nfunction fastPush(target, source) {\n  let startLength = 0;\n  const newLength = source.length;\n  while (newLength - startLength > SLICE_BATCH_SIZE) {\n    // eslint-disable-next-line prefer-spread\n    target.push.apply(target, source.slice(startLength, startLength + SLICE_BATCH_SIZE));\n    startLength += SLICE_BATCH_SIZE;\n  }\n  // eslint-disable-next-line prefer-spread\n  target.push.apply(target, source.slice(startLength));\n}\n/**\n  @class RecordArrayManager\n  @internal\n*/\nclass RecordArrayManager {\n  constructor(options) {\n    this.store = options.store;\n    this.isDestroying = false;\n    this.isDestroyed = false;\n    this._live = new Map();\n    this._managed = new Set();\n    this._pending = new Map();\n    this._staged = new Map();\n    this._keyedArrays = new Map();\n    this._identifiers = new Map();\n    this._set = new Map();\n    this._visibilitySet = new Map();\n    this._subscription = this.store.notifications.subscribe('resource', (identifier, type) => {\n      if (type === 'added') {\n        this._visibilitySet.set(identifier, true);\n        this.identifierAdded(identifier);\n      } else if (type === 'removed') {\n        this._visibilitySet.set(identifier, false);\n        this.identifierRemoved(identifier);\n      } else if (type === 'state') {\n        this.identifierChanged(identifier);\n      }\n    });\n  }\n  _syncArray(array) {\n    const pending = this._pending.get(array);\n    if (!pending || this.isDestroying || this.isDestroyed) {\n      return;\n    }\n    sync(array, pending, this._set.get(array));\n    this._pending.delete(array);\n  }\n\n  /**\n    Get the `RecordArray` for a modelName, which contains all loaded records of\n    given modelName.\n     @method liveArrayFor\n    @internal\n    @param {String} modelName\n    @return {RecordArray}\n  */\n  liveArrayFor(type) {\n    let array = this._live.get(type);\n    const identifiers = [];\n    const staged = this._staged.get(type);\n    if (staged) {\n      staged.forEach((value, key) => {\n        if (value === 'add') {\n          identifiers.push(key);\n        }\n      });\n      this._staged.delete(type);\n    }\n    if (!array) {\n      array = new IdentifierArray({\n        type,\n        identifiers,\n        store: this.store,\n        allowMutation: false,\n        manager: this\n      });\n      this._live.set(type, array);\n      this._set.set(array, new Set(identifiers));\n    }\n    return array;\n  }\n  createArray(config) {\n    const options = {\n      type: config.type,\n      links: config.doc?.links || null,\n      meta: config.doc?.meta || null,\n      query: config.query || null,\n      identifiers: config.identifiers || [],\n      isLoaded: !!config.identifiers?.length,\n      allowMutation: false,\n      store: this.store,\n      manager: this\n    };\n    const array = new Collection(options);\n    this._managed.add(array);\n    this._set.set(array, new Set(options.identifiers || []));\n    if (config.identifiers) {\n      associate(this._identifiers, array, config.identifiers);\n    }\n    return array;\n  }\n  dirtyArray(array, delta) {\n    if (array === FAKE_ARR) {\n      return;\n    }\n    const tag = array[ARRAY_SIGNAL];\n    if (!tag.shouldReset) {\n      tag.shouldReset = true;\n      (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.addTransactionCB)(array[NOTIFY]);\n    } else if (delta > 0 && !tag.t) {\n      (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.addTransactionCB)(array[NOTIFY]);\n    }\n  }\n  _getPendingFor(identifier, includeManaged, isRemove) {\n    if (this.isDestroying || this.isDestroyed) {\n      return;\n    }\n    const liveArray = this._live.get(identifier.type);\n    const allPending = this._pending;\n    const pending = new Map();\n    if (includeManaged) {\n      const managed = this._identifiers.get(identifier);\n      if (managed) {\n        managed.forEach(arr => {\n          let changes = allPending.get(arr);\n          if (!changes) {\n            changes = new Map();\n            allPending.set(arr, changes);\n          }\n          pending.set(arr, changes);\n        });\n      }\n    }\n\n    // during unloadAll we can ignore removes since we've already\n    // cleared the array.\n    if (liveArray && liveArray[SOURCE].length === 0 && isRemove) {\n      const pendingLive = allPending.get(liveArray);\n      if (!pendingLive || pendingLive.size === 0) {\n        return pending;\n      }\n    }\n    if (!liveArray) {\n      // start building a changeset for when we eventually\n      // do have a live array\n      let changes = this._staged.get(identifier.type);\n      if (!changes) {\n        changes = new Map();\n        this._staged.set(identifier.type, changes);\n      }\n      pending.set(FAKE_ARR, changes);\n    } else {\n      let changes = allPending.get(liveArray);\n      if (!changes) {\n        changes = new Map();\n        allPending.set(liveArray, changes);\n      }\n      pending.set(liveArray, changes);\n    }\n    return pending;\n  }\n  populateManagedArray(array, identifiers, payload) {\n    this._pending.delete(array);\n    const source = array[SOURCE];\n    const old = source.slice();\n    source.length = 0;\n    fastPush(source, identifiers);\n    this._set.set(array, new Set(identifiers));\n    notifyArray(array);\n    array.meta = payload.meta || null;\n    array.links = payload.links || null;\n    array.isLoaded = true;\n    disassociate(this._identifiers, array, old);\n    associate(this._identifiers, array, identifiers);\n  }\n  identifierAdded(identifier) {\n    const changeSets = this._getPendingFor(identifier, false);\n    if (changeSets) {\n      changeSets.forEach((changes, array) => {\n        const existing = changes.get(identifier);\n        if (existing === 'del') {\n          changes.delete(identifier);\n        } else {\n          changes.set(identifier, 'add');\n          this.dirtyArray(array, changes.size);\n        }\n      });\n    }\n  }\n  identifierRemoved(identifier) {\n    const changeSets = this._getPendingFor(identifier, true, true);\n    if (changeSets) {\n      changeSets.forEach((changes, array) => {\n        const existing = changes.get(identifier);\n        if (existing === 'add') {\n          changes.delete(identifier);\n        } else {\n          changes.set(identifier, 'del');\n          this.dirtyArray(array, changes.size);\n        }\n      });\n    }\n  }\n  identifierChanged(identifier) {\n    const newState = this.store._instanceCache.recordIsLoaded(identifier, true);\n\n    // if the change matches the most recent direct added/removed\n    // state, then we can ignore it\n    if (this._visibilitySet.get(identifier) === newState) {\n      return;\n    }\n    if (newState) {\n      this.identifierAdded(identifier);\n    } else {\n      this.identifierRemoved(identifier);\n    }\n  }\n  clear(isClear = true) {\n    this._live.forEach(array => array.destroy(isClear));\n    this._managed.forEach(array => array.destroy(isClear));\n    this._managed.clear();\n    this._identifiers.clear();\n    this._pending.clear();\n    this._set.forEach(set => set.clear());\n    this._visibilitySet.clear();\n  }\n  destroy() {\n    this.isDestroying = true;\n    this.clear(false);\n    this._live.clear();\n    this.isDestroyed = true;\n    this.store.notifications.unsubscribe(this._subscription);\n  }\n}\nfunction associate(ArraysCache, array, identifiers) {\n  for (let i = 0; i < identifiers.length; i++) {\n    const identifier = identifiers[i];\n    let cache = ArraysCache.get(identifier);\n    if (!cache) {\n      cache = new Set();\n      ArraysCache.set(identifier, cache);\n    }\n    cache.add(array);\n  }\n}\nfunction disassociate(ArraysCache, array, identifiers) {\n  for (let i = 0; i < identifiers.length; i++) {\n    disassociateIdentifier(ArraysCache, array, identifiers[i]);\n  }\n}\nfunction disassociateIdentifier(ArraysCache, array, identifier) {\n  const cache = ArraysCache.get(identifier);\n  if (cache) {\n    cache.delete(array);\n  }\n}\nfunction sync(array, changes, arraySet) {\n  const state = array[SOURCE];\n  const adds = [];\n  const removes = [];\n  changes.forEach((value, key) => {\n    if (value === 'add') {\n      // likely we want to keep a Set along-side\n      if (arraySet.has(key)) {\n        return;\n      }\n      adds.push(key);\n      arraySet.add(key);\n    } else {\n      if (arraySet.has(key)) {\n        removes.push(key);\n        arraySet.delete(key);\n      }\n    }\n  });\n  if (removes.length) {\n    if (removes.length === state.length) {\n      state.length = 0;\n      // changing the reference breaks the Proxy\n      // state = array[SOURCE] = [];\n    } else {\n      removes.forEach(i => {\n        const index = state.indexOf(i);\n        if (index !== -1) {\n          state.splice(index, 1);\n          arraySet.delete(i);\n        }\n      });\n    }\n  }\n  if (adds.length) {\n    fastPush(state, adds);\n    // changing the reference breaks the Proxy\n    // else we could do this\n    /*\n    if (state.length === 0) {\n      array[SOURCE] = adds;\n    } else {\n      array[SOURCE] = state.concat(adds);\n    }\n    */\n  }\n}\n\n/**\n * @module @ember-data/store\n */\n\nconst Touching = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('Touching', Symbol('touching'));\nconst RequestPromise = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_3__.getOrSetGlobal)('RequestPromise', Symbol('promise'));\nconst EMPTY_ARR = Object.freeze([]);\nfunction hasRecordIdentifier(op) {\n  return 'recordIdentifier' in op;\n}\n\n/**\n * The RequestStateService is used to track the state of requests\n * for fetching or updating known resource identifies that are inflight.\n *\n * @class RequestStateService\n * @public\n */\nclass RequestStateService {\n  constructor(store) {\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_pending\", new Map());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_done\", new Map());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_subscriptions\", new Map());\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_toFlush\", []);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_store\", void 0);\n    this._store = store;\n  }\n  _clearEntries(identifier) {\n    this._done.delete(identifier);\n  }\n  _enqueue(promise, queryRequest) {\n    const query = queryRequest.data[0];\n    if (hasRecordIdentifier(query)) {\n      const identifier = query.recordIdentifier;\n      const type = query.op === 'saveRecord' ? 'mutation' : 'query';\n      if (!this._pending.has(identifier)) {\n        this._pending.set(identifier, []);\n      }\n      const request = {\n        state: 'pending',\n        request: queryRequest,\n        type\n      };\n      request[Touching] = [query.recordIdentifier];\n      request[RequestPromise] = promise;\n      this._pending.get(identifier).push(request);\n      this._triggerSubscriptions(request);\n      return promise.then(result => {\n        this._dequeue(identifier, request);\n        const finalizedRequest = {\n          state: 'fulfilled',\n          request: queryRequest,\n          type,\n          response: {\n            data: result\n          }\n        };\n        finalizedRequest[Touching] = request[Touching];\n        this._addDone(finalizedRequest);\n        this._triggerSubscriptions(finalizedRequest);\n        return result;\n      }, error => {\n        this._dequeue(identifier, request);\n        const finalizedRequest = {\n          state: 'rejected',\n          request: queryRequest,\n          type,\n          response: {\n            data: error\n          }\n        };\n        finalizedRequest[Touching] = request[Touching];\n        this._addDone(finalizedRequest);\n        this._triggerSubscriptions(finalizedRequest);\n        throw error;\n      });\n    }\n    (test => {\n      {\n        throw new Error(`Expected a well formed  query`);\n      }\n    })();\n  }\n  _triggerSubscriptions(req) {\n    if (req.state === 'pending') {\n      this._flushRequest(req);\n      return;\n    }\n    this._toFlush.push(req);\n    if (this._toFlush.length === 1) {\n      this._store.notifications._onNextFlush(() => {\n        this._flush();\n      });\n    }\n  }\n  _flush() {\n    this._toFlush.forEach(req => {\n      this._flushRequest(req);\n    });\n    this._toFlush = [];\n  }\n  _flushRequest(req) {\n    req[Touching].forEach(identifier => {\n      const subscriptions = this._subscriptions.get(identifier);\n      if (subscriptions) {\n        subscriptions.forEach(callback => callback(req));\n      }\n    });\n  }\n  _dequeue(identifier, request) {\n    const pending = this._pending.get(identifier);\n    this._pending.set(identifier, pending.filter(req => req !== request));\n  }\n  _addDone(request) {\n    request[Touching].forEach(identifier => {\n      // TODO add support for multiple\n      const requestDataOp = request.request.data[0].op;\n      let requests = this._done.get(identifier);\n      if (requests) {\n        requests = requests.filter(req => {\n          // TODO add support for multiple\n          let data;\n          if (Array.isArray(req.request.data)) {\n            data = req.request.data[0];\n          } else {\n            data = req.request.data;\n          }\n          return data.op !== requestDataOp;\n        });\n      }\n      requests = requests || [];\n      requests.push(request);\n      this._done.set(identifier, requests);\n    });\n  }\n\n  /**\n   * Subscribe to requests for a given resource identity.\n   *\n   * The callback will receive the current state of the request.\n   *\n   * ```ts\n   * interface RequestState {\n   *   state: 'pending' | 'fulfilled' | 'rejected';\n   *   type: 'query' | 'mutation';\n   *   request: Request;\n   *   response?: { data: unknown };\n   * }\n   * ```\n   *\n   * Note: It should be considered dangerous to use this API for more than simple\n   * state derivation or debugging. The `request` and `response` properties are poorly\n   * spec'd and may change unexpectedly when shifting what Handlers are in use or how\n   * requests are issued from the Store.\n   *\n   * We expect to revisit this API in the near future as we continue to refine the\n   * RequestManager ergonomics, as a simpler but more powerful direct integration\n   * with the RequestManager for these purposes is likely to be a better long-term\n   * design.\n   *\n   * @method subscribeForRecord\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @param {(state: RequestState) => void} callback\n   */\n  subscribeForRecord(identifier, callback) {\n    let subscriptions = this._subscriptions.get(identifier);\n    if (!subscriptions) {\n      subscriptions = [];\n      this._subscriptions.set(identifier, subscriptions);\n    }\n    subscriptions.push(callback);\n  }\n\n  /**\n   * Retrieve all active requests for a given resource identity.\n   *\n   * @method getPendingRequestsForRecord\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {RequestState[]} an array of request states for any pending requests for the given identifier\n   */\n  getPendingRequestsForRecord(identifier) {\n    return this._pending.get(identifier) || EMPTY_ARR;\n  }\n\n  /**\n   * Retrieve the last completed request for a given resource identity.\n   *\n   * @method getLastRequestForRecord\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {RequestState | null} the state of the most recent request for the given identifier\n   */\n  getLastRequestForRecord(identifier) {\n    const requests = this._done.get(identifier);\n    if (requests) {\n      return requests[requests.length - 1];\n    }\n    return null;\n  }\n}\nfunction isNonEmptyString(str) {\n  return Boolean(str && typeof str === 'string');\n}\nfunction constructResource(type, id, lid) {\n  if (typeof type === 'object' && type !== null) {\n    const resource = type;\n    if (isStableIdentifier(resource)) {\n      return resource;\n    }\n    if ('id' in resource) {\n      resource.id = coerceId(resource.id);\n    }\n    (test => {\n      if (!test) {\n        throw new Error('Expected either id or lid to be a valid string');\n      }\n    })('id' in resource && isNonEmptyString(resource.id) || isNonEmptyString(resource.lid));\n    (test => {\n      if (!test) {\n        throw new Error('if id is present, the type must be a string');\n      }\n    })(!('id' in resource) || typeof resource.type === 'string');\n    return resource;\n  } else {\n    const trueId = coerceId(id);\n    if (!isNonEmptyString(trueId)) {\n      if (isNonEmptyString(lid)) {\n        return {\n          lid\n        };\n      }\n      throw new Error('Expected either id or lid to be a valid string');\n    }\n    (test => {\n      if (!test) {\n        throw new Error('type must be a string');\n      }\n    })(typeof type === 'string');\n    if (isNonEmptyString(lid)) {\n      return {\n        type,\n        id: trueId,\n        lid\n      };\n    }\n    return {\n      type,\n      id: trueId\n    };\n  }\n}\n\n/**\n  @module @ember-data/store\n */\n// this import location is deprecated but breaks in 4.8 and older\n\n// `AwaitedKeys` is needed here to resolve any promise types like `PromiseBelongsTo`.\n\n/**\n * Currently only records that extend object can be created via\n * store.createRecord. This is a limitation of the current API,\n * but can be worked around by creating a new identifier, running\n * the cache.clientDidCreate method, and then peeking the record\n * for the identifier.\n *\n * To assign primary key to a record during creation, only `id` will\n * work correctly for `store.createRecord`, other primary key may be\n * handled by updating the record after creation or using the flow\n * described above.\n *\n * TODO: These are limitations we want to (and can) address. If you\n * have need of lifting these limitations, please open an issue.\n *\n * @typedoc\n */\n\n/**\n * A Store coordinates interaction between your application, a [Cache](https://api.emberjs.com/ember-data/release/classes/%3CInterface%3E%20Cache),\n * and sources of data (such as your API or a local persistence layer)\n * accessed via a [RequestManager](https://github.com/emberjs/data/tree/main/packages/request).\n *\n * ```app/services/store.js\n * import Store from '@ember-data/store';\n *\n * export default class extends Store {}\n * ```\n *\n * Most Applications will only have a single `Store` configured as a Service\n * in this manner. However, setting up multiple stores is possible, including using\n * each as a unique service or within a specific context.\n *\n\n  @class Store\n  @public\n*/\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nconst EmptyClass = class {\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(args) {}\n};\nconst BaseClass = EmptyClass;\nif (BaseClass !== EmptyClass) {\n  ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`The Store class extending from EmberObject is deprecated.\nPlease remove usage of EmberObject APIs and mark your class as not requiring it.\n\nTo mark the class as no longer extending from EmberObject, in ember-cli-build.js\nset the following config:\n\n\\`\\`\\`js\nconst app = new EmberApp(defaults, {\n  emberData: {\n    deprecations: {\n      DEPRECATE_STORE_EXTENDS_EMBER_OBJECT: false\n    }\n  }\n});\n\\`\\`\\`\n`, false, {\n    id: 'ember-data:deprecate-store-extends-ember-object',\n    until: '6.0',\n    for: 'ember-data',\n    since: {\n      available: '5.4',\n      enabled: '5.4'\n    }\n  }));\n}\nclass Store extends BaseClass {\n  /**\n   * Provides access to the NotificationManager associated\n   * with this Store instance.\n   *\n   * The NotificationManager can be used to subscribe to\n   * changes to the cache.\n   *\n   * @property {NotificationManager} notifications\n   * @public\n   */\n\n  /**\n   * Provides access to the SchemaService instance\n   * for this Store instance.\n   *\n   * The SchemaService can be used to query for\n   * information about the schema of a resource.\n   *\n   * @property {SchemaService} schema\n   * @public\n   */\n  get schema() {\n    if (!this._schema) {\n      this._schema = this.createSchemaService();\n    }\n    return this._schema;\n  }\n\n  /**\n   * Provides access to the IdentifierCache instance\n   * for this store.\n   *\n   * The IdentifierCache can be used to generate or\n   * retrieve a stable unique identifier for any resource.\n   *\n   * @property {IdentifierCache} identifierCache\n   * @public\n   */\n\n  /**\n   * Provides access to the requestManager instance associated\n   * with this Store instance.\n   *\n   * When using `ember-data` this property is automatically\n   * set to an instance of `RequestManager`. When not using `ember-data`\n   * you must configure this property yourself, either by declaring\n   * it as a service or by initializing it.\n   *\n   * ```ts\n   * import Store, { CacheHandler } from '@ember-data/store';\n   * import RequestManager from '@ember-data/request';\n   * import Fetch from '@ember-data/request/fetch';\n   *\n   * class extends Store {\n   *   constructor() {\n   *     super(...arguments);\n   *     this.requestManager = new RequestManager();\n   *     this.requestManager.use([Fetch]);\n   *     this.requestManager.useCache(CacheHandler);\n   *   }\n   * }\n   * ```\n   *\n   * @public\n   * @property {RequestManager} requestManager\n   */\n\n  /**\n   * A Property which an App may set to provide a CachePolicy\n   * to control when a cached request becomes stale.\n   *\n   * Note, when defined, these methods will only be invoked if a\n   * cache key exists for the request, either because the request\n   * contains `cacheOptions.key` or because the [IdentifierCache](/ember-data/release/classes/IdentifierCache)\n   * was able to generate a key for the request using the configured\n   * [generation method](/ember-data/release/functions/@ember-data%2Fstore/setIdentifierGenerationMethod).\n   *\n   * `isSoftExpired` will only be invoked if `isHardExpired` returns `false`.\n   *\n   * ```ts\n   * store.lifetimes = {\n   *   // make the request and ignore the current cache state\n   *   isHardExpired(identifier: StableDocumentIdentifier): boolean {\n   *     return false;\n   *   }\n   *\n   *   // make the request in the background if true, return cache state\n   *   isSoftExpired(identifier: StableDocumentIdentifier): boolean {\n   *     return false;\n   *   }\n   * }\n   * ```\n   *\n   * @public\n   * @property {CachePolicy|undefined} lifetimes\n   */\n\n  // Private\n\n  // DEBUG-only properties\n\n  get isDestroying() {\n    return this._isDestroying;\n  }\n  set isDestroying(value) {\n    this._isDestroying = value;\n  }\n  get isDestroyed() {\n    return this._isDestroyed;\n  }\n  set isDestroyed(value) {\n    this._isDestroyed = value;\n  }\n\n  /**\n    @method init\n    @private\n  */\n  constructor(createArgs) {\n    super(createArgs);\n    Object.assign(this, createArgs);\n    this.identifierCache = new IdentifierCache();\n    this.notifications = new NotificationManager(this);\n\n    // private but maybe useful to be here, somewhat intimate\n    this.recordArrayManager = new RecordArrayManager({\n      store: this\n    });\n\n    // private\n    this._requestCache = new RequestStateService(this);\n    this._instanceCache = new InstanceCache(this);\n    this._documentCache = new Map();\n    this.isDestroying = false;\n    this.isDestroyed = false;\n  }\n  _run(cb) {\n    (test => {\n      if (!test) {\n        throw new Error(`EmberData should never encounter a nested run`);\n      }\n    })(!this._cbs);\n    const _cbs = this._cbs = {};\n    {\n      try {\n        cb();\n        if (_cbs.coalesce) {\n          _cbs.coalesce();\n        }\n        if (_cbs.sync) {\n          _cbs.sync();\n        }\n        if (_cbs.notify) {\n          _cbs.notify();\n        }\n      } finally {\n        this._cbs = null;\n      }\n    }\n  }\n  _join(cb) {\n    if (this._cbs) {\n      cb();\n    } else {\n      this._run(cb);\n    }\n  }\n  _schedule(name, cb) {\n    (test => {\n      if (!test) {\n        throw new Error(`EmberData expects to schedule only when there is an active run`);\n      }\n    })(!!this._cbs);\n    (test => {\n      if (!test) {\n        throw new Error(`EmberData expects only one flush per queue name, cannot schedule ${name}`);\n      }\n    })(!this._cbs[name]);\n    this._cbs[name] = cb;\n  }\n\n  /**\n   * Retrieve the RequestStateService instance\n   * associated with this Store.\n   *\n   * This can be used to query the status of requests\n   * that have been initiated for a given identifier.\n   *\n   * @method getRequestStateService\n   * @return {RequestStateService}\n   * @public\n   */\n  getRequestStateService() {\n    return this._requestCache;\n  }\n  _getAllPending() {\n    {\n      const all = [];\n      const pending = this._requestCache._pending;\n      pending.forEach(requests => {\n        all.push(...requests.map(v => v[RequestPromise]));\n      });\n      this.requestManager._pending.forEach(v => all.push(v));\n      const promise = Promise.allSettled(all);\n      promise.length = all.length;\n      return promise;\n    }\n  }\n\n  /**\n   * Issue a request via the configured RequestManager,\n   * inserting the response into the cache and handing\n   * back a Future which resolves to a ResponseDocument\n   *\n   * ## Cache Keys\n   *\n   * Only GET requests with a url or requests with an explicit\n   * cache key (`cacheOptions.key`) will have the request result\n   * and document cached.\n   *\n   * The cache key used is `requestConfig.cacheOptions.key`\n   * if present, falling back to `requestConfig.url`.\n   *\n   * Params are not serialized as part of the cache-key, so\n   * either ensure they are already in the url or utilize\n   * `requestConfig.cacheOptions.key`. For queries issued\n   * via the `POST` method `requestConfig.cacheOptions.key`\n   * MUST be supplied for the document to be cached.\n   *\n   * ## Requesting Without a Cache Key\n   *\n   * Resource data within the request is always updated in the cache,\n   * regardless of whether a cache key is present for the request.\n   *\n   * ## Fulfilling From Cache\n   *\n   * When a cache-key is determined, the request may fulfill\n   * from cache provided the cache is not stale.\n   *\n   * Cache staleness is determined by the configured CachePolicy\n   * with priority given to the `cacheOptions.reload` and\n   * `cacheOptions.backgroundReload` on the request if present.\n   *\n   * If the cache data has soft expired or the request asks for a background\n   * reload, the request will fulfill from cache if possible and\n   * make a non-blocking request in the background to update the cache.\n   *\n   * If the cache data has hard expired or the request asks for a reload,\n   * the request will not fulfill from cache and will make a blocking\n   * request to update the cache.\n   *\n   * ## The Response\n   *\n   * The primary difference between `requestManager.request` and `store.request`\n   * is that `store.request` will attempt to hydrate the response content into\n   * a response Document containing RecordInstances.\n   *\n   * @method request\n   * @param {StoreRequestInput} requestConfig\n   * @return {Future}\n   * @public\n   */\n  request(requestConfig) {\n    // we lazily set the cache handler when we issue the first request\n    // because constructor doesn't allow for this to run after\n    // the user has had the chance to set the prop.\n    const opts = {\n      store: this,\n      [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.EnableHydration]: true\n    };\n    if (requestConfig.records) {\n      const identifierCache = this.identifierCache;\n      opts.records = requestConfig.records.map(r => identifierCache.getOrCreateRecordIdentifier(r));\n    }\n    {\n      if (this.DISABLE_WAITER) {\n        opts.disableTestWaiter = typeof requestConfig.disableTestWaiter === 'boolean' ? requestConfig.disableTestWaiter : true;\n      }\n    }\n    const request = Object.assign({}, requestConfig, opts);\n    const future = this.requestManager.request(request);\n    future.onFinalize(() => {\n      // skip flush for legacy belongsTo\n      if (requestConfig.op === 'findBelongsTo' && !requestConfig.url) {\n        return;\n      }\n      this.notifications._flush();\n    });\n    return future;\n  }\n\n  /**\n   * A hook which an app or addon may implement. Called when\n   * the Store is attempting to create a Record Instance for\n   * a resource.\n   *\n   * This hook can be used to select or instantiate any desired\n   * mechanism of presenting cache data to the ui for access\n   * mutation, and interaction.\n   *\n   * @method instantiateRecord (hook)\n   * @param identifier\n   * @param createRecordArgs\n   * @param recordDataFor deprecated use this.cache\n   * @param notificationManager deprecated use this.notifications\n   * @return A record instance\n   * @public\n   */\n\n  /**\n   * A hook which an app or addon may implement. Called when\n   * the Store is destroying a Record Instance. This hook should\n   * be used to teardown any custom record instances instantiated\n   * with `instantiateRecord`.\n   *\n   * @method teardownRecord (hook)\n   * @public\n   * @param record\n   */\n\n  /**\n    Returns the schema for a particular resource type (modelName).\n     When used with Model from @ember-data/model the return is the model class,\n    but this is not guaranteed.\n     If looking to query attribute or relationship information it is\n    recommended to use `getSchemaDefinitionService` instead. This method\n    should be considered legacy and exists primarily to continue to support\n    Adapter/Serializer APIs which expect it's return value in their method\n    signatures.\n     The class of a model might be useful if you want to get a list of all the\n    relationship names of the model, see\n    [`relationshipNames`](/ember-data/release/classes/Model?anchor=relationshipNames)\n    for example.\n     @method modelFor\n    @public\n    @deprecated\n    @param {string} type\n    @return {ModelSchema}\n    */\n\n  modelFor(type) {\n    // FIXME add deprecation and deprecation stripping\n    // FIXME/TODO update RFC to remove this method\n    {\n      assertDestroyedStoreOnly(this, 'modelFor');\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`You need to pass <type> to the store's modelFor method`);\n      }\n    })(typeof type === 'string' && type.length);\n    (test => {\n      if (!test) {\n        throw new Error(`No model was found for '${type}' and no schema handles the type`);\n      }\n    })(this.schema.hasResource({\n      type\n    }));\n    return getShimClass(this, type);\n  }\n\n  /**\n    Create a new record in the current store. The properties passed\n    to this method are set on the newly created record.\n     To create a new instance of a `Post`:\n     ```js\n    store.createRecord('post', {\n      title: 'Ember is awesome!'\n    });\n    ```\n     To create a new instance of a `Post` that has a relationship with a `User` record:\n     ```js\n    let user = this.store.peekRecord('user', '1');\n    store.createRecord('post', {\n      title: 'Ember is awesome!',\n      user: user\n    });\n    ```\n     @method createRecord\n    @public\n    @param {String} type the name of the resource\n    @param {Object} inputProperties a hash of properties to set on the\n      newly created record.\n    @return {Model} record\n  */\n\n  createRecord(type, inputProperties) {\n    {\n      assertDestroyingStore(this, 'createRecord');\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`You need to pass a model name to the store's createRecord method`);\n      }\n    })(type);\n    (test => {\n      if (!test) {\n        throw new Error(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${type}`);\n      }\n    })(typeof type === 'string');\n\n    // This is wrapped in a `run.join` so that in test environments users do not need to manually wrap\n    //   calls to `createRecord`. The run loop usage here is because we batch the joining and updating\n    //   of record-arrays via ember's run loop, not our own.\n    //\n    //   to remove this, we would need to move to a new `async` API.\n    let record;\n    this._join(() => {\n      const normalizedModelName = normalizeModelName(type);\n      const properties = {\n        ...inputProperties\n      };\n\n      // If the passed properties do not include a primary key,\n      // give the adapter an opportunity to generate one. Typically,\n      // client-side ID generators will use something like uuid.js\n      // to avoid conflicts.\n      let id = null;\n      if (properties.id === null || properties.id === undefined) {\n        const adapter = this.adapterFor?.(normalizedModelName, true);\n        if (adapter && adapter.generateIdForRecord) {\n          id = properties.id = coerceId(adapter.generateIdForRecord(this, normalizedModelName, properties));\n        } else {\n          id = properties.id = null;\n        }\n      } else {\n        id = properties.id = coerceId(properties.id);\n      }\n      const resource = {\n        type: normalizedModelName,\n        id\n      };\n      if (resource.id) {\n        const identifier = this.identifierCache.peekRecordIdentifier(resource);\n        (test => {\n          if (!test) {\n            throw new Error(`The id ${String(properties.id)} has already been used with another '${normalizedModelName}' record.`);\n          }\n        })(!identifier);\n      }\n      const identifier = this.identifierCache.createIdentifierForNewRecord(resource);\n      const cache = this.cache;\n      const createOptions = normalizeProperties(this, identifier, properties);\n      const resultProps = cache.clientDidCreate(identifier, createOptions);\n      record = this._instanceCache.getRecord(identifier, resultProps);\n    });\n    return record;\n  }\n\n  /**\n    For symmetry, a record can be deleted via the store.\n     Example\n     ```javascript\n    let post = store.createRecord('post', {\n      title: 'Ember is awesome!'\n    });\n     store.deleteRecord(post);\n    ```\n     @method deleteRecord\n    @public\n    @param {unknown} record\n  */\n  deleteRecord(record) {\n    {\n      assertDestroyingStore(this, 'deleteRecord');\n    }\n    const identifier = peekRecordIdentifier(record);\n    const cache = this.cache;\n    (test => {\n      if (!test) {\n        throw new Error(`expected the record to be connected to a cache`);\n      }\n    })(identifier);\n    this._join(() => {\n      cache.setIsDeleted(identifier, true);\n      if (cache.isNew(identifier)) {\n        this._instanceCache.unloadRecord(identifier);\n      }\n    });\n  }\n\n  /**\n    For symmetry, a record can be unloaded via the store.\n    This will cause the record to be destroyed and freed up for garbage collection.\n     Example\n     ```javascript\n    store.findRecord('post', '1').then(function(post) {\n      store.unloadRecord(post);\n    });\n    ```\n     @method unloadRecord\n    @public\n    @param {Model} record\n  */\n  unloadRecord(record) {\n    {\n      assertDestroyingStore(this, 'unloadRecord');\n    }\n    const identifier = peekRecordIdentifier(record);\n    if (identifier) {\n      this._instanceCache.unloadRecord(identifier);\n    }\n  }\n\n  /**\n    This method returns a record for a given identifier or type and id combination.\n     The `findRecord` method will always resolve its promise with the same\n    object for a given identifier or type and `id`.\n     The `findRecord` method will always return a **promise** that will be\n    resolved with the record.\n     **Example 1**\n     ```app/routes/post.js\n    export default class PostRoute extends Route {\n      model({ post_id }) {\n        return this.store.findRecord('post', post_id);\n      }\n    }\n    ```\n     **Example 2**\n     `findRecord` can be called with a single identifier argument instead of the combination\n    of `type` (modelName) and `id` as separate arguments. You may recognize this combo as\n    the typical pairing from [JSON:API](https://jsonapi.org/format/#document-resource-object-identification)\n     ```app/routes/post.js\n    export default class PostRoute extends Route {\n      model({ post_id: id }) {\n        return this.store.findRecord({ type: 'post', id });\n      }\n    }\n    ```\n     **Example 3**\n     If you have previously received an lid via an Identifier for this record, and the record\n    has already been assigned an id, you can find the record again using just the lid.\n     ```app/routes/post.js\n    store.findRecord({ lid });\n    ```\n     If the record is not yet available, the store will ask the adapter's `findRecord`\n    method to retrieve and supply the necessary data. If the record is already present\n    in the store, it depends on the reload behavior _when_ the returned promise\n    resolves.\n     ### Preloading\n     You can optionally `preload` specific attributes and relationships that you know of\n    by passing them via the passed `options`.\n     For example, if your Ember route looks like `/posts/1/comments/2` and your API route\n    for the comment also looks like `/posts/1/comments/2` if you want to fetch the comment\n    without also fetching the post you can pass in the post to the `findRecord` call:\n     ```app/routes/post-comments.js\n    export default class PostRoute extends Route {\n      model({ post_id, comment_id: id }) {\n        return this.store.findRecord({ type: 'comment', id, { preload: { post: post_id }} });\n      }\n    }\n    ```\n     In your adapter you can then access this id without triggering a network request via the\n    snapshot:\n     ```app/adapters/application.js\n    export default class Adapter {\n       findRecord(store, schema, id, snapshot) {\n        let type = schema.modelName;\n         if (type === 'comment')\n          let postId = snapshot.belongsTo('post', { id: true });\n           return fetch(`./posts/${postId}/comments/${id}`)\n            .then(response => response.json())\n        }\n      }\n       static create() {\n        return new this();\n      }\n    }\n    ```\n     This could also be achieved by supplying the post id to the adapter via the adapterOptions\n    property on the options hash.\n     ```app/routes/post-comments.js\n    export default class PostRoute extends Route {\n      model({ post_id, comment_id: id }) {\n        return this.store.findRecord({ type: 'comment', id, { adapterOptions: { post: post_id }} });\n      }\n    }\n    ```\n     ```app/adapters/application.js\n    export default class Adapter {\n      findRecord(store, schema, id, snapshot) {\n        let type = schema.modelName;\n         if (type === 'comment')\n          let postId = snapshot.adapterOptions.post;\n           return fetch(`./posts/${postId}/comments/${id}`)\n            .then(response => response.json())\n        }\n      }\n       static create() {\n        return new this();\n      }\n    }\n    ```\n     If you have access to the post model you can also pass the model itself to preload:\n     ```javascript\n    let post = await store.findRecord('post', '1');\n    let comment = await store.findRecord('comment', '2', { post: myPostModel });\n    ```\n     ### Reloading\n     The reload behavior is configured either via the passed `options` hash or\n    the result of the adapter's `shouldReloadRecord`.\n     If `{ reload: true }` is passed or `adapter.shouldReloadRecord` evaluates\n    to `true`, then the returned promise resolves once the adapter returns\n    data, regardless if the requested record is already in the store:\n     ```js\n    store.push({\n      data: {\n        id: 1,\n        type: 'post',\n        revision: 1\n      }\n    });\n     // adapter#findRecord resolves with\n    // [\n    //   {\n    //     id: 1,\n    //     type: 'post',\n    //     revision: 2\n    //   }\n    // ]\n    store.findRecord('post', '1', { reload: true }).then(function(post) {\n      post.revision; // 2\n    });\n    ```\n     If no reload is indicated via the above mentioned ways, then the promise\n    immediately resolves with the cached version in the store.\n     ### Background Reloading\n     Optionally, if `adapter.shouldBackgroundReloadRecord` evaluates to `true`,\n    then a background reload is started, which updates the records' data, once\n    it is available:\n     ```js\n    // app/adapters/post.js\n    import ApplicationAdapter from \"./application\";\n     export default class PostAdapter extends ApplicationAdapter {\n      shouldReloadRecord(store, snapshot) {\n        return false;\n      },\n       shouldBackgroundReloadRecord(store, snapshot) {\n        return true;\n      }\n    });\n     // ...\n     store.push({\n      data: {\n        id: 1,\n        type: 'post',\n        revision: 1\n      }\n    });\n     let blogPost = store.findRecord('post', '1').then(function(post) {\n      post.revision; // 1\n    });\n     // later, once adapter#findRecord resolved with\n    // [\n    //   {\n    //     id: 1,\n    //     type: 'post',\n    //     revision: 2\n    //   }\n    // ]\n     blogPost.revision; // 2\n    ```\n     If you would like to force or prevent background reloading, you can set a\n    boolean value for `backgroundReload` in the options object for\n    `findRecord`.\n     ```app/routes/post/edit.js\n    export default class PostEditRoute extends Route {\n      model(params) {\n        return this.store.findRecord('post', params.post_id, { backgroundReload: false });\n      }\n    }\n    ```\n     If you pass an object on the `adapterOptions` property of the options\n    argument it will be passed to your adapter via the snapshot\n     ```app/routes/post/edit.js\n    export default class PostEditRoute extends Route {\n      model(params) {\n        return this.store.findRecord('post', params.post_id, {\n          adapterOptions: { subscribe: false }\n        });\n      }\n    }\n    ```\n     ```app/adapters/post.js\n    import MyCustomAdapter from './custom-adapter';\n     export default class PostAdapter extends MyCustomAdapter {\n      findRecord(store, type, id, snapshot) {\n        if (snapshot.adapterOptions.subscribe) {\n          // ...\n        }\n        // ...\n      }\n    }\n    ```\n     See [peekRecord](../methods/peekRecord?anchor=peekRecord) to get the cached version of a record.\n     ### Retrieving Related Model Records\n     If you use an adapter such as Ember's default\n    [`JSONAPIAdapter`](/ember-data/release/classes/JSONAPIAdapter)\n    that supports the [JSON API specification](http://jsonapi.org/) and if your server\n    endpoint supports the use of an\n    ['include' query parameter](http://jsonapi.org/format/#fetching-includes),\n    you can use `findRecord()` or `findAll()` to automatically retrieve additional records related to\n    the one you request by supplying an `include` parameter in the `options` object.\n     For example, given a `post` model that has a `hasMany` relationship with a `comment`\n    model, when we retrieve a specific post we can have the server also return that post's\n    comments in the same request:\n     ```app/routes/post.js\n    export default class PostRoute extends Route {\n      model(params) {\n        return this.store.findRecord('post', params.post_id, { include: 'comments' });\n      }\n    }\n    ```\n     ```app/adapters/application.js\n    export default class Adapter {\n      findRecord(store, schema, id, snapshot) {\n        let type = schema.modelName;\n         if (type === 'post')\n          let includes = snapshot.adapterOptions.include;\n           return fetch(`./posts/${postId}?include=${includes}`)\n            .then(response => response.json())\n        }\n      }\n       static create() {\n        return new this();\n      }\n    }\n    ```\n     In this case, the post's comments would then be available in your template as\n    `model.comments`.\n     Multiple relationships can be requested using an `include` parameter consisting of a\n    comma-separated list (without white-space) while nested relationships can be specified\n    using a dot-separated sequence of relationship names. So to request both the post's\n    comments and the authors of those comments the request would look like this:\n     ```app/routes/post.js\n    export default class PostRoute extends Route {\n      model(params) {\n        return this.store.findRecord('post', params.post_id, { include: 'comments,comments.author' });\n      }\n    }\n    ```\n     ### Retrieving Specific Fields by Type\n     If your server endpoint supports the use of a ['fields' query parameter](https://jsonapi.org/format/#fetching-sparse-fieldsets),\n    you can use pass those fields through to your server.  At this point in time, this requires a few manual steps on your part.\n     1. Implement `buildQuery` in your adapter.\n     ```app/adapters/application.js\n    buildQuery(snapshot) {\n      let query = super.buildQuery(...arguments);\n       let { fields } = snapshot.adapterOptions;\n       if (fields) {\n        query.fields = fields;\n      }\n       return query;\n    }\n    ```\n     2. Then pass through the applicable fields to your `findRecord` request.\n     Given a `post` model with attributes body, title, publishDate and meta, you can retrieve a filtered list of attributes.\n     ```app/routes/post.js\n    export default class extends Route {\n      model(params) {\n        return this.store.findRecord('post', params.post_id, { adapterOptions: { fields: { post: 'body,title' } });\n      }\n    }\n    ```\n     Moreover, you can filter attributes on related models as well. If a `post` has a `belongsTo` relationship to a user,\n    just include the relationship key and attributes.\n     ```app/routes/post.js\n    export default class extends Route {\n      model(params) {\n        return this.store.findRecord('post', params.post_id, { adapterOptions: { fields: { post: 'body,title', user: 'name,email' } });\n      }\n    }\n    ```\n     @since 1.13.0\n    @method findRecord\n    @public\n    @param {String|object} type - either a string representing the name of the resource or a ResourceIdentifier object containing both the type (a string) and the id (a string) for the record or an lid (a string) of an existing record\n    @param {(String|Integer|Object)} id - optional object with options for the request only if the first param is a ResourceIdentifier, else the string id of the record to be retrieved\n    @param {Object} [options] - if the first param is a string this will be the optional options for the request. See examples for available options.\n    @return {Promise} promise\n  */\n\n  findRecord(resource, id, options) {\n    {\n      assertDestroyingStore(this, 'findRecord');\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`You need to pass a modelName or resource identifier as the first argument to the store's findRecord method`);\n      }\n    })(resource);\n    if (isMaybeIdentifier(resource)) {\n      options = id;\n    } else {\n      (test => {\n        if (!test) {\n          throw new Error(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${resource}`);\n        }\n      })(typeof resource === 'string');\n      const type = normalizeModelName(resource);\n      const normalizedId = ensureStringId(id);\n      resource = constructResource(type, normalizedId);\n    }\n    const identifier = this.identifierCache.getOrCreateRecordIdentifier(resource);\n    options = options || {};\n    if (options.preload) {\n      // force reload if we preload to ensure we don't resolve the promise\n      // until we are complete, else we will end up background-reloading\n      // even for initial load.\n      if (!this._instanceCache.recordIsLoaded(identifier)) {\n        options.reload = true;\n      }\n      this._join(() => {\n        preloadData(this, identifier, options.preload);\n      });\n    }\n    const promise = this.request({\n      op: 'findRecord',\n      data: {\n        record: identifier,\n        options\n      },\n      cacheOptions: {\n        [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]: true\n      }\n    });\n    return promise.then(document => {\n      return document.content;\n    });\n  }\n\n  /**\n    Get the reference for the specified record.\n     Example\n     ```javascript\n    let userRef = store.getReference('user', '1');\n     // check if the user is loaded\n    let isLoaded = userRef.value() !== null;\n     // get the record of the reference (null if not yet available)\n    let user = userRef.value();\n     // get the identifier of the reference\n    if (userRef.remoteType() === 'id') {\n    let id = userRef.id();\n    }\n     // load user (via store.find)\n    userRef.load().then(...)\n     // or trigger a reload\n    userRef.reload().then(...)\n     // provide data for reference\n    userRef.push({ id: 1, username: '@user' }).then(function(user) {\n      userRef.value() === user;\n    });\n    ```\n     @method getReference\n    @public\n    @param {String|object} resource - modelName (string) or Identifier (object)\n    @param {String|Integer} id\n    @since 2.5.0\n    @return {RecordReference}\n  */\n  // TODO @deprecate getReference (and references generally)\n  getReference(resource, id) {\n    {\n      assertDestroyingStore(this, 'getReference');\n    }\n    let resourceIdentifier;\n    if (arguments.length === 1 && isMaybeIdentifier(resource)) {\n      resourceIdentifier = resource;\n    } else {\n      const type = normalizeModelName(resource);\n      const normalizedId = ensureStringId(id);\n      resourceIdentifier = constructResource(type, normalizedId);\n    }\n    (test => {\n      if (!test) {\n        throw new Error('getReference expected to receive either a resource identifier or type and id as arguments');\n      }\n    })(isMaybeIdentifier(resourceIdentifier));\n    const identifier = this.identifierCache.getOrCreateRecordIdentifier(resourceIdentifier);\n    return this._instanceCache.getReference(identifier);\n  }\n\n  /**\n    Get a record by a given type and ID without triggering a fetch.\n     This method will synchronously return the record if it is available in the store,\n    otherwise it will return `null`. A record is available if it has been fetched earlier, or\n    pushed manually into the store.\n     See [findRecord](../methods/findRecord?anchor=findRecord) if you would like to request this record from the backend.\n     _Note: This is a synchronous method and does not return a promise._\n     **Example 1**\n     ```js\n    let post = store.peekRecord('post', '1');\n     post.id; // '1'\n    ```\n     `peekRecord` can be called with a single identifier argument instead of the combination\n    of `type` (modelName) and `id` as separate arguments. You may recognize this combo as\n    the typical pairing from [JSON:API](https://jsonapi.org/format/#document-resource-object-identification)\n     **Example 2**\n     ```js\n    let post = store.peekRecord({ type: 'post', id });\n    post.id; // '1'\n    ```\n     If you have previously received an lid from an Identifier for this record, you can lookup the record again using\n    just the lid.\n     **Example 3**\n     ```js\n    let post = store.peekRecord({ lid });\n    post.id; // '1'\n    ```\n      @since 1.13.0\n    @method peekRecord\n    @public\n    @param {String|object} modelName - either a string representing the modelName or a ResourceIdentifier object containing both the type (a string) and the id (a string) for the record or an lid (a string) of an existing record\n    @param {String|Integer} id - optional only if the first param is a ResourceIdentifier, else the string id of the record to be retrieved.\n    @return {Model|null} record\n  */\n\n  peekRecord(identifier, id) {\n    if (arguments.length === 1 && isMaybeIdentifier(identifier)) {\n      const stableIdentifier = this.identifierCache.peekRecordIdentifier(identifier);\n      const isLoaded = stableIdentifier && this._instanceCache.recordIsLoaded(stableIdentifier);\n      // TODO come up with a better mechanism for determining if we have data and could peek.\n      // this is basically an \"are we not empty\" query.\n      return isLoaded ? this._instanceCache.getRecord(stableIdentifier) : null;\n    }\n    {\n      assertDestroyingStore(this, 'peekRecord');\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`You need to pass a model name to the store's peekRecord method`);\n      }\n    })(identifier);\n    (test => {\n      if (!test) {\n        throw new Error(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${String(identifier)}`);\n      }\n    })(typeof identifier === 'string');\n    const type = normalizeModelName(identifier);\n    const normalizedId = ensureStringId(id);\n    const resource = {\n      type,\n      id: normalizedId\n    };\n    const stableIdentifier = this.identifierCache.peekRecordIdentifier(resource);\n    const isLoaded = stableIdentifier && this._instanceCache.recordIsLoaded(stableIdentifier);\n    return isLoaded ? this._instanceCache.getRecord(stableIdentifier) : null;\n  }\n\n  /**\n    This method delegates a query to the adapter. This is the one place where\n    adapter-level semantics are exposed to the application.\n     Each time this method is called a new request is made through the adapter.\n     Exposing queries this way seems preferable to creating an abstract query\n    language for all server-side queries, and then require all adapters to\n    implement them.\n     ---\n     If you do something like this:\n     ```javascript\n    store.query('person', { page: 1 });\n    ```\n     The request made to the server will look something like this:\n     ```\n    GET \"/api/v1/person?page=1\"\n    ```\n     ---\n     If you do something like this:\n     ```javascript\n    store.query('person', { ids: ['1', '2', '3'] });\n    ```\n     The request made to the server will look something like this:\n     ```\n    GET \"/api/v1/person?ids%5B%5D=1&ids%5B%5D=2&ids%5B%5D=3\"\n    decoded: \"/api/v1/person?ids[]=1&ids[]=2&ids[]=3\"\n    ```\n     This method returns a promise, which is resolved with a\n    [`Collection`](/ember-data/release/classes/Collection)\n    once the server returns.\n     @since 1.13.0\n    @method query\n    @public\n    @param {String} type the name of the resource\n    @param {object} query a query to be used by the adapter\n    @param {Object} options optional, may include `adapterOptions` hash which will be passed to adapter.query\n    @return {Promise} promise\n  */\n\n  query(type, query, options = {}) {\n    {\n      assertDestroyingStore(this, 'query');\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`You need to pass a model name to the store's query method`);\n      }\n    })(type);\n    (test => {\n      if (!test) {\n        throw new Error(`You need to pass a query hash to the store's query method`);\n      }\n    })(query);\n    (test => {\n      if (!test) {\n        throw new Error(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${type}`);\n      }\n    })(typeof type === 'string');\n    const promise = this.request({\n      op: 'query',\n      data: {\n        type: normalizeModelName(type),\n        query,\n        options: options\n      },\n      cacheOptions: {\n        [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]: true\n      }\n    });\n    return promise.then(document => document.content);\n  }\n\n  /**\n    This method makes a request for one record, where the `id` is not known\n    beforehand (if the `id` is known, use [`findRecord`](../methods/findRecord?anchor=findRecord)\n    instead).\n     This method can be used when it is certain that the server will return a\n    single object for the primary data.\n     Each time this method is called a new request is made through the adapter.\n     Let's assume our API provides an endpoint for the currently logged in user\n    via:\n     ```\n    // GET /api/current_user\n    {\n      user: {\n        id: 1234,\n        username: 'admin'\n      }\n    }\n    ```\n     Since the specific `id` of the `user` is not known beforehand, we can use\n    `queryRecord` to get the user:\n     ```javascript\n    store.queryRecord('user', {}).then(function(user) {\n      let username = user.username;\n      // do thing\n    });\n    ```\n     The request is made through the adapters' `queryRecord`:\n     ```app/adapters/user.js\n    import Adapter from '@ember-data/adapter';\n    import $ from 'jquery';\n     export default class UserAdapter extends Adapter {\n      queryRecord(modelName, query) {\n        return $.getJSON('/api/current_user');\n      }\n    }\n    ```\n     Note: the primary use case for `store.queryRecord` is when a single record\n    is queried and the `id` is not known beforehand. In all other cases\n    `store.query` and using the first item of the array is likely the preferred\n    way:\n     ```\n    // GET /users?username=unique\n    {\n      data: [{\n        id: 1234,\n        type: 'user',\n        attributes: {\n          username: \"unique\"\n        }\n      }]\n    }\n    ```\n     ```javascript\n    store.query('user', { username: 'unique' }).then(function(users) {\n      return users.firstObject;\n    }).then(function(user) {\n      let id = user.id;\n    });\n    ```\n     This method returns a promise, which resolves with the found record.\n     If the adapter returns no data for the primary data of the payload, then\n    `queryRecord` resolves with `null`:\n     ```\n    // GET /users?username=unique\n    {\n      data: null\n    }\n    ```\n     ```javascript\n    store.queryRecord('user', { username: 'unique' }).then(function(user) {\n       // user is null\n    });\n    ```\n     @since 1.13.0\n    @method queryRecord\n    @public\n    @param {string} type\n    @param {object} query an opaque query to be used by the adapter\n    @param {object} options optional, may include `adapterOptions` hash which will be passed to adapter.queryRecord\n    @return {Promise} promise which resolves with the found record or `null`\n  */\n\n  queryRecord(type, query, options) {\n    {\n      assertDestroyingStore(this, 'queryRecord');\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`You need to pass a model name to the store's queryRecord method`);\n      }\n    })(type);\n    (test => {\n      if (!test) {\n        throw new Error(`You need to pass a query hash to the store's queryRecord method`);\n      }\n    })(query);\n    (test => {\n      if (!test) {\n        throw new Error(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${type}`);\n      }\n    })(typeof type === 'string');\n    const promise = this.request({\n      op: 'queryRecord',\n      data: {\n        type: normalizeModelName(type),\n        query,\n        options: options || {}\n      },\n      cacheOptions: {\n        [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]: true\n      }\n    });\n    return promise.then(document => document.content);\n  }\n\n  /**\n    `findAll` asks the adapter's `findAll` method to find the records for the\n    given type, and returns a promise which will resolve with all records of\n    this type present in the store, even if the adapter only returns a subset\n    of them.\n     ```app/routes/authors.js\n    export default class AuthorsRoute extends Route {\n      model(params) {\n        return this.store.findAll('author');\n      }\n    }\n    ```\n     _When_ the returned promise resolves depends on the reload behavior,\n    configured via the passed `options` hash and the result of the adapter's\n    `shouldReloadAll` method.\n     ### Reloading\n     If `{ reload: true }` is passed or `adapter.shouldReloadAll` evaluates to\n    `true`, then the returned promise resolves once the adapter returns data,\n    regardless if there are already records in the store:\n     ```js\n    store.push({\n      data: {\n        id: 'first',\n        type: 'author'\n      }\n    });\n     // adapter#findAll resolves with\n    // [\n    //   {\n    //     id: 'second',\n    //     type: 'author'\n    //   }\n    // ]\n    store.findAll('author', { reload: true }).then(function(authors) {\n      authors.getEach('id'); // ['first', 'second']\n    });\n    ```\n     If no reload is indicated via the above mentioned ways, then the promise\n    immediately resolves with all the records currently loaded in the store.\n     ### Background Reloading\n     Optionally, if `adapter.shouldBackgroundReloadAll` evaluates to `true`,\n    then a background reload is started. Once this resolves, the array with\n    which the promise resolves, is updated automatically so it contains all the\n    records in the store:\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n     export default class ApplicationAdapter extends Adapter {\n      shouldReloadAll(store, snapshotsArray) {\n        return false;\n      },\n       shouldBackgroundReloadAll(store, snapshotsArray) {\n        return true;\n      }\n    });\n     // ...\n     store.push({\n      data: {\n        id: 'first',\n        type: 'author'\n      }\n    });\n     let allAuthors;\n    store.findAll('author').then(function(authors) {\n      authors.getEach('id'); // ['first']\n       allAuthors = authors;\n    });\n     // later, once adapter#findAll resolved with\n    // [\n    //   {\n    //     id: 'second',\n    //     type: 'author'\n    //   }\n    // ]\n     allAuthors.getEach('id'); // ['first', 'second']\n    ```\n     If you would like to force or prevent background reloading, you can set a\n    boolean value for `backgroundReload` in the options object for\n    `findAll`.\n     ```app/routes/post/edit.js\n    export default class PostEditRoute extends Route {\n      model() {\n        return this.store.findAll('post', { backgroundReload: false });\n      }\n    }\n    ```\n     If you pass an object on the `adapterOptions` property of the options\n    argument it will be passed to you adapter via the `snapshotRecordArray`\n     ```app/routes/posts.js\n    export default class PostsRoute extends Route {\n      model(params) {\n        return this.store.findAll('post', {\n          adapterOptions: { subscribe: false }\n        });\n      }\n    }\n    ```\n     ```app/adapters/post.js\n    import MyCustomAdapter from './custom-adapter';\n     export default class UserAdapter extends MyCustomAdapter {\n      findAll(store, type, sinceToken, snapshotRecordArray) {\n        if (snapshotRecordArray.adapterOptions.subscribe) {\n          // ...\n        }\n        // ...\n      }\n    }\n    ```\n     See [peekAll](../methods/peekAll?anchor=peekAll) to get an array of current records in the\n    store, without waiting until a reload is finished.\n     ### Retrieving Related Model Records\n     If you use an adapter such as Ember's default\n    [`JSONAPIAdapter`](/ember-data/release/classes/JSONAPIAdapter)\n    that supports the [JSON API specification](http://jsonapi.org/) and if your server\n    endpoint supports the use of an\n    ['include' query parameter](http://jsonapi.org/format/#fetching-includes),\n    you can use `findAll()` to automatically retrieve additional records related to\n    those requested by supplying an `include` parameter in the `options` object.\n     For example, given a `post` model that has a `hasMany` relationship with a `comment`\n    model, when we retrieve all of the post records we can have the server also return\n    all of the posts' comments in the same request:\n     ```app/routes/posts.js\n    export default class PostsRoute extends Route {\n      model() {\n        return this.store.findAll('post', { include: 'comments' });\n      }\n    }\n    ```\n    Multiple relationships can be requested using an `include` parameter consisting of a\n    comma-separated list (without white-space) while nested relationships can be specified\n    using a dot-separated sequence of relationship names. So to request both the posts'\n    comments and the authors of those comments the request would look like this:\n     ```app/routes/posts.js\n    export default class PostsRoute extends Route {\n      model() {\n        return this.store.findAll('post', { include: 'comments,comments.author' });\n      }\n    }\n    ```\n     See [query](../methods/query?anchor=query) to only get a subset of records from the server.\n     @since 1.13.0\n    @method findAll\n    @public\n    @param {string} type the name of the resource\n    @param {object} options\n    @return {Promise} promise\n  */\n\n  findAll(type, options = {}) {\n    {\n      assertDestroyingStore(this, 'findAll');\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`You need to pass a model name to the store's findAll method`);\n      }\n    })(type);\n    (test => {\n      if (!test) {\n        throw new Error(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${type}`);\n      }\n    })(typeof type === 'string');\n    const promise = this.request({\n      op: 'findAll',\n      data: {\n        type: normalizeModelName(type),\n        options: options || {}\n      },\n      cacheOptions: {\n        [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]: true\n      }\n    });\n    return promise.then(document => document.content);\n  }\n\n  /**\n    This method returns a filtered array that contains all of the\n    known records for a given type in the store.\n     Note that because it's just a filter, the result will contain any\n    locally created records of the type, however, it will not make a\n    request to the backend to retrieve additional records. If you\n    would like to request all the records from the backend please use\n    [store.findAll](../methods/findAll?anchor=findAll).\n     Also note that multiple calls to `peekAll` for a given type will always\n    return the same `RecordArray`.\n     Example\n     ```javascript\n    let localPosts = store.peekAll('post');\n    ```\n     @since 1.13.0\n    @method peekAll\n    @public\n    @param {string} type the name of the resource\n    @return {RecordArray}\n  */\n\n  peekAll(type) {\n    {\n      assertDestroyingStore(this, 'peekAll');\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`You need to pass a model name to the store's peekAll method`);\n      }\n    })(type);\n    (test => {\n      if (!test) {\n        throw new Error(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${type}`);\n      }\n    })(typeof type === 'string');\n    return this.recordArrayManager.liveArrayFor(normalizeModelName(type));\n  }\n\n  /**\n    This method unloads all records in the store.\n    It schedules unloading to happen during the next run loop.\n     Optionally you can pass a type which unload all records for a given type.\n     ```javascript\n    store.unloadAll();\n    store.unloadAll('post');\n    ```\n     @method unloadAll\n    @param {string} type the name of the resource\n    @public\n  */\n\n  unloadAll(type) {\n    {\n      assertDestroyedStoreOnly(this, 'unloadAll');\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${String(type)}`);\n      }\n    })(!type || typeof type === 'string');\n    this._join(() => {\n      if (type === undefined) {\n        // destroy the graph before unloadAll\n        // since then we avoid churning relationships\n        // during unload\n        this._graph?.identifiers.clear();\n        this.recordArrayManager.clear();\n        this._instanceCache.clear();\n      } else {\n        this._instanceCache.clear(normalizeModelName(type));\n      }\n    });\n  }\n\n  /**\n    Push some data for a given type into the store.\n     This method expects normalized [JSON API](http://jsonapi.org/) document. This means you have to follow [JSON API specification](http://jsonapi.org/format/) with few minor adjustments:\n    - record's `type` should always be in singular, dasherized form\n    - members (properties) should be camelCased\n     [Your primary data should be wrapped inside `data` property](http://jsonapi.org/format/#document-top-level):\n     ```js\n    store.push({\n      data: {\n        // primary data for single record of type `Person`\n        id: '1',\n        type: 'person',\n        attributes: {\n          firstName: 'Daniel',\n          lastName: 'Kmak'\n        }\n      }\n    });\n    ```\n     [Demo.](http://ember-twiddle.com/fb99f18cd3b4d3e2a4c7)\n     `data` property can also hold an array (of records):\n     ```js\n    store.push({\n      data: [\n        // an array of records\n        {\n          id: '1',\n          type: 'person',\n          attributes: {\n            firstName: 'Daniel',\n            lastName: 'Kmak'\n          }\n        },\n        {\n          id: '2',\n          type: 'person',\n          attributes: {\n            firstName: 'Tom',\n            lastName: 'Dale'\n          }\n        }\n      ]\n    });\n    ```\n     [Demo.](http://ember-twiddle.com/69cdbeaa3702159dc355)\n     There are some typical properties for `JSONAPI` payload:\n    * `id` - mandatory, unique record's key\n    * `type` - mandatory string which matches `model`'s dasherized name in singular form\n    * `attributes` - object which holds data for record attributes - `attr`'s declared in model\n    * `relationships` - object which must contain any of the following properties under each relationships' respective key (example path is `relationships.achievements.data`):\n      - [`links`](http://jsonapi.org/format/#document-links)\n      - [`data`](http://jsonapi.org/format/#document-resource-object-linkage) - place for primary data\n      - [`meta`](http://jsonapi.org/format/#document-meta) - object which contains meta-information about relationship\n     For this model:\n     ```app/models/person.js\n    import Model, { attr, hasMany } from '@ember-data/model';\n     export default class PersonRoute extends Route {\n      @attr('string') firstName;\n      @attr('string') lastName;\n       @hasMany('person') children;\n    }\n    ```\n     To represent the children as IDs:\n     ```js\n    {\n      data: {\n        id: '1',\n        type: 'person',\n        attributes: {\n          firstName: 'Tom',\n          lastName: 'Dale'\n        },\n        relationships: {\n          children: {\n            data: [\n              {\n                id: '2',\n                type: 'person'\n              },\n              {\n                id: '3',\n                type: 'person'\n              },\n              {\n                id: '4',\n                type: 'person'\n              }\n            ]\n          }\n        }\n      }\n    }\n    ```\n     [Demo.](http://ember-twiddle.com/343e1735e034091f5bde)\n     To represent the children relationship as a URL:\n     ```js\n    {\n      data: {\n        id: '1',\n        type: 'person',\n        attributes: {\n          firstName: 'Tom',\n          lastName: 'Dale'\n        },\n        relationships: {\n          children: {\n            links: {\n              related: '/people/1/children'\n            }\n          }\n        }\n      }\n    }\n    ```\n     If you're streaming data or implementing an adapter, make sure\n    that you have converted the incoming data into this form. The\n    store's [normalize](../methods/normalize?anchor=normalize) method is a convenience\n    helper for converting a json payload into the form Ember Data\n    expects.\n     ```js\n    store.push(store.normalize('person', data));\n    ```\n     This method can be used both to push in brand new\n    records, as well as to update existing records.\n     @method push\n    @public\n    @param {Object} data\n    @return the record(s) that was created or\n      updated.\n  */\n\n  push(data) {\n    {\n      assertDestroyingStore(this, 'push');\n    }\n    const pushed = this._push(data, false);\n    if (Array.isArray(pushed)) {\n      return pushed.map(identifier => this._instanceCache.getRecord(identifier));\n    }\n    if (pushed === null) {\n      return null;\n    }\n    return this._instanceCache.getRecord(pushed);\n  }\n\n  /**\n    Push some data in the form of a json-api document into the store,\n    without creating materialized records.\n     @method _push\n    @private\n    @param {Object} jsonApiDoc\n    @return {StableRecordIdentifier|Array<StableRecordIdentifier>|null} identifiers for the primary records that had data loaded\n  */\n  _push(jsonApiDoc, asyncFlush) {\n    {\n      assertDestroyingStore(this, '_push');\n    }\n    if (asyncFlush) {\n      this._enableAsyncFlush = true;\n    }\n    let ret;\n    this._join(() => {\n      ret = this.cache.put({\n        content: jsonApiDoc\n      });\n    });\n    this._enableAsyncFlush = null;\n    return 'data' in ret ? ret.data : null;\n  }\n\n  /**\n   * Trigger a save for a Record.\n   *\n   * Returns a promise resolving with the same record when the save is complete.\n   *\n   * @method saveRecord\n   * @public\n   * @param {unknown} record\n   * @param options\n   * @return {Promise<record>}\n   */\n  saveRecord(record, options = {}) {\n    {\n      assertDestroyingStore(this, 'saveRecord');\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`Unable to initiate save for a record in a disconnected state`);\n      }\n    })(storeFor(record));\n    const identifier = recordIdentifierFor(record);\n    const cache = this.cache;\n    if (!identifier) {\n      // this commonly means we're disconnected\n      // but just in case we reject here to prevent bad things.\n      return Promise.reject(new Error(`Record Is Disconnected`));\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`Cannot initiate a save request for an unloaded record: ${identifier.lid}`);\n      }\n    })(this._instanceCache.recordIsLoaded(identifier));\n    if (resourceIsFullyDeleted(this._instanceCache, identifier)) {\n      return Promise.resolve(record);\n    }\n    if (!options) {\n      options = {};\n    }\n    let operation = 'updateRecord';\n    if (cache.isNew(identifier)) {\n      operation = 'createRecord';\n    } else if (cache.isDeleted(identifier)) {\n      operation = 'deleteRecord';\n    }\n    const request = {\n      op: operation,\n      data: {\n        options,\n        record: identifier\n      },\n      records: [identifier],\n      cacheOptions: {\n        [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]: true\n      }\n    };\n    return this.request(request).then(document => document.content);\n  }\n\n  /**\n   * Instantiation hook allowing applications or addons to configure the store\n   * to utilize a custom Cache implementation.\n   *\n   * This hook should not be called directly by consuming applications or libraries.\n   * Use `Store.cache` to access the Cache instance.\n   *\n   * @method createCache (hook)\n   * @public\n   * @param storeWrapper\n   * @return {Cache}\n   */\n\n  /**\n   * Returns the cache instance associated to this Store, instantiates the Cache\n   * if necessary via `Store.createCache`\n   *\n   * @property {Cache} cache\n   * @public\n   */\n  get cache() {\n    let {\n      cache\n    } = this._instanceCache;\n    if (!cache) {\n      cache = this._instanceCache.cache = this.createCache(this._instanceCache._storeWrapper);\n      {\n        cache = new CacheManager(cache);\n      }\n    }\n    return cache;\n  }\n  destroy() {\n    if (this.isDestroyed) {\n      // @ember/test-helpers will call destroy multiple times\n      return;\n    }\n    this.isDestroying = true;\n    this._graph?.destroy();\n    this._graph = undefined;\n    this.notifications.destroy();\n    this.recordArrayManager.destroy();\n    this.identifierCache.destroy();\n    this.unloadAll();\n    this.isDestroyed = true;\n  }\n  static create(args) {\n    return new this(args);\n  }\n}\n{\n  Store.prototype.getSchemaDefinitionService = function () {\n    (test => {\n      if (!test) {\n        throw new Error(`You must registerSchemaDefinitionService with the store to use custom model classes`);\n      }\n    })(this._schema);\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`Use \\`store.schema\\` instead of \\`store.getSchemaDefinitionService()\\``, false, {\n      id: 'ember-data:schema-service-updates',\n      until: '5.0',\n      for: 'ember-data',\n      since: {\n        available: '5.4',\n        enabled: '5.4'\n      }\n    }));\n    return this._schema;\n  };\n  Store.prototype.registerSchemaDefinitionService = function (schema) {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`Use \\`store.createSchemaService\\` instead of \\`store.registerSchemaDefinitionService()\\``, false, {\n      id: 'ember-data:schema-service-updates',\n      until: '5.0',\n      for: 'ember-data',\n      since: {\n        available: '5.4',\n        enabled: '5.4'\n      }\n    }));\n    this._schema = schema;\n  };\n  Store.prototype.registerSchema = function (schema) {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)(`Use \\`store.createSchemaService\\` instead of \\`store.registerSchema()\\``, false, {\n      id: 'ember-data:schema-service-updates',\n      until: '5.0',\n      for: 'ember-data',\n      since: {\n        available: '5.4',\n        enabled: '5.4'\n      }\n    }));\n    this._schema = schema;\n  };\n}\nlet assertDestroyingStore;\nlet assertDestroyedStoreOnly;\n{\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  assertDestroyingStore = function assertDestroyingStore(store, method) {\n    (test => {\n      if (!test) {\n        throw new Error(`Attempted to call store.${method}(), but the store instance has already been destroyed.`);\n      }\n    })(!(store.isDestroying || store.isDestroyed));\n  };\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  assertDestroyedStoreOnly = function assertDestroyedStoreOnly(store, method) {\n    (test => {\n      if (!test) {\n        throw new Error(`Attempted to call store.${method}(), but the store instance has already been destroyed.`);\n      }\n    })(!store.isDestroyed);\n  };\n}\nfunction isMaybeIdentifier(maybeIdentifier) {\n  return Boolean(maybeIdentifier !== null && typeof maybeIdentifier === 'object' && ('id' in maybeIdentifier && 'type' in maybeIdentifier && maybeIdentifier.id && maybeIdentifier.type || maybeIdentifier.lid));\n}\nfunction normalizeProperties(store, identifier, properties) {\n  // assert here\n  if (properties !== undefined) {\n    if ('id' in properties) {\n      (test => {\n        if (!test) {\n          throw new Error(`expected id to be a string or null`);\n        }\n      })(properties.id !== undefined);\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`You passed '${typeof properties}' as properties for record creation instead of an object.`);\n      }\n    })(typeof properties === 'object' && properties !== null);\n    const {\n      type\n    } = identifier;\n\n    // convert relationship Records to RecordDatas before passing to RecordData\n    const defs = store.schema.fields({\n      type\n    });\n    if (defs.size) {\n      const keys = Object.keys(properties);\n      for (let i = 0; i < keys.length; i++) {\n        const prop = keys[i];\n        const field = defs.get(prop);\n        if (!field) continue;\n        if (field.kind === 'hasMany') {\n          {\n            assertRecordsPassedToHasMany(properties[prop]);\n          }\n          properties[prop] = extractIdentifiersFromRecords(properties[prop]);\n        } else if (field.kind === 'belongsTo') {\n          properties[prop] = extractIdentifierFromRecord(properties[prop]);\n        }\n      }\n    }\n  }\n  return properties;\n}\nfunction assertRecordsPassedToHasMany(records) {\n  (test => {\n    if (!test) {\n      throw new Error(`You must pass an array of records to set a hasMany relationship`);\n    }\n  })(Array.isArray(records));\n  (test => {\n    if (!test) {\n      throw new Error(`All elements of a hasMany relationship must be instances of Model, you passed ${records.map(r => `${typeof r}`).join(', ')}`);\n    }\n  })(function () {\n    return records.every(record => {\n      try {\n        recordIdentifierFor(record);\n        return true;\n      } catch {\n        return false;\n      }\n    });\n  }());\n}\nfunction extractIdentifiersFromRecords(records) {\n  return records.map(record => extractIdentifierFromRecord(record));\n}\nfunction extractIdentifierFromRecord(recordOrPromiseRecord) {\n  if (!recordOrPromiseRecord) {\n    return null;\n  }\n  const extract = recordIdentifierFor;\n  return extract(recordOrPromiseRecord);\n}\n\n/**\n * @module @ember-data/store\n */\nfunction urlFromLink(link) {\n  if (typeof link === 'string') return link;\n  return link.href;\n}\n\n/**\n * A Document is a class that wraps the response content from a request to the API\n * returned by `Cache.put` or `Cache.peek`, converting resource-identifiers into\n * record instances.\n *\n * It is not directly instantiated by the user, and its properties should not\n * be directly modified. Whether individual properties are mutable or not is\n * determined by the record instance itself.\n *\n * @public\n * @class Document\n */\nvar _store2 = /*#__PURE__*/new WeakMap();\nvar _Document_brand = /*#__PURE__*/new WeakSet();\nclass Document {\n  constructor(store, identifier) {\n    _classPrivateMethodInitSpec(this, _Document_brand);\n    /**\n     * The links object for this document, if any\n     *\n     * e.g.\n     *\n     * ```\n     * {\n     *   self: '/articles?page[number]=3',\n     * }\n     * ```\n     *\n     * @property links\n     * @type {object|undefined} - a links object\n     * @public\n     */\n\n    /**\n     * The primary data for this document, if any.\n     *\n     * If this document has no primary data (e.g. because it is an error document)\n     * this property will be `undefined`.\n     *\n     * For collections this will be an array of record instances,\n     * for single resource requests it will be a single record instance or null.\n     *\n     * @property data\n     * @public\n     * @type {object|Array<object>|null|undefined} - a data object\n     */\n\n    /**\n     * The errors returned by the API for this request, if any\n     *\n     * @property errors\n     * @public\n     * @type {object|undefined} - an errors object\n     */\n\n    /**\n     * The meta object for this document, if any\n     *\n     * @property meta\n     * @public\n     * @type {object|undefined} - a meta object\n     */\n\n    /**\n     * The identifier associated with this document, if any\n     *\n     * @property identifier\n     * @public\n     * @type {StableDocumentIdentifier|null}\n     */\n\n    _classPrivateFieldInitSpec(this, _store2, void 0);\n    _classPrivateFieldSet(_store2, this, store);\n    this.identifier = identifier;\n  }\n  /**\n   * Fetches the related link for this document, returning a promise that resolves\n   * with the document when the request completes. If no related link is present,\n   * will fallback to the self link if present\n   *\n   * @method fetch\n   * @public\n   * @param {object} options\n   * @return Promise<Document>\n   */\n  fetch(options = {}) {\n    (test => {\n      if (!test) {\n        throw new Error(`No self or related link`);\n      }\n    })(this.links?.related || this.links?.self);\n    options.cacheOptions = options.cacheOptions || {};\n    options.cacheOptions.key = this.identifier?.lid;\n    return _assertClassBrand(_Document_brand, this, _request).call(this, this.links.related ? 'related' : 'self', options);\n  }\n\n  /**\n   * Fetches the next link for this document, returning a promise that resolves\n   * with the new document when the request completes, or null  if there is no\n   * next link.\n   *\n   * @method next\n   * @public\n   * @param {object} options\n   * @return Promise<Document | null>\n   */\n  next(options = {}) {\n    return _assertClassBrand(_Document_brand, this, _request).call(this, 'next', options);\n  }\n\n  /**\n   * Fetches the prev link for this document, returning a promise that resolves\n   * with the new document when the request completes, or null if there is no\n   * prev link.\n   *\n   * @method prev\n   * @public\n   * @param {object} options\n   * @return Promise<Document | null>\n   */\n  prev(options = {}) {\n    return _assertClassBrand(_Document_brand, this, _request).call(this, 'prev', options);\n  }\n\n  /**\n   * Fetches the first link for this document, returning a promise that resolves\n   * with the new document when the request completes, or null if there is no\n   * first link.\n   *\n   * @method first\n   * @public\n   * @param {object} options\n   * @return Promise<Document | null>\n   */\n  first(options = {}) {\n    return _assertClassBrand(_Document_brand, this, _request).call(this, 'first', options);\n  }\n\n  /**\n   * Fetches the last link for this document, returning a promise that resolves\n   * with the new document when the request completes, or null if there is no\n   * last link.\n   *\n   * @method last\n   * @public\n   * @param {object} options\n   * @return Promise<Document | null>\n   */\n  last(options = {}) {\n    return _assertClassBrand(_Document_brand, this, _request).call(this, 'last', options);\n  }\n\n  /**\n   * Implemented for `JSON.stringify` support.\n   *\n   * Returns the JSON representation of the document wrapper.\n   *\n   * This is a shallow serialization, it does not deeply serialize\n   * the document's contents, leaving that to the individual record\n   * instances to determine how to do, if at all.\n   *\n   * @method toJSON\n   * @public\n   * @return\n   */\n  toJSON() {\n    const data = {};\n    data.identifier = this.identifier;\n    if (this.data !== undefined) {\n      data.data = this.data;\n    }\n    if (this.links !== undefined) {\n      data.links = this.links;\n    }\n    if (this.errors !== undefined) {\n      data.errors = this.errors;\n    }\n    if (this.meta !== undefined) {\n      data.meta = this.meta;\n    }\n    return data;\n  }\n}\nasync function _request(link, options) {\n  const href = this.links?.[link];\n  if (!href) {\n    return null;\n  }\n  options.method = options.method || 'GET';\n  Object.assign(options, {\n    url: urlFromLink(href)\n  });\n  const response = await _classPrivateFieldGet(_store2, this).request(options);\n  return response.content;\n}\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.defineSignal)(Document.prototype, 'data');\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.defineSignal)(Document.prototype, 'links');\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.defineSignal)(Document.prototype, 'errors');\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_6__.defineSignal)(Document.prototype, 'meta');\n\n/**\n * @module @ember-data/store\n */\n\n/**\n * A service which an application may provide to the store via\n * the store's `lifetimes` property to configure the behavior\n * of the CacheHandler.\n *\n * The default behavior for request lifetimes is to never expire\n * unless manually refreshed via `cacheOptions.reload` or `cacheOptions.backgroundReload`.\n *\n * Implementing this service allows you to programatically define\n * when a request should be considered expired.\n *\n * @class <Interface> CachePolicy\n * @public\n */\nconst MUTATION_OPS = new Set(['createRecord', 'updateRecord', 'deleteRecord']);\nfunction isErrorDocument(document) {\n  return 'errors' in document;\n}\nfunction maybeUpdateUiObjects(store, request, options, document, isFromCache) {\n  const {\n    identifier\n  } = options;\n  if (!document) {\n    (test => {\n      if (!test) {\n        throw new Error(`The CacheHandler expected response content but none was found`);\n      }\n    })(!options.shouldHydrate);\n    return document;\n  }\n  if (isErrorDocument(document)) {\n    if (!identifier && !options.shouldHydrate) {\n      return document;\n    }\n    let doc;\n    if (identifier) {\n      doc = store._documentCache.get(identifier);\n    }\n    if (!doc) {\n      doc = new Document(store, identifier);\n      copyDocumentProperties(doc, document);\n      if (identifier) {\n        store._documentCache.set(identifier, doc);\n      }\n    } else if (!isFromCache) {\n      doc.data = undefined;\n      copyDocumentProperties(doc, document);\n    }\n    return options.shouldHydrate ? doc : document;\n  }\n  if (Array.isArray(document.data)) {\n    const {\n      recordArrayManager\n    } = store;\n    if (!identifier) {\n      if (!options.shouldHydrate) {\n        return document;\n      }\n      const data = recordArrayManager.createArray({\n        type: request.url,\n        identifiers: document.data,\n        doc: document,\n        query: request\n      });\n      const doc = new Document(store, null);\n      doc.data = data;\n      doc.meta = document.meta;\n      doc.links = document.links;\n      return doc;\n    }\n    let managed = recordArrayManager._keyedArrays.get(identifier.lid);\n    if (!managed) {\n      managed = recordArrayManager.createArray({\n        type: identifier.lid,\n        identifiers: document.data,\n        doc: document\n      });\n      recordArrayManager._keyedArrays.set(identifier.lid, managed);\n      const doc = new Document(store, identifier);\n      doc.data = managed;\n      doc.meta = document.meta;\n      doc.links = document.links;\n      store._documentCache.set(identifier, doc);\n      return options.shouldHydrate ? doc : document;\n    } else {\n      const doc = store._documentCache.get(identifier);\n      if (!isFromCache) {\n        recordArrayManager.populateManagedArray(managed, document.data, document);\n        doc.data = managed;\n        doc.meta = document.meta;\n        doc.links = document.links;\n      }\n      return options.shouldHydrate ? doc : document;\n    }\n  } else {\n    if (!identifier && !options.shouldHydrate) {\n      return document;\n    }\n    const data = document.data ? store.peekRecord(document.data) : null;\n    let doc;\n    if (identifier) {\n      doc = store._documentCache.get(identifier);\n    }\n    if (!doc) {\n      doc = new Document(store, identifier);\n      doc.data = data;\n      copyDocumentProperties(doc, document);\n      if (identifier) {\n        store._documentCache.set(identifier, doc);\n      }\n    } else if (!isFromCache) {\n      doc.data = data;\n      copyDocumentProperties(doc, document);\n    }\n    return options.shouldHydrate ? doc : document;\n  }\n}\nfunction calcShouldFetch(store, request, hasCachedValue, identifier) {\n  const {\n    cacheOptions\n  } = request;\n  return request.op && MUTATION_OPS.has(request.op) || cacheOptions?.reload || !hasCachedValue || (store.lifetimes && identifier ? store.lifetimes.isHardExpired(identifier, store) : false);\n}\nfunction calcShouldBackgroundFetch(store, request, willFetch, identifier) {\n  const {\n    cacheOptions\n  } = request;\n  return cacheOptions?.backgroundReload || (store.lifetimes && identifier ? store.lifetimes.isSoftExpired(identifier, store) : false);\n}\nfunction isMutation(request) {\n  return Boolean(request.op && MUTATION_OPS.has(request.op));\n}\nfunction fetchContentAndHydrate(next, context, identifier, shouldFetch, shouldBackgroundFetch) {\n  const {\n    store\n  } = context.request;\n  const shouldHydrate = context.request[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.EnableHydration] || false;\n  let isMut = false;\n  if (isMutation(context.request)) {\n    isMut = true;\n    // TODO should we handle multiple records in request.records by iteratively calling willCommit for each\n    const record = context.request.data?.record || context.request.records?.[0];\n    (test => {\n      if (!test) {\n        throw new Error(`Expected to receive a list of records included in the ${context.request.op} request`);\n      }\n    })(record || !shouldHydrate);\n    if (record) {\n      store.cache.willCommit(record, context);\n    }\n  }\n  if (store.lifetimes?.willRequest) {\n    store.lifetimes.willRequest(context.request, identifier, store);\n  }\n  const promise = next(context.request).then(document => {\n    store.requestManager._pending.delete(context.id);\n    store._enableAsyncFlush = true;\n    let response;\n    store._join(() => {\n      if (isMutation(context.request)) {\n        const record = context.request.data?.record || context.request.records?.[0];\n        if (record) {\n          response = store.cache.didCommit(record, document);\n\n          // a mutation combined with a 204 has no cache impact when no known records were involved\n          // a createRecord with a 201 with an empty response and no known records should similarly\n          // have no cache impact\n        } else if (isCacheAffecting(document)) {\n          response = store.cache.put(document);\n        }\n      } else {\n        response = store.cache.put(document);\n      }\n      response = maybeUpdateUiObjects(store, context.request, {\n        shouldHydrate,\n        shouldFetch,\n        shouldBackgroundFetch,\n        identifier\n      }, response, false);\n    });\n    store._enableAsyncFlush = null;\n    if (store.lifetimes?.didRequest) {\n      store.lifetimes.didRequest(context.request, document.response, identifier, store);\n    }\n    if (shouldFetch) {\n      return response;\n    } else if (shouldBackgroundFetch) {\n      store.notifications._flush();\n    }\n  }, error => {\n    store.requestManager._pending.delete(context.id);\n    if (context.request.signal?.aborted) {\n      throw error;\n    }\n    store.requestManager._pending.delete(context.id);\n    store._enableAsyncFlush = true;\n    let response;\n    store._join(() => {\n      if (isMutation(context.request)) {\n        // TODO similar to didCommit we should spec this to be similar to cache.put for handling full response\n        // currently we let the response remain undefiend.\n        const errors = error && error.content && typeof error.content === 'object' && 'errors' in error.content && Array.isArray(error.content.errors) ? error.content.errors : undefined;\n        const record = context.request.data?.record || context.request.records?.[0];\n        store.cache.commitWasRejected(record, errors);\n        // re-throw the original error to preserve `errors` property.\n        throw error;\n      } else {\n        response = store.cache.put(error);\n        response = maybeUpdateUiObjects(store, context.request, {\n          shouldHydrate,\n          shouldFetch,\n          shouldBackgroundFetch,\n          identifier\n        }, response, false);\n      }\n    });\n    store._enableAsyncFlush = null;\n    if (identifier && store.lifetimes?.didRequest) {\n      store.lifetimes.didRequest(context.request, error.response, identifier, store);\n    }\n    if (!shouldBackgroundFetch) {\n      const newError = cloneError(error);\n      newError.content = response;\n      throw newError;\n    } else {\n      store.notifications._flush();\n    }\n  });\n  if (!isMut) {\n    return promise;\n  }\n  (test => {\n    if (!test) {\n      throw new Error(`Expected a mutation`);\n    }\n  })(isMutation(context.request));\n\n  // for mutations we need to enqueue the promise with the requestStateService\n  // TODO should we enque a request per record in records?\n  const record = context.request.data?.record || context.request.records?.[0];\n  return store._requestCache._enqueue(promise, {\n    data: [{\n      op: 'saveRecord',\n      recordIdentifier: record,\n      options: undefined\n    }]\n  });\n}\nfunction isAggregateError(error) {\n  return error instanceof AggregateError || error.name === 'AggregateError' && Array.isArray(error.errors);\n}\n// TODO @runspired, consider if we should deep freeze errors (potentially only in debug) vs cloning them\nfunction cloneError(error) {\n  const isAggregate = isAggregateError(error);\n  const cloned = isAggregate ? new AggregateError(structuredClone(error.errors), error.message) : new Error(error.message);\n  cloned.stack = error.stack;\n  cloned.error = error.error;\n\n  // copy over enumerable properties\n  Object.assign(cloned, error);\n  return cloned;\n}\n\n/**\n * A CacheHandler that adds support for using an EmberData Cache with a RequestManager.\n *\n * This handler will only run when a request has supplied a `store` instance. Requests\n * issued by the store via `store.request()` will automatically have the `store` instance\n * attached to the request.\n *\n * ```ts\n * requestManager.request({\n *   store: store,\n *   url: '/api/posts',\n *   method: 'GET'\n * });\n * ```\n *\n * When this handler elects to handle a request, it will return the raw `StructuredDocument`\n * unless the request has `[EnableHydration]` set to `true`. In this case, the handler will\n * return a `Document` instance that will automatically update the UI when the cache is updated\n * in the future and will hydrate any identifiers in the StructuredDocument into Record instances.\n *\n * When issuing a request via the store, [EnableHydration] is automatically set to `true`. This\n * means that if desired you can issue requests that utilize the cache without needing to also\n * utilize Record instances if desired.\n *\n * Said differently, you could elect to issue all requests via a RequestManager, without ever using\n * the store directly, by setting [EnableHydration] to `true` and providing a store instance. Not\n * necessarily the most useful thing, but the decoupled nature of the RequestManager and incremental-feature\n * approach of EmberData allows for this flexibility.\n *\n * ```ts\n * import { EnableHydration } from '@warp-drive/core-types/request';\n *\n * requestManager.request({\n *   store: store,\n *   url: '/api/posts',\n *   method: 'GET',\n *   [EnableHydration]: true\n * });\n *\n * @typedoc\n */\nconst CacheHandler = {\n  request(context, next) {\n    // if we have no cache or no cache-key skip cache handling\n    if (!context.request.store || context.request.cacheOptions?.[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]) {\n      return next(context.request);\n    }\n    const {\n      store\n    } = context.request;\n    const identifier = store.identifierCache.getOrCreateDocumentIdentifier(context.request);\n    const peeked = identifier ? store.cache.peekRequest(identifier) : null;\n\n    // determine if we should skip cache\n    if (calcShouldFetch(store, context.request, !!peeked, identifier)) {\n      return fetchContentAndHydrate(next, context, identifier, true, false);\n    }\n\n    // if we have not skipped cache, determine if we should update behind the scenes\n    if (calcShouldBackgroundFetch(store, context.request, false, identifier)) {\n      const promise = fetchContentAndHydrate(next, context, identifier, false, true);\n      store.requestManager._pending.set(context.id, promise);\n    }\n    (test => {\n      if (!test) {\n        throw new Error(`Expected a peeked request to be present`);\n      }\n    })(peeked);\n    const shouldHydrate = context.request[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.EnableHydration] || false;\n    context.setResponse(peeked.response);\n    if ('error' in peeked) {\n      const content = shouldHydrate ? maybeUpdateUiObjects(store, context.request, {\n        shouldHydrate,\n        identifier\n      }, peeked.content, true) : peeked.content;\n      const newError = cloneError(peeked);\n      newError.content = content;\n      throw newError;\n    }\n    const result = shouldHydrate ? maybeUpdateUiObjects(store, context.request, {\n      shouldHydrate,\n      identifier\n    }, peeked.content, true) : peeked.content;\n    return result;\n  }\n};\nfunction copyDocumentProperties(target, source) {\n  if ('links' in source) {\n    target.links = source.links;\n  }\n  if ('meta' in source) {\n    target.meta = source.meta;\n  }\n  if ('errors' in source) {\n    target.errors = source.errors;\n  }\n}\nfunction isCacheAffecting(document) {\n  if (!isMutation(document.request)) {\n    return true;\n  }\n  // a mutation combined with a 204 has no cache impact when no known records were involved\n  // a createRecord with a 201 with an empty response and no known records should similarly\n  // have no cache impact\n\n  if (document.request.op === 'createRecord' && document.response?.status === 201) {\n    return document.content ? Object.keys(document.content).length > 0 : false;\n  }\n  return document.response?.status !== 204;\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/cache-handler-C5ilAUZ5.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/index.js":
/*!*****************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/index.js ***!
  \*****************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheHandler: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.C),\n/* harmony export */   \"default\": () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.S),\n/* harmony export */   recordIdentifierFor: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.r),\n/* harmony export */   setIdentifierForgetMethod: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   setIdentifierGenerationMethod: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   setIdentifierResetMethod: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   setIdentifierUpdateMethod: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   setKeyInfoForResource: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   storeFor: () => (/* reexport safe */ _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__.s)\n/* harmony export */ });\n/* harmony import */ var _cache_handler_C5ilAUZ5_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache-handler-C5ilAUZ5.js */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/cache-handler-C5ilAUZ5.js\");\n/* harmony import */ var _ember_data_request_utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/request-utils/string */ \"../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/string.js\");\n\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/index.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/-private.js":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/-private.js ***!
  \***********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Signals: () => (/* binding */ Signals),\n/* harmony export */   addToTransaction: () => (/* binding */ addToTransaction),\n/* harmony export */   addTransactionCB: () => (/* binding */ addTransactionCB),\n/* harmony export */   createArrayTags: () => (/* binding */ createArrayTags),\n/* harmony export */   createSignal: () => (/* binding */ createSignal),\n/* harmony export */   defineSignal: () => (/* binding */ defineSignal),\n/* harmony export */   entangleSignal: () => (/* binding */ entangleSignal),\n/* harmony export */   getSignal: () => (/* binding */ getSignal),\n/* harmony export */   memoTransact: () => (/* binding */ memoTransact),\n/* harmony export */   peekSignal: () => (/* binding */ peekSignal),\n/* harmony export */   subscribe: () => (/* binding */ subscribe),\n/* harmony export */   transact: () => (/* binding */ transact),\n/* harmony export */   untracked: () => (/* binding */ untracked)\n/* harmony export */ });\n/* harmony import */ var _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/-internals/metal */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/-internals/metal/index.js\");\n/* harmony import */ var _glimmer_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @glimmer/validator */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/validator/index.js\");\n/* harmony import */ var _warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @warp-drive/core-types/-private */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js\");\n\n\n\nfunction createTransaction() {\n  const transaction = {\n    cbs: new Set(),\n    props: new Set(),\n    sub: new Set(),\n    parent: null\n  };\n  const TRANSACTION = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.peekTransient)('TRANSACTION');\n  if (TRANSACTION) {\n    transaction.parent = TRANSACTION;\n  }\n  (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.setTransient)('TRANSACTION', transaction);\n}\nfunction maybeConsume(tag) {\n  if (tag) {\n    (0,_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__.consumeTag)(tag);\n  }\n}\nfunction maybeDirty(tag) {\n  if (tag) {\n    // @ts-expect-error - we are using Ember's Tag not Glimmer's\n    (0,_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__.dirtyTag)(tag);\n  }\n}\n\n/**\n * If there is a current transaction, ensures that the relevant tag (and any\n * array computed chains symbols, if applicable) will be consumed during the\n * transaction.\n *\n * If there is no current transaction, will consume the tag(s) immediately.\n *\n * @internal\n * @param obj\n */\nfunction subscribe(obj) {\n  const TRANSACTION = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.peekTransient)('TRANSACTION');\n  if (TRANSACTION) {\n    TRANSACTION.sub.add(obj);\n  } else if ('tag' in obj) {\n    {\n      maybeConsume(obj['[]']);\n      maybeConsume(obj['@length']);\n    }\n    (0,_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__.consumeTag)(obj.tag);\n  } else {\n    obj.ref;\n  }\n}\nfunction updateRef(obj) {\n  {\n    try {\n      if ('tag' in obj) {\n        {\n          maybeDirty(obj['[]']);\n          maybeDirty(obj['@length']);\n        }\n        // @ts-expect-error - we are using Ember's Tag not Glimmer's\n        (0,_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__.dirtyTag)(obj.tag);\n      } else {\n        obj.ref = null;\n      }\n    } catch (e) {\n      if (e instanceof Error) {\n        if (e.message.includes('You attempted to update `undefined`')) {\n          // @ts-expect-error\n          const key = `<${obj._debug_base}>.${obj.key}`;\n          e.message = e.message.replace('You attempted to update `undefined`', `You attempted to update ${key}`);\n          e.stack = e.stack?.replace('You attempted to update `undefined`', `You attempted to update ${key}`);\n          const lines = e.stack?.split(`\\n`);\n          const finalLines = [];\n          let lastFile = null;\n          lines?.forEach(line => {\n            if (line.trim().startsWith('at ')) {\n              // get the last string in the line which contains the code source location\n              const location = line.split(' ').at(-1);\n              // remove the line and char offset info\n\n              if (location.includes(':')) {\n                const parts = location.split(':');\n                parts.pop();\n                parts.pop();\n                const file = parts.join(':');\n                if (file !== lastFile) {\n                  lastFile = file;\n                  finalLines.push('');\n                }\n              }\n              finalLines.push(line);\n            }\n          });\n          const splitstr = '`undefined` was first used:';\n          const parts = e.message.split(splitstr);\n          parts.splice(1, 0, `Original Stack\\n=============\\n${finalLines.join(`\\n`)}\\n\\n\\`${key}\\` was first used:`);\n          e.message = parts.join('');\n        }\n      }\n      throw e;\n    }\n  }\n}\nfunction flushTransaction() {\n  const transaction = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.peekTransient)('TRANSACTION');\n  (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.setTransient)('TRANSACTION', transaction.parent);\n  transaction.cbs.forEach(cb => {\n    cb();\n  });\n  transaction.props.forEach(obj => {\n    // mark this mutation as part of a transaction\n    obj.t = true;\n    updateRef(obj);\n  });\n  transaction.sub.forEach(obj => {\n    if ('tag' in obj) {\n      {\n        maybeConsume(obj['[]']);\n        maybeConsume(obj['@length']);\n      }\n      (0,_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__.consumeTag)(obj.tag);\n    } else {\n      obj.ref;\n    }\n  });\n}\nasync function untrack() {\n  const transaction = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.peekTransient)('TRANSACTION');\n  (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.setTransient)('TRANSACTION', transaction.parent);\n\n  // defer writes\n  await Promise.resolve();\n  transaction.cbs.forEach(cb => {\n    cb();\n  });\n  transaction.props.forEach(obj => {\n    // mark this mutation as part of a transaction\n    obj.t = true;\n    updateRef(obj);\n  });\n}\nfunction addToTransaction(obj) {\n  const transaction = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.peekTransient)('TRANSACTION');\n  if (transaction) {\n    transaction.props.add(obj);\n  } else {\n    updateRef(obj);\n  }\n}\nfunction addTransactionCB(method) {\n  const transaction = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.peekTransient)('TRANSACTION');\n  if (transaction) {\n    transaction.cbs.add(method);\n  } else {\n    method();\n  }\n}\n\n/**\n * Run `method` without subscribing to any tracked properties\n * controlled by EmberData.\n *\n * This should rarely be used except by libraries that really\n * know what they are doing. It is most useful for wrapping\n * certain kinds of fetch/query logic from within a `Resource`\n * `hook` or other similar pattern.\n *\n * @function untracked\n * @public\n * @static\n * @for @ember-data/tracking\n * @param method\n * @return result of invoking method\n */\nfunction untracked(method) {\n  createTransaction();\n  const ret = method();\n  void untrack();\n  return ret;\n}\n\n/**\n * Run the method, subscribing to any tracked properties\n * managed by EmberData that were accessed or written during\n * the method's execution as per-normal but while allowing\n * interleaving of reads and writes.\n *\n * This is useful when for instance you want to perform\n * a mutation based on existing state that must be read first.\n *\n * @function transact\n * @public\n * @static\n * @for @ember-data/tracking\n * @param method\n * @return result of invoking method\n */\nfunction transact(method) {\n  createTransaction();\n  const ret = method();\n  flushTransaction();\n  return ret;\n}\n\n/**\n * A helpful utility for creating a new function that\n * always runs in a transaction. E.G. this \"memoizes\"\n * calling `transact(fn)`, currying args as necessary.\n *\n * @method memoTransact\n * @public\n * @static\n * @for @ember-data/tracking\n * @param method\n * @return a function that will invoke method in a transaction with any provided args and return its result\n */\nfunction memoTransact(method) {\n  return function (...args) {\n    createTransaction();\n    const ret = method(...args);\n    flushTransaction();\n    return ret;\n  };\n}\nconst Signals = (0,_warp_drive_core_types_private__WEBPACK_IMPORTED_MODULE_2__.getOrSetGlobal)('Signals', Symbol('Signals'));\n\n/**\n *  use to add a signal property to the prototype of something.\n *\n *  First arg is the thing to define on\n *  Second arg is the property name\n *  Third agg is the initial value of the property if any.\n *\n *  for instance\n *\n *  ```ts\n *  class Model {}\n *  defineSignal(Model.prototype, 'isLoading', false);\n *  ```\n *\n *  This is sort of like using a stage-3 decorator but works today\n *  while we are still on legacy decorators.\n *\n *  e.g. it is equivalent to\n *\n *  ```ts\n *  class Model {\n *    @signal accessor isLoading = false;\n *  }\n *  ```\n *\n *  @internal\n */\nfunction defineSignal(obj, key, v) {\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: false,\n    get() {\n      const signals = this[Signals] = this[Signals] || new Map();\n      const existing = signals.has(key);\n      const _signal = entangleSignal(signals, this, key);\n      if (!existing && v !== undefined) {\n        _signal.lastValue = v;\n      }\n      return _signal.lastValue;\n    },\n    set(value) {\n      const signals = this[Signals] = this[Signals] || new Map();\n      let _signal = signals.get(key);\n      if (!_signal) {\n        _signal = createSignal(this, key);\n        signals.set(key, _signal);\n      }\n      if (_signal.lastValue !== value) {\n        _signal.lastValue = value;\n        addToTransaction(_signal);\n      }\n    }\n  });\n}\nfunction createArrayTags(obj, signal) {\n  {\n    signal['[]'] = (0,_ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__.tagForProperty)(obj, '[]');\n    signal['@length'] = (0,_ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__.tagForProperty)(obj, 'length');\n  }\n}\n\n/**\n * Create a signal for the key/object pairing.\n *\n * @internal\n * @param obj Object we're creating the signal on\n * @param key Key to create the signal for\n * @return the signal\n */\nfunction createSignal(obj, key) {\n  const _signal = {\n    key,\n    tag: (0,_ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__.tagForProperty)(obj, key),\n    t: false,\n    shouldReset: false,\n    '[]': null,\n    '@length': null,\n    lastValue: undefined\n  };\n  {\n    // eslint-disable-next-line no-inner-declarations\n    function tryGet(prop) {\n      try {\n        return obj[prop];\n      } catch {\n        return;\n      }\n    }\n    const modelName = tryGet('$type') ?? tryGet('modelName') ?? tryGet('constructor')?.modelName ?? '';\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    const className = obj.constructor?.name ?? obj.toString?.() ?? 'unknown';\n    _signal._debug_base = `${className}${modelName && !className.startsWith('SchemaRecord') ? `:${modelName}` : ''}`;\n  }\n  return _signal;\n}\n\n/**\n * Create a signal for the key/object pairing and subscribes to the signal.\n *\n * Use when you need to ensure a signal exists and is subscribed to.\n *\n * @internal\n * @param signals Map of signals\n * @param obj Object we're creating the signal on\n * @param key Key to create the signal for\n * @return the signal\n */\nfunction entangleSignal(signals, obj, key) {\n  let _signal = signals.get(key);\n  if (!_signal) {\n    _signal = createSignal(obj, key);\n    signals.set(key, _signal);\n  }\n  subscribe(_signal);\n  return _signal;\n}\nfunction getSignal(obj, key, initialState) {\n  let signals = obj[Signals];\n  if (!signals) {\n    signals = new Map();\n    obj[Signals] = signals;\n  }\n  let _signal = signals.get(key);\n  if (!_signal) {\n    _signal = createSignal(obj, key);\n    _signal.shouldReset = initialState;\n    signals.set(key, _signal);\n  }\n  return _signal;\n}\nfunction peekSignal(obj, key) {\n  const signals = obj[Signals];\n  if (signals) {\n    return signals.get(key);\n  }\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/-private.js?");

/***/ }),

/***/ "../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/index.js":
/*!********************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/index.js ***!
  \********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cached: () => (/* binding */ cached),\n/* harmony export */   compat: () => (/* reexport safe */ _ember_object_compat__WEBPACK_IMPORTED_MODULE_2__.dependentKeyCompat),\n/* harmony export */   createCache: () => (/* reexport safe */ _glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_0__.createCache),\n/* harmony export */   getValue: () => (/* reexport safe */ _glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_0__.getValue),\n/* harmony export */   memoTransact: () => (/* reexport safe */ _private_js__WEBPACK_IMPORTED_MODULE_1__.memoTransact),\n/* harmony export */   transact: () => (/* reexport safe */ _private_js__WEBPACK_IMPORTED_MODULE_1__.transact),\n/* harmony export */   untracked: () => (/* reexport safe */ _private_js__WEBPACK_IMPORTED_MODULE_1__.untracked)\n/* harmony export */ });\n/* harmony import */ var _glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @glimmer/tracking/primitives/cache */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@glimmer/tracking/primitives/cache.js\");\n/* harmony import */ var _private_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./-private.js */ \"../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/-private.js\");\n/* harmony import */ var _ember_object_compat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/object/compat */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/compat.js\");\n\n\n\n\nfunction cached(target, key, descriptor) {\n  // Error on `@cached()`, `@cached(...args)`, and `@cached propName = value;`\n  (test => {\n    if (!test) {\n      throw new Error('You attempted to use @cached(), which is not necessary nor supported. Remove the parentheses and you will be good to go!');\n    }\n  })(target !== undefined);\n  (test => {\n    if (!test) {\n      throw new Error(`You attempted to use @cached on with ${arguments.length > 1 ? 'arguments' : 'an argument'} ( @cached(${Array.from(arguments).map(d => `'${d}'`).join(', ')}), which is not supported. Dependencies are automatically tracked, so you can just use ${'`@cached`'}`);\n    }\n  })(typeof target === 'object' && typeof key === 'string' && typeof descriptor === 'object' && arguments.length === 3);\n  (test => {\n    if (!test) {\n      throw new Error(`The @cached decorator must be applied to getters. '${key}' is not a getter.`);\n    }\n  })(typeof descriptor.get === 'function');\n  const caches = new WeakMap();\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const getter = descriptor.get;\n  descriptor.get = function () {\n    if (!caches.has(this)) caches.set(this, (0,_glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_0__.createCache)(getter.bind(this)));\n    return (0,_glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_0__.getValue)(caches.get(this));\n  };\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@ember-data+tracking@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+_z6gnuk35mwzxx7dmo7xf2oxpm4/node_modules/@ember-data/tracking/dist/index.js?");

/***/ }),

/***/ "../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2.js":
/*!*************************************************************************************************************************!*\
  !*** ../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ esCompat)\n/* harmony export */ });\nfunction esCompat(m) {\n  return m?.__esModule ? m : {\n    default: m,\n    ...m\n  };\n}\n\n//# sourceURL=webpack://prss/../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/es-compat2.js?");

/***/ }),

/***/ "../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/runtime.js":
/*!**********************************************************************************************************************!*\
  !*** ../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/runtime.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   each: () => (/* binding */ each),\n/* harmony export */   getGlobalConfig: () => (/* binding */ getGlobalConfig),\n/* harmony export */   isTesting: () => (/* binding */ isTesting),\n/* harmony export */   macroCondition: () => (/* binding */ macroCondition)\n/* harmony export */ });\n/*\n  These are the runtime implementations for the javascript macros that have\n  runtime implementations.\n\n  Not every macro has a runtime implementation, some only make sense in the\n  build and always run there.\n\n  Even when we have runtime implementations, we are still careful to emit static\n  errors during the build wherever possible, and runtime errors when necessary,\n  so that you're not surprised when you switch from runtime-mode to compile-time\n  mode.\n*/\n\n/*\n  CAUTION: in classic builds, this file gets shared by all present copies of\n  @embroider/macros. If you want to change its public API, you need to rename it\n  and update `pathToRuntime` in ../babel/state.ts to point at it, so that your\n  babel plugin and runtime will match.\n*/\n\nfunction each(array) {\n  if (!Array.isArray(array)) {\n    throw new Error(`the argument to the each() macro must be an array`);\n  }\n  return array;\n}\nfunction macroCondition(predicate) {\n  return predicate;\n}\n\n// This is here as a compile target for `getConfig` and `getOwnConfig` when\n// we're in runtime mode. This is not public API to call from your own code.\nfunction config(packageRoot) {\n  return runtimeConfig.packages[packageRoot];\n}\nfunction getGlobalConfig() {\n  return runtimeConfig.global;\n}\nfunction isTesting() {\n  let g = runtimeConfig.global;\n  let e = g && g['@embroider/macros'];\n  return Boolean(e && e.isTesting);\n}\nconst runtimeConfig = initializeRuntimeMacrosConfig();\n\n// this exists to be targeted by our babel plugin\nfunction initializeRuntimeMacrosConfig() {\n  return {\n    \"packages\": {},\n    \"global\": {\n      \"@embroider/macros\": {\n        \"isTesting\": false\n      },\n      \"WarpDrive\": {\n        \"debug\": {\n          \"LOG_GRAPH\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_INSTANCE_CACHE\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_PAYLOADS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false\n        },\n        \"polyfillUUID\": false,\n        \"includeDataAdapter\": true,\n        \"compatWith\": null,\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_EMBER_INFLECTOR\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_STORE_EXTENDS_EMBER_OBJECT\": true,\n          \"ENABLE_LEGACY_SCHEMA_SERVICE\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"@embroider/core\": {\n        \"active\": true\n      }\n    }\n  };\n}\nfunction updaterMethods() {\n  return {\n    config,\n    getGlobalConfig,\n    setConfig(packageRoot, value) {\n      runtimeConfig.packages[packageRoot] = value;\n    },\n    setGlobalConfig(key, value) {\n      runtimeConfig.global[key] = value;\n    }\n  };\n}\n\n// this is how runtime config can get injected at boot. I'm not sure yet if this\n// should be public API, but we certainly need it internally to set things like\n// the global fastboot.isRunning.\n//\n// consumers of this API push a function onto\n// window._embroider_macros_runtime_config. The function is given four methods\n// which allow it to read and write the per-package and global configs. The\n// reason for allowing both read & write is that merging strategies are up to\n// each consumers -- read first, then merge, then write.\n//\n// For an example user of this API, see where we generate\n// embroider_macros_fastboot_init.js' in @embroider/core.\nlet updaters = typeof window !== 'undefined' ? window._embroider_macros_runtime_config : undefined;\nif (updaters) {\n  let methods = updaterMethods();\n  for (let updater of updaters) {\n    updater(methods);\n  }\n}\n\n//# sourceURL=webpack://prss/../../.pnpm/@embroider+macros@1.16.5_@glint+template@1.4.0/node_modules/@embroider/macros/src/addon/runtime.js?");

/***/ }),

/***/ "../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js":
/*!***********************************************************************************************************************************!*\
  !*** ../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOrSetGlobal: () => (/* binding */ getOrSetGlobal),\n/* harmony export */   getOrSetUniversal: () => (/* binding */ getOrSetUniversal),\n/* harmony export */   peekTransient: () => (/* binding */ peekTransient),\n/* harmony export */   peekUniversalTransient: () => (/* binding */ peekUniversalTransient),\n/* harmony export */   setTransient: () => (/* binding */ setTransient),\n/* harmony export */   setUniversalTransient: () => (/* binding */ setUniversalTransient)\n/* harmony export */ });\nconst name = \"@warp-drive/core-types\";\nconst version = \"0.0.0-beta.11\";\n\n// in testing mode, we utilize globals to ensure only one copy exists of\n// these maps, due to bugs in ember-auto-import\n\nconst GlobalRef = globalThis;\nconst UniversalCache = GlobalRef.__warpDrive_universalCache = GlobalRef.__warpDrive_universalCache ?? {};\n\n// in order to support mirror packages, we ensure that each\n// unique package name has its own global cache\nGlobalRef[name] = GlobalRef[name] ?? {\n  __version: version\n};\nconst GlobalSink = GlobalRef[name];\n{\n  if (GlobalSink.__version !== version) {\n    throw new Error('Multiple versions of WarpDrive detected, the application will malfunction.');\n  }\n}\nconst ModuleScopedCaches = GlobalSink.__warpDrive_ModuleScopedCaches ?? {};\n{\n  if (!GlobalSink.__warpDrive_ModuleScopedCaches) {\n    GlobalSink.__warpDrive_ModuleScopedCaches = ModuleScopedCaches;\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn(`\nMultiple copies of EmberData have been detected. This may be due to a bug in ember-auto-import\n  in which test assets get their own copy of some v2-addons. This can cause the application to\n  malfunction as each copy will maintain its own separate state.`);\n  }\n}\nfunction getOrSetGlobal(key, value) {\n  {\n    const existing = ModuleScopedCaches[key];\n    if (existing === undefined) {\n      return ModuleScopedCaches[key] = value;\n    } else {\n      return existing;\n    }\n  }\n}\nfunction peekTransient(key) {\n  const globalKey = `(transient) ${key}`;\n  return ModuleScopedCaches[globalKey] ?? null;\n}\nfunction setTransient(key, value) {\n  const globalKey = `(transient) ${key}`;\n  return ModuleScopedCaches[globalKey] = value;\n}\nfunction getOrSetUniversal(key, value) {\n  {\n    const existing = UniversalCache[key];\n    if (existing === undefined) {\n      return UniversalCache[key] = value;\n    } else {\n      return existing;\n    }\n  }\n}\nfunction peekUniversalTransient(key) {\n  const globalKey = `(transient) ${key}`;\n  return UniversalCache[globalKey] ?? null;\n}\nfunction setUniversalTransient(key, value) {\n  const globalKey = `(transient) ${key}`;\n  return UniversalCache[globalKey] = value;\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js?");

/***/ }),

/***/ "../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/identifier.js":
/*!*************************************************************************************************************************************!*\
  !*** ../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/identifier.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CACHE_OWNER: () => (/* binding */ CACHE_OWNER),\n/* harmony export */   DEBUG_CLIENT_ORIGINATED: () => (/* binding */ DEBUG_CLIENT_ORIGINATED),\n/* harmony export */   DEBUG_IDENTIFIER_BUCKET: () => (/* binding */ DEBUG_IDENTIFIER_BUCKET),\n/* harmony export */   DEBUG_STALE_CACHE_OWNER: () => (/* binding */ DEBUG_STALE_CACHE_OWNER)\n/* harmony export */ });\n/**\n  @module @ember-data/store\n*/\n\n// provided for additional debuggability\nconst DEBUG_CLIENT_ORIGINATED = Symbol('record-originated-on-client');\nconst DEBUG_IDENTIFIER_BUCKET = Symbol('identifier-bucket');\nconst DEBUG_STALE_CACHE_OWNER = Symbol('warpDriveStaleCache');\n\n// also present in production\nconst CACHE_OWNER = Symbol('warpDriveCache');\n\n/**\n * An Identifier specific to a record which may or may not\n * be present in the cache.\n *\n * The absence of an `id` DOES NOT indicate that this\n * Identifier is for a new client-created record as it\n * may also indicate that it was generated for a secondary\n * index and the primary `id` index is not yet known.\n *\n * @internal\n */\n\n/**\n * Used when an Identifier is known to be the stable version\n *\n * @internal\n */\n\n/**\n * Used when a StableRecordIdentifier was not created locally as part\n * of a call to store.createRecord\n *\n * Distinguishing between this Identifier and one for a client created\n * record that was created with an ID is generally speaking not possible\n * at runtime, so anything with an ID typically narrows to this.\n *\n * @internal\n */\n\n/**\n * Used when a StableRecordIdentifier was created locally\n * (by a call to store.createRecord).\n *\n * It is possible in rare circumstances to have a StableRecordIdentifier\n * that is not for a new record but does not have an ID. This would\n * happen if a user intentionally created one for use with a secondary-index\n * prior to the record having been fully loaded.\n *\n * @internal\n */\n\n/**\n * A referentially stable object with a unique string (lid) that can be used\n * as a reference to data in the cache.\n *\n * Every record instance has a unique identifier, and identifiers may refer\n * to data that has never been loaded (for instance, in an async relationship).\n *\n * @class StableRecordIdentifier\n * @public\n */\n\n/**\n * A string representing a unique identity.\n *\n * @property {string} lid\n * @public\n */\n/**\n * the primary resource `type` or `modelName` this identity belongs to.\n *\n * @property {string} type\n * @public\n */\n/**\n * the primary id for the record this identity belongs to. `null`\n * if not yet assigned an id.\n *\n * @property {string | null} id\n * @public\n */\n\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/identifier.js?");

/***/ }),

/***/ "../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/request.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/request.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnableHydration: () => (/* binding */ EnableHydration),\n/* harmony export */   IS_FUTURE: () => (/* binding */ IS_FUTURE),\n/* harmony export */   STRUCTURED: () => (/* binding */ STRUCTURED),\n/* harmony export */   SkipCache: () => (/* binding */ SkipCache)\n/* harmony export */ });\n/* harmony import */ var _private_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./-private.js */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js\");\n\nconst SkipCache = (0,_private_js__WEBPACK_IMPORTED_MODULE_0__.getOrSetUniversal)('SkipCache', Symbol.for('wd:skip-cache'));\nconst EnableHydration = (0,_private_js__WEBPACK_IMPORTED_MODULE_0__.getOrSetUniversal)('EnableHydration', Symbol.for('wd:enable-hydration'));\nconst IS_FUTURE = (0,_private_js__WEBPACK_IMPORTED_MODULE_0__.getOrSetGlobal)('IS_FUTURE', Symbol('IS_FUTURE'));\nconst STRUCTURED = (0,_private_js__WEBPACK_IMPORTED_MODULE_0__.getOrSetGlobal)('DOC', Symbol('DOC'));\n\n/**\n * Use these options to adjust CacheHandler behavior for a request.\n *\n * @typedoc\n */\n\n/**\n * JavaScript's native Request class.\n *\n * EmberData provides our own typings due to incompleteness in the native typings.\n *\n * @typedoc\n */\n\n/**\n * Extends JavaScript's native {@link Request} object with additional\n * properties specific to the RequestManager's capabilities.\n *\n * @typedoc\n */\n\n/**\n * Immutable version of {@link RequestInfo}. This is what is passed to handlers.\n *\n * @typedoc\n */\n\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/request.js?");

/***/ }),

/***/ "../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/symbols.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/symbols.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RecordStore: () => (/* binding */ RecordStore),\n/* harmony export */   RequestSignature: () => (/* binding */ RequestSignature),\n/* harmony export */   ResourceType: () => (/* binding */ ResourceType),\n/* harmony export */   TransformName: () => (/* binding */ TransformName),\n/* harmony export */   Type: () => (/* binding */ Type)\n/* harmony export */ });\n/* harmony import */ var _private_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./-private.js */ \"../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/-private.js\");\n\n\n/*\n * @module @warp-drive/core-types\n */\nconst RecordStore = (0,_private_js__WEBPACK_IMPORTED_MODULE_0__.getOrSetGlobal)('Store', Symbol('Store'));\n\n/**\n * Symbol for the name of a resource, transformation\n * or derivation.\n *\n * ### With Resources\n *\n * This is an optional feature that can be used by\n * record implementations to provide a typescript\n * hint for the type of the resource.\n *\n * When used, EmberData and WarpDrive APIs can\n * take advantage of this to provide better type\n * safety and intellisense.\n *\n * ### With Derivations\n *\n * Required for derivations registered with\n * `store.registerDerivation(derivation)`.\n *\n * ```ts\n * function concat(record: object, options: ObjectValue | null, prop: string): string {}\n * concat[Name] = 'concat';\n * ```\n *\n * ### With Transforms\n *\n * Required for new-style transformations registered\n * with `store.registerTransform(transform)`.\n *\n * For legacy transforms, if not used,\n * `attr<Transform>('name')` will allow any string name.\n * `attr('name')` will always allow any string name.\n *\n * If used, `attr<Transform>('name')` will enforce\n * that the name is the same as the transform name.\n *\n * @type {Symbol}\n * @typedoc\n */\nconst Type = (0,_private_js__WEBPACK_IMPORTED_MODULE_0__.getOrSetGlobal)('$type', Symbol('$type'));\n\n/**\n * Symbol for the type of a resource.\n *\n * This is an optional feature that can be used by\n * record implementations to provide a typescript\n * hint for the type of the resource.\n *\n * When used, EmberData and WarpDrive APIs can\n * take advantage of this to provide better type\n * safety and intellisense.\n *\n * @type {Symbol}\n * @typedoc\n */\nconst ResourceType = Type;\n\n/**\n * Symbol for the name of a transform.\n *\n * This is an optional feature that can be used by\n * transform implementations to provide a typescript\n * hint for the name of the transform.\n *\n * If not used, `attr<Transform>('name')` will\n * allow any string name. `attr('name')` will always\n * allow any string name.\n *\n * If used, `attr<Transform>('name')` will enforce\n * that the name is the same as the transform name.\n *\n * @type {Symbol}\n * @typedoc\n */\nconst TransformName = Type;\n\n/**\n * Symbol for use by builders to indicate the return type\n * generic to use for store.request()\n *\n * @type {Symbol}\n * @typedoc\n */\nconst RequestSignature = (0,_private_js__WEBPACK_IMPORTED_MODULE_0__.getOrSetGlobal)('RequestSignature', Symbol('RequestSignature'));\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0/node_modules/@warp-drive/core-types/dist/symbols.js?");

/***/ }),

/***/ "../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/initializers/ember-data.js":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/initializers/ember-data.js ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_data_request_utils_deprecation_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember-data/request-utils/deprecation-support */ \"../../.pnpm/@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1.4.0_@warp-drive+core-ty_5el2lp4itwrew4ce6itrt4sjei/node_modules/@ember-data/request-utils/dist/deprecation-support.js\");\n\n\n/*\n  This code initializes EmberData in an Ember application.\n*/\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'ember-data',\n  initialize(application) {\n    application.registerOptionsForType('serializer', {\n      singleton: false\n    });\n    application.registerOptionsForType('adapter', {\n      singleton: false\n    });\n  }\n});\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/initializers/ember-data.js?");

/***/ }),

/***/ "../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/services/store.js":
/*!******************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/services/store.js ***!
  \******************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ ember_data_store__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var ember_data_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ember-data/store */ \"../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/dist/store.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(\"You are relying on ember-data auto-magically installing the store service. Use `export { default } from 'ember-data/store';` in app/services/store.js instead\", false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/services/store.js?");

/***/ }),

/***/ "../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/boolean.js":
/*!**********************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/boolean.js ***!
  \**********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_1__.BooleanTransform)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/transform */ \"../../.pnpm/@ember-data+serializer@5.3.8_@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-d_ktds2re24fkm2vcobtq7pgosvu/node_modules/@ember-data/serializer/dist/transform.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(\"You are relying on ember-data auto-magically installing the BooleanTransform. Use `export { BooleanTransform as default } from '@ember-data/serializer/transform';` in app/transforms/boolean.js instead\", false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/boolean.js?");

/***/ }),

/***/ "../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/date.js":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/date.js ***!
  \*******************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_1__.DateTransform)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/transform */ \"../../.pnpm/@ember-data+serializer@5.3.8_@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-d_ktds2re24fkm2vcobtq7pgosvu/node_modules/@ember-data/serializer/dist/transform.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(\"You are relying on ember-data auto-magically installing the DateTransform. Use `export { DateTransform as default } from '@ember-data/serializer/transform';` in app/transforms/date.js instead\", false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/date.js?");

/***/ }),

/***/ "../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/number.js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/number.js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_1__.NumberTransform)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/transform */ \"../../.pnpm/@ember-data+serializer@5.3.8_@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-d_ktds2re24fkm2vcobtq7pgosvu/node_modules/@ember-data/serializer/dist/transform.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(\"You are relying on ember-data auto-magically installing the NumberTransform. Use `export { NumberTransform as default } from '@ember-data/serializer/transform';` in app/transforms/number.js instead\", false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/number.js?");

/***/ }),

/***/ "../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/string.js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/string.js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_1__.StringTransform)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n/* harmony import */ var _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/transform */ \"../../.pnpm/@ember-data+serializer@5.3.8_@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-d_ktds2re24fkm2vcobtq7pgosvu/node_modules/@ember-data/serializer/dist/transform.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(\"You are relying on ember-data auto-magically installing the StringTransform. Use `export { StringTransform as default } from '@ember-data/serializer/transform';` in app/transforms/string.js instead\", false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/app/transforms/string.js?");

/***/ }),

/***/ "../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/dist/store.js":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/dist/store.js ***!
  \**********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Store)\n/* harmony export */ });\n/* harmony import */ var _Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_data_json_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/json-api */ \"../../.pnpm/@ember-data+json-api@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+reques_gwiu2ba5z3yh6bes2g5cgd2tge/node_modules/@ember-data/json-api/dist/index.js\");\n/* harmony import */ var _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/legacy-compat */ \"../../.pnpm/@ember-data+legacy-compat@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+r_cjjvj3kwtqzqlishkvd5jnyia4/node_modules/@ember-data/legacy-compat/dist/index.js\");\n/* harmony import */ var _ember_data_model_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember-data/model/hooks */ \"../../.pnpm/@ember-data+model@5.3.8_@ember-data+graph@5.3.8_@ember-data+store@5.3.8_@ember-data+request-u_sy3ylvqo6zczulay4x6x6ursdi/node_modules/@ember-data/model/dist/hooks.js\");\n/* harmony import */ var _ember_data_request__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember-data/request */ \"../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/index.js\");\n/* harmony import */ var _ember_data_request_fetch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember-data/request/fetch */ \"../../.pnpm/@ember-data+request@5.3.8_@glint+template@1.4.0_@warp-drive+core-types@0.0.0-beta.11_@glint+template@1.4.0_/node_modules/@ember-data/request/dist/fetch.js\");\n/* harmony import */ var _ember_data_store__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ember-data/store */ \"../../.pnpm/@ember-data+store@5.3.8_@ember-data+request-utils@5.3.8_@ember+string@3.1.1_@glint+template@1_3omekwzrzebuiafwnn6mocn5w4/node_modules/@ember-data/store/dist/index.js\");\n\n\n\n\n\n\n\nfunction hasRequestManager(store) {\n  return 'requestManager' in store;\n}\nclass Store extends _ember_data_store__WEBPACK_IMPORTED_MODULE_6__[\"default\"] {\n  constructor(args) {\n    super(args);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"adapterFor\", _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_2__.adapterFor);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"serializerFor\", _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_2__.serializerFor);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pushPayload\", _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_2__.pushPayload);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"normalize\", _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_2__.normalize);\n    (0,_Users_ilya_maintained_prss_node_modules_pnpm_babel_runtime_7_24_8_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"serializeRecord\", _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_2__.serializeRecord);\n    if (!hasRequestManager(this)) {\n      this.requestManager = new _ember_data_request__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n      this.requestManager.use([_ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_2__.LegacyNetworkHandler, _ember_data_request_fetch__WEBPACK_IMPORTED_MODULE_5__[\"default\"]]);\n    }\n    this.requestManager.useCache(_ember_data_store__WEBPACK_IMPORTED_MODULE_6__.CacheHandler);\n  }\n  createSchemaService() {\n    return (0,_ember_data_model_hooks__WEBPACK_IMPORTED_MODULE_3__.buildSchema)(this);\n  }\n  createCache(storeWrapper) {\n    return new _ember_data_json_api__WEBPACK_IMPORTED_MODULE_1__[\"default\"](storeWrapper);\n  }\n  instantiateRecord(identifier, createRecordArgs) {\n    return _ember_data_model_hooks__WEBPACK_IMPORTED_MODULE_3__.instantiateRecord.call(this, identifier, createRecordArgs);\n  }\n  teardownRecord(record) {\n    _ember_data_model_hooks__WEBPACK_IMPORTED_MODULE_3__.teardownRecord.call(this, record);\n  }\n  modelFor(type) {\n    return _ember_data_model_hooks__WEBPACK_IMPORTED_MODULE_3__.modelFor.call(this, type) || super.modelFor(type);\n  }\n  destroy() {\n    _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_2__.cleanup.call(this);\n    super.destroy();\n  }\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-data@5.3.8_@ember+string@3.1.1_@ember+test-helpers@3.3.0_@glint+template@1.4.0_ember-so_7mul27x7lfgozlccs7tgze7vem/node_modules/ember-data/dist/store.js?");

/***/ }),

/***/ "../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_app_/helpers/page-title.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_app_/helpers/page-title.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ ember_page_title_helpers_page_title__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var ember_page_title_helpers_page_title__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-page-title/helpers/page-title */ \"../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/helpers/page-title.js\");\n\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_app_/helpers/page-title.js?");

/***/ }),

/***/ "../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_app_/services/page-title.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_app_/services/page-title.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ ember_page_title_services_page_title__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var ember_page_title_services_page_title__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-page-title/services/page-title */ \"../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/services/page-title.js\");\n\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_app_/services/page-title.js?");

/***/ }),

/***/ "../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_rollupPluginBabelHelpers-9wjJaosZ.js":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_rollupPluginBabelHelpers-9wjJaosZ.js ***!
  \*********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ _applyDecoratedDescriptor),\n/* harmony export */   a: () => (/* binding */ _initializerDefineProperty),\n/* harmony export */   b: () => (/* binding */ _defineProperty)\n/* harmony export */ });\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n  return desc;\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_rollupPluginBabelHelpers-9wjJaosZ.js?");

/***/ }),

/***/ "../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/helpers/page-title.js":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/helpers/page-title.js ***!
  \*****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PageTitle)\n/* harmony export */ });\n/* harmony import */ var _rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_rollupPluginBabelHelpers-9wjJaosZ.js */ \"../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_rollupPluginBabelHelpers-9wjJaosZ.js\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/service */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/service/index.js\");\n/* harmony import */ var _ember_component_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/component/helper */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/component/helper.js\");\n/* harmony import */ var _ember_object_internals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/object/internals */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/object/internals.js\");\n\n\n\n\nvar _dec, _class, _descriptor;\n/**\n * `{{pageTitle}}` helper used to set the title of the current route context.\n *\n * ```gjs\n * import { pageTitle } from 'ember-page-title';\n *\n * <template>\n *   {{pageTitle \"the text to set the tab's title to\"}}\n *   {{pageTitle \\@model.post.title}}\n * </template>\n * ```\n */\nlet PageTitle = (_dec = (0,_ember_service__WEBPACK_IMPORTED_MODULE_1__.inject)('page-title'), (_class = class PageTitle extends _ember_component_helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor(owner) {\n    super(owner);\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"tokens\", _descriptor, this);\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.b)(this, \"tokenId\", (0,_ember_object_internals__WEBPACK_IMPORTED_MODULE_3__.guidFor)(this));\n    this.tokens.push({\n      id: this.tokenId\n    });\n  }\n  compute(params, userOptions) {\n    const options = {\n      ...userOptions,\n      id: this.tokenId,\n      title: params.join('')\n    };\n    this.tokens.push(options);\n    this.tokens.scheduleTitleUpdate();\n    // We must return an empty value here because otherwise\n    // invoking the pageTitle helper will render something\n    // in the component it's used in, and we don't want that.\n    //\n    // pageTitle is a side-effecting helper.\n    // We *synchronize* the document.title with our internal state.\n    return '';\n  }\n  willDestroy() {\n    super.willDestroy();\n    this.tokens.remove(this.tokenId);\n    this.tokens.scheduleTitleUpdate();\n  }\n}, _descriptor = (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__._)(_class.prototype, \"tokens\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class));\n\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/helpers/page-title.js?");

/***/ }),

/***/ "../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/services/page-title.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/services/page-title.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PageTitleService)\n/* harmony export */ });\n/* harmony import */ var _rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_rollupPluginBabelHelpers-9wjJaosZ.js */ \"../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/_rollupPluginBabelHelpers-9wjJaosZ.js\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/runloop */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/runloop/index.js\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/service */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/service/index.js\");\n/* harmony import */ var _ember_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/utils */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/utils/index.js\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember/debug */ \"../rewritten-packages/ember-source.2923abbd/node_modules/ember-source/@ember/debug/index.js\");\n\n\n\n\n\nvar _dec, _dec2, _class, _descriptor, _descriptor2;\nconst isFastBoot = typeof FastBoot !== 'undefined';\nconst RouterEvent = {\n  ROUTE_DID_CHANGE: 'routeDidChange'\n};\nfunction hasResolveRegistration(owner) {\n  return `resolveRegistration` in owner;\n}\nfunction hasPageTitleConfig(fromEnv) {\n  if (typeof fromEnv !== 'object') return false;\n  if (fromEnv === null) return false;\n\n  // all properties on the pageTitle config are optional,\n  // so we can't check for more\n  return 'pageTitle' in fromEnv;\n}\nconst configKeys = ['separator', 'prepend', 'replace'];\n\n/**\n  @class page-title\n  @extends Ember.Service\n */\nlet PageTitleService = (_dec = (0,_ember_service__WEBPACK_IMPORTED_MODULE_2__.inject)('router'), _dec2 = (0,_ember_service__WEBPACK_IMPORTED_MODULE_2__.inject)('-document'), (_class = class PageTitleService extends _ember_service__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor(owner) {\n    super(owner);\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"router\", _descriptor, this);\n    // in fastboot context \"document\" is instance of\n    // ember-fastboot/simple-dom document\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"document\", _descriptor2, this);\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.b)(this, \"tokens\", []);\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.b)(this, \"_defaultConfig\", {\n      // The default separator to use between tokens.\n      separator: ' | ',\n      // The default prepend value to use.\n      prepend: true,\n      // The default replace value to use.\n      replace: null\n    });\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.b)(this, \"scheduleTitleUpdate\", () => {\n      (0,_ember_runloop__WEBPACK_IMPORTED_MODULE_1__.scheduleOnce)('afterRender', this, this._updateTitle);\n    });\n    this._validateExistingTitleElement();\n    if (hasResolveRegistration(owner)) {\n      const config = owner.resolveRegistration('config:environment');\n      if (hasPageTitleConfig(config)) {\n        configKeys.forEach(key => {\n          if (!(0,_ember_utils__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(config.pageTitle[key])) {\n            const configValue = config.pageTitle[key];\n\n            // SAFETY: how is one supposed to iterate over keys for an object and have it\n            //         known to the compiler that both objects, having the same shape,\n            //         will have the same type per-value?\n            //         as-is, the `configValue` is a union of all value-types from the object.\n            this._defaultConfig[key] = configValue;\n          }\n        });\n      }\n    }\n    this.router.on(RouterEvent.ROUTE_DID_CHANGE, this.scheduleTitleUpdate);\n  }\n  applyTokenDefaults(token) {\n    const defaultSeparator = this._defaultConfig.separator;\n    const defaultPrepend = this._defaultConfig.prepend;\n    const defaultReplace = this._defaultConfig.replace;\n    token.previous ??= null;\n    token.next ??= null;\n    if (token.separator == null) {\n      token.separator = defaultSeparator;\n    }\n    if (token.prepend == null && defaultPrepend != null) {\n      token.prepend = defaultPrepend;\n    }\n    if (token.replace == null && defaultReplace != null) {\n      token.replace = defaultReplace;\n    }\n  }\n  inheritFromPrevious(token) {\n    const previous = token.previous;\n    if (previous) {\n      if (token.separator == null) {\n        token.separator = previous.separator;\n      }\n      if (token.prepend == null) {\n        token.prepend = previous.prepend;\n      }\n    }\n  }\n  push(token) {\n    const tokenForId = this._findTokenById(token.id);\n    if (tokenForId) {\n      const index = this.tokens.indexOf(tokenForId);\n      const tokens = [...this.tokens];\n      const previous = tokenForId.previous;\n      token.previous = previous;\n      token.next = tokenForId.next;\n      this.inheritFromPrevious(token);\n      this.applyTokenDefaults(token);\n      tokens.splice(index, 1, token);\n      this.tokens = tokens;\n      return;\n    }\n    const previous = this.tokens.slice(-1)[0];\n    if (previous) {\n      token.previous = previous ?? null;\n      previous.next = token;\n      this.inheritFromPrevious(token);\n    }\n    this.applyTokenDefaults(token);\n    this.tokens = [...this.tokens, token];\n  }\n  remove(id) {\n    const token = this._findTokenById(id);\n    if (!token) return;\n    const {\n      next,\n      previous\n    } = token;\n    if (next) {\n      next.previous = previous;\n    }\n    if (previous) {\n      previous.next = next;\n    }\n    token.previous = token.next = null;\n    const tokens = [...this.tokens];\n    tokens.splice(tokens.indexOf(token), 1);\n    this.tokens = tokens;\n  }\n  get visibleTokens() {\n    const tokens = this.tokens;\n    let i = tokens ? tokens.length : 0;\n    const visible = [];\n    while (i--) {\n      const token = tokens[i];\n      if (!token) continue;\n      if (token.replace) {\n        visible.unshift(token);\n        break;\n      } else {\n        visible.unshift(token);\n      }\n    }\n    return visible;\n  }\n  get sortedTokens() {\n    const visible = this.visibleTokens;\n    if (!visible) return [];\n    let appending = true;\n    let group = [];\n    const groups = [group];\n    const frontGroups = [];\n    visible.forEach(token => {\n      if (token.front) {\n        frontGroups.unshift(token);\n      } else if (token.prepend) {\n        if (appending) {\n          appending = false;\n          group = [];\n          groups.push(group);\n        }\n        const lastToken = group[0];\n        if (lastToken) {\n          token = {\n            ...token\n          };\n          token.separator = lastToken.separator;\n        }\n        group.unshift(token);\n      } else {\n        if (!appending) {\n          appending = true;\n          group = [];\n          groups.push(group);\n        }\n        group.push(token);\n      }\n    });\n    return frontGroups.concat(groups.reduce((E, group) => E.concat(group), []));\n  }\n  toString() {\n    const tokens = this.sortedTokens;\n    const title = [];\n    for (let i = 0, len = tokens.length; i < len; i++) {\n      const token = tokens[i];\n      if (!token) continue;\n      if (token.title) {\n        title.push(token.title);\n        if (i + 1 < len) {\n          title.push(token.separator);\n        }\n      }\n    }\n    return title.join('');\n  }\n  willDestroy() {\n    super.willDestroy();\n    this.router.off(RouterEvent.ROUTE_DID_CHANGE, this.scheduleTitleUpdate);\n  }\n  _updateTitle() {\n    const toBeTitle = this.toString();\n    if (isFastBoot) {\n      this.updateFastbootTitle(toBeTitle);\n    } else {\n      /**\n       * When rendering app with \"?fastboot=false\" (http://ember-fastboot.com/docs/user-guide#disabling-fastboot)\n       * We will not have <title> element present in DOM.\n       *\n       * But this is fine as by HTML spec,\n       * one is created upon assigning \"document.title\" value;\n       *\n       * https://html.spec.whatwg.org/multipage/dom.html#dom-tree-accessors\n       */\n      this.document.title = toBeTitle;\n    }\n    this.titleDidUpdate(toBeTitle);\n  }\n\n  /**\n   * Validate if there's more than one title element present.\n   *\n   * Example: ember-cli-head can cause conflicting updates.\n   * @private\n   */\n  _validateExistingTitleElement() {\n    if (isFastBoot) {\n      return;\n    }\n    ( true && !(document.head.querySelectorAll('title').length <= 1) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_4__.assert)('[ember-page-title]: Multiple title elements found. Check for other addons like ember-cli-head updating <title> as well.', document.head.querySelectorAll('title').length <= 1));\n  }\n\n  /**\n   * Find token by id\n   *\n   * @param {String} id\n   * @private\n   */\n  _findTokenById(id) {\n    return this.tokens.find(token => token.id === id);\n  }\n  updateFastbootTitle(toBeTitle) {\n    if (!isFastBoot) {\n      return;\n    }\n    const headElement = this.document.head;\n    const headChildNodes = headElement.childNodes;\n\n    // Remove existing title elements from previous render cycle\n    for (let i = 0; i < headChildNodes.length; i++) {\n      const node = headChildNodes[i];\n      if (!node) continue;\n      if (node.nodeName.toLowerCase() === 'title') {\n        headElement.removeChild(node);\n      }\n    }\n\n    // Add title element with latest value\n    const titleEl = this.document.createElement('title');\n    const titleContents = this.document.createTextNode(toBeTitle);\n    titleEl.appendChild(titleContents);\n    headElement.appendChild(titleEl);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  titleDidUpdate(_title) {\n    // default is empty, meant to be overriden by user if desired\n  }\n}, (_descriptor = (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__._)(_class.prototype, \"router\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__._)(_class.prototype, \"document\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));\n\n\n//# sourceURL=webpack://prss/../../.pnpm/ember-page-title@8.2.3_ember-source@5.10.0_@glimmer+component@1.1.2_@babel+core@7.24.8__@glin_6fae6x6v7u5gwg7uprv6sf7ady/node_modules/ember-page-title/dist/services/page-title.js?");

/***/ }),

/***/ "../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!***************************************************************************************************!*\
  !*** ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _defineProperty)\n/* harmony export */ });\n/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPropertyKey.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\");\n\nfunction _defineProperty(e, r, t) {\n  return (r = (0,_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js?");

/***/ }),

/***/ "../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/toPrimitive.js":
/*!************************************************************************************************!*\
  !*** ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/toPrimitive.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toPrimitive)\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/typeof.js\");\n\nfunction toPrimitive(t, r) {\n  if (\"object\" != (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/toPrimitive.js?");

/***/ }),

/***/ "../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js":
/*!**************************************************************************************************!*\
  !*** ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toPropertyKey)\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toPrimitive.js */ \"../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/toPrimitive.js\");\n\n\nfunction toPropertyKey(t) {\n  var i = (0,_toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(t, \"string\");\n  return \"symbol\" == (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(i) ? i : i + \"\";\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js?");

/***/ }),

/***/ "../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!*******************************************************************************************!*\
  !*** ../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _typeof)\n/* harmony export */ });\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\n\n//# sourceURL=webpack://prss/../../.pnpm/@babel+runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/typeof.js?");

/***/ })

}]);